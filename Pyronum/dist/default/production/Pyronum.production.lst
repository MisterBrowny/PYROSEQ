

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Thu Aug 25 18:15:49 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    74  0000                     
    75                           	psect	idataBANK0
    76  002D94                     __pidataBANK0:
    77                           	opt stack 0
    78                           
    79                           ;initializer for _PrintTest
    80  002D94  33                 	db	51
    81  002D95  34                 	db	52
    82  002D96  35                 	db	53
    83  002D97  36                 	db	54
    84  002D98  00                 	db	0
    85                           
    86                           	psect	smallconst
    87  000600                     __psmallconst:
    88                           	opt stack 0
    89  000600  00                 	db	0
    90  000601                     _Armed:
    91                           	opt stack 0
    92  000601  2D                 	db	45
    93  000602  20                 	db	32
    94  000603  20                 	db	32
    95  000604  20                 	db	32
    96  000605  00                 	db	0
    97  000606                     __end_of_Armed:
    98                           	opt stack 0
    99  000606                     _Blank:
   100                           	opt stack 0
   101  000606  20                 	db	32
   102  000607  20                 	db	32
   103  000608  20                 	db	32
   104  000609  20                 	db	32
   105  00060A  00                 	db	0
   106  00060B                     __end_of_Blank:
   107                           	opt stack 0
   108  00060B                     _ErreurTir:
   109                           	opt stack 0
   110  00060B  45                 	db	69
   111  00060C  5F                 	db	95
   112  00060D  74                 	db	116
   113  00060E  20                 	db	32
   114  00060F  00                 	db	0
   115  000610                     __end_of_ErreurTir:
   116                           	opt stack 0
   117  000610                     _Version:
   118                           	opt stack 0
   119  000610  30                 	db	48
   120  000611  30                 	db	48
   121  000612  30                 	db	48
   122  000613  38                 	db	56
   123  000614  00                 	db	0
   124  000615                     __end_of_Version:
   125                           	opt stack 0
   126  0000                     _ADCON0	set	4034
   127  0000                     _ADCON0bits	set	4034
   128  0000                     _ADCON1	set	4033
   129  0000                     _ADRESH	set	4036
   130  0000                     _ADRESL	set	4035
   131  0000                     _EEADR	set	4009
   132  0000                     _EECON2	set	4007
   133  0000                     _EEDATA	set	4008
   134  0000                     _INTCONbits	set	4082
   135  0000                     _PORTA	set	3968
   136  0000                     _PORTAbits	set	3968
   137  0000                     _PORTB	set	3969
   138  0000                     _PORTBbits	set	3969
   139  0000                     _PORTC	set	3970
   140  0000                     _PORTCbits	set	3970
   141  0000                     _PORTD	set	3971
   142  0000                     _PORTE	set	3972
   143  0000                     _PORTEbits	set	3972
   144  0000                     _RCREG	set	4014
   145  0000                     _RCSTA	set	4011
   146  0000                     _SPBRG	set	4015
   147  0000                     _T0CON	set	4053
   148  0000                     _TMR0H	set	4055
   149  0000                     _TMR0L	set	4054
   150  0000                     _TRISAbits	set	3986
   151  0000                     _TRISBbits	set	3987
   152  0000                     _TRISCbits	set	3988
   153  0000                     _TRISDbits	set	3989
   154  0000                     _TRISEbits	set	3990
   155  0000                     _TXREG	set	4013
   156  0000                     _TXSTA	set	4012
   157  0000                     _CFGS	set	32054
   158  0000                     _EEPGD	set	32055
   159  0000                     _GIE	set	32663
   160  0000                     _IPEN	set	32391
   161  0000                     _PEIE	set	32662
   162  0000                     _RCIE	set	31981
   163  0000                     _RCIF	set	31989
   164  0000                     _RCIP	set	31997
   165  0000                     _RD	set	32048
   166  0000                     _TMR0IE	set	32661
   167  0000                     _TMR0IF	set	32658
   168  0000                     _TMR0IP	set	32650
   169  0000                     _WR	set	32049
   170  0000                     _WREN	set	32050
   171  000615  00                 	db	0	; dummy byte at the end
   172  0000                     
   173                           	psect	nvCOMRAM
   174  00005B                     __pnvCOMRAM:
   175                           	opt stack 0
   176  00005B                     _Micro:
   177                           	opt stack 0
   178  00005B                     	ds	6
   179                           
   180                           ; #config settings
   181  0000                     
   182                           	psect	cinit
   183  0027C8                     __pcinit:
   184                           	opt stack 0
   185  0027C8                     start_initialization:
   186                           	opt stack 0
   187  0027C8                     __initialization:
   188                           	opt stack 0
   189                           
   190                           ; Clear objects allocated to BANK1 (107 bytes)
   191  0027C8  EE01  F000         	lfsr	0,__pbssBANK1
   192  0027CC  0E6B               	movlw	107
   193  0027CE                     clear_0:
   194  0027CE  6AEE               	clrf	postinc0,c
   195  0027D0  06E8               	decf	wreg,f,c
   196  0027D2  E1FD               	bnz	clear_0
   197                           
   198                           ; Clear objects allocated to BANK0 (40 bytes)
   199  0027D4  EE00  F080         	lfsr	0,__pbssBANK0
   200  0027D8  0E28               	movlw	40
   201  0027DA                     clear_1:
   202  0027DA  6AEE               	clrf	postinc0,c
   203  0027DC  06E8               	decf	wreg,f,c
   204  0027DE  E1FD               	bnz	clear_1
   205                           
   206                           ; Clear objects allocated to COMRAM (47 bytes)
   207  0027E0  EE00  F001         	lfsr	0,__pbssCOMRAM
   208  0027E4  0E2F               	movlw	47
   209  0027E6                     clear_2:
   210  0027E6  6AEE               	clrf	postinc0,c
   211  0027E8  06E8               	decf	wreg,f,c
   212  0027EA  E1FD               	bnz	clear_2
   213                           
   214                           ; Initialize objects allocated to BANK0 (5 bytes)
   215                           ; load TBLPTR registers with __pidataBANK0
   216  0027EC  0E94               	movlw	low __pidataBANK0
   217  0027EE  6EF6               	movwf	tblptrl,c
   218  0027F0  0E2D               	movlw	high __pidataBANK0
   219  0027F2  6EF7               	movwf	tblptrh,c
   220  0027F4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   221  0027F6  6EF8               	movwf	tblptru,c
   222  0027F8  EE00  F0C8         	lfsr	0,__pdataBANK0
   223  0027FC  EE10 F005          	lfsr	1,5
   224  002800                     copy_data0:
   225  002800  0009               	tblrd		*+
   226  002802  CFF5 FFEE          	movff	tablat,postinc0
   227  002806  50E5               	movf	postdec1,w,c
   228  002808  50E1               	movf	fsr1l,w,c
   229  00280A  E1FA               	bnz	copy_data0
   230  00280C                     end_of_initialization:
   231                           	opt stack 0
   232  00280C                     __end_of__initialization:
   233                           	opt stack 0
   234  00280C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   235  00280E  6EF8               	movwf	tblptru,c
   236  002810  0100               	movlb	0
   237  002812  EF20  F013         	goto	_main	;jump to C main() function
   238                           tblptru	equ	0xFF8
   239                           tblptrh	equ	0xFF7
   240                           tblptrl	equ	0xFF6
   241                           tablat	equ	0xFF5
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           postdec1	equ	0xFE5
   245                           fsr1l	equ	0xFE1
   246                           
   247                           	psect	bssCOMRAM
   248  000001                     __pbssCOMRAM:
   249                           	opt stack 0
   250  000001                     _Test:
   251                           	opt stack 0
   252  000001                     	ds	31
   253  000020                     _Arm:
   254                           	opt stack 0
   255  000020                     	ds	7
   256  000027                     _Register:
   257                           	opt stack 0
   258  000027                     	ds	4
   259  00002B                     _Cpt1Sur20s:
   260                           	opt stack 0
   261  00002B                     	ds	2
   262  00002D                     _Cptms:
   263                           	opt stack 0
   264  00002D                     	ds	2
   265  00002F                     _Decompte:
   266                           	opt stack 0
   267  00002F                     	ds	1
   268                           tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           postdec1	equ	0xFE5
   275                           fsr1l	equ	0xFE1
   276                           
   277                           	psect	bssBANK0
   278  000080                     __pbssBANK0:
   279                           	opt stack 0
   280  000080                     _Bouton:
   281                           	opt stack 0
   282  000080                     	ds	12
   283  00008C                     _Feu:
   284                           	opt stack 0
   285  00008C                     	ds	12
   286  000098                     _Ecran:
   287                           	opt stack 0
   288  000098                     	ds	16
   289                           tblptru	equ	0xFF8
   290                           tblptrh	equ	0xFF7
   291                           tblptrl	equ	0xFF6
   292                           tablat	equ	0xFF5
   293                           postinc0	equ	0xFEE
   294                           wreg	equ	0xFE8
   295                           postdec1	equ	0xFE5
   296                           fsr1l	equ	0xFE1
   297                           
   298                           	psect	dataBANK0
   299  0000C8                     __pdataBANK0:
   300                           	opt stack 0
   301  0000C8                     _PrintTest:
   302                           	opt stack 0
   303  0000C8                     	ds	5
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           wreg	equ	0xFE8
   310                           postdec1	equ	0xFE5
   311                           fsr1l	equ	0xFE1
   312                           
   313                           	psect	bssBANK1
   314  000100                     __pbssBANK1:
   315                           	opt stack 0
   316  000100                     _Cf:
   317                           	opt stack 0
   318  000100                     	ds	107
   319                           tblptru	equ	0xFF8
   320                           tblptrh	equ	0xFF7
   321                           tblptrl	equ	0xFF6
   322                           tablat	equ	0xFF5
   323                           postinc0	equ	0xFEE
   324                           wreg	equ	0xFE8
   325                           postdec1	equ	0xFE5
   326                           fsr1l	equ	0xFE1
   327                           
   328                           	psect	cstackBANK0
   329  0000A8                     __pcstackBANK0:
   330                           	opt stack 0
   331  0000A8                     ??_DecToStr:
   332  0000A8                     ??___lwtoft:
   333  0000A8                     cf_checksum@valid:
   334                           	opt stack 0
   335  0000A8                     ___fttol@sign1:
   336                           	opt stack 0
   337  0000A8                     utoa@buf:
   338                           	opt stack 0
   339                           
   340                           ; 2 bytes @ 0x0
   341  0000A8                     	ds	1
   342  0000A9                     cf_checksum@i:
   343                           	opt stack 0
   344  0000A9                     ___fttol@lval:
   345                           	opt stack 0
   346                           
   347                           ; 4 bytes @ 0x1
   348  0000A9                     	ds	1
   349  0000AA                     ?___ftmul:
   350                           	opt stack 0
   351  0000AA                     utoa@val:
   352                           	opt stack 0
   353  0000AA                     ___ftmul@f1:
   354                           	opt stack 0
   355  0000AA                     cf_checksum@calcul:
   356                           	opt stack 0
   357                           
   358                           ; 4 bytes @ 0x2
   359  0000AA                     	ds	2
   360  0000AC                     DecToStr@compareValue:
   361                           	opt stack 0
   362  0000AC                     utoa@base:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x4
   366  0000AC                     	ds	1
   367  0000AD                     ___fttol@exp1:
   368                           	opt stack 0
   369  0000AD                     ___ftmul@f2:
   370                           	opt stack 0
   371                           
   372                           ; 3 bytes @ 0x5
   373  0000AD                     	ds	1
   374  0000AE                     ??_cf_check:
   375  0000AE                     DecToStr@value:
   376                           	opt stack 0
   377  0000AE                     itoa@buf:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x6
   381  0000AE                     	ds	1
   382  0000AF                     cf_check@valid:
   383                           	opt stack 0
   384  0000AF                     DecToStr@power10:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x7
   388  0000AF                     	ds	1
   389  0000B0                     ??_cf_check_and_display:
   390  0000B0                     ??___ftmul:
   391  0000B0                     ??_cf_rcv:
   392  0000B0                     ecran_print_num@Num:
   393                           	opt stack 0
   394  0000B0                     itoa@val:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x8
   398  0000B0                     	ds	1
   399  0000B1                     ecran_print_num@tempStr:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x9
   403  0000B1                     	ds	1
   404  0000B2                     cf_rcv@temp:
   405                           	opt stack 0
   406  0000B2                     cf_check_and_display@temp:
   407                           	opt stack 0
   408  0000B2                     itoa@base:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0xA
   412  0000B2                     	ds	1
   413  0000B3                     cf_rcv@i:
   414                           	opt stack 0
   415  0000B3                     ___ftmul@exp:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0xB
   419  0000B3                     	ds	1
   420  0000B4                     ??_check_idtest:
   421  0000B4                     cf_check_and_display@configOk:
   422                           	opt stack 0
   423  0000B4                     itoa@cp:
   424                           	opt stack 0
   425  0000B4                     ___ftmul@f3_as_product:
   426                           	opt stack 0
   427                           
   428                           ; 3 bytes @ 0xC
   429  0000B4                     	ds	3
   430  0000B7                     ___ftmul@cntr:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0xF
   434  0000B7                     	ds	1
   435  0000B8                     ___ftmul@sign:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x10
   439  0000B8                     	ds	1
   440  0000B9                     ?_check_UAlim:
   441                           	opt stack 0
   442  0000B9                     ?_check_UInfla:
   443                           	opt stack 0
   444  0000B9                     ?_arm_UAlim_1A:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x11
   448  0000B9                     	ds	2
   449  0000BB                     ??_check_UAlim:
   450  0000BB                     ??_check_UInfla:
   451  0000BB                     ??_arm_UAlim_1A:
   452                           
   453                           ; 0 bytes @ 0x13
   454  0000BB                     	ds	4
   455  0000BF                     check_UAlim@temp:
   456                           	opt stack 0
   457  0000BF                     check_UInfla@temp:
   458                           	opt stack 0
   459  0000BF                     arm_UAlim_1A@temp:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x17
   463  0000BF                     	ds	2
   464  0000C1                     ??_test_process:
   465  0000C1                     ??_armement_process:
   466                           
   467                           ; 0 bytes @ 0x19
   468  0000C1                     	ds	2
   469  0000C3                     test_process@ret:
   470                           	opt stack 0
   471  0000C3                     armement_process@temp:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x1B
   475  0000C3                     	ds	1
   476  0000C4                     test_process@temp:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x1C
   480  0000C4                     	ds	2
   481  0000C6                     ??_main:
   482                           
   483                           ; 0 bytes @ 0x1E
   484  0000C6                     	ds	1
   485  0000C7                     main@cpt:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x1F
   489  0000C7                     	ds	1
   490                           tblptru	equ	0xFF8
   491                           tblptrh	equ	0xFF7
   492                           tblptrl	equ	0xFF6
   493                           tablat	equ	0xFF5
   494                           postinc0	equ	0xFEE
   495                           wreg	equ	0xFE8
   496                           postdec1	equ	0xFE5
   497                           fsr1l	equ	0xFE1
   498                           
   499                           	psect	cstackCOMRAM
   500  000030                     __pcstackCOMRAM:
   501                           	opt stack 0
   502  000030                     ??_High_priority:
   503  000030                     
   504                           ; 1 bytes @ 0x0
   505  000030                     	ds	14
   506  00003E                     ??_Low_priority:
   507                           
   508                           ; 0 bytes @ 0xE
   509  00003E                     	ds	17
   510  00004F                     ??_bouton_refresh:
   511  00004F                     ??_register_write:
   512  00004F                     ??_ecran_blank:
   513  00004F                     ??_cf_checksum:
   514  00004F                     ??_cf_checkrange:
   515  00004F                     ?___awmod:
   516                           	opt stack 0
   517  00004F                     ?___lwdiv:
   518                           	opt stack 0
   519  00004F                     ?___lwmod:
   520                           	opt stack 0
   521  00004F                     ?___wmul:
   522                           	opt stack 0
   523  00004F                     ?___ftpack:
   524                           	opt stack 0
   525  00004F                     ?___fttol:
   526                           	opt stack 0
   527  00004F                     ecran_digit@Char:
   528                           	opt stack 0
   529  00004F                     ecran_dot@Dot:
   530                           	opt stack 0
   531  00004F                     eeprom_read@Address:
   532                           	opt stack 0
   533  00004F                     eeprom_write@Address:
   534                           	opt stack 0
   535  00004F                     HexToAscii@character:
   536                           	opt stack 0
   537  00004F                     ___lbdiv@divisor:
   538                           	opt stack 0
   539  00004F                     delay_ms@TimeToWait:
   540                           	opt stack 0
   541  00004F                     ___awmod@dividend:
   542                           	opt stack 0
   543  00004F                     ___lwdiv@dividend:
   544                           	opt stack 0
   545  00004F                     ___lwmod@dividend:
   546                           	opt stack 0
   547  00004F                     ___wmul@multiplier:
   548                           	opt stack 0
   549  00004F                     ___ftpack@arg:
   550                           	opt stack 0
   551  00004F                     ___fttol@f1:
   552                           	opt stack 0
   553                           
   554                           ; 3 bytes @ 0x1F
   555  00004F                     	ds	1
   556  000050                     ??_ecran_wait:
   557  000050                     ??___lbdiv:
   558  000050                     ecran_print_one_char@Character:
   559                           	opt stack 0
   560  000050                     eeprom_write@Data:
   561                           	opt stack 0
   562  000050                     cf_checkrange@valid:
   563                           	opt stack 0
   564  000050                     HexToAscii@Value:
   565                           	opt stack 0
   566  000050                     register_write@Output:
   567                           	opt stack 0
   568  000050                     eeprom_read_array@pData:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x20
   572  000050                     	ds	1
   573  000051                     ??_delay_ms:
   574  000051                     ecran_print_one_char@Digit:
   575                           	opt stack 0
   576  000051                     cf_checkrange@i:
   577                           	opt stack 0
   578  000051                     register_write@i:
   579                           	opt stack 0
   580  000051                     ___lbdiv@dividend:
   581                           	opt stack 0
   582  000051                     eeprom_write_array@pData:
   583                           	opt stack 0
   584  000051                     _bouton_refresh$2033:
   585                           	opt stack 0
   586  000051                     ___awmod@divisor:
   587                           	opt stack 0
   588  000051                     ___lwdiv@divisor:
   589                           	opt stack 0
   590  000051                     ___lwmod@divisor:
   591                           	opt stack 0
   592  000051                     ___wmul@multiplicand:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x21
   596  000051                     	ds	1
   597  000052                     ??_check_bpon:
   598  000052                     ??_ecran_refresh:
   599  000052                     eeprom_read_array@Address:
   600                           	opt stack 0
   601  000052                     ___ftpack@exp:
   602                           	opt stack 0
   603  000052                     ___lbdiv@counter:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x22
   607  000052                     	ds	1
   608  000053                     ??___awmod:
   609  000053                     ??___fttol:
   610  000053                     ??___lwdiv:
   611  000053                     ??___lwmod:
   612  000053                     eeprom_read_array@NbData:
   613                           	opt stack 0
   614  000053                     eeprom_write_array@Address:
   615                           	opt stack 0
   616  000053                     bouton_refresh@temp:
   617                           	opt stack 0
   618  000053                     ___ftpack@sign:
   619                           	opt stack 0
   620  000053                     ___lbdiv@quotient:
   621                           	opt stack 0
   622  000053                     delay_ms@temp:
   623                           	opt stack 0
   624  000053                     ___wmul@product:
   625                           	opt stack 0
   626                           
   627                           ; 2 bytes @ 0x23
   628  000053                     	ds	1
   629  000054                     ??_check_comutest:
   630  000054                     ??_check_program_0:
   631  000054                     ??___ftpack:
   632  000054                     ??_eeprom_read_array:
   633  000054                     eeprom_write_array@NbData:
   634                           	opt stack 0
   635  000054                     bouton_refresh@i:
   636                           	opt stack 0
   637  000054                     ___awmod@counter:
   638                           	opt stack 0
   639  000054                     ___lwdiv@counter:
   640                           	opt stack 0
   641  000054                     ___lwmod@counter:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x24
   645  000054                     	ds	1
   646  000055                     ??_eeprom_write_array:
   647  000055                     ??_cf_checkout:
   648  000055                     ?_ana_read:
   649                           	opt stack 0
   650  000055                     eeprom_read_array@i:
   651                           	opt stack 0
   652  000055                     check_comutest@State:
   653                           	opt stack 0
   654  000055                     check_program_0@ret:
   655                           	opt stack 0
   656  000055                     feu_tir@Output:
   657                           	opt stack 0
   658  000055                     ___awmod@sign:
   659                           	opt stack 0
   660  000055                     ___lwdiv@quotient:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x25
   664  000055                     	ds	1
   665  000056                     ??_micro_wait:
   666  000056                     ??_feu_process:
   667  000056                     ?_DecToStr:
   668                           	opt stack 0
   669  000056                     eeprom_write_array@i:
   670                           	opt stack 0
   671  000056                     cf_checkout@valid:
   672                           	opt stack 0
   673  000056                     DecToStr@result:
   674                           	opt stack 0
   675                           
   676                           ; 2 bytes @ 0x26
   677  000056                     	ds	1
   678  000057                     ??_ana_read:
   679  000057                     ?___lwtoft:
   680                           	opt stack 0
   681  000057                     cf_checkout@last_out:
   682                           	opt stack 0
   683  000057                     utoa@v:
   684                           	opt stack 0
   685  000057                     ___lwtoft@c:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x27
   689  000057                     	ds	1
   690  000058                     ??_ecran_print_num:
   691  000058                     cf_checkout@i:
   692                           	opt stack 0
   693  000058                     ana_read@ANx:
   694                           	opt stack 0
   695                           
   696                           ; 1 bytes @ 0x28
   697  000058                     	ds	1
   698  000059                     ??_feu_check_bp:
   699  000059                     utoa@c:
   700                           	opt stack 0
   701  000059                     ana_read@temp:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x29
   705  000059                     	ds	1
   706  00005A                     
   707                           ; 0 bytes @ 0x2A
   708  00005A                     	ds	1
   709                           tblptru	equ	0xFF8
   710                           tblptrh	equ	0xFF7
   711                           tblptrl	equ	0xFF6
   712                           tablat	equ	0xFF5
   713                           postinc0	equ	0xFEE
   714                           wreg	equ	0xFE8
   715                           postdec1	equ	0xFE5
   716                           fsr1l	equ	0xFE1
   717                           
   718 ;;
   719 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   720 ;;
   721 ;; *************** function _main *****************
   722 ;; Defined at:
   723 ;;		line 91 in file "main.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  cpt             1   31[BANK0 ] unsigned char 
   728 ;;  temp            1    0        unsigned char 
   729 ;;  i               1    0        unsigned char 
   730 ;; Return value:  Size  Location     Type
   731 ;;		None               void
   732 ;; Registers used:
   733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   739 ;;      Params:         0       0       0       0       0       0       0
   740 ;;      Locals:         0       1       0       0       0       0       0
   741 ;;      Temps:          0       1       0       0       0       0       0
   742 ;;      Totals:         0       2       0       0       0       0       0
   743 ;;Total ram usage:        2 bytes
   744 ;; Hardware stack levels required when called:    7
   745 ;; This function calls:
   746 ;;		_armement_process
   747 ;;		_bouton_init
   748 ;;		_bouton_refresh
   749 ;;		_cf_check_and_display
   750 ;;		_check_bpon
   751 ;;		_check_comutest
   752 ;;		_check_idtest
   753 ;;		_check_program_0
   754 ;;		_ecran_refresh
   755 ;;		_feu_check_bp
   756 ;;		_feu_process
   757 ;;		_hw_config
   758 ;;		_micro_config
   759 ;;		_micro_wait
   760 ;;		_test_process
   761 ;; This function is called by:
   762 ;;		Startup code after reset
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text0
   767  002640                     __ptext0:
   768                           	opt stack 0
   769  002640                     _main:
   770                           	opt stack 24
   771                           
   772                           ;incstack = 0
   773  002640  FFFF               	dw	65535
   774                           
   775                           ;main.c: 93: unsigned char i, temp, cpt = 0;
   776  002642  0100               	movlb	0	; () banked
   777  002644  6FC6               	movwf	??_main& (0+255),b
   778  002646  0E00               	movlw	0
   779  002648  0100               	movlb	0	; () banked
   780  00264A  0100               	movlb	0	; () banked
   781  00264C  6FC7               	movwf	main@cpt& (0+255),b
   782  00264E  0100               	movlb	0	; () banked
   783  002650  51C6               	movf	??_main& (0+255),w,b
   784                           
   785                           ; BSR set to: 0
   786                           ;main.c: 96: hw_config();
   787  002652  EC5E  F013         	call	_hw_config	;wreg free
   788                           
   789                           ;main.c: 97: micro_config();
   790  002656  EC30  F016         	call	_micro_config	;wreg free
   791                           
   792                           ;main.c: 100: check_comutest(0);
   793  00265A  0E00               	movlw	0
   794  00265C  EC7F  F014         	call	_check_comutest
   795                           
   796                           ;main.c: 103: if (check_program_0() == 0)
   797  002660  EC74  F015         	call	_check_program_0	;wreg free
   798  002664  0900               	iorlw	0
   799  002666  A4D8               	btfss	status,2,c
   800  002668  D006               	goto	l6367
   801                           
   802                           ;main.c: 104: {
   803                           ;main.c: 106: check_idtest();
   804  00266A  EC5E  F016         	call	_check_idtest	;wreg free
   805                           
   806                           ;main.c: 109: check_bpon();
   807  00266E  EC59  F014         	call	_check_bpon	;wreg free
   808                           
   809                           ;main.c: 112: cf_check_and_display();
   810  002672  ECA2  F00B         	call	_cf_check_and_display	;wreg free
   811  002676                     l6367:
   812                           
   813                           ;main.c: 113: }
   814                           ;main.c: 115: bouton_init();
   815  002676  EC0B  F014         	call	_bouton_init	;wreg free
   816  00267A                     l6369:
   817                           
   818                           ;main.c: 118: {
   819                           ;main.c: 119: bouton_refresh();
   820  00267A  EC51  F008         	call	_bouton_refresh	;wreg free
   821                           
   822                           ;main.c: 120: ecran_refresh();
   823  00267E  EC9C  F011         	call	_ecran_refresh	;wreg free
   824                           
   825                           ;main.c: 122: switch (Micro.Phase)
   826  002682  D00E               	goto	l6383
   827  002684                     l6373:
   828                           
   829                           ;main.c: 125: micro_wait();
   830  002684  ECEF  F011         	call	_micro_wait	;wreg free
   831                           
   832                           ;main.c: 126: break;
   833  002688  D7F8               	goto	l6369
   834  00268A                     l6375:
   835                           
   836                           ;main.c: 128: test_process();
   837  00268A  EC0B  F003         	call	_test_process	;wreg free
   838                           
   839                           ;main.c: 129: break;
   840  00268E  D7F5               	goto	l6369
   841  002690                     l6377:
   842                           
   843                           ;main.c: 131: armement_process();
   844  002690  ECDF  F00A         	call	_armement_process	;wreg free
   845                           
   846                           ;main.c: 132: break;
   847  002694  D7F2               	goto	l6369
   848  002696                     l6379:
   849                           
   850                           ;main.c: 134: feu_process();
   851  002696  EC3D  F007         	call	_feu_process	;wreg free
   852                           
   853                           ;main.c: 135: feu_check_bp();
   854  00269A  ECED  F00C         	call	_feu_check_bp	;wreg free
   855                           
   856                           ;main.c: 136: break;
   857  00269E  D7ED               	goto	l6369
   858  0026A0                     l6383:
   859  0026A0  505D               	movf	_Micro+2,w,c
   860                           
   861                           ; Switch size 1, requested type "space"
   862                           ; Number of cases is 4, Range of values is 0 to 3
   863                           ; switch strategies available:
   864                           ; Name         Instructions Cycles
   865                           ; simple_byte           13     7 (average)
   866                           ;	Chosen strategy is simple_byte
   867  0026A2  0A00               	xorlw	0	; case 0
   868  0026A4  B4D8               	btfsc	status,2,c
   869  0026A6  D7EE               	goto	l6373
   870  0026A8  0A01               	xorlw	1	; case 1
   871  0026AA  B4D8               	btfsc	status,2,c
   872  0026AC  D7EE               	goto	l6375
   873  0026AE  0A03               	xorlw	3	; case 2
   874  0026B0  B4D8               	btfsc	status,2,c
   875  0026B2  D7EE               	goto	l6377
   876  0026B4  0A01               	xorlw	1	; case 3
   877  0026B6  B4D8               	btfsc	status,2,c
   878  0026B8  D7EE               	goto	l6379
   879  0026BA  D7DF               	goto	l6369
   880  0026BC                     __end_of_main:
   881                           	opt stack 0
   882                           tblptru	equ	0xFF8
   883                           tblptrh	equ	0xFF7
   884                           tblptrl	equ	0xFF6
   885                           tablat	equ	0xFF5
   886                           postinc0	equ	0xFEE
   887                           wreg	equ	0xFE8
   888                           postdec1	equ	0xFE5
   889                           fsr1l	equ	0xFE1
   890                           status	equ	0xFD8
   891                           
   892 ;; *************** function _test_process *****************
   893 ;; Defined at:
   894 ;;		line 102 in file "test.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;  temp            2   28[BANK0 ] unsigned short 
   899 ;;  ret             1   27[BANK0 ] unsigned char 
   900 ;;  i               1    0        unsigned char 
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      unsigned char 
   903 ;; Registers used:
   904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   910 ;;      Params:         0       0       0       0       0       0       0
   911 ;;      Locals:         0       3       0       0       0       0       0
   912 ;;      Temps:          0       2       0       0       0       0       0
   913 ;;      Totals:         0       5       0       0       0       0       0
   914 ;;Total ram usage:        5 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    6
   917 ;; This function calls:
   918 ;;		_check_UAlim
   919 ;;		_check_UInfla
   920 ;;		_check_comutest
   921 ;;		_ecran_blank
   922 ;;		_ecran_print_num
   923 ;;		_ecran_wait
   924 ;;		_itoa
   925 ;;		_register_write
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text1
   932  000616                     __ptext1:
   933                           	opt stack 0
   934  000616                     _test_process:
   935                           	opt stack 24
   936                           
   937                           ;incstack = 0
   938  000616  FFFF               	dw	65535
   939                           
   940                           ;test.c: 104: unsigned short temp;
   941                           ;test.c: 105: unsigned char i, ret = 0;
   942  000618  0100               	movlb	0	; () banked
   943  00061A  6FC1               	movwf	??_test_process& (0+255),b
   944  00061C  0E00               	movlw	0
   945  00061E  0100               	movlb	0	; () banked
   946  000620  0100               	movlb	0	; () banked
   947  000622  6FC3               	movwf	test_process@ret& (0+255),b
   948  000624  0100               	movlb	0	; () banked
   949  000626  51C1               	movf	??_test_process& (0+255),w,b
   950                           
   951                           ;test.c: 107: switch(Test.Step)
   952  000628  D2A4               	goto	l6193
   953  00062A                     l539:
   954                           
   955                           ; BSR set to: 0
   956                           ;test.c: 110: if (Bouton[Bp_IdTest].State == 1)
   957  00062A  0100               	movlb	0	; () banked
   958  00062C  A385               	btfss	(_Bouton+5)& (0+255),1,b
   959  00062E  D2D5               	goto	l591
   960                           
   961                           ; BSR set to: 0
   962                           ;test.c: 111: {
   963                           ;test.c: 112: Test.Step = 0x02;
   964  000630  0100               	movlb	0	; () banked
   965  000632  6FC1               	movwf	??_test_process& (0+255),b
   966  000634  0E02               	movlw	2
   967  000636  D270               	goto	L13
   968  000638                     l6023:
   969                           
   970                           ; BSR set to: 0
   971                           ;test.c: 117: check_comutest(0);
   972  000638  0E00               	movlw	0
   973  00063A  EC7F  F014         	call	_check_comutest
   974                           
   975                           ;test.c: 119: Test.Cpt = 0;
   976  00063E  0100               	movlb	0	; () banked
   977  000640  6FC1               	movwf	??_test_process& (0+255),b
   978  000642  0E00               	movlw	0
   979  000644  6E02               	movwf	_Test+1,c
   980  000646  0100               	movlb	0	; () banked
   981  000648  51C1               	movf	??_test_process& (0+255),w,b
   982                           
   983                           ; BSR set to: 0
   984                           ;test.c: 121: temp = check_UAlim();
   985  00064A  EC92  F00F         	call	_check_UAlim	;wreg free
   986  00064E  0100               	movlb	0	; () banked
   987  000650  C0B9  F0C4         	movff	?_check_UAlim,test_process@temp
   988  000654  0100               	movlb	0	; () banked
   989  000656  C0BA  F0C5         	movff	?_check_UAlim+1,test_process@temp+1
   990                           
   991                           ; BSR set to: 0
   992                           ;test.c: 123: Ecran.Digits = PrintTest;
   993  00065A  0100               	movlb	0	; () banked
   994  00065C  0E00               	movlw	high _PrintTest
   995  00065E  0100               	movlb	0	; () banked
   996  000660  0100               	movlb	0	; () banked
   997  000662  6F9D               	movwf	(_Ecran+5)& (0+255),b
   998  000664  0100               	movlb	0	; () banked
   999  000666  0EC8               	movlw	low _PrintTest
  1000  000668  0100               	movlb	0	; () banked
  1001  00066A  0100               	movlb	0	; () banked
  1002  00066C  6F9C               	movwf	(_Ecran+4)& (0+255),b
  1003                           
  1004                           ; BSR set to: 0
  1005                           ;test.c: 125: itoa(Ecran.Digits,temp,10);
  1006  00066E  0100               	movlb	0	; () banked
  1007  000670  0100               	movlb	0	; () banked
  1008  000672  C09D  F0AF         	movff	_Ecran+5,itoa@buf+1
  1009  000676  0100               	movlb	0	; () banked
  1010  000678  0100               	movlb	0	; () banked
  1011  00067A  C09C  F0AE         	movff	_Ecran+4,itoa@buf
  1012  00067E  C0C4  F0B0         	movff	test_process@temp,itoa@val
  1013  000682  C0C5  F0B1         	movff	test_process@temp+1,itoa@val+1
  1014  000686  0E00               	movlw	0
  1015  000688  0100               	movlb	0	; () banked
  1016  00068A  0100               	movlb	0	; () banked
  1017  00068C  6FB3               	movwf	(itoa@base+1)& (0+255),b
  1018  00068E  0E0A               	movlw	10
  1019  000690  0100               	movlb	0	; () banked
  1020  000692  6FB2               	movwf	itoa@base& (0+255),b
  1021  000694  EC91  F012         	call	_itoa	;wreg free
  1022                           
  1023                           ;test.c: 127: Ecran.Dot[0] = 0;
  1024  000698  0100               	movlb	0	; () banked
  1025  00069A  6FC1               	movwf	??_test_process& (0+255),b
  1026  00069C  0E00               	movlw	0
  1027  00069E  0100               	movlb	0	; () banked
  1028  0006A0  0100               	movlb	0	; () banked
  1029  0006A2  6F9E               	movwf	(_Ecran+6)& (0+255),b
  1030  0006A4  0100               	movlb	0	; () banked
  1031  0006A6  51C1               	movf	??_test_process& (0+255),w,b
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;test.c: 128: Ecran.Dot[1] = 1;
  1035  0006A8  0100               	movlb	0	; () banked
  1036  0006AA  6FC1               	movwf	??_test_process& (0+255),b
  1037  0006AC  0E01               	movlw	1
  1038  0006AE  0100               	movlb	0	; () banked
  1039  0006B0  0100               	movlb	0	; () banked
  1040  0006B2  6F9F               	movwf	(_Ecran+7)& (0+255),b
  1041  0006B4  0100               	movlb	0	; () banked
  1042  0006B6  51C1               	movf	??_test_process& (0+255),w,b
  1043                           
  1044                           ; BSR set to: 0
  1045                           ;test.c: 129: Ecran.Dot[2] = 0;
  1046  0006B8  0100               	movlb	0	; () banked
  1047  0006BA  6FC1               	movwf	??_test_process& (0+255),b
  1048  0006BC  0E00               	movlw	0
  1049  0006BE  0100               	movlb	0	; () banked
  1050  0006C0  0100               	movlb	0	; () banked
  1051  0006C2  6FA0               	movwf	(_Ecran+8)& (0+255),b
  1052  0006C4  0100               	movlb	0	; () banked
  1053  0006C6  51C1               	movf	??_test_process& (0+255),w,b
  1054                           
  1055                           ; BSR set to: 0
  1056                           ;test.c: 130: Ecran.Dot[3] = 0;
  1057  0006C8  0100               	movlb	0	; () banked
  1058  0006CA  6FC1               	movwf	??_test_process& (0+255),b
  1059  0006CC  0E00               	movlw	0
  1060  0006CE  0100               	movlb	0	; () banked
  1061  0006D0  0100               	movlb	0	; () banked
  1062  0006D2  6FA1               	movwf	(_Ecran+9)& (0+255),b
  1063  0006D4  0100               	movlb	0	; () banked
  1064  0006D6  51C1               	movf	??_test_process& (0+255),w,b
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;test.c: 132: Test.Step = 0x03;
  1068  0006D8  0100               	movlb	0	; () banked
  1069  0006DA  6FC1               	movwf	??_test_process& (0+255),b
  1070  0006DC  0E03               	movlw	3
  1071  0006DE  D21C               	goto	L13
  1072  0006E0                     l543:
  1073                           
  1074                           ; BSR set to: 0
  1075                           ;test.c: 135: if (Bouton[Bp_IdTest].State == 0)
  1076  0006E0  0100               	movlb	0	; () banked
  1077  0006E2  B385               	btfsc	(_Bouton+5)& (0+255),1,b
  1078  0006E4  D27A               	goto	l591
  1079                           
  1080                           ; BSR set to: 0
  1081                           ;test.c: 136: {
  1082                           ;test.c: 137: if (Micro.Mod.P_0 == 0) {Test.Step = 0x04;}
  1083  0006E6  B060               	btfsc	_Micro+5,0,c
  1084  0006E8  D004               	goto	l6047
  1085                           
  1086                           ; BSR set to: 0
  1087  0006EA  0100               	movlb	0	; () banked
  1088  0006EC  6FC1               	movwf	??_test_process& (0+255),b
  1089  0006EE  0E04               	movlw	4
  1090  0006F0  D003               	goto	L3
  1091  0006F2                     l6047:
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;test.c: 138: else {Test.Step = 0x0A;}
  1095  0006F2  0100               	movlb	0	; () banked
  1096  0006F4  6FC1               	movwf	??_test_process& (0+255),b
  1097  0006F6  0E0A               	movlw	10
  1098  0006F8                     L3:
  1099  0006F8  6E01               	movwf	_Test,c
  1100  0006FA  0100               	movlb	0	; () banked
  1101  0006FC  51C1               	movf	??_test_process& (0+255),w,b
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;test.c: 140: ecran_blank();
  1105                           
  1106                           ; BSR set to: 0
  1107  0006FE  ECBB  F013         	call	_ecran_blank	;wreg free
  1108                           
  1109                           ;test.c: 141: check_comutest(0);
  1110  000702  0E00               	movlw	0
  1111  000704  EC7F  F014         	call	_check_comutest
  1112  000708  D11A               	goto	L12
  1113  00070A                     l6055:
  1114                           
  1115                           ;test.c: 146: if (Cf.Data[Test.Cpt*3] == 0)
  1116  00070A  5002               	movf	_Test+1,w,c
  1117  00070C  0D03               	mullw	3
  1118  00070E  0101               	movlb	1	; () banked
  1119  000710  0E00               	movlw	low _Cf	;volatile
  1120  000712  24F3               	addwf	prodl,w,c
  1121  000714  6ED9               	movwf	fsr2l,c
  1122  000716  0101               	movlb	1	; () banked
  1123  000718  0E01               	movlw	high _Cf	;volatile
  1124  00071A  20F4               	addwfc	prodh,w,c
  1125  00071C  6EDA               	movwf	fsr2h,c
  1126  00071E  50DF               	movf	indf2,w,c
  1127  000720  A4D8               	btfss	status,2,c
  1128  000722  D004               	goto	l6059
  1129                           
  1130                           ; BSR set to: 1
  1131                           ;test.c: 147: {
  1132                           ;test.c: 149: Test.Step = 0x08;
  1133  000724  0100               	movlb	0	; () banked
  1134  000726  6FC1               	movwf	??_test_process& (0+255),b
  1135  000728  0E08               	movlw	8
  1136  00072A  D1F6               	goto	L13
  1137  00072C                     l6059:
  1138                           
  1139                           ;test.c: 151: else if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1140  00072C  EE20  F003         	lfsr	2,_Test+2
  1141  000730  CFDE F0C1          	movff	postinc2,??_test_process
  1142  000734  CFDD F0C2          	movff	postdec2,??_test_process+1
  1143  000738  0100               	movlb	0	; () banked
  1144  00073A  1FC1               	comf	??_test_process& (0+255),f,b
  1145  00073C  1FC2               	comf	(??_test_process+1)& (0+255),f,b
  1146  00073E  4BC1               	infsnz	??_test_process& (0+255),f,b
  1147  000740  2BC2               	incf	(??_test_process+1)& (0+255),f,b
  1148  000742  502D               	movf	_Cptms,w,c	;volatile
  1149  000744  0100               	movlb	0	; () banked
  1150  000746  27C1               	addwf	??_test_process& (0+255),f,b
  1151  000748  502E               	movf	_Cptms+1,w,c	;volatile
  1152  00074A  0100               	movlb	0	; () banked
  1153  00074C  23C2               	addwfc	(??_test_process+1)& (0+255),f,b
  1154  00074E  0E15               	movlw	21
  1155  000750  0100               	movlb	0	; () banked
  1156  000752  5DC1               	subwf	??_test_process& (0+255),w,b
  1157  000754  0E00               	movlw	0
  1158  000756  59C2               	subwfb	(??_test_process+1)& (0+255),w,b
  1159  000758  A0D8               	btfss	status,0,c
  1160  00075A  D23F               	goto	l591
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;test.c: 152: {
  1164                           ;test.c: 153: register_write(Cf.Data[Test.Cpt*3]);
  1165  00075C  5002               	movf	_Test+1,w,c
  1166  00075E  0D03               	mullw	3
  1167  000760  0101               	movlb	1	; () banked
  1168  000762  0E00               	movlw	low _Cf	;volatile
  1169  000764  24F3               	addwf	prodl,w,c
  1170  000766  6ED9               	movwf	fsr2l,c
  1171  000768  0101               	movlb	1	; () banked
  1172  00076A  0E01               	movlw	high _Cf	;volatile
  1173  00076C  20F4               	addwfc	prodh,w,c
  1174  00076E  6EDA               	movwf	fsr2h,c
  1175  000770  50DF               	movf	indf2,w,c
  1176  000772  ECAE  F015         	call	_register_write
  1177                           
  1178                           ;test.c: 154: Test.Step = 0x05;
  1179  000776  0100               	movlb	0	; () banked
  1180  000778  6FC1               	movwf	??_test_process& (0+255),b
  1181  00077A  0E05               	movlw	5
  1182  00077C  6E01               	movwf	_Test,c
  1183  00077E  0100               	movlb	0	; () banked
  1184  000780  51C1               	movf	??_test_process& (0+255),w,b
  1185  000782  D0DD               	goto	L12
  1186  000784                     l6067:
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;test.c: 159: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1190  000784  EE20  F003         	lfsr	2,_Test+2
  1191  000788  CFDE F0C1          	movff	postinc2,??_test_process
  1192  00078C  CFDD F0C2          	movff	postdec2,??_test_process+1
  1193  000790  0100               	movlb	0	; () banked
  1194  000792  1FC1               	comf	??_test_process& (0+255),f,b
  1195  000794  1FC2               	comf	(??_test_process+1)& (0+255),f,b
  1196  000796  4BC1               	infsnz	??_test_process& (0+255),f,b
  1197  000798  2BC2               	incf	(??_test_process+1)& (0+255),f,b
  1198  00079A  502D               	movf	_Cptms,w,c	;volatile
  1199  00079C  0100               	movlb	0	; () banked
  1200  00079E  27C1               	addwf	??_test_process& (0+255),f,b
  1201  0007A0  502E               	movf	_Cptms+1,w,c	;volatile
  1202  0007A2  0100               	movlb	0	; () banked
  1203  0007A4  23C2               	addwfc	(??_test_process+1)& (0+255),f,b
  1204  0007A6  0E15               	movlw	21
  1205  0007A8  0100               	movlb	0	; () banked
  1206  0007AA  5DC1               	subwf	??_test_process& (0+255),w,b
  1207  0007AC  0E00               	movlw	0
  1208  0007AE  59C2               	subwfb	(??_test_process+1)& (0+255),w,b
  1209  0007B0  A0D8               	btfss	status,0,c
  1210  0007B2  D213               	goto	l591
  1211                           
  1212                           ; BSR set to: 0
  1213                           ;test.c: 160: {
  1214                           ;test.c: 161: temp = check_UInfla();
  1215  0007B4  EC96  F00E         	call	_check_UInfla	;wreg free
  1216  0007B8  0100               	movlb	0	; () banked
  1217  0007BA  C0B9  F0C4         	movff	?_check_UInfla,test_process@temp
  1218  0007BE  0100               	movlb	0	; () banked
  1219  0007C0  C0BA  F0C5         	movff	?_check_UInfla+1,test_process@temp+1
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;test.c: 163: if (temp > 85) {Test.Step = 0x07;}
  1223  0007C4  0E56               	movlw	86
  1224  0007C6  0100               	movlb	0	; () banked
  1225  0007C8  0100               	movlb	0	; () banked
  1226  0007CA  5DC4               	subwf	test_process@temp& (0+255),w,b
  1227  0007CC  0E00               	movlw	0
  1228  0007CE  0100               	movlb	0	; () banked
  1229  0007D0  59C5               	subwfb	(test_process@temp+1)& (0+255),w,b
  1230  0007D2  A0D8               	btfss	status,0,c
  1231  0007D4  D004               	goto	l6075
  1232                           
  1233                           ; BSR set to: 0
  1234  0007D6  0100               	movlb	0	; () banked
  1235  0007D8  6FC1               	movwf	??_test_process& (0+255),b
  1236  0007DA  0E07               	movlw	7
  1237  0007DC  D003               	goto	L7
  1238  0007DE                     l6075:
  1239                           
  1240                           ; BSR set to: 0
  1241                           ;test.c: 164: else {Test.Step = 0x06;}
  1242  0007DE  0100               	movlb	0	; () banked
  1243  0007E0  6FC1               	movwf	??_test_process& (0+255),b
  1244  0007E2  0E06               	movlw	6
  1245  0007E4                     L7:
  1246  0007E4  6E01               	movwf	_Test,c
  1247  0007E6  0100               	movlb	0	; () banked
  1248  0007E8  51C1               	movf	??_test_process& (0+255),w,b
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;test.c: 167: ecran_print_num(Cf.Data[Test.Cpt*3]);
  1252                           
  1253                           ; BSR set to: 0
  1254  0007EA  5002               	movf	_Test+1,w,c
  1255  0007EC  0D03               	mullw	3
  1256  0007EE  0101               	movlb	1	; () banked
  1257  0007F0  0E00               	movlw	low _Cf	;volatile
  1258  0007F2  24F3               	addwf	prodl,w,c
  1259  0007F4  6ED9               	movwf	fsr2l,c
  1260  0007F6  0101               	movlb	1	; () banked
  1261  0007F8  0E01               	movlw	high _Cf	;volatile
  1262  0007FA  20F4               	addwfc	prodh,w,c
  1263  0007FC  6EDA               	movwf	fsr2h,c
  1264  0007FE  50DF               	movf	indf2,w,c
  1265  000800  ECE8  F010         	call	_ecran_print_num
  1266                           
  1267                           ;test.c: 168: register_write(0);
  1268  000804  0E00               	movlw	0
  1269  000806  ECAE  F015         	call	_register_write
  1270  00080A  D099               	goto	L12
  1271  00080C                     l6083:
  1272                           
  1273                           ;test.c: 174: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1274  00080C  EE20  F003         	lfsr	2,_Test+2
  1275  000810  CFDE F0C1          	movff	postinc2,??_test_process
  1276  000814  CFDD F0C2          	movff	postdec2,??_test_process+1
  1277  000818  0100               	movlb	0	; () banked
  1278  00081A  1FC1               	comf	??_test_process& (0+255),f,b
  1279  00081C  1FC2               	comf	(??_test_process+1)& (0+255),f,b
  1280  00081E  4BC1               	infsnz	??_test_process& (0+255),f,b
  1281  000820  2BC2               	incf	(??_test_process+1)& (0+255),f,b
  1282  000822  502D               	movf	_Cptms,w,c	;volatile
  1283  000824  0100               	movlb	0	; () banked
  1284  000826  27C1               	addwf	??_test_process& (0+255),f,b
  1285  000828  502E               	movf	_Cptms+1,w,c	;volatile
  1286  00082A  0100               	movlb	0	; () banked
  1287  00082C  23C2               	addwfc	(??_test_process+1)& (0+255),f,b
  1288  00082E  0E15               	movlw	21
  1289  000830  0100               	movlb	0	; () banked
  1290  000832  5DC1               	subwf	??_test_process& (0+255),w,b
  1291  000834  0E00               	movlw	0
  1292  000836  59C2               	subwfb	(??_test_process+1)& (0+255),w,b
  1293  000838  A0D8               	btfss	status,0,c
  1294  00083A  D1CF               	goto	l591
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;test.c: 175: {
  1298                           ;test.c: 176: if (++Test.Cpt > 31) {Test.Step = 0x08;}
  1299  00083C  EE20  F002         	lfsr	2,_Test+1
  1300  000840  2ADF               	incf	indf2,f,c
  1301  000842  0E1F               	movlw	31
  1302  000844  64DF               	cpfsgt	indf2,c
  1303  000846  D004               	goto	l6089
  1304                           
  1305                           ; BSR set to: 0
  1306  000848  0100               	movlb	0	; () banked
  1307  00084A  6FC1               	movwf	??_test_process& (0+255),b
  1308  00084C  0E08               	movlw	8
  1309  00084E  D003               	goto	L9
  1310  000850                     l6089:
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;test.c: 177: else {Test.Step = 0x04;}
  1314  000850  0100               	movlb	0	; () banked
  1315  000852  6FC1               	movwf	??_test_process& (0+255),b
  1316  000854  0E04               	movlw	4
  1317  000856                     L9:
  1318  000856  6E01               	movwf	_Test,c
  1319  000858  0100               	movlb	0	; () banked
  1320  00085A  51C1               	movf	??_test_process& (0+255),w,b
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;test.c: 178: check_comutest(0);
  1324                           
  1325                           ; BSR set to: 0
  1326  00085C  0E00               	movlw	0
  1327  00085E  EC7F  F014         	call	_check_comutest
  1328  000862  D06D               	goto	L12
  1329  000864                     l559:
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;test.c: 183: if ( (Bouton[Bp_IdTest].State == 0)
  1333                           ;test.c: 184: && ((((unsigned short) (Cptms - Test.Time) > 500) ? 1 : 0)))
  1334  000864  0100               	movlb	0	; () banked
  1335  000866  B385               	btfsc	(_Bouton+5)& (0+255),1,b
  1336  000868  D1B8               	goto	l591
  1337                           
  1338                           ; BSR set to: 0
  1339  00086A  EE20  F003         	lfsr	2,_Test+2
  1340  00086E  CFDE F0C1          	movff	postinc2,??_test_process
  1341  000872  CFDD F0C2          	movff	postdec2,??_test_process+1
  1342  000876  0100               	movlb	0	; () banked
  1343  000878  1FC1               	comf	??_test_process& (0+255),f,b
  1344  00087A  1FC2               	comf	(??_test_process+1)& (0+255),f,b
  1345  00087C  4BC1               	infsnz	??_test_process& (0+255),f,b
  1346  00087E  2BC2               	incf	(??_test_process+1)& (0+255),f,b
  1347  000880  502D               	movf	_Cptms,w,c	;volatile
  1348  000882  0100               	movlb	0	; () banked
  1349  000884  27C1               	addwf	??_test_process& (0+255),f,b
  1350  000886  502E               	movf	_Cptms+1,w,c	;volatile
  1351  000888  0100               	movlb	0	; () banked
  1352  00088A  23C2               	addwfc	(??_test_process+1)& (0+255),f,b
  1353  00088C  0EF5               	movlw	245
  1354  00088E  0100               	movlb	0	; () banked
  1355  000890  5DC1               	subwf	??_test_process& (0+255),w,b
  1356  000892  0E01               	movlw	1
  1357  000894  59C2               	subwfb	(??_test_process+1)& (0+255),w,b
  1358  000896  A0D8               	btfss	status,0,c
  1359  000898  D1A0               	goto	l591
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;test.c: 185: {
  1363                           ;test.c: 186: if (++Test.Cpt > 31) {Test.Step = 0x08;}
  1364  00089A  EE20  F002         	lfsr	2,_Test+1
  1365  00089E  2ADF               	incf	indf2,f,c
  1366  0008A0  0E1F               	movlw	31
  1367  0008A2  64DF               	cpfsgt	indf2,c
  1368  0008A4  D004               	goto	l6101
  1369                           
  1370                           ; BSR set to: 0
  1371  0008A6  0100               	movlb	0	; () banked
  1372  0008A8  6FC1               	movwf	??_test_process& (0+255),b
  1373  0008AA  0E08               	movlw	8
  1374  0008AC  D003               	goto	L11
  1375  0008AE                     l6101:
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;test.c: 187: else {Test.Step = 0x04;}
  1379  0008AE  0100               	movlb	0	; () banked
  1380  0008B0  6FC1               	movwf	??_test_process& (0+255),b
  1381  0008B2  0E04               	movlw	4
  1382  0008B4                     L11:
  1383  0008B4  6E01               	movwf	_Test,c
  1384  0008B6  0100               	movlb	0	; () banked
  1385  0008B8  51C1               	movf	??_test_process& (0+255),w,b
  1386                           
  1387                           ; BSR set to: 0
  1388                           ;test.c: 188: check_comutest(0);
  1389                           
  1390                           ; BSR set to: 0
  1391  0008BA  0E00               	movlw	0
  1392  0008BC  EC7F  F014         	call	_check_comutest
  1393  0008C0  D03E               	goto	L12
  1394  0008C2                     l6107:
  1395                           
  1396                           ;test.c: 193: if (Test.Cpt != 0)
  1397  0008C2  5002               	movf	_Test+1,w,c
  1398  0008C4  B4D8               	btfsc	status,2,c
  1399  0008C6  D006               	goto	l6111
  1400                           
  1401                           ;test.c: 194: {
  1402                           ;test.c: 195: ecran_print_num(Cf.Data[96]);
  1403  0008C8  0101               	movlb	1	; () banked
  1404  0008CA  0101               	movlb	1	; () banked
  1405  0008CC  5160               	movf	(_Cf+96)& (0+255),w,b	;volatile
  1406  0008CE  ECE8  F010         	call	_ecran_print_num
  1407                           
  1408                           ;test.c: 196: }
  1409  0008D2  D010               	goto	l565
  1410  0008D4                     l6111:
  1411                           
  1412                           ;test.c: 197: else
  1413                           ;test.c: 198: {
  1414                           ;test.c: 199: Ecran.Digit[2] = 0;
  1415  0008D4  0100               	movlb	0	; () banked
  1416  0008D6  6FC1               	movwf	??_test_process& (0+255),b
  1417  0008D8  0E00               	movlw	0
  1418  0008DA  0100               	movlb	0	; () banked
  1419  0008DC  0100               	movlb	0	; () banked
  1420  0008DE  6F9A               	movwf	(_Ecran+2)& (0+255),b
  1421  0008E0  0100               	movlb	0	; () banked
  1422  0008E2  51C1               	movf	??_test_process& (0+255),w,b
  1423                           
  1424                           ;test.c: 200: Ecran.Digit[3] = 0;
  1425  0008E4  0100               	movlb	0	; () banked
  1426  0008E6  6FC1               	movwf	??_test_process& (0+255),b
  1427  0008E8  0E00               	movlw	0
  1428  0008EA  0100               	movlb	0	; () banked
  1429  0008EC  0100               	movlb	0	; () banked
  1430  0008EE  6F9B               	movwf	(_Ecran+3)& (0+255),b
  1431  0008F0  0100               	movlb	0	; () banked
  1432  0008F2  51C1               	movf	??_test_process& (0+255),w,b
  1433  0008F4                     l565:
  1434                           
  1435                           ;test.c: 201: }
  1436                           ;test.c: 203: Ecran.Digit[0] = '-';
  1437  0008F4  0100               	movlb	0	; () banked
  1438  0008F6  6FC1               	movwf	??_test_process& (0+255),b
  1439  0008F8  0E2D               	movlw	45
  1440  0008FA  0100               	movlb	0	; () banked
  1441  0008FC  0100               	movlb	0	; () banked
  1442  0008FE  6F98               	movwf	_Ecran& (0+255),b
  1443  000900  0100               	movlb	0	; () banked
  1444  000902  51C1               	movf	??_test_process& (0+255),w,b
  1445                           
  1446                           ;test.c: 204: Ecran.Digit[1] = '-';
  1447  000904  0100               	movlb	0	; () banked
  1448  000906  6FC1               	movwf	??_test_process& (0+255),b
  1449  000908  0E2D               	movlw	45
  1450  00090A  0100               	movlb	0	; () banked
  1451  00090C  0100               	movlb	0	; () banked
  1452  00090E  6F99               	movwf	(_Ecran+1)& (0+255),b
  1453  000910  0100               	movlb	0	; () banked
  1454  000912  51C1               	movf	??_test_process& (0+255),w,b
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;test.c: 206: Ecran.Digits = Ecran.Digit;
  1458  000914  0100               	movlb	0	; () banked
  1459  000916  0E00               	movlw	high _Ecran
  1460  000918  0100               	movlb	0	; () banked
  1461  00091A  0100               	movlb	0	; () banked
  1462  00091C  6F9D               	movwf	(_Ecran+5)& (0+255),b
  1463  00091E  0100               	movlb	0	; () banked
  1464  000920  0E98               	movlw	low _Ecran
  1465  000922  0100               	movlb	0	; () banked
  1466  000924  0100               	movlb	0	; () banked
  1467  000926  6F9C               	movwf	(_Ecran+4)& (0+255),b
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;test.c: 207: Test.Step = 0x09;
  1471  000928  0100               	movlb	0	; () banked
  1472  00092A  6FC1               	movwf	??_test_process& (0+255),b
  1473  00092C  0E09               	movlw	9
  1474  00092E  D0F4               	goto	L13
  1475  000930                     l566:
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;test.c: 210: if (Bouton[Bp_IdTest].State == 0)
  1479  000930  0100               	movlb	0	; () banked
  1480  000932  B385               	btfsc	(_Bouton+5)& (0+255),1,b
  1481  000934  D152               	goto	l591
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;test.c: 211: {
  1485                           ;test.c: 212: Test.Step = 0x10;
  1486  000936  0100               	movlb	0	; () banked
  1487  000938  6FC1               	movwf	??_test_process& (0+255),b
  1488  00093A  0E10               	movlw	16
  1489  00093C  D71F               	goto	L20
  1490  00093E                     L12:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;test.c: 214: Test.Time = Cptms;
  1494  00093E  C02D  F003         	movff	_Cptms,_Test+2	;volatile
  1495  000942  C02E  F004         	movff	_Cptms+1,_Test+3	;volatile
  1496  000946  D149               	goto	l591
  1497  000948                     l6121:
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;test.c: 218: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1501  000948  EE20  F003         	lfsr	2,_Test+2
  1502  00094C  CFDE F0C1          	movff	postinc2,??_test_process
  1503  000950  CFDD F0C2          	movff	postdec2,??_test_process+1
  1504  000954  0100               	movlb	0	; () banked
  1505  000956  1FC1               	comf	??_test_process& (0+255),f,b
  1506  000958  1FC2               	comf	(??_test_process+1)& (0+255),f,b
  1507  00095A  4BC1               	infsnz	??_test_process& (0+255),f,b
  1508  00095C  2BC2               	incf	(??_test_process+1)& (0+255),f,b
  1509  00095E  502D               	movf	_Cptms,w,c	;volatile
  1510  000960  0100               	movlb	0	; () banked
  1511  000962  27C1               	addwf	??_test_process& (0+255),f,b
  1512  000964  502E               	movf	_Cptms+1,w,c	;volatile
  1513  000966  0100               	movlb	0	; () banked
  1514  000968  23C2               	addwfc	(??_test_process+1)& (0+255),f,b
  1515  00096A  0E15               	movlw	21
  1516  00096C  0100               	movlb	0	; () banked
  1517  00096E  5DC1               	subwf	??_test_process& (0+255),w,b
  1518  000970  0E00               	movlw	0
  1519  000972  59C2               	subwfb	(??_test_process+1)& (0+255),w,b
  1520  000974  A0D8               	btfss	status,0,c
  1521  000976  D131               	goto	l591
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;test.c: 219: {
  1525                           ;test.c: 220: register_write((unsigned char) (Test.Cpt + 1));
  1526  000978  2802               	incf	_Test+1,w,c
  1527  00097A  ECAE  F015         	call	_register_write
  1528                           
  1529                           ;test.c: 221: Test.Step = 0x0B;
  1530  00097E  0100               	movlb	0	; () banked
  1531  000980  6FC1               	movwf	??_test_process& (0+255),b
  1532  000982  0E0B               	movlw	11
  1533  000984  D6FB               	goto	L20
  1534  000986                     l6129:
  1535                           
  1536                           ; BSR set to: 0
  1537                           ;test.c: 226: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1538  000986  EE20  F003         	lfsr	2,_Test+2
  1539  00098A  CFDE F0C1          	movff	postinc2,??_test_process
  1540  00098E  CFDD F0C2          	movff	postdec2,??_test_process+1
  1541  000992  0100               	movlb	0	; () banked
  1542  000994  1FC1               	comf	??_test_process& (0+255),f,b
  1543  000996  1FC2               	comf	(??_test_process+1)& (0+255),f,b
  1544  000998  4BC1               	infsnz	??_test_process& (0+255),f,b
  1545  00099A  2BC2               	incf	(??_test_process+1)& (0+255),f,b
  1546  00099C  502D               	movf	_Cptms,w,c	;volatile
  1547  00099E  0100               	movlb	0	; () banked
  1548  0009A0  27C1               	addwf	??_test_process& (0+255),f,b
  1549  0009A2  502E               	movf	_Cptms+1,w,c	;volatile
  1550  0009A4  0100               	movlb	0	; () banked
  1551  0009A6  23C2               	addwfc	(??_test_process+1)& (0+255),f,b
  1552  0009A8  0E15               	movlw	21
  1553  0009AA  0100               	movlb	0	; () banked
  1554  0009AC  5DC1               	subwf	??_test_process& (0+255),w,b
  1555  0009AE  0E00               	movlw	0
  1556  0009B0  59C2               	subwfb	(??_test_process+1)& (0+255),w,b
  1557  0009B2  A0D8               	btfss	status,0,c
  1558  0009B4  D112               	goto	l591
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;test.c: 227: {
  1562                           ;test.c: 228: temp = check_UInfla();
  1563  0009B6  EC96  F00E         	call	_check_UInfla	;wreg free
  1564  0009BA  0100               	movlb	0	; () banked
  1565  0009BC  C0B9  F0C4         	movff	?_check_UInfla,test_process@temp
  1566  0009C0  0100               	movlb	0	; () banked
  1567  0009C2  C0BA  F0C5         	movff	?_check_UInfla+1,test_process@temp+1
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;test.c: 231: if (temp > 85) {Test.Step = 0x0D;}
  1571  0009C6  0E56               	movlw	86
  1572  0009C8  0100               	movlb	0	; () banked
  1573  0009CA  0100               	movlb	0	; () banked
  1574  0009CC  5DC4               	subwf	test_process@temp& (0+255),w,b
  1575  0009CE  0E00               	movlw	0
  1576  0009D0  0100               	movlb	0	; () banked
  1577  0009D2  59C5               	subwfb	(test_process@temp+1)& (0+255),w,b
  1578  0009D4  A0D8               	btfss	status,0,c
  1579  0009D6  D004               	goto	l6137
  1580                           
  1581                           ; BSR set to: 0
  1582  0009D8  0100               	movlb	0	; () banked
  1583  0009DA  6FC1               	movwf	??_test_process& (0+255),b
  1584  0009DC  0E0D               	movlw	13
  1585  0009DE  D003               	goto	L15
  1586  0009E0                     l6137:
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;test.c: 232: else {Test.Step = 0x0C;}
  1590  0009E0  0100               	movlb	0	; () banked
  1591  0009E2  6FC1               	movwf	??_test_process& (0+255),b
  1592  0009E4  0E0C               	movlw	12
  1593  0009E6                     L15:
  1594  0009E6  6E01               	movwf	_Test,c
  1595  0009E8  0100               	movlb	0	; () banked
  1596  0009EA  51C1               	movf	??_test_process& (0+255),w,b
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;test.c: 235: ecran_print_num((unsigned char) (Test.Cpt + 1));
  1600                           
  1601                           ; BSR set to: 0
  1602  0009EC  2802               	incf	_Test+1,w,c
  1603  0009EE  ECE8  F010         	call	_ecran_print_num
  1604                           
  1605                           ;test.c: 236: register_write(0);
  1606  0009F2  0E00               	movlw	0
  1607  0009F4  ECAE  F015         	call	_register_write
  1608  0009F8  D7A2               	goto	L12
  1609  0009FA                     l6145:
  1610                           
  1611                           ;test.c: 242: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1612  0009FA  EE20  F003         	lfsr	2,_Test+2
  1613  0009FE  CFDE F0C1          	movff	postinc2,??_test_process
  1614  000A02  CFDD F0C2          	movff	postdec2,??_test_process+1
  1615  000A06  0100               	movlb	0	; () banked
  1616  000A08  1FC1               	comf	??_test_process& (0+255),f,b
  1617  000A0A  1FC2               	comf	(??_test_process+1)& (0+255),f,b
  1618  000A0C  4BC1               	infsnz	??_test_process& (0+255),f,b
  1619  000A0E  2BC2               	incf	(??_test_process+1)& (0+255),f,b
  1620  000A10  502D               	movf	_Cptms,w,c	;volatile
  1621  000A12  0100               	movlb	0	; () banked
  1622  000A14  27C1               	addwf	??_test_process& (0+255),f,b
  1623  000A16  502E               	movf	_Cptms+1,w,c	;volatile
  1624  000A18  0100               	movlb	0	; () banked
  1625  000A1A  23C2               	addwfc	(??_test_process+1)& (0+255),f,b
  1626  000A1C  0E15               	movlw	21
  1627  000A1E  0100               	movlb	0	; () banked
  1628  000A20  5DC1               	subwf	??_test_process& (0+255),w,b
  1629  000A22  0E00               	movlw	0
  1630  000A24  59C2               	subwfb	(??_test_process+1)& (0+255),w,b
  1631  000A26  A0D8               	btfss	status,0,c
  1632  000A28  D0D8               	goto	l591
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;test.c: 243: {
  1636                           ;test.c: 244: if (++Test.Cpt > 31) {Test.Step = 0x0E;}
  1637  000A2A  EE20  F002         	lfsr	2,_Test+1
  1638  000A2E  2ADF               	incf	indf2,f,c
  1639  000A30  0E1F               	movlw	31
  1640  000A32  64DF               	cpfsgt	indf2,c
  1641  000A34  D004               	goto	l6151
  1642                           
  1643                           ; BSR set to: 0
  1644  000A36  0100               	movlb	0	; () banked
  1645  000A38  6FC1               	movwf	??_test_process& (0+255),b
  1646  000A3A  0E0E               	movlw	14
  1647  000A3C  D003               	goto	L16
  1648  000A3E                     l6151:
  1649                           
  1650                           ; BSR set to: 0
  1651                           ;test.c: 245: else {Test.Step = 0x0A;}
  1652  000A3E  0100               	movlb	0	; () banked
  1653  000A40  6FC1               	movwf	??_test_process& (0+255),b
  1654  000A42  0E0A               	movlw	10
  1655  000A44                     L16:
  1656  000A44  6E01               	movwf	_Test,c
  1657  000A46  0100               	movlb	0	; () banked
  1658  000A48  51C1               	movf	??_test_process& (0+255),w,b
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;test.c: 246: check_comutest(0);
  1662                           
  1663                           ; BSR set to: 0
  1664  000A4A  0E00               	movlw	0
  1665  000A4C  EC7F  F014         	call	_check_comutest
  1666  000A50  D776               	goto	L12
  1667  000A52                     l578:
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;test.c: 251: if ( (Bouton[Bp_IdTest].State == 0)
  1671                           ;test.c: 252: && ((((unsigned short) (Cptms - Test.Time) > 500) ? 1 : 0)))
  1672  000A52  0100               	movlb	0	; () banked
  1673  000A54  B385               	btfsc	(_Bouton+5)& (0+255),1,b
  1674  000A56  D0C1               	goto	l591
  1675                           
  1676                           ; BSR set to: 0
  1677  000A58  EE20  F003         	lfsr	2,_Test+2
  1678  000A5C  CFDE F0C1          	movff	postinc2,??_test_process
  1679  000A60  CFDD F0C2          	movff	postdec2,??_test_process+1
  1680  000A64  0100               	movlb	0	; () banked
  1681  000A66  1FC1               	comf	??_test_process& (0+255),f,b
  1682  000A68  1FC2               	comf	(??_test_process+1)& (0+255),f,b
  1683  000A6A  4BC1               	infsnz	??_test_process& (0+255),f,b
  1684  000A6C  2BC2               	incf	(??_test_process+1)& (0+255),f,b
  1685  000A6E  502D               	movf	_Cptms,w,c	;volatile
  1686  000A70  0100               	movlb	0	; () banked
  1687  000A72  27C1               	addwf	??_test_process& (0+255),f,b
  1688  000A74  502E               	movf	_Cptms+1,w,c	;volatile
  1689  000A76  0100               	movlb	0	; () banked
  1690  000A78  23C2               	addwfc	(??_test_process+1)& (0+255),f,b
  1691  000A7A  0EF5               	movlw	245
  1692  000A7C  0100               	movlb	0	; () banked
  1693  000A7E  5DC1               	subwf	??_test_process& (0+255),w,b
  1694  000A80  0E01               	movlw	1
  1695  000A82  59C2               	subwfb	(??_test_process+1)& (0+255),w,b
  1696  000A84  A0D8               	btfss	status,0,c
  1697  000A86  D0A9               	goto	l591
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;test.c: 253: {
  1701                           ;test.c: 254: if (++Test.Cpt > 31) {Test.Step = 0x0E;}
  1702  000A88  EE20  F002         	lfsr	2,_Test+1
  1703  000A8C  2ADF               	incf	indf2,f,c
  1704  000A8E  0E1F               	movlw	31
  1705  000A90  64DF               	cpfsgt	indf2,c
  1706  000A92  D004               	goto	l6163
  1707                           
  1708                           ; BSR set to: 0
  1709  000A94  0100               	movlb	0	; () banked
  1710  000A96  6FC1               	movwf	??_test_process& (0+255),b
  1711  000A98  0E0E               	movlw	14
  1712  000A9A  D003               	goto	L17
  1713  000A9C                     l6163:
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;test.c: 255: else {Test.Step = 0x0A;}
  1717  000A9C  0100               	movlb	0	; () banked
  1718  000A9E  6FC1               	movwf	??_test_process& (0+255),b
  1719  000AA0  0E0A               	movlw	10
  1720  000AA2                     L17:
  1721  000AA2  6E01               	movwf	_Test,c
  1722  000AA4  0100               	movlb	0	; () banked
  1723  000AA6  51C1               	movf	??_test_process& (0+255),w,b
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;test.c: 256: check_comutest(0);
  1727                           
  1728                           ; BSR set to: 0
  1729  000AA8  0E00               	movlw	0
  1730  000AAA  EC7F  F014         	call	_check_comutest
  1731  000AAE  D747               	goto	L12
  1732  000AB0                     l6169:
  1733                           
  1734                           ;test.c: 261: if (Test.Cpt != 0)
  1735  000AB0  5002               	movf	_Test+1,w,c
  1736  000AB2  B4D8               	btfsc	status,2,c
  1737  000AB4  D004               	goto	l6173
  1738                           
  1739                           ;test.c: 262: {
  1740                           ;test.c: 263: ecran_print_num(Test.Cpt);
  1741  000AB6  5002               	movf	_Test+1,w,c
  1742  000AB8  ECE8  F010         	call	_ecran_print_num
  1743                           
  1744                           ;test.c: 264: }
  1745  000ABC  D010               	goto	l584
  1746  000ABE                     l6173:
  1747                           
  1748                           ;test.c: 265: else
  1749                           ;test.c: 266: {
  1750                           ;test.c: 267: Ecran.Digit[2] = 0;
  1751  000ABE  0100               	movlb	0	; () banked
  1752  000AC0  6FC1               	movwf	??_test_process& (0+255),b
  1753  000AC2  0E00               	movlw	0
  1754  000AC4  0100               	movlb	0	; () banked
  1755  000AC6  0100               	movlb	0	; () banked
  1756  000AC8  6F9A               	movwf	(_Ecran+2)& (0+255),b
  1757  000ACA  0100               	movlb	0	; () banked
  1758  000ACC  51C1               	movf	??_test_process& (0+255),w,b
  1759                           
  1760                           ;test.c: 268: Ecran.Digit[3] = 0;
  1761  000ACE  0100               	movlb	0	; () banked
  1762  000AD0  6FC1               	movwf	??_test_process& (0+255),b
  1763  000AD2  0E00               	movlw	0
  1764  000AD4  0100               	movlb	0	; () banked
  1765  000AD6  0100               	movlb	0	; () banked
  1766  000AD8  6F9B               	movwf	(_Ecran+3)& (0+255),b
  1767  000ADA  0100               	movlb	0	; () banked
  1768  000ADC  51C1               	movf	??_test_process& (0+255),w,b
  1769  000ADE                     l584:
  1770                           
  1771                           ;test.c: 269: }
  1772                           ;test.c: 271: Ecran.Digit[0] = '-';
  1773  000ADE  0100               	movlb	0	; () banked
  1774  000AE0  6FC1               	movwf	??_test_process& (0+255),b
  1775  000AE2  0E2D               	movlw	45
  1776  000AE4  0100               	movlb	0	; () banked
  1777  000AE6  0100               	movlb	0	; () banked
  1778  000AE8  6F98               	movwf	_Ecran& (0+255),b
  1779  000AEA  0100               	movlb	0	; () banked
  1780  000AEC  51C1               	movf	??_test_process& (0+255),w,b
  1781                           
  1782                           ;test.c: 272: Ecran.Digit[1] = '-';
  1783  000AEE  0100               	movlb	0	; () banked
  1784  000AF0  6FC1               	movwf	??_test_process& (0+255),b
  1785  000AF2  0E2D               	movlw	45
  1786  000AF4  0100               	movlb	0	; () banked
  1787  000AF6  0100               	movlb	0	; () banked
  1788  000AF8  6F99               	movwf	(_Ecran+1)& (0+255),b
  1789  000AFA  0100               	movlb	0	; () banked
  1790  000AFC  51C1               	movf	??_test_process& (0+255),w,b
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;test.c: 274: Ecran.Digits = Ecran.Digit;
  1794  000AFE  0100               	movlb	0	; () banked
  1795  000B00  0E00               	movlw	high _Ecran
  1796  000B02  0100               	movlb	0	; () banked
  1797  000B04  0100               	movlb	0	; () banked
  1798  000B06  6F9D               	movwf	(_Ecran+5)& (0+255),b
  1799  000B08  0100               	movlb	0	; () banked
  1800  000B0A  0E98               	movlw	low _Ecran
  1801  000B0C  0100               	movlb	0	; () banked
  1802  000B0E  0100               	movlb	0	; () banked
  1803  000B10  6F9C               	movwf	(_Ecran+4)& (0+255),b
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;test.c: 275: Test.Step = 0x0F;
  1807  000B12  0100               	movlb	0	; () banked
  1808  000B14  6FC1               	movwf	??_test_process& (0+255),b
  1809  000B16  0E0F               	movlw	15
  1810  000B18                     L13:
  1811  000B18  6E01               	movwf	_Test,c
  1812  000B1A  D028               	goto	L18
  1813  000B1C                     l6183:
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;test.c: 286: if ((((unsigned short) (Cptms - Test.Time) > 1000) ? 1 : 0))
  1817  000B1C  EE20  F003         	lfsr	2,_Test+2
  1818  000B20  CFDE F0C1          	movff	postinc2,??_test_process
  1819  000B24  CFDD F0C2          	movff	postdec2,??_test_process+1
  1820  000B28  0100               	movlb	0	; () banked
  1821  000B2A  1FC1               	comf	??_test_process& (0+255),f,b
  1822  000B2C  1FC2               	comf	(??_test_process+1)& (0+255),f,b
  1823  000B2E  4BC1               	infsnz	??_test_process& (0+255),f,b
  1824  000B30  2BC2               	incf	(??_test_process+1)& (0+255),f,b
  1825  000B32  502D               	movf	_Cptms,w,c	;volatile
  1826  000B34  0100               	movlb	0	; () banked
  1827  000B36  27C1               	addwf	??_test_process& (0+255),f,b
  1828  000B38  502E               	movf	_Cptms+1,w,c	;volatile
  1829  000B3A  0100               	movlb	0	; () banked
  1830  000B3C  23C2               	addwfc	(??_test_process+1)& (0+255),f,b
  1831  000B3E  0EE9               	movlw	233
  1832  000B40  0100               	movlb	0	; () banked
  1833  000B42  5DC1               	subwf	??_test_process& (0+255),w,b
  1834  000B44  0E03               	movlw	3
  1835  000B46  59C2               	subwfb	(??_test_process+1)& (0+255),w,b
  1836  000B48  A0D8               	btfss	status,0,c
  1837  000B4A  D047               	goto	l591
  1838                           
  1839                           ; BSR set to: 0
  1840                           ;test.c: 287: {
  1841                           ;test.c: 288: Test.Step = 0x11;
  1842  000B4C  0100               	movlb	0	; () banked
  1843  000B4E  6FC1               	movwf	??_test_process& (0+255),b
  1844  000B50  0E11               	movlw	17
  1845  000B52  6E01               	movwf	_Test,c
  1846  000B54  0100               	movlb	0	; () banked
  1847  000B56  51C1               	movf	??_test_process& (0+255),w,b
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;test.c: 290: ecran_wait();
  1851  000B58  EC92  F016         	call	_ecran_wait	;wreg free
  1852  000B5C  D03E               	goto	l591
  1853  000B5E                     l589:
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;test.c: 294: if (Bouton[Bp_IdTest].State == 1)
  1857  000B5E  0100               	movlb	0	; () banked
  1858  000B60  A385               	btfss	(_Bouton+5)& (0+255),1,b
  1859  000B62  D03B               	goto	l591
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;test.c: 295: {
  1863                           ;test.c: 296: Micro.Phase = 0x00;
  1864  000B64  0100               	movlb	0	; () banked
  1865  000B66  6FC1               	movwf	??_test_process& (0+255),b
  1866  000B68  0E00               	movlw	0
  1867  000B6A  6E5D               	movwf	_Micro+2,c
  1868  000B6C                     L18:
  1869  000B6C  0100               	movlb	0	; () banked
  1870  000B6E  51C1               	movf	??_test_process& (0+255),w,b
  1871  000B70  D034               	goto	l591
  1872  000B72                     l6193:
  1873                           
  1874                           ; BSR set to: 0
  1875  000B72  5001               	movf	_Test,w,c
  1876                           
  1877                           ; Switch size 1, requested type "space"
  1878                           ; Number of cases is 17, Range of values is 1 to 17
  1879                           ; switch strategies available:
  1880                           ; Name         Instructions Cycles
  1881                           ; simple_byte           52    27 (average)
  1882                           ;	Chosen strategy is simple_byte
  1883  000B74  0A01               	xorlw	1	; case 1
  1884  000B76  B4D8               	btfsc	status,2,c
  1885  000B78  D558               	goto	l539
  1886  000B7A  0A03               	xorlw	3	; case 2
  1887  000B7C  B4D8               	btfsc	status,2,c
  1888  000B7E  D55C               	goto	l6023
  1889  000B80  0A01               	xorlw	1	; case 3
  1890  000B82  B4D8               	btfsc	status,2,c
  1891  000B84  D5AD               	goto	l543
  1892  000B86  0A07               	xorlw	7	; case 4
  1893  000B88  B4D8               	btfsc	status,2,c
  1894  000B8A  D5BF               	goto	l6055
  1895  000B8C  0A01               	xorlw	1	; case 5
  1896  000B8E  B4D8               	btfsc	status,2,c
  1897  000B90  D5F9               	goto	l6067
  1898  000B92  0A03               	xorlw	3	; case 6
  1899  000B94  B4D8               	btfsc	status,2,c
  1900  000B96  D63A               	goto	l6083
  1901  000B98  0A01               	xorlw	1	; case 7
  1902  000B9A  B4D8               	btfsc	status,2,c
  1903  000B9C  D663               	goto	l559
  1904  000B9E  0A0F               	xorlw	15	; case 8
  1905  000BA0  B4D8               	btfsc	status,2,c
  1906  000BA2  D68F               	goto	l6107
  1907  000BA4  0A01               	xorlw	1	; case 9
  1908  000BA6  B4D8               	btfsc	status,2,c
  1909  000BA8  D6C3               	goto	l566
  1910  000BAA  0A03               	xorlw	3	; case 10
  1911  000BAC  B4D8               	btfsc	status,2,c
  1912  000BAE  D6CC               	goto	l6121
  1913  000BB0  0A01               	xorlw	1	; case 11
  1914  000BB2  B4D8               	btfsc	status,2,c
  1915  000BB4  D6E8               	goto	l6129
  1916  000BB6  0A07               	xorlw	7	; case 12
  1917  000BB8  B4D8               	btfsc	status,2,c
  1918  000BBA  D71F               	goto	l6145
  1919  000BBC  0A01               	xorlw	1	; case 13
  1920  000BBE  B4D8               	btfsc	status,2,c
  1921  000BC0  D748               	goto	l578
  1922  000BC2  0A03               	xorlw	3	; case 14
  1923  000BC4  B4D8               	btfsc	status,2,c
  1924  000BC6  D774               	goto	l6169
  1925  000BC8  0A01               	xorlw	1	; case 15
  1926  000BCA  B4D8               	btfsc	status,2,c
  1927  000BCC  D6B1               	goto	l566
  1928  000BCE  0A1F               	xorlw	31	; case 16
  1929  000BD0  B4D8               	btfsc	status,2,c
  1930  000BD2  D7A4               	goto	l6183
  1931  000BD4  0A01               	xorlw	1	; case 17
  1932  000BD6  B4D8               	btfsc	status,2,c
  1933  000BD8  D7C2               	goto	l589
  1934  000BDA                     l591:
  1935  000BDA  0012               	return	
  1936  000BDC  FFFF               	dw	65535	; errata NOP
  1937  000BDE                     __end_of_test_process:
  1938                           	opt stack 0
  1939                           tblptru	equ	0xFF8
  1940                           tblptrh	equ	0xFF7
  1941                           tblptrl	equ	0xFF6
  1942                           tablat	equ	0xFF5
  1943                           prodh	equ	0xFF4
  1944                           prodl	equ	0xFF3
  1945                           postinc0	equ	0xFEE
  1946                           wreg	equ	0xFE8
  1947                           postdec1	equ	0xFE5
  1948                           fsr1l	equ	0xFE1
  1949                           indf2	equ	0xFDF
  1950                           postinc2	equ	0xFDE
  1951                           postdec2	equ	0xFDD
  1952                           fsr2h	equ	0xFDA
  1953                           fsr2l	equ	0xFD9
  1954                           status	equ	0xFD8
  1955                           
  1956 ;; *************** function _check_UInfla *****************
  1957 ;; Defined at:
  1958 ;;		line 80 in file "test.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  temp            2   23[BANK0 ] unsigned short 
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  2   17[BANK0 ] unsigned short 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1972 ;;      Params:         0       2       0       0       0       0       0
  1973 ;;      Locals:         0       2       0       0       0       0       0
  1974 ;;      Temps:          0       4       0       0       0       0       0
  1975 ;;      Totals:         0       8       0       0       0       0       0
  1976 ;;Total ram usage:        8 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    4
  1979 ;; This function calls:
  1980 ;;		___ftmul
  1981 ;;		___fttol
  1982 ;;		___lwtoft
  1983 ;;		_ana_read
  1984 ;; This function is called by:
  1985 ;;		_test_process
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text2
  1990  001D2C                     __ptext2:
  1991                           	opt stack 0
  1992  001D2C                     _check_UInfla:
  1993                           	opt stack 25
  1994                           
  1995                           ;incstack = 0
  1996  001D2C  FFFF               	dw	65535
  1997                           
  1998                           ;test.c: 82: unsigned short temp = 0;
  1999  001D2E  0E00               	movlw	0
  2000  001D30  0100               	movlb	0	; () banked
  2001  001D32  0100               	movlb	0	; () banked
  2002  001D34  6FC0               	movwf	(check_UInfla@temp+1)& (0+255),b
  2003  001D36  0E00               	movlw	0
  2004  001D38  0100               	movlb	0	; () banked
  2005  001D3A  6FBF               	movwf	check_UInfla@temp& (0+255),b
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;test.c: 84: if (PORTCbits.RC5 == 1)
  2009  001D3C  AA82               	btfss	3970,5,c	;volatile
  2010  001D3E  D002               	goto	l5725
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;test.c: 85: {
  2014                           ;test.c: 86: PORTBbits.RB1 = 1;
  2015  001D40  8281               	bsf	3969,1,c	;volatile
  2016                           
  2017                           ;test.c: 87: PORTAbits.RA5 = 1;
  2018  001D42  8A80               	bsf	3968,5,c	;volatile
  2019  001D44                     l5725:
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;test.c: 88: }
  2023                           ;test.c: 90: temp = ana_read(1);
  2024  001D44  0E01               	movlw	1
  2025  001D46  EC32  F014         	call	_ana_read
  2026  001D4A  C055  F0BF         	movff	?_ana_read,check_UInfla@temp
  2027  001D4E  C056  F0C0         	movff	?_ana_read+1,check_UInfla@temp+1
  2028                           
  2029                           ;test.c: 92: PORTBbits.RB1 = 0;
  2030  001D52  9281               	bcf	3969,1,c	;volatile
  2031                           
  2032                           ;test.c: 93: PORTAbits.RA5 = 0;
  2033  001D54  9A80               	bcf	3968,5,c	;volatile
  2034                           
  2035                           ;test.c: 95: Test.U_Infla = (float) temp * 0.0049f;
  2036  001D56  C0BF  F057         	movff	check_UInfla@temp,___lwtoft@c
  2037  001D5A  C0C0  F058         	movff	check_UInfla@temp+1,___lwtoft@c+1
  2038  001D5E  EC92  F015         	call	___lwtoft	;wreg free
  2039  001D62  C057  F0AA         	movff	?___lwtoft,___ftmul@f1
  2040  001D66  C058  F0AB         	movff	?___lwtoft+1,___ftmul@f1+1
  2041  001D6A  C059  F0AC         	movff	?___lwtoft+2,___ftmul@f1+2
  2042  001D6E  0E90               	movlw	144
  2043  001D70  0100               	movlb	0	; () banked
  2044  001D72  0100               	movlb	0	; () banked
  2045  001D74  6FAD               	movwf	___ftmul@f2& (0+255),b
  2046  001D76  0EA0               	movlw	160
  2047  001D78  0100               	movlb	0	; () banked
  2048  001D7A  0100               	movlb	0	; () banked
  2049  001D7C  6FAE               	movwf	(___ftmul@f2+1)& (0+255),b
  2050  001D7E  0E3B               	movlw	59
  2051  001D80  0100               	movlb	0	; () banked
  2052  001D82  0100               	movlb	0	; () banked
  2053  001D84  6FAF               	movwf	(___ftmul@f2+2)& (0+255),b
  2054  001D86  EC33  F009         	call	___ftmul	;wreg free
  2055  001D8A  C0AA  F008         	movff	?___ftmul,_Test+7
  2056  001D8E  C0AB  F009         	movff	?___ftmul+1,_Test+8
  2057  001D92  C0AC  F00A         	movff	?___ftmul+2,_Test+9
  2058                           
  2059                           ;test.c: 96: Test.U_Infla = Test.U_Infla * 11.62f;
  2060  001D96  C008  F0AA         	movff	_Test+7,___ftmul@f1
  2061  001D9A  C009  F0AB         	movff	_Test+8,___ftmul@f1+1
  2062  001D9E  C00A  F0AC         	movff	_Test+9,___ftmul@f1+2
  2063  001DA2  0EEC               	movlw	236
  2064  001DA4  0100               	movlb	0	; () banked
  2065  001DA6  0100               	movlb	0	; () banked
  2066  001DA8  6FAD               	movwf	___ftmul@f2& (0+255),b
  2067  001DAA  0E39               	movlw	57
  2068  001DAC  0100               	movlb	0	; () banked
  2069  001DAE  0100               	movlb	0	; () banked
  2070  001DB0  6FAE               	movwf	(___ftmul@f2+1)& (0+255),b
  2071  001DB2  0E41               	movlw	65
  2072  001DB4  0100               	movlb	0	; () banked
  2073  001DB6  0100               	movlb	0	; () banked
  2074  001DB8  6FAF               	movwf	(___ftmul@f2+2)& (0+255),b
  2075  001DBA  EC33  F009         	call	___ftmul	;wreg free
  2076  001DBE  C0AA  F008         	movff	?___ftmul,_Test+7
  2077  001DC2  C0AB  F009         	movff	?___ftmul+1,_Test+8
  2078  001DC6  C0AC  F00A         	movff	?___ftmul+2,_Test+9
  2079                           
  2080                           ;test.c: 97: Test.U_Infla = Test.U_Infla * 100.0f;
  2081  001DCA  C008  F0AA         	movff	_Test+7,___ftmul@f1
  2082  001DCE  C009  F0AB         	movff	_Test+8,___ftmul@f1+1
  2083  001DD2  C00A  F0AC         	movff	_Test+9,___ftmul@f1+2
  2084  001DD6  0E00               	movlw	0
  2085  001DD8  0100               	movlb	0	; () banked
  2086  001DDA  0100               	movlb	0	; () banked
  2087  001DDC  6FAD               	movwf	___ftmul@f2& (0+255),b
  2088  001DDE  0EC8               	movlw	200
  2089  001DE0  0100               	movlb	0	; () banked
  2090  001DE2  0100               	movlb	0	; () banked
  2091  001DE4  6FAE               	movwf	(___ftmul@f2+1)& (0+255),b
  2092  001DE6  0E42               	movlw	66
  2093  001DE8  0100               	movlb	0	; () banked
  2094  001DEA  0100               	movlb	0	; () banked
  2095  001DEC  6FAF               	movwf	(___ftmul@f2+2)& (0+255),b
  2096  001DEE  EC33  F009         	call	___ftmul	;wreg free
  2097  001DF2  C0AA  F008         	movff	?___ftmul,_Test+7
  2098  001DF6  C0AB  F009         	movff	?___ftmul+1,_Test+8
  2099  001DFA  C0AC  F00A         	movff	?___ftmul+2,_Test+9
  2100                           
  2101                           ;test.c: 99: return (unsigned short) Test.U_Infla;
  2102  001DFE  C008  F04F         	movff	_Test+7,___fttol@f1
  2103  001E02  C009  F050         	movff	_Test+8,___fttol@f1+1
  2104  001E06  C00A  F051         	movff	_Test+9,___fttol@f1+2
  2105  001E0A  EC55  F00C         	call	___fttol	;wreg free
  2106  001E0E  C04F  F0BB         	movff	?___fttol,??_check_UInfla
  2107  001E12  C050  F0BC         	movff	?___fttol+1,??_check_UInfla+1
  2108  001E16  C051  F0BD         	movff	?___fttol+2,??_check_UInfla+2
  2109  001E1A  C052  F0BE         	movff	?___fttol+3,??_check_UInfla+3
  2110  001E1E  C0BB  F0B9         	movff	??_check_UInfla,?_check_UInfla
  2111  001E22  C0BC  F0BA         	movff	??_check_UInfla+1,?_check_UInfla+1
  2112  001E26  0012               	return	
  2113  001E28  FFFF               	dw	65535	; errata NOP
  2114  001E2A                     __end_of_check_UInfla:
  2115                           	opt stack 0
  2116                           tblptru	equ	0xFF8
  2117                           tblptrh	equ	0xFF7
  2118                           tblptrl	equ	0xFF6
  2119                           tablat	equ	0xFF5
  2120                           prodh	equ	0xFF4
  2121                           prodl	equ	0xFF3
  2122                           postinc0	equ	0xFEE
  2123                           wreg	equ	0xFE8
  2124                           postdec1	equ	0xFE5
  2125                           fsr1l	equ	0xFE1
  2126                           indf2	equ	0xFDF
  2127                           postinc2	equ	0xFDE
  2128                           postdec2	equ	0xFDD
  2129                           fsr2h	equ	0xFDA
  2130                           fsr2l	equ	0xFD9
  2131                           status	equ	0xFD8
  2132                           
  2133 ;; *************** function _check_UAlim *****************
  2134 ;; Defined at:
  2135 ;;		line 64 in file "test.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  temp            2   23[BANK0 ] unsigned short 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  2   17[BANK0 ] unsigned short 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0, cstack
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2149 ;;      Params:         0       2       0       0       0       0       0
  2150 ;;      Locals:         0       2       0       0       0       0       0
  2151 ;;      Temps:          0       4       0       0       0       0       0
  2152 ;;      Totals:         0       8       0       0       0       0       0
  2153 ;;Total ram usage:        8 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    4
  2156 ;; This function calls:
  2157 ;;		___ftmul
  2158 ;;		___fttol
  2159 ;;		___lwtoft
  2160 ;;		_ana_read
  2161 ;; This function is called by:
  2162 ;;		_test_process
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text3
  2167  001F24                     __ptext3:
  2168                           	opt stack 0
  2169  001F24                     _check_UAlim:
  2170                           	opt stack 25
  2171                           
  2172                           ;incstack = 0
  2173  001F24  FFFF               	dw	65535
  2174                           
  2175                           ;test.c: 66: unsigned short temp = 0;
  2176  001F26  0E00               	movlw	0
  2177  001F28  0100               	movlb	0	; () banked
  2178  001F2A  0100               	movlb	0	; () banked
  2179  001F2C  6FC0               	movwf	(check_UAlim@temp+1)& (0+255),b
  2180  001F2E  0E00               	movlw	0
  2181  001F30  0100               	movlb	0	; () banked
  2182  001F32  6FBF               	movwf	check_UAlim@temp& (0+255),b
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;test.c: 68: PORTBbits.RB1 = 0;
  2186  001F34  9281               	bcf	3969,1,c	;volatile
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;test.c: 69: PORTAbits.RA5 = 0;
  2190  001F36  9A80               	bcf	3968,5,c	;volatile
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;test.c: 71: temp = ana_read(0);
  2194  001F38  0E00               	movlw	0
  2195  001F3A  EC32  F014         	call	_ana_read
  2196  001F3E  C055  F0BF         	movff	?_ana_read,check_UAlim@temp
  2197  001F42  C056  F0C0         	movff	?_ana_read+1,check_UAlim@temp+1
  2198                           
  2199                           ;test.c: 73: Test.U_Alim = (float) temp * 0.0049f;
  2200  001F46  C0BF  F057         	movff	check_UAlim@temp,___lwtoft@c
  2201  001F4A  C0C0  F058         	movff	check_UAlim@temp+1,___lwtoft@c+1
  2202  001F4E  EC92  F015         	call	___lwtoft	;wreg free
  2203  001F52  C057  F0AA         	movff	?___lwtoft,___ftmul@f1
  2204  001F56  C058  F0AB         	movff	?___lwtoft+1,___ftmul@f1+1
  2205  001F5A  C059  F0AC         	movff	?___lwtoft+2,___ftmul@f1+2
  2206  001F5E  0E90               	movlw	144
  2207  001F60  0100               	movlb	0	; () banked
  2208  001F62  0100               	movlb	0	; () banked
  2209  001F64  6FAD               	movwf	___ftmul@f2& (0+255),b
  2210  001F66  0EA0               	movlw	160
  2211  001F68  0100               	movlb	0	; () banked
  2212  001F6A  0100               	movlb	0	; () banked
  2213  001F6C  6FAE               	movwf	(___ftmul@f2+1)& (0+255),b
  2214  001F6E  0E3B               	movlw	59
  2215  001F70  0100               	movlb	0	; () banked
  2216  001F72  0100               	movlb	0	; () banked
  2217  001F74  6FAF               	movwf	(___ftmul@f2+2)& (0+255),b
  2218  001F76  EC33  F009         	call	___ftmul	;wreg free
  2219  001F7A  C0AA  F005         	movff	?___ftmul,_Test+4
  2220  001F7E  C0AB  F006         	movff	?___ftmul+1,_Test+5
  2221  001F82  C0AC  F007         	movff	?___ftmul+2,_Test+6
  2222                           
  2223                           ;test.c: 74: Test.U_Alim = Test.U_Alim * 11.62f;
  2224  001F86  C005  F0AA         	movff	_Test+4,___ftmul@f1
  2225  001F8A  C006  F0AB         	movff	_Test+5,___ftmul@f1+1
  2226  001F8E  C007  F0AC         	movff	_Test+6,___ftmul@f1+2
  2227  001F92  0EEC               	movlw	236
  2228  001F94  0100               	movlb	0	; () banked
  2229  001F96  0100               	movlb	0	; () banked
  2230  001F98  6FAD               	movwf	___ftmul@f2& (0+255),b
  2231  001F9A  0E39               	movlw	57
  2232  001F9C  0100               	movlb	0	; () banked
  2233  001F9E  0100               	movlb	0	; () banked
  2234  001FA0  6FAE               	movwf	(___ftmul@f2+1)& (0+255),b
  2235  001FA2  0E41               	movlw	65
  2236  001FA4  0100               	movlb	0	; () banked
  2237  001FA6  0100               	movlb	0	; () banked
  2238  001FA8  6FAF               	movwf	(___ftmul@f2+2)& (0+255),b
  2239  001FAA  EC33  F009         	call	___ftmul	;wreg free
  2240  001FAE  C0AA  F005         	movff	?___ftmul,_Test+4
  2241  001FB2  C0AB  F006         	movff	?___ftmul+1,_Test+5
  2242  001FB6  C0AC  F007         	movff	?___ftmul+2,_Test+6
  2243                           
  2244                           ;test.c: 75: Test.U_Alim = Test.U_Alim * 100.0f;
  2245  001FBA  C005  F0AA         	movff	_Test+4,___ftmul@f1
  2246  001FBE  C006  F0AB         	movff	_Test+5,___ftmul@f1+1
  2247  001FC2  C007  F0AC         	movff	_Test+6,___ftmul@f1+2
  2248  001FC6  0E00               	movlw	0
  2249  001FC8  0100               	movlb	0	; () banked
  2250  001FCA  0100               	movlb	0	; () banked
  2251  001FCC  6FAD               	movwf	___ftmul@f2& (0+255),b
  2252  001FCE  0EC8               	movlw	200
  2253  001FD0  0100               	movlb	0	; () banked
  2254  001FD2  0100               	movlb	0	; () banked
  2255  001FD4  6FAE               	movwf	(___ftmul@f2+1)& (0+255),b
  2256  001FD6  0E42               	movlw	66
  2257  001FD8  0100               	movlb	0	; () banked
  2258  001FDA  0100               	movlb	0	; () banked
  2259  001FDC  6FAF               	movwf	(___ftmul@f2+2)& (0+255),b
  2260  001FDE  EC33  F009         	call	___ftmul	;wreg free
  2261  001FE2  C0AA  F005         	movff	?___ftmul,_Test+4
  2262  001FE6  C0AB  F006         	movff	?___ftmul+1,_Test+5
  2263  001FEA  C0AC  F007         	movff	?___ftmul+2,_Test+6
  2264                           
  2265                           ;test.c: 77: return (unsigned short) Test.U_Alim;
  2266  001FEE  C005  F04F         	movff	_Test+4,___fttol@f1
  2267  001FF2  C006  F050         	movff	_Test+5,___fttol@f1+1
  2268  001FF6  C007  F051         	movff	_Test+6,___fttol@f1+2
  2269  001FFA  EC55  F00C         	call	___fttol	;wreg free
  2270  001FFE  C04F  F0BB         	movff	?___fttol,??_check_UAlim
  2271  002002  C050  F0BC         	movff	?___fttol+1,??_check_UAlim+1
  2272  002006  C051  F0BD         	movff	?___fttol+2,??_check_UAlim+2
  2273  00200A  C052  F0BE         	movff	?___fttol+3,??_check_UAlim+3
  2274  00200E  C0BB  F0B9         	movff	??_check_UAlim,?_check_UAlim
  2275  002012  C0BC  F0BA         	movff	??_check_UAlim+1,?_check_UAlim+1
  2276  002016  0012               	return	
  2277  002018  FFFF               	dw	65535	; errata NOP
  2278  00201A                     __end_of_check_UAlim:
  2279                           	opt stack 0
  2280                           tblptru	equ	0xFF8
  2281                           tblptrh	equ	0xFF7
  2282                           tblptrl	equ	0xFF6
  2283                           tablat	equ	0xFF5
  2284                           prodh	equ	0xFF4
  2285                           prodl	equ	0xFF3
  2286                           postinc0	equ	0xFEE
  2287                           wreg	equ	0xFE8
  2288                           postdec1	equ	0xFE5
  2289                           fsr1l	equ	0xFE1
  2290                           indf2	equ	0xFDF
  2291                           postinc2	equ	0xFDE
  2292                           postdec2	equ	0xFDD
  2293                           fsr2h	equ	0xFDA
  2294                           fsr2l	equ	0xFD9
  2295                           status	equ	0xFD8
  2296                           
  2297 ;; *************** function _micro_wait *****************
  2298 ;; Defined at:
  2299 ;;		line 91 in file "micro.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;		None
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;		None
  2304 ;; Return value:  Size  Location     Type
  2305 ;;		None               void
  2306 ;; Registers used:
  2307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2313 ;;      Params:         0       0       0       0       0       0       0
  2314 ;;      Locals:         0       0       0       0       0       0       0
  2315 ;;      Temps:          1       0       0       0       0       0       0
  2316 ;;      Totals:         1       0       0       0       0       0       0
  2317 ;;Total ram usage:        1 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:    6
  2320 ;; This function calls:
  2321 ;;		_check_comutest
  2322 ;;		_ecran_blank
  2323 ;;		_ecran_print_one_char
  2324 ;;		_ecran_wait
  2325 ;; This function is called by:
  2326 ;;		_main
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text4
  2331  0023DE                     __ptext4:
  2332                           	opt stack 0
  2333  0023DE                     _micro_wait:
  2334                           	opt stack 24
  2335                           
  2336                           ;incstack = 0
  2337  0023DE  FFFF               	dw	65535
  2338                           
  2339                           ;micro.c: 93: switch (Micro.Step)
  2340  0023E0  D044               	goto	l6017
  2341  0023E2                     l784:
  2342                           
  2343                           ;micro.c: 96: if (Bouton[Bp_IdTest].State == 0)
  2344  0023E2  0100               	movlb	0	; () banked
  2345  0023E4  B385               	btfsc	(_Bouton+5)& (0+255),1,b
  2346  0023E6  D04B               	goto	l797
  2347                           
  2348                           ; BSR set to: 0
  2349                           ;micro.c: 97: {
  2350                           ;micro.c: 98: Micro.Step = 0x01;
  2351  0023E8  6E56               	movwf	??_micro_wait& (0+255),c
  2352  0023EA  0E01               	movlw	1
  2353  0023EC  6E5E               	movwf	_Micro+3,c
  2354  0023EE  5056               	movf	??_micro_wait& (0+255),w,c
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;micro.c: 99: ecran_wait();
  2358  0023F0  EC92  F016         	call	_ecran_wait	;wreg free
  2359  0023F4  D044               	goto	l797
  2360  0023F6                     l787:
  2361                           
  2362                           ;micro.c: 103: if (Bouton[Bp_IdTest].State == 1)
  2363  0023F6  0100               	movlb	0	; () banked
  2364  0023F8  A385               	btfss	(_Bouton+5)& (0+255),1,b
  2365  0023FA  D041               	goto	l797
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;micro.c: 104: {
  2369                           ;micro.c: 105: Micro.Step = 0x03;
  2370  0023FC  6E56               	movwf	??_micro_wait& (0+255),c
  2371  0023FE  0E03               	movlw	3
  2372  002400  6E5E               	movwf	_Micro+3,c
  2373  002402  5056               	movf	??_micro_wait& (0+255),w,c
  2374  002404  D03C               	goto	l797
  2375  002406                     l789:
  2376                           
  2377                           ;micro.c: 109: if (Bouton[Bp_IdTest].State == 0)
  2378  002406  0100               	movlb	0	; () banked
  2379  002408  B385               	btfsc	(_Bouton+5)& (0+255),1,b
  2380  00240A  D00E               	goto	l790
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;micro.c: 110: {
  2384                           ;micro.c: 111: Micro.Phase = 0x01;
  2385  00240C  6E56               	movwf	??_micro_wait& (0+255),c
  2386  00240E  0E01               	movlw	1
  2387  002410  6E5D               	movwf	_Micro+2,c
  2388  002412  5056               	movf	??_micro_wait& (0+255),w,c
  2389                           
  2390                           ;micro.c: 112: Test.Step = 0x01;
  2391  002414  6E56               	movwf	??_micro_wait& (0+255),c
  2392  002416  0E01               	movlw	1
  2393  002418  6E01               	movwf	_Test,c
  2394  00241A  5056               	movf	??_micro_wait& (0+255),w,c
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;micro.c: 113: check_comutest(0);
  2398  00241C  0E00               	movlw	0
  2399  00241E  EC7F  F014         	call	_check_comutest
  2400                           
  2401                           ;micro.c: 114: ecran_blank();
  2402  002422  ECBB  F013         	call	_ecran_blank	;wreg free
  2403                           
  2404                           ;micro.c: 115: }
  2405  002426  D010               	goto	l6009
  2406  002428                     l790:
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;micro.c: 116: else if (Bouton[Bp_On].State == 0)
  2410  002428  0100               	movlb	0	; () banked
  2411  00242A  B382               	btfsc	(_Bouton+2)& (0+255),1,b
  2412  00242C  D00D               	goto	l6009
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;micro.c: 117: {
  2416                           ;micro.c: 118: Micro.Phase = 0x02;
  2417  00242E  6E56               	movwf	??_micro_wait& (0+255),c
  2418  002430  0E02               	movlw	2
  2419  002432  6E5D               	movwf	_Micro+2,c
  2420  002434  5056               	movf	??_micro_wait& (0+255),w,c
  2421                           
  2422                           ;micro.c: 119: Arm.Step = 0x01;
  2423  002436  6E56               	movwf	??_micro_wait& (0+255),c
  2424  002438  0E01               	movlw	1
  2425  00243A  6E20               	movwf	_Arm,c
  2426  00243C  5056               	movf	??_micro_wait& (0+255),w,c
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;micro.c: 120: check_comutest(1);
  2430  00243E  0E01               	movlw	1
  2431  002440  EC7F  F014         	call	_check_comutest
  2432                           
  2433                           ;micro.c: 121: ecran_blank();
  2434  002444  ECBB  F013         	call	_ecran_blank	;wreg free
  2435  002448                     l6009:
  2436                           
  2437                           ;micro.c: 122: }
  2438                           ;micro.c: 124: if (Bouton[Bp_Start].State == 0)
  2439  002448  0100               	movlb	0	; () banked
  2440  00244A  B38B               	btfsc	(_Bouton+11)& (0+255),1,b
  2441  00244C  D018               	goto	l797
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;micro.c: 125: {
  2445                           ;micro.c: 126: ecran_blank();
  2446  00244E  ECBB  F013         	call	_ecran_blank	;wreg free
  2447                           
  2448                           ;micro.c: 128: ecran_print_one_char(0, 'S');
  2449  002452  6E56               	movwf	??_micro_wait& (0+255),c
  2450  002454  0E53               	movlw	83
  2451  002456  6E50               	movwf	ecran_print_one_char@Character,c
  2452  002458  5056               	movf	??_micro_wait& (0+255),w,c
  2453  00245A  0E00               	movlw	0
  2454  00245C  EC35  F015         	call	_ecran_print_one_char
  2455  002460                     l794:
  2456  002460  A081               	btfss	3969,0,c	;volatile
  2457  002462  D7FE               	goto	l794
  2458                           
  2459                           ;micro.c: 132: ecran_wait();
  2460  002464  EC92  F016         	call	_ecran_wait	;wreg free
  2461  002468  D00A               	goto	l797
  2462  00246A                     l6017:
  2463  00246A  505E               	movf	_Micro+3,w,c
  2464                           
  2465                           ; Switch size 1, requested type "space"
  2466                           ; Number of cases is 3, Range of values is 0 to 3
  2467                           ; switch strategies available:
  2468                           ; Name         Instructions Cycles
  2469                           ; simple_byte           10     6 (average)
  2470                           ;	Chosen strategy is simple_byte
  2471  00246C  0A00               	xorlw	0	; case 0
  2472  00246E  B4D8               	btfsc	status,2,c
  2473  002470  D7B8               	goto	l784
  2474  002472  0A01               	xorlw	1	; case 1
  2475  002474  B4D8               	btfsc	status,2,c
  2476  002476  D7BF               	goto	l787
  2477  002478  0A02               	xorlw	2	; case 3
  2478  00247A  B4D8               	btfsc	status,2,c
  2479  00247C  D7C4               	goto	l789
  2480  00247E                     l797:
  2481  00247E  0012               	return	
  2482  002480  FFFF               	dw	65535	; errata NOP
  2483  002482                     __end_of_micro_wait:
  2484                           	opt stack 0
  2485                           tblptru	equ	0xFF8
  2486                           tblptrh	equ	0xFF7
  2487                           tblptrl	equ	0xFF6
  2488                           tablat	equ	0xFF5
  2489                           prodh	equ	0xFF4
  2490                           prodl	equ	0xFF3
  2491                           postinc0	equ	0xFEE
  2492                           wreg	equ	0xFE8
  2493                           postdec1	equ	0xFE5
  2494                           fsr1l	equ	0xFE1
  2495                           indf2	equ	0xFDF
  2496                           postinc2	equ	0xFDE
  2497                           postdec2	equ	0xFDD
  2498                           fsr2h	equ	0xFDA
  2499                           fsr2l	equ	0xFD9
  2500                           status	equ	0xFD8
  2501                           
  2502 ;; *************** function _micro_config *****************
  2503 ;; Defined at:
  2504 ;;		line 39 in file "micro.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;		None
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;		None               void
  2511 ;; Registers used:
  2512 ;;		wreg, status,2
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2518 ;;      Params:         0       0       0       0       0       0       0
  2519 ;;      Locals:         0       0       0       0       0       0       0
  2520 ;;      Temps:          0       0       0       0       0       0       0
  2521 ;;      Totals:         0       0       0       0       0       0       0
  2522 ;;Total ram usage:        0 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    2
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_main
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text5
  2533  002C60                     __ptext5:
  2534                           	opt stack 0
  2535  002C60                     _micro_config:
  2536                           	opt stack 28
  2537                           
  2538                           ;incstack = 0
  2539  002C60  FFFF               	dw	65535
  2540                           
  2541                           ;micro.c: 43: T0CON = 0x88;
  2542  002C62  0E88               	movlw	136
  2543  002C64  6ED5               	movwf	4053,c	;volatile
  2544                           
  2545                           ;micro.c: 64: TMR0H = 0xF0;
  2546  002C66  0EF0               	movlw	240
  2547  002C68  6ED7               	movwf	4055,c	;volatile
  2548                           
  2549                           ;micro.c: 65: TMR0L = 0x8C;
  2550  002C6A  0E8C               	movlw	140
  2551  002C6C  6ED6               	movwf	4054,c	;volatile
  2552                           
  2553                           ;micro.c: 69: ADCON0 = 0x80;
  2554  002C6E  0E80               	movlw	128
  2555  002C70  6EC2               	movwf	4034,c	;volatile
  2556                           
  2557                           ;micro.c: 75: ADCON1 = 0xC4;
  2558  002C72  0EC4               	movlw	196
  2559  002C74  6EC1               	movwf	4033,c	;volatile
  2560                           
  2561                           ;micro.c: 82: TMR0IP = 1;
  2562  002C76  84F1               	bsf	intcon2,2,c	;volatile
  2563                           
  2564                           ;micro.c: 83: TMR0IE = 1;
  2565  002C78  8AF2               	bsf	intcon,5,c	;volatile
  2566                           
  2567                           ;micro.c: 84: IPEN = 1;
  2568  002C7A  8ED0               	bsf	4048,7,c	;volatile
  2569                           
  2570                           ;micro.c: 85: GIE = 1;
  2571  002C7C  8EF2               	bsf	intcon,7,c	;volatile
  2572                           
  2573                           ;micro.c: 87: Micro.Time = Cptms;
  2574  002C7E  C02D  F05B         	movff	_Cptms,_Micro	;volatile
  2575  002C82  C02E  F05C         	movff	_Cptms+1,_Micro+1	;volatile
  2576                           
  2577                           ;micro.c: 88: Ecran.tRate = 255;
  2578  002C86  0100               	movlb	0	; () banked
  2579  002C88  0100               	movlb	0	; () banked
  2580  002C8A  69A4               	setf	(_Ecran+12)& (0+255),b
  2581                           
  2582                           ; BSR set to: 0
  2583  002C8C  0012               	return	
  2584  002C8E  FFFF               	dw	65535	; errata NOP
  2585  002C90                     __end_of_micro_config:
  2586                           	opt stack 0
  2587                           tblptru	equ	0xFF8
  2588                           tblptrh	equ	0xFF7
  2589                           tblptrl	equ	0xFF6
  2590                           tablat	equ	0xFF5
  2591                           prodh	equ	0xFF4
  2592                           prodl	equ	0xFF3
  2593                           intcon	equ	0xFF2
  2594                           intcon2	equ	0xFF1
  2595                           postinc0	equ	0xFEE
  2596                           wreg	equ	0xFE8
  2597                           postdec1	equ	0xFE5
  2598                           fsr1l	equ	0xFE1
  2599                           indf2	equ	0xFDF
  2600                           postinc2	equ	0xFDE
  2601                           postdec2	equ	0xFDD
  2602                           fsr2h	equ	0xFDA
  2603                           fsr2l	equ	0xFD9
  2604                           status	equ	0xFD8
  2605                           
  2606 ;; *************** function _hw_config *****************
  2607 ;; Defined at:
  2608 ;;		line 3 in file "hardware.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;		None
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;		None               void
  2615 ;; Registers used:
  2616 ;;		wreg, status,2
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2622 ;;      Params:         0       0       0       0       0       0       0
  2623 ;;      Locals:         0       0       0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0
  2625 ;;      Totals:         0       0       0       0       0       0       0
  2626 ;;Total ram usage:        0 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    2
  2629 ;; This function calls:
  2630 ;;		Nothing
  2631 ;; This function is called by:
  2632 ;;		_main
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text6
  2637  0026BC                     __ptext6:
  2638                           	opt stack 0
  2639  0026BC                     _hw_config:
  2640                           	opt stack 28
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;incstack = 0
  2644  0026BC  FFFF               	dw	65535
  2645                           
  2646                           ;hardware.c: 6: ADCON1 = 0x07;
  2647  0026BE  0E07               	movlw	7
  2648  0026C0  6EC1               	movwf	4033,c	;volatile
  2649                           
  2650                           ;hardware.c: 10: PORTA = 0;
  2651  0026C2  0E00               	movlw	0
  2652  0026C4  6E80               	movwf	3968,c	;volatile
  2653                           
  2654                           ;hardware.c: 12: TRISAbits.TRISA0 = 1;
  2655  0026C6  8092               	bsf	3986,0,c	;volatile
  2656                           
  2657                           ;hardware.c: 13: TRISAbits.TRISA1 = 1;
  2658  0026C8  8292               	bsf	3986,1,c	;volatile
  2659                           
  2660                           ;hardware.c: 14: TRISAbits.TRISA2 = 0;
  2661  0026CA  9492               	bcf	3986,2,c	;volatile
  2662                           
  2663                           ;hardware.c: 15: TRISAbits.TRISA3 = 1;
  2664  0026CC  8692               	bsf	3986,3,c	;volatile
  2665                           
  2666                           ;hardware.c: 16: TRISAbits.TRISA4 = 1;
  2667  0026CE  8892               	bsf	3986,4,c	;volatile
  2668                           
  2669                           ;hardware.c: 17: TRISAbits.TRISA5 = 0;
  2670  0026D0  9A92               	bcf	3986,5,c	;volatile
  2671                           
  2672                           ;hardware.c: 20: PORTB = 0;
  2673  0026D2  0E00               	movlw	0
  2674  0026D4  6E81               	movwf	3969,c	;volatile
  2675                           
  2676                           ;hardware.c: 22: TRISBbits.TRISB0 = 1;
  2677  0026D6  8093               	bsf	3987,0,c	;volatile
  2678                           
  2679                           ;hardware.c: 23: TRISBbits.TRISB1 = 0;
  2680  0026D8  9293               	bcf	3987,1,c	;volatile
  2681                           
  2682                           ;hardware.c: 24: TRISBbits.TRISB2 = 0;
  2683  0026DA  9493               	bcf	3987,2,c	;volatile
  2684                           
  2685                           ;hardware.c: 25: TRISBbits.TRISB3 = 0;
  2686  0026DC  9693               	bcf	3987,3,c	;volatile
  2687                           
  2688                           ;hardware.c: 26: TRISBbits.TRISB4 = 0;
  2689  0026DE  9893               	bcf	3987,4,c	;volatile
  2690                           
  2691                           ;hardware.c: 27: TRISBbits.TRISB5 = 0;
  2692  0026E0  9A93               	bcf	3987,5,c	;volatile
  2693                           
  2694                           ;hardware.c: 28: TRISBbits.TRISB6 = 1;
  2695  0026E2  8C93               	bsf	3987,6,c	;volatile
  2696                           
  2697                           ;hardware.c: 29: TRISBbits.TRISB7 = 1;
  2698  0026E4  8E93               	bsf	3987,7,c	;volatile
  2699                           
  2700                           ;hardware.c: 32: PORTC = 0;
  2701  0026E6  0E00               	movlw	0
  2702  0026E8  6E82               	movwf	3970,c	;volatile
  2703                           
  2704                           ;hardware.c: 34: TRISCbits.TRISC0 = 0;
  2705  0026EA  9094               	bcf	3988,0,c	;volatile
  2706                           
  2707                           ;hardware.c: 35: TRISCbits.TRISC1 = 0;
  2708  0026EC  9294               	bcf	3988,1,c	;volatile
  2709                           
  2710                           ;hardware.c: 36: TRISCbits.TRISC2 = 0;
  2711  0026EE  9494               	bcf	3988,2,c	;volatile
  2712                           
  2713                           ;hardware.c: 37: TRISCbits.TRISC3 = 0;
  2714  0026F0  9694               	bcf	3988,3,c	;volatile
  2715                           
  2716                           ;hardware.c: 38: TRISCbits.TRISC4 = 0;
  2717  0026F2  9894               	bcf	3988,4,c	;volatile
  2718                           
  2719                           ;hardware.c: 39: TRISCbits.TRISC5 = 1;
  2720  0026F4  8A94               	bsf	3988,5,c	;volatile
  2721                           
  2722                           ;hardware.c: 40: TRISCbits.TRISC6 = 0;
  2723  0026F6  9C94               	bcf	3988,6,c	;volatile
  2724                           
  2725                           ;hardware.c: 41: TRISCbits.TRISC7 = 1;
  2726  0026F8  8E94               	bsf	3988,7,c	;volatile
  2727                           
  2728                           ;hardware.c: 44: PORTD = 0;
  2729  0026FA  0E00               	movlw	0
  2730  0026FC  6E83               	movwf	3971,c	;volatile
  2731                           
  2732                           ;hardware.c: 46: TRISDbits.TRISD0 = 0;
  2733  0026FE  9095               	bcf	3989,0,c	;volatile
  2734                           
  2735                           ;hardware.c: 47: TRISDbits.TRISD1 = 0;
  2736  002700  9295               	bcf	3989,1,c	;volatile
  2737                           
  2738                           ;hardware.c: 48: TRISDbits.TRISD2 = 0;
  2739  002702  9495               	bcf	3989,2,c	;volatile
  2740                           
  2741                           ;hardware.c: 49: TRISDbits.TRISD3 = 0;
  2742  002704  9695               	bcf	3989,3,c	;volatile
  2743                           
  2744                           ;hardware.c: 50: TRISDbits.TRISD4 = 0;
  2745  002706  9895               	bcf	3989,4,c	;volatile
  2746                           
  2747                           ;hardware.c: 51: TRISDbits.TRISD5 = 0;
  2748  002708  9A95               	bcf	3989,5,c	;volatile
  2749                           
  2750                           ;hardware.c: 52: TRISDbits.TRISD6 = 0;
  2751  00270A  9C95               	bcf	3989,6,c	;volatile
  2752                           
  2753                           ;hardware.c: 53: TRISDbits.TRISD7 = 0;
  2754  00270C  9E95               	bcf	3989,7,c	;volatile
  2755                           
  2756                           ;hardware.c: 56: PORTE = 0;
  2757  00270E  0E00               	movlw	0
  2758  002710  6E84               	movwf	3972,c	;volatile
  2759                           
  2760                           ;hardware.c: 58: TRISEbits.TRISE0 = 1;
  2761  002712  8096               	bsf	3990,0,c	;volatile
  2762                           
  2763                           ;hardware.c: 59: TRISEbits.TRISE1 = 1;
  2764  002714  8296               	bsf	3990,1,c	;volatile
  2765                           
  2766                           ;hardware.c: 60: TRISEbits.TRISE2 = 0;
  2767  002716  9496               	bcf	3990,2,c	;volatile
  2768  002718  0012               	return	
  2769  00271A  FFFF               	dw	65535	; errata NOP
  2770  00271C                     __end_of_hw_config:
  2771                           	opt stack 0
  2772                           tblptru	equ	0xFF8
  2773                           tblptrh	equ	0xFF7
  2774                           tblptrl	equ	0xFF6
  2775                           tablat	equ	0xFF5
  2776                           prodh	equ	0xFF4
  2777                           prodl	equ	0xFF3
  2778                           intcon	equ	0xFF2
  2779                           intcon2	equ	0xFF1
  2780                           postinc0	equ	0xFEE
  2781                           wreg	equ	0xFE8
  2782                           postdec1	equ	0xFE5
  2783                           fsr1l	equ	0xFE1
  2784                           indf2	equ	0xFDF
  2785                           postinc2	equ	0xFDE
  2786                           postdec2	equ	0xFDD
  2787                           fsr2h	equ	0xFDA
  2788                           fsr2l	equ	0xFD9
  2789                           status	equ	0xFD8
  2790                           
  2791 ;; *************** function _feu_process *****************
  2792 ;; Defined at:
  2793 ;;		line 85 in file "feu.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;		None               void
  2800 ;; Registers used:
  2801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2807 ;;      Params:         0       0       0       0       0       0       0
  2808 ;;      Locals:         0       0       0       0       0       0       0
  2809 ;;      Temps:          2       0       0       0       0       0       0
  2810 ;;      Totals:         2       0       0       0       0       0       0
  2811 ;;Total ram usage:        2 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    4
  2814 ;; This function calls:
  2815 ;;		_delay_ms
  2816 ;;		_feu_check_end
  2817 ;;		_feu_tir
  2818 ;; This function is called by:
  2819 ;;		_main
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	text7
  2824  000E7A                     __ptext7:
  2825                           	opt stack 0
  2826  000E7A                     _feu_process:
  2827                           	opt stack 26
  2828                           
  2829                           ;incstack = 0
  2830  000E7A  FFFF               	dw	65535
  2831                           
  2832                           ;feu.c: 87: switch (Feu.Step)
  2833  000E7C  D0F2               	goto	l6301
  2834  000E7E                     l1084:
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;feu.c: 91: if (Bouton[Bp_Start].State == 0)
  2838  000E7E  0100               	movlb	0	; () banked
  2839  000E80  B38B               	btfsc	(_Bouton+11)& (0+255),1,b
  2840  000E82  D10D               	goto	l1109
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;feu.c: 92: {
  2844                           ;feu.c: 93: if (Micro.Mods == 0) {Feu.Step = 0x01;}
  2845  000E84  6660               	tstfsz	_Micro+5,c
  2846  000E86  D003               	goto	l6247
  2847                           
  2848                           ; BSR set to: 0
  2849  000E88  6E56               	movwf	??_feu_process& (0+255),c
  2850  000E8A  0E01               	movlw	1
  2851  000E8C  D002               	goto	L21
  2852  000E8E                     l6247:
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;feu.c: 94: else {Feu.Step = 0x03;}
  2856  000E8E  6E56               	movwf	??_feu_process& (0+255),c
  2857  000E90  0E03               	movlw	3
  2858  000E92                     L21:
  2859  000E92  0100               	movlb	0	; () banked
  2860  000E94  0100               	movlb	0	; () banked
  2861  000E96  6F8C               	movwf	_Feu& (0+255),b
  2862  000E98  5056               	movf	??_feu_process& (0+255),w,c
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;feu.c: 96: Micro.State = 0x02;
  2866  000E9A  6E56               	movwf	??_feu_process& (0+255),c
  2867  000E9C  0E02               	movlw	2
  2868  000E9E  6E5F               	movwf	_Micro+4,c
  2869  000EA0  5056               	movf	??_feu_process& (0+255),w,c
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;feu.c: 98: Decompte = 50;
  2873  000EA2  0E32               	movlw	50
  2874  000EA4  6E2F               	movwf	_Decompte,c	;volatile
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;feu.c: 99: Cpt1Sur20s = 0;
  2878  000EA6  0E00               	movlw	0
  2879  000EA8  6E2C               	movwf	_Cpt1Sur20s+1,c	;volatile
  2880  000EAA  0E00               	movlw	0
  2881  000EAC  6E2B               	movwf	_Cpt1Sur20s,c	;volatile
  2882                           
  2883                           ;feu.c: 101: Feu.LastOutput = 0;
  2884  000EAE  6E56               	movwf	??_feu_process& (0+255),c
  2885  000EB0  0E00               	movlw	0
  2886  000EB2  0100               	movlb	0	; () banked
  2887  000EB4  0100               	movlb	0	; () banked
  2888  000EB6  6F95               	movwf	(_Feu+9)& (0+255),b
  2889  000EB8  5056               	movf	??_feu_process& (0+255),w,c
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;feu.c: 103: Feu.CanStopStart = 0;
  2893  000EBA  0100               	movlb	0	; () banked
  2894  000EBC  0100               	movlb	0	; () banked
  2895  000EBE  9197               	bcf	(_Feu+11)& (0+255),0,b
  2896  000EC0  D0EE               	goto	l1109
  2897  000EC2                     l6255:
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;feu.c: 108: Feu.NextOutput = Cf.Data[Feu.Cpt*3];
  2901  000EC2  0100               	movlb	0	; () banked
  2902  000EC4  0100               	movlb	0	; () banked
  2903  000EC6  518D               	movf	(_Feu+1)& (0+255),w,b
  2904  000EC8  0D03               	mullw	3
  2905  000ECA  0101               	movlb	1	; () banked
  2906  000ECC  0E00               	movlw	low _Cf	;volatile
  2907  000ECE  24F3               	addwf	prodl,w,c
  2908  000ED0  6ED9               	movwf	fsr2l,c
  2909  000ED2  0101               	movlb	1	; () banked
  2910  000ED4  0E01               	movlw	high _Cf	;volatile
  2911  000ED6  20F4               	addwfc	prodh,w,c
  2912  000ED8  6EDA               	movwf	fsr2h,c
  2913  000EDA  50DF               	movf	indf2,w,c
  2914  000EDC  0100               	movlb	0	; () banked
  2915  000EDE  0100               	movlb	0	; () banked
  2916  000EE0  6F96               	movwf	(_Feu+10)& (0+255),b
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;feu.c: 110: if (feu_check_end() == 1) {Feu.Step = 0x08;}
  2920  000EE2  EC72  F016         	call	_feu_check_end	;wreg free
  2921  000EE6  6E56               	movwf	??_feu_process& (0+255),c
  2922  000EE8  0456               	decf	??_feu_process,w,c
  2923  000EEA  A4D8               	btfss	status,2,c
  2924  000EEC  D003               	goto	l6261
  2925  000EEE  6E56               	movwf	??_feu_process& (0+255),c
  2926  000EF0  0E08               	movlw	8
  2927  000EF2  D0AE               	goto	L28
  2928  000EF4                     l6261:
  2929                           
  2930                           ;feu.c: 111: else
  2931                           ;feu.c: 112: {
  2932                           ;feu.c: 114: Feu.TimeToFire = Cf.Data[(Feu.Cpt*3) + 1] << 8;
  2933  000EF4  0100               	movlb	0	; () banked
  2934  000EF6  0100               	movlb	0	; () banked
  2935  000EF8  518D               	movf	(_Feu+1)& (0+255),w,b
  2936  000EFA  0D03               	mullw	3
  2937  000EFC  0E01               	movlw	1
  2938  000EFE  26F3               	addwf	prodl,f,c
  2939  000F00  0E00               	movlw	0
  2940  000F02  22F4               	addwfc	prodh,f,c
  2941  000F04  0101               	movlb	1	; () banked
  2942  000F06  0E00               	movlw	low _Cf	;volatile
  2943  000F08  24F3               	addwf	prodl,w,c
  2944  000F0A  6ED9               	movwf	fsr2l,c
  2945  000F0C  0101               	movlb	1	; () banked
  2946  000F0E  0E01               	movlw	high _Cf	;volatile
  2947  000F10  20F4               	addwfc	prodh,w,c
  2948  000F12  6EDA               	movwf	fsr2h,c
  2949  000F14  50DF               	movf	indf2,w,c
  2950  000F16  0100               	movlb	0	; () banked
  2951  000F18  0100               	movlb	0	; () banked
  2952  000F1A  6F92               	movwf	(_Feu+6)& (0+255),b
  2953  000F1C  0100               	movlb	0	; () banked
  2954  000F1E  6B91               	clrf	(_Feu+5)& (0+255),b
  2955                           
  2956                           ;feu.c: 115: Feu.TimeToFire |= Cf.Data[(Feu.Cpt*3) + 2];
  2957  000F20  0100               	movlb	0	; () banked
  2958  000F22  0100               	movlb	0	; () banked
  2959  000F24  518D               	movf	(_Feu+1)& (0+255),w,b
  2960  000F26  0D03               	mullw	3
  2961  000F28  0E02               	movlw	2
  2962  000F2A  26F3               	addwf	prodl,f,c
  2963  000F2C  0E00               	movlw	0
  2964  000F2E  22F4               	addwfc	prodh,f,c
  2965  000F30  0101               	movlb	1	; () banked
  2966  000F32  0E00               	movlw	low _Cf	;volatile
  2967  000F34  24F3               	addwf	prodl,w,c
  2968  000F36  6ED9               	movwf	fsr2l,c
  2969  000F38  0101               	movlb	1	; () banked
  2970  000F3A  0E01               	movlw	high _Cf	;volatile
  2971  000F3C  20F4               	addwfc	prodh,w,c
  2972  000F3E  6EDA               	movwf	fsr2h,c
  2973  000F40  50DF               	movf	indf2,w,c
  2974  000F42  6E56               	movwf	??_feu_process& (0+255),c
  2975  000F44  5056               	movf	??_feu_process,w,c
  2976  000F46  0100               	movlb	0	; () banked
  2977  000F48  0100               	movlb	0	; () banked
  2978  000F4A  1391               	iorwf	(_Feu+5)& (0+255),f,b
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;feu.c: 117: Feu.Step = 0x02;
  2982  000F4C  6E56               	movwf	??_feu_process& (0+255),c
  2983  000F4E  0E02               	movlw	2
  2984  000F50  D07F               	goto	L28
  2985  000F52                     l6265:
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;feu.c: 121: if (Cpt1Sur20s == Feu.TimeToFire)
  2989  000F52  0100               	movlb	0	; () banked
  2990  000F54  EE20  F091         	lfsr	2,_Feu+5
  2991  000F58  52DE               	movf	postinc2,f,c
  2992  000F5A  502C               	movf	_Cpt1Sur20s+1,w,c	;volatile
  2993  000F5C  18DD               	xorwf	postdec2,w,c
  2994  000F5E  C02B  FFE8         	movff	_Cpt1Sur20s,wreg	;volatile
  2995  000F62  B4D8               	btfsc	status,2,c
  2996  000F64  18DF               	xorwf	indf2,w,c
  2997  000F66  A4D8               	btfss	status,2,c
  2998  000F68  D09A               	goto	l1109
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;feu.c: 122: {
  3002                           ;feu.c: 123: feu_tir(Feu.NextOutput);
  3003  000F6A  0100               	movlb	0	; () banked
  3004  000F6C  0100               	movlb	0	; () banked
  3005  000F6E  5196               	movf	(_Feu+10)& (0+255),w,b
  3006  000F70  ECC9  F015         	call	_feu_tir
  3007  000F74  D06B               	goto	L30
  3008  000F76                     l1094:
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;feu.c: 129: if (Micro.Mod.P_0 == 1) {Feu.NextOutput = Feu.Cpt+1;}
  3012  000F76  A060               	btfss	_Micro+5,0,c
  3013  000F78  D004               	goto	l1095
  3014                           
  3015                           ; BSR set to: 0
  3016  000F7A  0100               	movlb	0	; () banked
  3017  000F7C  0100               	movlb	0	; () banked
  3018  000F7E  298D               	incf	(_Feu+1)& (0+255),w,b
  3019  000F80  D00F               	goto	L25
  3020  000F82                     l1095:
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;feu.c: 130: else if (Micro.Mod.P_00 == 1) {Feu.NextOutput = Cf.Data[Feu.Cpt*3];}
  3024  000F82  A260               	btfss	_Micro+5,1,c
  3025  000F84  D010               	goto	l6275
  3026                           
  3027                           ; BSR set to: 0
  3028  000F86  0100               	movlb	0	; () banked
  3029  000F88  0100               	movlb	0	; () banked
  3030  000F8A  518D               	movf	(_Feu+1)& (0+255),w,b
  3031  000F8C  0D03               	mullw	3
  3032  000F8E  0101               	movlb	1	; () banked
  3033  000F90  0E00               	movlw	low _Cf	;volatile
  3034  000F92  24F3               	addwf	prodl,w,c
  3035  000F94  6ED9               	movwf	fsr2l,c
  3036  000F96  0101               	movlb	1	; () banked
  3037  000F98  0E01               	movlw	high _Cf	;volatile
  3038  000F9A  20F4               	addwfc	prodh,w,c
  3039  000F9C  6EDA               	movwf	fsr2h,c
  3040  000F9E  50DF               	movf	indf2,w,c
  3041  000FA0                     L25:
  3042  000FA0  0100               	movlb	0	; () banked
  3043  000FA2  0100               	movlb	0	; () banked
  3044  000FA4  6F96               	movwf	(_Feu+10)& (0+255),b
  3045  000FA6                     l6275:
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;feu.c: 132: if (feu_check_end() == 1) {Feu.Step = 0x08;}
  3049  000FA6  EC72  F016         	call	_feu_check_end	;wreg free
  3050  000FAA  6E56               	movwf	??_feu_process& (0+255),c
  3051  000FAC  0456               	decf	??_feu_process,w,c
  3052  000FAE  B4D8               	btfsc	status,2,c
  3053  000FB0  D79E               	goto	L31
  3054                           
  3055                           ;feu.c: 133: else {Feu.Step = 0x04;}
  3056                           
  3057                           ; BSR set to: 0
  3058  000FB2  6E56               	movwf	??_feu_process& (0+255),c
  3059  000FB4  0E04               	movlw	4
  3060  000FB6  D04C               	goto	L28
  3061  000FB8                     l1100:
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;feu.c: 136: if (Bouton[Bp_Start].State == 0)
  3065  000FB8  0100               	movlb	0	; () banked
  3066  000FBA  B38B               	btfsc	(_Bouton+11)& (0+255),1,b
  3067  000FBC  D070               	goto	l1109
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;feu.c: 137: {
  3071                           ;feu.c: 138: delay_ms(15);
  3072  000FBE  0E00               	movlw	0
  3073  000FC0  6E50               	movwf	delay_ms@TimeToWait+1,c
  3074  000FC2  0E0F               	movlw	15
  3075  000FC4  6E4F               	movwf	delay_ms@TimeToWait,c
  3076  000FC6  ECFD  F015         	call	_delay_ms	;wreg free
  3077                           
  3078                           ;feu.c: 140: feu_tir(Feu.NextOutput);
  3079  000FCA  0100               	movlb	0	; () banked
  3080  000FCC  0100               	movlb	0	; () banked
  3081  000FCE  5196               	movf	(_Feu+10)& (0+255),w,b
  3082  000FD0  ECC9  F015         	call	_feu_tir
  3083                           
  3084                           ;feu.c: 142: Feu.Step = 0x05;
  3085  000FD4  6E56               	movwf	??_feu_process& (0+255),c
  3086  000FD6  0E05               	movlw	5
  3087  000FD8  0100               	movlb	0	; () banked
  3088  000FDA  0100               	movlb	0	; () banked
  3089  000FDC  6F8C               	movwf	_Feu& (0+255),b
  3090  000FDE  5056               	movf	??_feu_process& (0+255),w,c
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;feu.c: 143: Feu.Time = Cptms;
  3094  000FE0  C02D  F093         	movff	_Cptms,_Feu+7	;volatile
  3095  000FE4  C02E  F094         	movff	_Cptms+1,_Feu+8	;volatile
  3096  000FE8  D05A               	goto	l1109
  3097  000FEA                     l6287:
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;feu.c: 147: if ((((unsigned short) (Cptms - Feu.Time) > 200) ? 1 : 0))
  3101  000FEA  0100               	movlb	0	; () banked
  3102  000FEC  EE20  F093         	lfsr	2,_Feu+7
  3103  000FF0  CFDE F056          	movff	postinc2,??_feu_process
  3104  000FF4  CFDD F057          	movff	postdec2,??_feu_process+1
  3105  000FF8  1E56               	comf	??_feu_process,f,c
  3106  000FFA  1E57               	comf	??_feu_process+1,f,c
  3107  000FFC  4A56               	infsnz	??_feu_process,f,c
  3108  000FFE  2A57               	incf	??_feu_process+1,f,c
  3109  001000  502D               	movf	_Cptms,w,c	;volatile
  3110  001002  2656               	addwf	??_feu_process,f,c
  3111  001004  502E               	movf	_Cptms+1,w,c	;volatile
  3112  001006  2257               	addwfc	??_feu_process+1,f,c
  3113  001008  0EC9               	movlw	201
  3114  00100A  5C56               	subwf	??_feu_process,w,c
  3115  00100C  0E00               	movlw	0
  3116  00100E  5857               	subwfb	??_feu_process+1,w,c
  3117  001010  A0D8               	btfss	status,0,c
  3118  001012  D045               	goto	l1109
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;feu.c: 148: {
  3122                           ;feu.c: 149: if (Bouton[Bp_Start].State == 1) {Feu.Step = 0x03;}
  3123  001014  0100               	movlb	0	; () banked
  3124  001016  A38B               	btfss	(_Bouton+11)& (0+255),1,b
  3125  001018  D042               	goto	l1109
  3126                           
  3127                           ; BSR set to: 0
  3128  00101A  6E56               	movwf	??_feu_process& (0+255),c
  3129  00101C  0E03               	movlw	3
  3130  00101E  D018               	goto	L28
  3131  001020                     l1105:
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;feu.c: 153: if (Feu.SaveTime == 0)
  3135  001020  0100               	movlb	0	; () banked
  3136  001022  B397               	btfsc	(_Feu+11)& (0+255),1,b
  3137  001024  D03C               	goto	l1109
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;feu.c: 154: {
  3141                           ;feu.c: 155: Feu.Decompte = Decompte;
  3142  001026  C02F  F08E         	movff	_Decompte,_Feu+2	;volatile
  3143                           
  3144                           ;feu.c: 156: Feu.SavedTime = Cpt1Sur20s;
  3145  00102A  C02B  F08F         	movff	_Cpt1Sur20s,_Feu+3	;volatile
  3146  00102E  C02C  F090         	movff	_Cpt1Sur20s+1,_Feu+4	;volatile
  3147                           
  3148                           ;feu.c: 158: Feu.SaveTime = 1;
  3149  001032  0100               	movlb	0	; () banked
  3150  001034  0100               	movlb	0	; () banked
  3151  001036  8397               	bsf	(_Feu+11)& (0+255),1,b
  3152  001038  D032               	goto	l1109
  3153  00103A                     l1107:
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;feu.c: 162: Decompte = Feu.Decompte;
  3157  00103A  C08E  F02F         	movff	_Feu+2,_Decompte	;volatile
  3158                           
  3159                           ;feu.c: 163: Cpt1Sur20s = Feu.SavedTime;
  3160  00103E  C08F  F02B         	movff	_Feu+3,_Cpt1Sur20s	;volatile
  3161  001042  C090  F02C         	movff	_Feu+4,_Cpt1Sur20s+1	;volatile
  3162                           
  3163                           ;feu.c: 165: Feu.SaveTime = 0;
  3164  001046  0100               	movlb	0	; () banked
  3165  001048  0100               	movlb	0	; () banked
  3166  00104A  9397               	bcf	(_Feu+11)& (0+255),1,b
  3167  00104C                     L30:
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;feu.c: 167: Feu.Step = 0x01;
  3171  00104C  6E56               	movwf	??_feu_process& (0+255),c
  3172  00104E  0E01               	movlw	1
  3173  001050                     L28:
  3174  001050  0100               	movlb	0	; () banked
  3175  001052  0100               	movlb	0	; () banked
  3176  001054  6F8C               	movwf	_Feu& (0+255),b
  3177  001056  D003               	goto	L29
  3178  001058                     l6297:
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;feu.c: 170: Micro.State = 0x08;
  3182  001058  6E56               	movwf	??_feu_process& (0+255),c
  3183  00105A  0E08               	movlw	8
  3184  00105C  6E5F               	movwf	_Micro+4,c
  3185  00105E                     L29:
  3186  00105E  5056               	movf	??_feu_process& (0+255),w,c
  3187                           
  3188                           ;feu.c: 171: break;
  3189  001060  D01E               	goto	l1109
  3190  001062                     l6301:
  3191  001062  0100               	movlb	0	; () banked
  3192  001064  0100               	movlb	0	; () banked
  3193  001066  518C               	movf	_Feu& (0+255),w,b
  3194                           
  3195                           ; Switch size 1, requested type "space"
  3196                           ; Number of cases is 9, Range of values is 0 to 8
  3197                           ; switch strategies available:
  3198                           ; Name         Instructions Cycles
  3199                           ; simple_byte           28    15 (average)
  3200                           ;	Chosen strategy is simple_byte
  3201  001068  0A00               	xorlw	0	; case 0
  3202  00106A  B4D8               	btfsc	status,2,c
  3203  00106C  D708               	goto	l1084
  3204  00106E  0A01               	xorlw	1	; case 1
  3205  001070  B4D8               	btfsc	status,2,c
  3206  001072  D727               	goto	l6255
  3207  001074  0A03               	xorlw	3	; case 2
  3208  001076  B4D8               	btfsc	status,2,c
  3209  001078  D76C               	goto	l6265
  3210  00107A  0A01               	xorlw	1	; case 3
  3211  00107C  B4D8               	btfsc	status,2,c
  3212  00107E  D77B               	goto	l1094
  3213  001080  0A07               	xorlw	7	; case 4
  3214  001082  B4D8               	btfsc	status,2,c
  3215  001084  D799               	goto	l1100
  3216  001086  0A01               	xorlw	1	; case 5
  3217  001088  B4D8               	btfsc	status,2,c
  3218  00108A  D7AF               	goto	l6287
  3219  00108C  0A03               	xorlw	3	; case 6
  3220  00108E  B4D8               	btfsc	status,2,c
  3221  001090  D7C7               	goto	l1105
  3222  001092  0A01               	xorlw	1	; case 7
  3223  001094  B4D8               	btfsc	status,2,c
  3224  001096  D7D1               	goto	l1107
  3225  001098  0A0F               	xorlw	15	; case 8
  3226  00109A  B4D8               	btfsc	status,2,c
  3227  00109C  D7DD               	goto	l6297
  3228  00109E                     l1109:
  3229                           
  3230                           ; BSR set to: 0
  3231  00109E  0012               	return	
  3232  0010A0  FFFF               	dw	65535	; errata NOP
  3233  0010A2                     __end_of_feu_process:
  3234                           	opt stack 0
  3235                           tblptru	equ	0xFF8
  3236                           tblptrh	equ	0xFF7
  3237                           tblptrl	equ	0xFF6
  3238                           tablat	equ	0xFF5
  3239                           prodh	equ	0xFF4
  3240                           prodl	equ	0xFF3
  3241                           intcon	equ	0xFF2
  3242                           intcon2	equ	0xFF1
  3243                           postinc0	equ	0xFEE
  3244                           wreg	equ	0xFE8
  3245                           postdec1	equ	0xFE5
  3246                           fsr1l	equ	0xFE1
  3247                           indf2	equ	0xFDF
  3248                           postinc2	equ	0xFDE
  3249                           postdec2	equ	0xFDD
  3250                           fsr2h	equ	0xFDA
  3251                           fsr2l	equ	0xFD9
  3252                           status	equ	0xFD8
  3253                           
  3254 ;; *************** function _feu_tir *****************
  3255 ;; Defined at:
  3256 ;;		line 9 in file "feu.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  Output          1    wreg     unsigned char 
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;  Output          1   37[COMRAM] unsigned char 
  3261 ;; Return value:  Size  Location     Type
  3262 ;;		None               void
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3270 ;;      Params:         0       0       0       0       0       0       0
  3271 ;;      Locals:         1       0       0       0       0       0       0
  3272 ;;      Temps:          0       0       0       0       0       0       0
  3273 ;;      Totals:         1       0       0       0       0       0       0
  3274 ;;Total ram usage:        1 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    3
  3277 ;; This function calls:
  3278 ;;		_delay_ms
  3279 ;;		_register_write
  3280 ;; This function is called by:
  3281 ;;		_feu_process
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text8
  3286  002B92                     __ptext8:
  3287                           	opt stack 0
  3288  002B92                     _feu_tir:
  3289                           	opt stack 26
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;incstack = 0
  3293  002B92  FFFF               	dw	65535
  3294                           
  3295                           ;feu_tir@Output stored from wreg
  3296  002B94  CFE8 F055          	movff	wreg,feu_tir@Output
  3297                           
  3298                           ;feu.c: 11: PORTAbits.RA5 = 1;
  3299  002B98  8A80               	bsf	3968,5,c	;volatile
  3300                           
  3301                           ;feu.c: 12: PORTBbits.RB1 = 1;
  3302  002B9A  8281               	bsf	3969,1,c	;volatile
  3303                           
  3304                           ;feu.c: 14: register_write(Output);
  3305  002B9C  5055               	movf	feu_tir@Output,w,c
  3306  002B9E  ECAE  F015         	call	_register_write
  3307                           
  3308                           ;feu.c: 15: delay_ms(40);
  3309  002BA2  0E00               	movlw	0
  3310  002BA4  6E50               	movwf	delay_ms@TimeToWait+1,c
  3311  002BA6  0E28               	movlw	40
  3312  002BA8  6E4F               	movwf	delay_ms@TimeToWait,c
  3313  002BAA  ECFD  F015         	call	_delay_ms	;wreg free
  3314                           
  3315                           ;feu.c: 16: register_write(0);
  3316  002BAE  0E00               	movlw	0
  3317  002BB0  ECAE  F015         	call	_register_write
  3318                           
  3319                           ;feu.c: 18: PORTBbits.RB1 = 0;
  3320  002BB4  9281               	bcf	3969,1,c	;volatile
  3321                           
  3322                           ;feu.c: 19: PORTAbits.RA5 = 0;
  3323  002BB6  9A80               	bcf	3968,5,c	;volatile
  3324                           
  3325                           ;feu.c: 22: Feu.LastOutput = Feu.NextOutput;
  3326  002BB8  C096  F095         	movff	_Feu+10,_Feu+9
  3327                           
  3328                           ;feu.c: 23: Feu.Cpt ++;
  3329  002BBC  0100               	movlb	0	; () banked
  3330  002BBE  0100               	movlb	0	; () banked
  3331  002BC0  2B8D               	incf	(_Feu+1)& (0+255),f,b
  3332                           
  3333                           ; BSR set to: 0
  3334  002BC2  0012               	return	
  3335  002BC4  FFFF               	dw	65535	; errata NOP
  3336  002BC6                     __end_of_feu_tir:
  3337                           	opt stack 0
  3338                           tblptru	equ	0xFF8
  3339                           tblptrh	equ	0xFF7
  3340                           tblptrl	equ	0xFF6
  3341                           tablat	equ	0xFF5
  3342                           prodh	equ	0xFF4
  3343                           prodl	equ	0xFF3
  3344                           intcon	equ	0xFF2
  3345                           intcon2	equ	0xFF1
  3346                           postinc0	equ	0xFEE
  3347                           wreg	equ	0xFE8
  3348                           postdec1	equ	0xFE5
  3349                           fsr1l	equ	0xFE1
  3350                           indf2	equ	0xFDF
  3351                           postinc2	equ	0xFDE
  3352                           postdec2	equ	0xFDD
  3353                           fsr2h	equ	0xFDA
  3354                           fsr2l	equ	0xFD9
  3355                           status	equ	0xFD8
  3356                           
  3357 ;; *************** function _register_write *****************
  3358 ;; Defined at:
  3359 ;;		line 3 in file "register.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  Output          1    wreg     unsigned char 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  Output          1   32[COMRAM] unsigned char 
  3364 ;;  i               1   33[COMRAM] unsigned char 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;		None               void
  3367 ;; Registers used:
  3368 ;;		wreg, status,2, status,0
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3374 ;;      Params:         0       0       0       0       0       0       0
  3375 ;;      Locals:         2       0       0       0       0       0       0
  3376 ;;      Temps:          1       0       0       0       0       0       0
  3377 ;;      Totals:         3       0       0       0       0       0       0
  3378 ;;Total ram usage:        3 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; Hardware stack levels required when called:    2
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_test_process
  3385 ;;		_feu_tir
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text9
  3390  002B5C                     __ptext9:
  3391                           	opt stack 0
  3392  002B5C                     _register_write:
  3393                           	opt stack 27
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;incstack = 0
  3397  002B5C  FFFF               	dw	65535
  3398                           
  3399                           ;register_write@Output stored from wreg
  3400  002B5E  CFE8 F050          	movff	wreg,register_write@Output
  3401                           
  3402                           ;register.c: 5: unsigned char i;
  3403                           ;register.c: 8: PORTAbits.RA2 = 0;
  3404  002B62  9480               	bcf	3968,2,c	;volatile
  3405                           
  3406                           ;register.c: 11: PORTBbits.RB2 = 0;
  3407  002B64  9481               	bcf	3969,2,c	;volatile
  3408                           
  3409                           ;register.c: 12: PORTBbits.RB2 = 1;
  3410  002B66  8481               	bsf	3969,2,c	;volatile
  3411                           
  3412                           ;register.c: 14: PORTBbits.RB3 = 0;
  3413  002B68  9681               	bcf	3969,3,c	;volatile
  3414                           
  3415                           ;register.c: 16: for (i = 32; i > 0; i --)
  3416  002B6A  6E4F               	movwf	??_register_write& (0+255),c
  3417  002B6C  0E20               	movlw	32
  3418  002B6E  6E51               	movwf	register_write@i,c
  3419  002B70  504F               	movf	??_register_write& (0+255),w,c
  3420  002B72  D009               	goto	L32
  3421  002B74                     l880:
  3422                           
  3423                           ;register.c: 17: {
  3424                           ;register.c: 18: PORTBbits.RB4 = 0;
  3425  002B74  9881               	bcf	3969,4,c	;volatile
  3426                           
  3427                           ;register.c: 20: if (Output == i) {PORTBbits.RB5 = 1;}
  3428  002B76  5051               	movf	register_write@i,w,c
  3429  002B78  6250               	cpfseq	register_write@Output,c
  3430  002B7A  D002               	goto	l882
  3431  002B7C  8A81               	bsf	3969,5,c	;volatile
  3432  002B7E  D001               	goto	l883
  3433  002B80                     l882:
  3434                           
  3435                           ;register.c: 21: else {PORTBbits.RB5 = 0;}
  3436  002B80  9A81               	bcf	3969,5,c	;volatile
  3437  002B82                     l883:
  3438                           
  3439                           ;register.c: 23: PORTBbits.RB4 = 1;
  3440  002B82  8881               	bsf	3969,4,c	;volatile
  3441  002B84  0651               	decf	register_write@i,f,c
  3442  002B86                     L32:
  3443  002B86  6651               	tstfsz	register_write@i,c
  3444  002B88  D7F5               	goto	l880
  3445                           
  3446                           ;register.c: 24: }
  3447                           ;register.c: 26: PORTBbits.RB3 = 1;
  3448  002B8A  8681               	bsf	3969,3,c	;volatile
  3449                           
  3450                           ;register.c: 29: PORTAbits.RA2 = 1;
  3451  002B8C  8480               	bsf	3968,2,c	;volatile
  3452  002B8E  0012               	return	
  3453  002B90  FFFF               	dw	65535	; errata NOP
  3454  002B92                     __end_of_register_write:
  3455                           	opt stack 0
  3456                           tblptru	equ	0xFF8
  3457                           tblptrh	equ	0xFF7
  3458                           tblptrl	equ	0xFF6
  3459                           tablat	equ	0xFF5
  3460                           prodh	equ	0xFF4
  3461                           prodl	equ	0xFF3
  3462                           intcon	equ	0xFF2
  3463                           intcon2	equ	0xFF1
  3464                           postinc0	equ	0xFEE
  3465                           wreg	equ	0xFE8
  3466                           postdec1	equ	0xFE5
  3467                           fsr1l	equ	0xFE1
  3468                           indf2	equ	0xFDF
  3469                           postinc2	equ	0xFDE
  3470                           postdec2	equ	0xFDD
  3471                           fsr2h	equ	0xFDA
  3472                           fsr2l	equ	0xFD9
  3473                           status	equ	0xFD8
  3474                           
  3475 ;; *************** function _feu_check_end *****************
  3476 ;; Defined at:
  3477 ;;		line 3 in file "feu.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;		None
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      unsigned char 
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, status,0
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3491 ;;      Params:         0       0       0       0       0       0       0
  3492 ;;      Locals:         0       0       0       0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0       0       0
  3494 ;;      Totals:         0       0       0       0       0       0       0
  3495 ;;Total ram usage:        0 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    2
  3498 ;; This function calls:
  3499 ;;		Nothing
  3500 ;; This function is called by:
  3501 ;;		_feu_process
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text10
  3506  002CE4                     __ptext10:
  3507                           	opt stack 0
  3508  002CE4                     _feu_check_end:
  3509                           	opt stack 27
  3510                           
  3511                           ;incstack = 0
  3512  002CE4  FFFF               	dw	65535
  3513                           
  3514                           ;feu.c: 5: if ((Feu.Cpt >= 32) || (Feu.NextOutput == 0)) {return 1;}
  3515  002CE6  0E20               	movlw	32
  3516  002CE8  0100               	movlb	0	; () banked
  3517  002CEA  0100               	movlb	0	; () banked
  3518  002CEC  5D8D               	subwf	(_Feu+1)& (0+255),w,b
  3519  002CEE  B0D8               	btfsc	status,0,c
  3520  002CF0  D004               	goto	l5775
  3521                           
  3522                           ; BSR set to: 0
  3523  002CF2  0100               	movlb	0	; () banked
  3524  002CF4  0100               	movlb	0	; () banked
  3525  002CF6  6796               	tstfsz	(_Feu+10)& (0+255),b
  3526  002CF8  D002               	goto	l5781
  3527  002CFA                     l5775:
  3528                           
  3529                           ; BSR set to: 0
  3530  002CFA  0E01               	movlw	1
  3531  002CFC  D001               	goto	l1052
  3532  002CFE                     l5781:
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;feu.c: 6: else {return 0;}
  3536  002CFE  0E00               	movlw	0
  3537  002D00                     l1052:
  3538                           
  3539                           ; BSR set to: 0
  3540  002D00  0012               	return	
  3541  002D02  FFFF               	dw	65535	; errata NOP
  3542  002D04                     __end_of_feu_check_end:
  3543                           	opt stack 0
  3544                           tblptru	equ	0xFF8
  3545                           tblptrh	equ	0xFF7
  3546                           tblptrl	equ	0xFF6
  3547                           tablat	equ	0xFF5
  3548                           prodh	equ	0xFF4
  3549                           prodl	equ	0xFF3
  3550                           intcon	equ	0xFF2
  3551                           intcon2	equ	0xFF1
  3552                           postinc0	equ	0xFEE
  3553                           wreg	equ	0xFE8
  3554                           postdec1	equ	0xFE5
  3555                           fsr1l	equ	0xFE1
  3556                           indf2	equ	0xFDF
  3557                           postinc2	equ	0xFDE
  3558                           postdec2	equ	0xFDD
  3559                           fsr2h	equ	0xFDA
  3560                           fsr2l	equ	0xFD9
  3561                           status	equ	0xFD8
  3562                           
  3563 ;; *************** function _feu_check_bp *****************
  3564 ;; Defined at:
  3565 ;;		line 26 in file "feu.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;		None
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;		None
  3570 ;; Return value:  Size  Location     Type
  3571 ;;		None               void
  3572 ;; Registers used:
  3573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3579 ;;      Params:         0       0       0       0       0       0       0
  3580 ;;      Locals:         0       0       0       0       0       0       0
  3581 ;;      Temps:          1       0       0       0       0       0       0
  3582 ;;      Totals:         1       0       0       0       0       0       0
  3583 ;;Total ram usage:        1 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:    5
  3586 ;; This function calls:
  3587 ;;		_ecran_print_num
  3588 ;;		_ecran_print_one_char
  3589 ;; This function is called by:
  3590 ;;		_main
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text11
  3595  0019DA                     __ptext11:
  3596                           	opt stack 0
  3597  0019DA                     _feu_check_bp:
  3598                           	opt stack 25
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;incstack = 0
  3602  0019DA  FFFF               	dw	65535
  3603                           
  3604                           ;feu.c: 28: if ( (Micro.Stat.End == 1)
  3605                           ;feu.c: 29: && (Bouton[Bp_On].State == 0))
  3606  0019DC  A65F               	btfss	_Micro+4,3,c
  3607  0019DE  D009               	goto	l1059
  3608  0019E0  0100               	movlb	0	; () banked
  3609  0019E2  B382               	btfsc	(_Bouton+2)& (0+255),1,b
  3610  0019E4  D006               	goto	l1059
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;feu.c: 30: {
  3614                           ;feu.c: 31: Ecran.Digits = (char *) Version;
  3615  0019E6  0E06               	movlw	high _Version
  3616  0019E8  0100               	movlb	0	; () banked
  3617  0019EA  0100               	movlb	0	; () banked
  3618  0019EC  6F9D               	movwf	(_Ecran+5)& (0+255),b
  3619  0019EE  0E10               	movlw	low _Version
  3620  0019F0  D053               	goto	L36
  3621  0019F2                     l1059:
  3622                           
  3623                           ;feu.c: 34: else if ( (Bouton[Bp_Start].State == 1)
  3624                           ;feu.c: 35: && (Feu.CanStopStart == 0))
  3625  0019F2  0100               	movlb	0	; () banked
  3626  0019F4  A38B               	btfss	(_Bouton+11)& (0+255),1,b
  3627  0019F6  D007               	goto	l1061
  3628                           
  3629                           ; BSR set to: 0
  3630  0019F8  0100               	movlb	0	; () banked
  3631  0019FA  B197               	btfsc	(_Feu+11)& (0+255),0,b
  3632  0019FC  D004               	goto	l1061
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;feu.c: 36: {
  3636                           ;feu.c: 37: Feu.CanStopStart = 1;
  3637  0019FE  0100               	movlb	0	; () banked
  3638  001A00  0100               	movlb	0	; () banked
  3639  001A02  8197               	bsf	(_Feu+11)& (0+255),0,b
  3640                           
  3641                           ;feu.c: 38: }
  3642  001A04  D07C               	goto	l1080
  3643  001A06                     l1061:
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;feu.c: 39: else if ( (Micro.Mods == 0)
  3647                           ;feu.c: 40: && (Feu.CanStopStart == 1)
  3648                           ;feu.c: 41: && (Bouton[Bp_Start].State == 0))
  3649  001A06  6660               	tstfsz	_Micro+5,c
  3650  001A08  D021               	goto	l1063
  3651                           
  3652                           ; BSR set to: 0
  3653  001A0A  0100               	movlb	0	; () banked
  3654  001A0C  A197               	btfss	(_Feu+11)& (0+255),0,b
  3655  001A0E  D01E               	goto	l1063
  3656                           
  3657                           ; BSR set to: 0
  3658  001A10  0100               	movlb	0	; () banked
  3659  001A12  B38B               	btfsc	(_Bouton+11)& (0+255),1,b
  3660  001A14  D01B               	goto	l1063
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;feu.c: 42: {
  3664                           ;feu.c: 43: if (Micro.Stat.Go == 1)
  3665  001A16  A25F               	btfss	_Micro+4,1,c
  3666  001A18  D009               	goto	l1064
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;feu.c: 44: {
  3670                           ;feu.c: 45: Feu.Step = 0x06;
  3671  001A1A  6E59               	movwf	??_feu_check_bp& (0+255),c
  3672  001A1C  0E06               	movlw	6
  3673  001A1E  0100               	movlb	0	; () banked
  3674  001A20  0100               	movlb	0	; () banked
  3675  001A22  6F8C               	movwf	_Feu& (0+255),b
  3676  001A24  5059               	movf	??_feu_check_bp& (0+255),w,c
  3677                           
  3678                           ;feu.c: 46: Micro.State = 0x04;
  3679  001A26  6E59               	movwf	??_feu_check_bp& (0+255),c
  3680  001A28  0E04               	movlw	4
  3681  001A2A  D00A               	goto	L34
  3682  001A2C                     l1064:
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;feu.c: 48: else if (Micro.Stat.Stop == 1)
  3686  001A2C  A45F               	btfss	_Micro+4,2,c
  3687  001A2E  D00A               	goto	l6325
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;feu.c: 49: {
  3691                           ;feu.c: 50: Feu.Step = 0x07;
  3692  001A30  6E59               	movwf	??_feu_check_bp& (0+255),c
  3693  001A32  0E07               	movlw	7
  3694  001A34  0100               	movlb	0	; () banked
  3695  001A36  0100               	movlb	0	; () banked
  3696  001A38  6F8C               	movwf	_Feu& (0+255),b
  3697  001A3A  5059               	movf	??_feu_check_bp& (0+255),w,c
  3698                           
  3699                           ;feu.c: 51: Micro.State = 0x02;
  3700  001A3C  6E59               	movwf	??_feu_check_bp& (0+255),c
  3701  001A3E  0E02               	movlw	2
  3702  001A40                     L34:
  3703  001A40  6E5F               	movwf	_Micro+4,c
  3704  001A42  5059               	movf	??_feu_check_bp& (0+255),w,c
  3705  001A44                     l6325:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;feu.c: 52: }
  3709                           ;feu.c: 54: Feu.CanStopStart = 0;
  3710  001A44  0100               	movlb	0	; () banked
  3711  001A46  0100               	movlb	0	; () banked
  3712  001A48  9197               	bcf	(_Feu+11)& (0+255),0,b
  3713                           
  3714                           ;feu.c: 55: }
  3715  001A4A  D059               	goto	l1080
  3716  001A4C                     l1063:
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;feu.c: 56: else if (Bouton[Comu_Test].State == 1)
  3720  001A4C  0100               	movlb	0	; () banked
  3721  001A4E  A388               	btfss	(_Bouton+8)& (0+255),1,b
  3722  001A50  D006               	goto	l1068
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;feu.c: 57: {
  3726                           ;feu.c: 58: Ecran.Digits = (char *) ErreurTir;
  3727  001A52  0E06               	movlw	high _ErreurTir
  3728  001A54  0100               	movlb	0	; () banked
  3729  001A56  0100               	movlb	0	; () banked
  3730  001A58  6F9D               	movwf	(_Ecran+5)& (0+255),b
  3731  001A5A  0E0B               	movlw	low _ErreurTir
  3732  001A5C  D01D               	goto	L36
  3733  001A5E                     l1068:
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;feu.c: 61: else if (Bouton[Bp_IdTest].State == 0)
  3737  001A5E  0100               	movlb	0	; () banked
  3738  001A60  B385               	btfsc	(_Bouton+5)& (0+255),1,b
  3739  001A62  D020               	goto	l1070
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;feu.c: 62: {
  3743                           ;feu.c: 63: ecran_print_num(Feu.LastOutput);
  3744  001A64  0100               	movlb	0	; () banked
  3745  001A66  0100               	movlb	0	; () banked
  3746  001A68  5195               	movf	(_Feu+9)& (0+255),w,b
  3747  001A6A  ECE8  F010         	call	_ecran_print_num
  3748                           
  3749                           ;feu.c: 65: if (Micro.Stat.Stop == 1)
  3750  001A6E  A45F               	btfss	_Micro+4,2,c
  3751  001A70  D016               	goto	l6339
  3752                           
  3753                           ;feu.c: 66: {
  3754                           ;feu.c: 67: Ecran.Digit[0] = '-';
  3755  001A72  6E59               	movwf	??_feu_check_bp& (0+255),c
  3756  001A74  0E2D               	movlw	45
  3757  001A76  0100               	movlb	0	; () banked
  3758  001A78  0100               	movlb	0	; () banked
  3759  001A7A  6F98               	movwf	_Ecran& (0+255),b
  3760  001A7C  5059               	movf	??_feu_check_bp& (0+255),w,c
  3761                           
  3762                           ;feu.c: 68: Ecran.Digit[1] = '-';
  3763  001A7E  6E59               	movwf	??_feu_check_bp& (0+255),c
  3764  001A80  0E2D               	movlw	45
  3765  001A82  0100               	movlb	0	; () banked
  3766  001A84  0100               	movlb	0	; () banked
  3767  001A86  6F99               	movwf	(_Ecran+1)& (0+255),b
  3768  001A88  5059               	movf	??_feu_check_bp& (0+255),w,c
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;feu.c: 70: Ecran.Digits = Ecran.Digit;
  3772  001A8A  0100               	movlb	0	; () banked
  3773  001A8C  0E00               	movlw	high _Ecran
  3774  001A8E  0100               	movlb	0	; () banked
  3775  001A90  0100               	movlb	0	; () banked
  3776  001A92  6F9D               	movwf	(_Ecran+5)& (0+255),b
  3777  001A94  0100               	movlb	0	; () banked
  3778  001A96  0E98               	movlw	low _Ecran
  3779  001A98                     L36:
  3780  001A98  0100               	movlb	0	; () banked
  3781  001A9A  0100               	movlb	0	; () banked
  3782  001A9C  6F9C               	movwf	(_Ecran+4)& (0+255),b
  3783  001A9E                     l6339:
  3784                           
  3785                           ;feu.c: 71: }
  3786                           ;feu.c: 72: Ecran.Solid = 0;
  3787  001A9E  6E59               	movwf	??_feu_check_bp& (0+255),c
  3788  001AA0  0E00               	movlw	0
  3789  001AA2  D029               	goto	L35
  3790  001AA4                     l1070:
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;feu.c: 74: else
  3794                           ;feu.c: 75: {
  3795                           ;feu.c: 76: if (Micro.Stat.Armed == 1) {ecran_print_one_char(0,'-');}
  3796  001AA4  A05F               	btfss	_Micro+4,0,c
  3797  001AA6  D008               	goto	l1073
  3798                           
  3799                           ; BSR set to: 0
  3800  001AA8  6E59               	movwf	??_feu_check_bp& (0+255),c
  3801  001AAA  0E2D               	movlw	45
  3802  001AAC  6E50               	movwf	ecran_print_one_char@Character,c
  3803  001AAE  5059               	movf	??_feu_check_bp& (0+255),w,c
  3804  001AB0  0E00               	movlw	0
  3805  001AB2  EC35  F015         	call	_ecran_print_one_char
  3806  001AB6  D01D               	goto	l6349
  3807  001AB8                     l1073:
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;feu.c: 77: else if (Micro.Stat.Go == 1) {ecran_print_one_char(1,'-');}
  3811  001AB8  A25F               	btfss	_Micro+4,1,c
  3812  001ABA  D008               	goto	l1075
  3813                           
  3814                           ; BSR set to: 0
  3815  001ABC  6E59               	movwf	??_feu_check_bp& (0+255),c
  3816  001ABE  0E2D               	movlw	45
  3817  001AC0  6E50               	movwf	ecran_print_one_char@Character,c
  3818  001AC2  5059               	movf	??_feu_check_bp& (0+255),w,c
  3819  001AC4  0E01               	movlw	1
  3820  001AC6  EC35  F015         	call	_ecran_print_one_char
  3821  001ACA  D013               	goto	l6349
  3822  001ACC                     l1075:
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;feu.c: 78: else if (Micro.Stat.Stop == 1) {ecran_print_one_char(2,'-');}
  3826  001ACC  A45F               	btfss	_Micro+4,2,c
  3827  001ACE  D008               	goto	l1077
  3828                           
  3829                           ; BSR set to: 0
  3830  001AD0  6E59               	movwf	??_feu_check_bp& (0+255),c
  3831  001AD2  0E2D               	movlw	45
  3832  001AD4  6E50               	movwf	ecran_print_one_char@Character,c
  3833  001AD6  5059               	movf	??_feu_check_bp& (0+255),w,c
  3834  001AD8  0E02               	movlw	2
  3835  001ADA  EC35  F015         	call	_ecran_print_one_char
  3836  001ADE  D009               	goto	l6349
  3837  001AE0                     l1077:
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;feu.c: 79: else if (Micro.Stat.End == 1) {ecran_print_one_char(3,'-');}
  3841  001AE0  A65F               	btfss	_Micro+4,3,c
  3842  001AE2  D007               	goto	l6349
  3843                           
  3844                           ; BSR set to: 0
  3845  001AE4  6E59               	movwf	??_feu_check_bp& (0+255),c
  3846  001AE6  0E2D               	movlw	45
  3847  001AE8  6E50               	movwf	ecran_print_one_char@Character,c
  3848  001AEA  5059               	movf	??_feu_check_bp& (0+255),w,c
  3849  001AEC  0E03               	movlw	3
  3850  001AEE  EC35  F015         	call	_ecran_print_one_char
  3851  001AF2                     l6349:
  3852                           
  3853                           ;feu.c: 81: Ecran.Solid = 1;
  3854  001AF2  6E59               	movwf	??_feu_check_bp& (0+255),c
  3855  001AF4  0E01               	movlw	1
  3856  001AF6                     L35:
  3857  001AF6  0100               	movlb	0	; () banked
  3858  001AF8  0100               	movlb	0	; () banked
  3859  001AFA  6FA7               	movwf	(_Ecran+15)& (0+255),b
  3860  001AFC  5059               	movf	??_feu_check_bp& (0+255),w,c
  3861  001AFE                     l1080:
  3862                           
  3863                           ; BSR set to: 0
  3864  001AFE  0012               	return	
  3865  001B00  FFFF               	dw	65535	; errata NOP
  3866  001B02                     __end_of_feu_check_bp:
  3867                           	opt stack 0
  3868                           tblptru	equ	0xFF8
  3869                           tblptrh	equ	0xFF7
  3870                           tblptrl	equ	0xFF6
  3871                           tablat	equ	0xFF5
  3872                           prodh	equ	0xFF4
  3873                           prodl	equ	0xFF3
  3874                           intcon	equ	0xFF2
  3875                           intcon2	equ	0xFF1
  3876                           postinc0	equ	0xFEE
  3877                           wreg	equ	0xFE8
  3878                           postdec1	equ	0xFE5
  3879                           fsr1l	equ	0xFE1
  3880                           indf2	equ	0xFDF
  3881                           postinc2	equ	0xFDE
  3882                           postdec2	equ	0xFDD
  3883                           fsr2h	equ	0xFDA
  3884                           fsr2l	equ	0xFD9
  3885                           status	equ	0xFD8
  3886                           
  3887 ;; *************** function _ecran_print_num *****************
  3888 ;; Defined at:
  3889 ;;		line 66 in file "ecran.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  Num             1    wreg     unsigned char 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;  Num             1    8[BANK0 ] unsigned char 
  3894 ;;  tempStr         2    9[BANK0 ] PTR unsigned char 
  3895 ;;		 -> PrintTest(5), 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;		None               void
  3898 ;; Registers used:
  3899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3905 ;;      Params:         0       0       0       0       0       0       0
  3906 ;;      Locals:         0       3       0       0       0       0       0
  3907 ;;      Temps:          1       0       0       0       0       0       0
  3908 ;;      Totals:         1       3       0       0       0       0       0
  3909 ;;Total ram usage:        4 bytes
  3910 ;; Hardware stack levels used:    1
  3911 ;; Hardware stack levels required when called:    4
  3912 ;; This function calls:
  3913 ;;		_DecToStr
  3914 ;; This function is called by:
  3915 ;;		_test_process
  3916 ;;		_feu_check_bp
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text12
  3921  0021D0                     __ptext12:
  3922                           	opt stack 0
  3923  0021D0                     _ecran_print_num:
  3924                           	opt stack 25
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;incstack = 0
  3928  0021D0  FFFF               	dw	65535
  3929                           
  3930                           ;ecran_print_num@Num stored from wreg
  3931  0021D2  CFE8 F0B0          	movff	wreg,ecran_print_num@Num
  3932                           
  3933                           ;ecran.c: 68: char * tempStr;
  3934                           ;ecran.c: 70: tempStr = PrintTest;
  3935  0021D6  0100               	movlb	0	; () banked
  3936  0021D8  0E00               	movlw	high _PrintTest
  3937  0021DA  0100               	movlb	0	; () banked
  3938  0021DC  0100               	movlb	0	; () banked
  3939  0021DE  6FB2               	movwf	(ecran_print_num@tempStr+1)& (0+255),b
  3940  0021E0  0100               	movlb	0	; () banked
  3941  0021E2  0EC8               	movlw	low _PrintTest
  3942  0021E4  0100               	movlb	0	; () banked
  3943  0021E6  0100               	movlb	0	; () banked
  3944  0021E8  6FB1               	movwf	ecran_print_num@tempStr& (0+255),b
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;ecran.c: 72: tempStr = DecToStr(Num, tempStr);
  3948  0021EA  0100               	movlb	0	; () banked
  3949  0021EC  C0B2  F057         	movff	ecran_print_num@tempStr+1,DecToStr@result+1
  3950  0021F0  0100               	movlb	0	; () banked
  3951  0021F2  C0B1  F056         	movff	ecran_print_num@tempStr,DecToStr@result
  3952  0021F6  0100               	movlb	0	; () banked
  3953  0021F8  0100               	movlb	0	; () banked
  3954  0021FA  51B0               	movf	ecran_print_num@Num& (0+255),w,b
  3955  0021FC  EC81  F00D         	call	_DecToStr
  3956  002200  C056  F0B1         	movff	?_DecToStr,ecran_print_num@tempStr
  3957  002204  C057  F0B2         	movff	?_DecToStr+1,ecran_print_num@tempStr+1
  3958                           
  3959                           ;ecran.c: 74: Ecran.Digit[0] = ' ';
  3960  002208  6E58               	movwf	??_ecran_print_num& (0+255),c
  3961  00220A  0E20               	movlw	32
  3962  00220C  0100               	movlb	0	; () banked
  3963  00220E  0100               	movlb	0	; () banked
  3964  002210  6F98               	movwf	_Ecran& (0+255),b
  3965  002212  5058               	movf	??_ecran_print_num& (0+255),w,c
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;ecran.c: 75: Ecran.Digit[1] = ' ';
  3969  002214  6E58               	movwf	??_ecran_print_num& (0+255),c
  3970  002216  0E20               	movlw	32
  3971  002218  0100               	movlb	0	; () banked
  3972  00221A  0100               	movlb	0	; () banked
  3973  00221C  6F99               	movwf	(_Ecran+1)& (0+255),b
  3974  00221E  5058               	movf	??_ecran_print_num& (0+255),w,c
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;ecran.c: 77: if (Num < 10)
  3978  002220  0E0A               	movlw	10
  3979  002222  0100               	movlb	0	; () banked
  3980  002224  0100               	movlb	0	; () banked
  3981  002226  5DB0               	subwf	ecran_print_num@Num& (0+255),w,b
  3982  002228  B0D8               	btfsc	status,0,c
  3983  00222A  D00F               	goto	l5619
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;ecran.c: 78: {
  3987                           ;ecran.c: 79: Ecran.Digit[3] = tempStr[0];
  3988  00222C  C0B1  FFD9         	movff	ecran_print_num@tempStr,fsr2l
  3989  002230  C0B2  FFDA         	movff	ecran_print_num@tempStr+1,fsr2h
  3990  002234  50DF               	movf	indf2,w,c
  3991  002236  0100               	movlb	0	; () banked
  3992  002238  0100               	movlb	0	; () banked
  3993  00223A  6F9B               	movwf	(_Ecran+3)& (0+255),b
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;ecran.c: 80: Ecran.Digit[2] = '0';
  3997  00223C  6E58               	movwf	??_ecran_print_num& (0+255),c
  3998  00223E  0E30               	movlw	48
  3999  002240  0100               	movlb	0	; () banked
  4000  002242  0100               	movlb	0	; () banked
  4001  002244  6F9A               	movwf	(_Ecran+2)& (0+255),b
  4002  002246  5058               	movf	??_ecran_print_num& (0+255),w,c
  4003                           
  4004                           ;ecran.c: 81: }
  4005  002248  D015               	goto	l5623
  4006  00224A                     l5619:
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;ecran.c: 82: else
  4010                           ;ecran.c: 83: {
  4011                           ;ecran.c: 84: Ecran.Digit[3] = tempStr[1];
  4012  00224A  0100               	movlb	0	; () banked
  4013  00224C  EE20 F001          	lfsr	2,1
  4014  002250  0100               	movlb	0	; () banked
  4015  002252  51B1               	movf	ecran_print_num@tempStr& (0+255),w,b
  4016  002254  26D9               	addwf	fsr2l,f,c
  4017  002256  0100               	movlb	0	; () banked
  4018  002258  51B2               	movf	(ecran_print_num@tempStr+1)& (0+255),w,b
  4019  00225A  22DA               	addwfc	fsr2h,f,c
  4020  00225C  50DF               	movf	indf2,w,c
  4021  00225E  0100               	movlb	0	; () banked
  4022  002260  0100               	movlb	0	; () banked
  4023  002262  6F9B               	movwf	(_Ecran+3)& (0+255),b
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;ecran.c: 85: Ecran.Digit[2] = tempStr[0];
  4027  002264  C0B1  FFD9         	movff	ecran_print_num@tempStr,fsr2l
  4028  002268  C0B2  FFDA         	movff	ecran_print_num@tempStr+1,fsr2h
  4029  00226C  50DF               	movf	indf2,w,c
  4030  00226E  0100               	movlb	0	; () banked
  4031  002270  0100               	movlb	0	; () banked
  4032  002272  6F9A               	movwf	(_Ecran+2)& (0+255),b
  4033  002274                     l5623:
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;ecran.c: 86: }
  4037                           ;ecran.c: 88: Ecran.Digits = Ecran.Digit;
  4038  002274  0100               	movlb	0	; () banked
  4039  002276  0E00               	movlw	high _Ecran
  4040  002278  0100               	movlb	0	; () banked
  4041  00227A  0100               	movlb	0	; () banked
  4042  00227C  6F9D               	movwf	(_Ecran+5)& (0+255),b
  4043  00227E  0100               	movlb	0	; () banked
  4044  002280  0E98               	movlw	low _Ecran
  4045  002282  0100               	movlb	0	; () banked
  4046  002284  0100               	movlb	0	; () banked
  4047  002286  6F9C               	movwf	(_Ecran+4)& (0+255),b
  4048                           
  4049                           ; BSR set to: 0
  4050  002288  0012               	return	
  4051  00228A  FFFF               	dw	65535	; errata NOP
  4052  00228C                     __end_of_ecran_print_num:
  4053                           	opt stack 0
  4054                           tblptru	equ	0xFF8
  4055                           tblptrh	equ	0xFF7
  4056                           tblptrl	equ	0xFF6
  4057                           tablat	equ	0xFF5
  4058                           prodh	equ	0xFF4
  4059                           prodl	equ	0xFF3
  4060                           intcon	equ	0xFF2
  4061                           intcon2	equ	0xFF1
  4062                           postinc0	equ	0xFEE
  4063                           wreg	equ	0xFE8
  4064                           postdec1	equ	0xFE5
  4065                           fsr1l	equ	0xFE1
  4066                           indf2	equ	0xFDF
  4067                           postinc2	equ	0xFDE
  4068                           postdec2	equ	0xFDD
  4069                           fsr2h	equ	0xFDA
  4070                           fsr2l	equ	0xFD9
  4071                           status	equ	0xFD8
  4072                           
  4073 ;; *************** function _DecToStr *****************
  4074 ;; Defined at:
  4075 ;;		line 3 in file "utils.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;  value           1    wreg     unsigned char 
  4078 ;;  result          2   38[COMRAM] PTR unsigned char 
  4079 ;;		 -> PrintTest(5), 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;  value           1    6[BANK0 ] unsigned char 
  4082 ;;  compareValue    2    4[BANK0 ] unsigned short 
  4083 ;;  power10         1    7[BANK0 ] unsigned char 
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  2   38[COMRAM] PTR unsigned char 
  4086 ;; Registers used:
  4087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4093 ;;      Params:         2       0       0       0       0       0       0
  4094 ;;      Locals:         0       4       0       0       0       0       0
  4095 ;;      Temps:          0       4       0       0       0       0       0
  4096 ;;      Totals:         2       8       0       0       0       0       0
  4097 ;;Total ram usage:       10 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    3
  4100 ;; This function calls:
  4101 ;;		___awmod
  4102 ;;		___lbdiv
  4103 ;;		___wmul
  4104 ;; This function is called by:
  4105 ;;		_ecran_print_num
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           	psect	text13
  4110  001B02                     __ptext13:
  4111                           	opt stack 0
  4112  001B02                     _DecToStr:
  4113                           	opt stack 25
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;incstack = 0
  4117  001B02  FFFF               	dw	65535
  4118                           
  4119                           ;DecToStr@value stored from wreg
  4120  001B04  CFE8 F0AE          	movff	wreg,DecToStr@value
  4121                           
  4122                           ;utils.c: 5: unsigned char power10;
  4123                           ;utils.c: 6: unsigned short compareValue;
  4124                           ;utils.c: 8: compareValue = 1;
  4125  001B08  0E00               	movlw	0
  4126  001B0A  0100               	movlb	0	; () banked
  4127  001B0C  0100               	movlb	0	; () banked
  4128  001B0E  6FAD               	movwf	(DecToStr@compareValue+1)& (0+255),b
  4129  001B10  0E01               	movlw	1
  4130  001B12  0100               	movlb	0	; () banked
  4131  001B14  6FAC               	movwf	DecToStr@compareValue& (0+255),b
  4132                           
  4133                           ;utils.c: 10: for (power10 = 0; compareValue <= value; power10 ++)
  4134  001B16  0100               	movlb	0	; () banked
  4135  001B18  6FA8               	movwf	??_DecToStr& (0+255),b
  4136  001B1A  0E00               	movlw	0
  4137  001B1C  0100               	movlb	0	; () banked
  4138  001B1E  0100               	movlb	0	; () banked
  4139  001B20  6FAF               	movwf	DecToStr@power10& (0+255),b
  4140  001B22  0100               	movlb	0	; () banked
  4141  001B24  51A8               	movf	??_DecToStr& (0+255),w,b
  4142  001B26  D011               	goto	l5353
  4143  001B28                     l5349:
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;utils.c: 11: {
  4147                           ;utils.c: 12: compareValue *= 10;
  4148  001B28  C0AC  F04F         	movff	DecToStr@compareValue,___wmul@multiplier
  4149  001B2C  C0AD  F050         	movff	DecToStr@compareValue+1,___wmul@multiplier+1
  4150  001B30  0E00               	movlw	0
  4151  001B32  6E52               	movwf	___wmul@multiplicand+1,c
  4152  001B34  0E0A               	movlw	10
  4153  001B36  6E51               	movwf	___wmul@multiplicand,c
  4154  001B38  EC55  F015         	call	___wmul	;wreg free
  4155  001B3C  C04F  F0AC         	movff	?___wmul,DecToStr@compareValue
  4156  001B40  C050  F0AD         	movff	?___wmul+1,DecToStr@compareValue+1
  4157  001B44  0100               	movlb	0	; () banked
  4158  001B46  0100               	movlb	0	; () banked
  4159  001B48  2BAF               	incf	DecToStr@power10& (0+255),f,b
  4160  001B4A                     l5353:
  4161                           
  4162                           ; BSR set to: 0
  4163  001B4A  0100               	movlb	0	; () banked
  4164  001B4C  0100               	movlb	0	; () banked
  4165  001B4E  51AE               	movf	DecToStr@value& (0+255),w,b
  4166  001B50  0100               	movlb	0	; () banked
  4167  001B52  6FA8               	movwf	??_DecToStr& (0+255),b
  4168  001B54  6BA9               	clrf	(??_DecToStr+1)& (0+255),b
  4169  001B56  0100               	movlb	0	; () banked
  4170  001B58  0100               	movlb	0	; () banked
  4171  001B5A  51AC               	movf	DecToStr@compareValue& (0+255),w,b
  4172  001B5C  0100               	movlb	0	; () banked
  4173  001B5E  5DA8               	subwf	??_DecToStr& (0+255),w,b
  4174  001B60  0100               	movlb	0	; () banked
  4175  001B62  0100               	movlb	0	; () banked
  4176  001B64  51AD               	movf	(DecToStr@compareValue+1)& (0+255),w,b
  4177  001B66  0100               	movlb	0	; () banked
  4178  001B68  59A9               	subwfb	(??_DecToStr+1)& (0+255),w,b
  4179  001B6A  B0D8               	btfsc	status,0,c
  4180  001B6C  D7DD               	goto	l5349
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;utils.c: 13: }
  4184                           ;utils.c: 15: if (value == 0) {power10 = 1;}
  4185  001B6E  0100               	movlb	0	; () banked
  4186  001B70  0100               	movlb	0	; () banked
  4187  001B72  67AE               	tstfsz	DecToStr@value& (0+255),b
  4188  001B74  D008               	goto	l5357
  4189                           
  4190                           ; BSR set to: 0
  4191  001B76  0100               	movlb	0	; () banked
  4192  001B78  6FA8               	movwf	??_DecToStr& (0+255),b
  4193  001B7A  0E01               	movlw	1
  4194  001B7C  0100               	movlb	0	; () banked
  4195  001B7E  0100               	movlb	0	; () banked
  4196  001B80  6FAF               	movwf	DecToStr@power10& (0+255),b
  4197  001B82  0100               	movlb	0	; () banked
  4198  001B84  51A8               	movf	??_DecToStr& (0+255),w,b
  4199  001B86                     l5357:
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;utils.c: 17: result[power10] = '\0';
  4203  001B86  0100               	movlb	0	; () banked
  4204  001B88  0100               	movlb	0	; () banked
  4205  001B8A  51AF               	movf	DecToStr@power10& (0+255),w,b
  4206  001B8C  0D01               	mullw	1
  4207  001B8E  50F3               	movf	prodl,w,c
  4208  001B90  2456               	addwf	DecToStr@result,w,c
  4209  001B92  6ED9               	movwf	fsr2l,c
  4210  001B94  50F4               	movf	prodh,w,c
  4211  001B96  2057               	addwfc	DecToStr@result+1,w,c
  4212  001B98  6EDA               	movwf	fsr2h,c
  4213  001B9A  0E00               	movlw	0
  4214  001B9C  6EDF               	movwf	indf2,c
  4215  001B9E  D039               	goto	L37
  4216  001BA0                     l5363:
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;utils.c: 20: {
  4220                           ;utils.c: 21: result[power10 - 1] = (value % 10) + '0';
  4221  001BA0  0EFF               	movlw	255
  4222  001BA2  0100               	movlb	0	; () banked
  4223  001BA4  6FA8               	movwf	??_DecToStr& (0+255),b
  4224  001BA6  0EFF               	movlw	255
  4225  001BA8  6FA9               	movwf	(??_DecToStr+1)& (0+255),b
  4226  001BAA  0100               	movlb	0	; () banked
  4227  001BAC  0100               	movlb	0	; () banked
  4228  001BAE  51AF               	movf	DecToStr@power10& (0+255),w,b
  4229  001BB0  0100               	movlb	0	; () banked
  4230  001BB2  6FAA               	movwf	(??_DecToStr+2)& (0+255),b
  4231  001BB4  6BAB               	clrf	(??_DecToStr+3)& (0+255),b
  4232  001BB6  0100               	movlb	0	; () banked
  4233  001BB8  51A8               	movf	??_DecToStr& (0+255),w,b
  4234  001BBA  0100               	movlb	0	; () banked
  4235  001BBC  27AA               	addwf	(??_DecToStr+2)& (0+255),f,b
  4236  001BBE  0100               	movlb	0	; () banked
  4237  001BC0  51A9               	movf	(??_DecToStr+1)& (0+255),w,b
  4238  001BC2  0100               	movlb	0	; () banked
  4239  001BC4  23AB               	addwfc	(??_DecToStr+3)& (0+255),f,b
  4240  001BC6  0100               	movlb	0	; () banked
  4241  001BC8  51AA               	movf	(??_DecToStr+2)& (0+255),w,b
  4242  001BCA  2456               	addwf	DecToStr@result,w,c
  4243  001BCC  6ED9               	movwf	fsr2l,c
  4244  001BCE  0100               	movlb	0	; () banked
  4245  001BD0  51AB               	movf	(??_DecToStr+3)& (0+255),w,b
  4246  001BD2  2057               	addwfc	DecToStr@result+1,w,c
  4247  001BD4  6EDA               	movwf	fsr2h,c
  4248  001BD6  0100               	movlb	0	; () banked
  4249  001BD8  C0AE  F04F         	movff	DecToStr@value,___awmod@dividend
  4250  001BDC  6A50               	clrf	___awmod@dividend+1,c
  4251  001BDE  0E00               	movlw	0
  4252  001BE0  6E52               	movwf	___awmod@divisor+1,c
  4253  001BE2  0E0A               	movlw	10
  4254  001BE4  6E51               	movwf	___awmod@divisor,c
  4255  001BE6  EC41  F012         	call	___awmod	;wreg free
  4256  001BEA  504F               	movf	?___awmod,w,c
  4257  001BEC  0F30               	addlw	48
  4258  001BEE  6EDF               	movwf	indf2,c
  4259                           
  4260                           ;utils.c: 22: value /= 10;
  4261  001BF0  0100               	movlb	0	; () banked
  4262  001BF2  6FA8               	movwf	??_DecToStr& (0+255),b
  4263  001BF4  0E0A               	movlw	10
  4264  001BF6  6E4F               	movwf	___lbdiv@divisor,c
  4265  001BF8  0100               	movlb	0	; () banked
  4266  001BFA  51A8               	movf	??_DecToStr& (0+255),w,b
  4267  001BFC  0100               	movlb	0	; () banked
  4268  001BFE  0100               	movlb	0	; () banked
  4269  001C00  51AE               	movf	DecToStr@value& (0+255),w,b
  4270  001C02  ECEF  F014         	call	___lbdiv
  4271  001C06  0100               	movlb	0	; () banked
  4272  001C08  0100               	movlb	0	; () banked
  4273  001C0A  6FAE               	movwf	DecToStr@value& (0+255),b
  4274                           
  4275                           ; BSR set to: 0
  4276  001C0C  0100               	movlb	0	; () banked
  4277  001C0E  0100               	movlb	0	; () banked
  4278  001C10  07AF               	decf	DecToStr@power10& (0+255),f,b
  4279  001C12                     L37:
  4280                           
  4281                           ; BSR set to: 0
  4282  001C12  0100               	movlb	0	; () banked
  4283  001C14  0100               	movlb	0	; () banked
  4284  001C16  67AF               	tstfsz	DecToStr@power10& (0+255),b
  4285  001C18  D7C3               	goto	l5363
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;utils.c: 23: }
  4289                           ;utils.c: 25: return result;
  4290                           
  4291                           ; BSR set to: 0
  4292  001C1A  C057  F057         	movff	DecToStr@result+1,?_DecToStr+1
  4293  001C1E  C056  F056         	movff	DecToStr@result,?_DecToStr
  4294                           
  4295                           ; BSR set to: 0
  4296                           
  4297                           ; BSR set to: 0
  4298  001C22  0012               	return	
  4299  001C24  FFFF               	dw	65535	; errata NOP
  4300  001C26                     __end_of_DecToStr:
  4301                           	opt stack 0
  4302                           tblptru	equ	0xFF8
  4303                           tblptrh	equ	0xFF7
  4304                           tblptrl	equ	0xFF6
  4305                           tablat	equ	0xFF5
  4306                           prodh	equ	0xFF4
  4307                           prodl	equ	0xFF3
  4308                           intcon	equ	0xFF2
  4309                           intcon2	equ	0xFF1
  4310                           postinc0	equ	0xFEE
  4311                           wreg	equ	0xFE8
  4312                           postdec1	equ	0xFE5
  4313                           fsr1l	equ	0xFE1
  4314                           indf2	equ	0xFDF
  4315                           postinc2	equ	0xFDE
  4316                           postdec2	equ	0xFDD
  4317                           fsr2h	equ	0xFDA
  4318                           fsr2l	equ	0xFD9
  4319                           status	equ	0xFD8
  4320                           
  4321 ;; *************** function ___lbdiv *****************
  4322 ;; Defined at:
  4323 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lbdiv.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  dividend        1    wreg     unsigned char 
  4326 ;;  divisor         1   31[COMRAM] unsigned char 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;  dividend        1   33[COMRAM] unsigned char 
  4329 ;;  quotient        1   35[COMRAM] unsigned char 
  4330 ;;  counter         1   34[COMRAM] unsigned char 
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  1    wreg      unsigned char 
  4333 ;; Registers used:
  4334 ;;		wreg, status,2, status,0
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4340 ;;      Params:         1       0       0       0       0       0       0
  4341 ;;      Locals:         3       0       0       0       0       0       0
  4342 ;;      Temps:          1       0       0       0       0       0       0
  4343 ;;      Totals:         5       0       0       0       0       0       0
  4344 ;;Total ram usage:        5 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; Hardware stack levels required when called:    2
  4347 ;; This function calls:
  4348 ;;		Nothing
  4349 ;; This function is called by:
  4350 ;;		_DecToStr
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text14
  4355  0029DE                     __ptext14:
  4356                           	opt stack 0
  4357  0029DE                     ___lbdiv:
  4358                           	opt stack 25
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;incstack = 0
  4362  0029DE  FFFF               	dw	65535
  4363                           
  4364                           ;___lbdiv@dividend stored from wreg
  4365  0029E0  CFE8 F051          	movff	wreg,___lbdiv@dividend
  4366  0029E4  6E50               	movwf	??___lbdiv& (0+255),c
  4367  0029E6  0E00               	movlw	0
  4368  0029E8  6E53               	movwf	___lbdiv@quotient,c
  4369  0029EA  5050               	movf	??___lbdiv& (0+255),w,c
  4370  0029EC  504F               	movf	___lbdiv@divisor,w,c
  4371  0029EE  B4D8               	btfsc	status,2,c
  4372  0029F0  D017               	goto	l5293
  4373  0029F2  6E50               	movwf	??___lbdiv& (0+255),c
  4374  0029F4  0E01               	movlw	1
  4375  0029F6  6E52               	movwf	___lbdiv@counter,c
  4376  0029F8  5050               	movf	??___lbdiv& (0+255),w,c
  4377  0029FA  D003               	goto	l5281
  4378  0029FC                     l5277:
  4379  0029FC  90D8               	bcf	status,0,c
  4380  0029FE  364F               	rlcf	___lbdiv@divisor,f,c
  4381  002A00  2A52               	incf	___lbdiv@counter,f,c
  4382  002A02                     l5281:
  4383  002A02  AE4F               	btfss	___lbdiv@divisor,7,c
  4384  002A04  D7FB               	goto	l5277
  4385  002A06                     l5283:
  4386  002A06  90D8               	bcf	status,0,c
  4387  002A08  3653               	rlcf	___lbdiv@quotient,f,c
  4388  002A0A  504F               	movf	___lbdiv@divisor,w,c
  4389  002A0C  5C51               	subwf	___lbdiv@dividend,w,c
  4390  002A0E  A0D8               	btfss	status,0,c
  4391  002A10  D003               	goto	l5289
  4392  002A12  504F               	movf	___lbdiv@divisor,w,c
  4393  002A14  5E51               	subwf	___lbdiv@dividend,f,c
  4394  002A16  8053               	bsf	___lbdiv@quotient,0,c
  4395  002A18                     l5289:
  4396  002A18  90D8               	bcf	status,0,c
  4397  002A1A  324F               	rrcf	___lbdiv@divisor,f,c
  4398  002A1C  2E52               	decfsz	___lbdiv@counter,f,c
  4399  002A1E  D7F3               	goto	l5283
  4400  002A20                     l5293:
  4401  002A20  5053               	movf	___lbdiv@quotient,w,c
  4402  002A22  0012               	return	
  4403  002A24  FFFF               	dw	65535	; errata NOP
  4404  002A26                     __end_of___lbdiv:
  4405                           	opt stack 0
  4406                           tblptru	equ	0xFF8
  4407                           tblptrh	equ	0xFF7
  4408                           tblptrl	equ	0xFF6
  4409                           tablat	equ	0xFF5
  4410                           prodh	equ	0xFF4
  4411                           prodl	equ	0xFF3
  4412                           intcon	equ	0xFF2
  4413                           intcon2	equ	0xFF1
  4414                           postinc0	equ	0xFEE
  4415                           wreg	equ	0xFE8
  4416                           postdec1	equ	0xFE5
  4417                           fsr1l	equ	0xFE1
  4418                           indf2	equ	0xFDF
  4419                           postinc2	equ	0xFDE
  4420                           postdec2	equ	0xFDD
  4421                           fsr2h	equ	0xFDA
  4422                           fsr2l	equ	0xFD9
  4423                           status	equ	0xFD8
  4424                           
  4425 ;; *************** function ___awmod *****************
  4426 ;; Defined at:
  4427 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awmod.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  dividend        2   31[COMRAM] int 
  4430 ;;  divisor         2   33[COMRAM] int 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  sign            1   37[COMRAM] unsigned char 
  4433 ;;  counter         1   36[COMRAM] unsigned char 
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  2   31[COMRAM] int 
  4436 ;; Registers used:
  4437 ;;		wreg, status,2, status,0, prodl
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4443 ;;      Params:         4       0       0       0       0       0       0
  4444 ;;      Locals:         2       0       0       0       0       0       0
  4445 ;;      Temps:          1       0       0       0       0       0       0
  4446 ;;      Totals:         7       0       0       0       0       0       0
  4447 ;;Total ram usage:        7 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; Hardware stack levels required when called:    2
  4450 ;; This function calls:
  4451 ;;		Nothing
  4452 ;; This function is called by:
  4453 ;;		_DecToStr
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text15
  4458  002482                     __ptext15:
  4459                           	opt stack 0
  4460  002482                     ___awmod:
  4461                           	opt stack 25
  4462                           
  4463                           ;incstack = 0
  4464  002482  FFFF               	dw	65535
  4465  002484  6E53               	movwf	??___awmod& (0+255),c
  4466  002486  0E00               	movlw	0
  4467  002488  6E55               	movwf	___awmod@sign,c
  4468  00248A  5053               	movf	??___awmod& (0+255),w,c
  4469  00248C  5050               	movf	___awmod@dividend+1,w,c
  4470  00248E  0A80               	xorlw	128
  4471  002490  6EF3               	movwf	prodl,c
  4472  002492  0E80               	movlw	128
  4473  002494  5CF3               	subwf	prodl,w,c
  4474  002496  0E00               	movlw	0
  4475  002498  B4D8               	btfsc	status,2,c
  4476  00249A  5C4F               	subwf	___awmod@dividend,w,c
  4477  00249C  B0D8               	btfsc	status,0,c
  4478  00249E  D008               	goto	l5245
  4479  0024A0  6C4F               	negf	___awmod@dividend,c
  4480  0024A2  1E50               	comf	___awmod@dividend+1,f,c
  4481  0024A4  B0D8               	btfsc	status,0,c
  4482  0024A6  2A50               	incf	___awmod@dividend+1,f,c
  4483  0024A8  6E53               	movwf	??___awmod& (0+255),c
  4484  0024AA  0E01               	movlw	1
  4485  0024AC  6E55               	movwf	___awmod@sign,c
  4486  0024AE  5053               	movf	??___awmod& (0+255),w,c
  4487  0024B0                     l5245:
  4488  0024B0  5052               	movf	___awmod@divisor+1,w,c
  4489  0024B2  0A80               	xorlw	128
  4490  0024B4  6EF3               	movwf	prodl,c
  4491  0024B6  0E80               	movlw	128
  4492  0024B8  5CF3               	subwf	prodl,w,c
  4493  0024BA  0E00               	movlw	0
  4494  0024BC  B4D8               	btfsc	status,2,c
  4495  0024BE  5C51               	subwf	___awmod@divisor,w,c
  4496  0024C0  B0D8               	btfsc	status,0,c
  4497  0024C2  D004               	goto	l5249
  4498  0024C4  6C51               	negf	___awmod@divisor,c
  4499  0024C6  1E52               	comf	___awmod@divisor+1,f,c
  4500  0024C8  B0D8               	btfsc	status,0,c
  4501  0024CA  2A52               	incf	___awmod@divisor+1,f,c
  4502  0024CC                     l5249:
  4503  0024CC  5052               	movf	___awmod@divisor+1,w,c
  4504  0024CE  1051               	iorwf	___awmod@divisor,w,c
  4505  0024D0  B4D8               	btfsc	status,2,c
  4506  0024D2  D01A               	goto	l5265
  4507  0024D4  6E53               	movwf	??___awmod& (0+255),c
  4508  0024D6  0E01               	movlw	1
  4509  0024D8  6E54               	movwf	___awmod@counter,c
  4510  0024DA  5053               	movf	??___awmod& (0+255),w,c
  4511  0024DC  D004               	goto	l5255
  4512  0024DE                     l5253:
  4513  0024DE  90D8               	bcf	status,0,c
  4514  0024E0  3651               	rlcf	___awmod@divisor,f,c
  4515  0024E2  3652               	rlcf	___awmod@divisor+1,f,c
  4516  0024E4  2A54               	incf	___awmod@counter,f,c
  4517  0024E6                     l5255:
  4518  0024E6  AE52               	btfss	___awmod@divisor+1,7,c
  4519  0024E8  D7FA               	goto	l5253
  4520  0024EA                     l5257:
  4521  0024EA  5051               	movf	___awmod@divisor,w,c
  4522  0024EC  5C4F               	subwf	___awmod@dividend,w,c
  4523  0024EE  5052               	movf	___awmod@divisor+1,w,c
  4524  0024F0  5850               	subwfb	___awmod@dividend+1,w,c
  4525  0024F2  A0D8               	btfss	status,0,c
  4526  0024F4  D004               	goto	l5261
  4527  0024F6  5051               	movf	___awmod@divisor,w,c
  4528  0024F8  5E4F               	subwf	___awmod@dividend,f,c
  4529  0024FA  5052               	movf	___awmod@divisor+1,w,c
  4530  0024FC  5A50               	subwfb	___awmod@dividend+1,f,c
  4531  0024FE                     l5261:
  4532  0024FE  90D8               	bcf	status,0,c
  4533  002500  3252               	rrcf	___awmod@divisor+1,f,c
  4534  002502  3251               	rrcf	___awmod@divisor,f,c
  4535  002504  2E54               	decfsz	___awmod@counter,f,c
  4536  002506  D7F1               	goto	l5257
  4537  002508                     l5265:
  4538  002508  5055               	movf	___awmod@sign,w,c
  4539  00250A  B4D8               	btfsc	status,2,c
  4540  00250C  D004               	goto	l5269
  4541  00250E  6C4F               	negf	___awmod@dividend,c
  4542  002510  1E50               	comf	___awmod@dividend+1,f,c
  4543  002512  B0D8               	btfsc	status,0,c
  4544  002514  2A50               	incf	___awmod@dividend+1,f,c
  4545  002516                     l5269:
  4546  002516  C04F  F04F         	movff	___awmod@dividend,?___awmod
  4547  00251A  C050  F050         	movff	___awmod@dividend+1,?___awmod+1
  4548  00251E  0012               	return	
  4549  002520  FFFF               	dw	65535	; errata NOP
  4550  002522                     __end_of___awmod:
  4551                           	opt stack 0
  4552                           tblptru	equ	0xFF8
  4553                           tblptrh	equ	0xFF7
  4554                           tblptrl	equ	0xFF6
  4555                           tablat	equ	0xFF5
  4556                           prodh	equ	0xFF4
  4557                           prodl	equ	0xFF3
  4558                           intcon	equ	0xFF2
  4559                           intcon2	equ	0xFF1
  4560                           postinc0	equ	0xFEE
  4561                           wreg	equ	0xFE8
  4562                           postdec1	equ	0xFE5
  4563                           fsr1l	equ	0xFE1
  4564                           indf2	equ	0xFDF
  4565                           postinc2	equ	0xFDE
  4566                           postdec2	equ	0xFDD
  4567                           fsr2h	equ	0xFDA
  4568                           fsr2l	equ	0xFD9
  4569                           status	equ	0xFD8
  4570                           
  4571 ;; *************** function _check_program_0 *****************
  4572 ;; Defined at:
  4573 ;;		line 19 in file "test.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;		None
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  ret             1   37[COMRAM] unsigned char 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1    wreg      unsigned char 
  4580 ;; Registers used:
  4581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4587 ;;      Params:         0       0       0       0       0       0       0
  4588 ;;      Locals:         1       0       0       0       0       0       0
  4589 ;;      Temps:          1       0       0       0       0       0       0
  4590 ;;      Totals:         2       0       0       0       0       0       0
  4591 ;;Total ram usage:        2 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    5
  4594 ;; This function calls:
  4595 ;;		_ecran_blank
  4596 ;;		_ecran_refresh
  4597 ;;		_ecran_wait
  4598 ;; This function is called by:
  4599 ;;		_main
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text16
  4604  002AE8                     __ptext16:
  4605                           	opt stack 0
  4606  002AE8                     _check_program_0:
  4607                           	opt stack 25
  4608                           
  4609                           ;incstack = 0
  4610  002AE8  FFFF               	dw	65535
  4611                           
  4612                           ;test.c: 21: unsigned char ret = 0;
  4613  002AEA  6E54               	movwf	??_check_program_0& (0+255),c
  4614  002AEC  0E00               	movlw	0
  4615  002AEE  6E55               	movwf	check_program_0@ret,c
  4616  002AF0  5054               	movf	??_check_program_0& (0+255),w,c
  4617                           
  4618                           ;test.c: 23: if ((PORTEbits.RE1 == 0) && (PORTEbits.RE0 == 0))
  4619  002AF2  A284               	btfss	3972,1,c	;volatile
  4620  002AF4  B084               	btfsc	3972,0,c	;volatile
  4621  002AF6  D013               	goto	l5897
  4622                           
  4623                           ;test.c: 24: {
  4624                           ;test.c: 25: ecran_blank();
  4625  002AF8  ECBB  F013         	call	_ecran_blank	;wreg free
  4626                           
  4627                           ;test.c: 26: while ((PORTEbits.RE1 == 0) || (PORTEbits.RE0 == 0)) {ecran_refresh();}
  4628  002AFC  D002               	goto	l5889
  4629  002AFE                     l5887:
  4630  002AFE  EC9C  F011         	call	_ecran_refresh	;wreg free
  4631  002B02                     l5889:
  4632  002B02  B284               	btfsc	3972,1,c	;volatile
  4633  002B04  A084               	btfss	3972,0,c	;volatile
  4634  002B06  D7FB               	goto	l5887
  4635                           
  4636                           ;test.c: 28: Micro.Mod.P_0 = 1;
  4637  002B08  8060               	bsf	_Micro+5,0,c
  4638                           
  4639                           ;test.c: 30: ret = 1;
  4640  002B0A  6E54               	movwf	??_check_program_0& (0+255),c
  4641  002B0C  0E01               	movlw	1
  4642  002B0E  6E55               	movwf	check_program_0@ret,c
  4643  002B10  5054               	movf	??_check_program_0& (0+255),w,c
  4644                           
  4645                           ;test.c: 32: Micro.Step = 0x03;
  4646  002B12  6E54               	movwf	??_check_program_0& (0+255),c
  4647  002B14  0E03               	movlw	3
  4648  002B16  6E5E               	movwf	_Micro+3,c
  4649  002B18  5054               	movf	??_check_program_0& (0+255),w,c
  4650                           
  4651                           ;test.c: 34: ecran_wait();
  4652  002B1A  EC92  F016         	call	_ecran_wait	;wreg free
  4653  002B1E                     l5897:
  4654                           
  4655                           ;test.c: 35: }
  4656                           ;test.c: 37: return ret;
  4657  002B1E  5055               	movf	check_program_0@ret,w,c
  4658  002B20  0012               	return	
  4659  002B22  FFFF               	dw	65535	; errata NOP
  4660  002B24                     __end_of_check_program_0:
  4661                           	opt stack 0
  4662                           tblptru	equ	0xFF8
  4663                           tblptrh	equ	0xFF7
  4664                           tblptrl	equ	0xFF6
  4665                           tablat	equ	0xFF5
  4666                           prodh	equ	0xFF4
  4667                           prodl	equ	0xFF3
  4668                           intcon	equ	0xFF2
  4669                           intcon2	equ	0xFF1
  4670                           postinc0	equ	0xFEE
  4671                           wreg	equ	0xFE8
  4672                           postdec1	equ	0xFE5
  4673                           fsr1l	equ	0xFE1
  4674                           indf2	equ	0xFDF
  4675                           postinc2	equ	0xFDE
  4676                           postdec2	equ	0xFDD
  4677                           fsr2h	equ	0xFDA
  4678                           fsr2l	equ	0xFD9
  4679                           status	equ	0xFD8
  4680                           
  4681 ;; *************** function _check_idtest *****************
  4682 ;; Defined at:
  4683 ;;		line 41 in file "test.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;		None
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;		None
  4688 ;; Return value:  Size  Location     Type
  4689 ;;		None               void
  4690 ;; Registers used:
  4691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4697 ;;      Params:         0       0       0       0       0       0       0
  4698 ;;      Locals:         0       0       0       0       0       0       0
  4699 ;;      Temps:          0       1       0       0       0       0       0
  4700 ;;      Totals:         0       1       0       0       0       0       0
  4701 ;;Total ram usage:        1 bytes
  4702 ;; Hardware stack levels used:    1
  4703 ;; Hardware stack levels required when called:    6
  4704 ;; This function calls:
  4705 ;;		_cf_rcv
  4706 ;;		_ecran_print_one_char
  4707 ;;		_micro_config_rs
  4708 ;; This function is called by:
  4709 ;;		_main
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text17
  4714  002CBC                     __ptext17:
  4715                           	opt stack 0
  4716  002CBC                     _check_idtest:
  4717                           	opt stack 24
  4718                           
  4719                           ;incstack = 0
  4720  002CBC  FFFF               	dw	65535
  4721                           
  4722                           ;test.c: 43: if ((PORTEbits.RE1 == 0) && (PORTEbits.RE0 == 1))
  4723  002CBE  A284               	btfss	3972,1,c	;volatile
  4724  002CC0  A084               	btfss	3972,0,c	;volatile
  4725  002CC2  D00E               	goto	l519
  4726                           
  4727                           ;test.c: 44: {
  4728                           ;test.c: 45: micro_config_rs();
  4729  002CC4  ECA1  F016         	call	_micro_config_rs	;wreg free
  4730                           
  4731                           ;test.c: 46: ecran_print_one_char(3, 'P');
  4732  002CC8  0100               	movlb	0	; () banked
  4733  002CCA  6FB4               	movwf	??_check_idtest& (0+255),b
  4734  002CCC  0E50               	movlw	80
  4735  002CCE  6E50               	movwf	ecran_print_one_char@Character,c
  4736  002CD0  0100               	movlb	0	; () banked
  4737  002CD2  51B4               	movf	??_check_idtest& (0+255),w,b
  4738  002CD4  0E03               	movlw	3
  4739  002CD6  EC35  F015         	call	_ecran_print_one_char
  4740  002CDA                     l5909:
  4741  002CDA  EC15  F00A         	call	_cf_rcv	;wreg free
  4742  002CDE  D7FD               	goto	l5909
  4743  002CE0                     l519:
  4744  002CE0  0012               	return	
  4745  002CE2  FFFF               	dw	65535	; errata NOP
  4746  002CE4                     __end_of_check_idtest:
  4747                           	opt stack 0
  4748                           tblptru	equ	0xFF8
  4749                           tblptrh	equ	0xFF7
  4750                           tblptrl	equ	0xFF6
  4751                           tablat	equ	0xFF5
  4752                           prodh	equ	0xFF4
  4753                           prodl	equ	0xFF3
  4754                           intcon	equ	0xFF2
  4755                           intcon2	equ	0xFF1
  4756                           postinc0	equ	0xFEE
  4757                           wreg	equ	0xFE8
  4758                           postdec1	equ	0xFE5
  4759                           fsr1l	equ	0xFE1
  4760                           indf2	equ	0xFDF
  4761                           postinc2	equ	0xFDE
  4762                           postdec2	equ	0xFDD
  4763                           fsr2h	equ	0xFDA
  4764                           fsr2l	equ	0xFD9
  4765                           status	equ	0xFD8
  4766                           
  4767 ;; *************** function _micro_config_rs *****************
  4768 ;; Defined at:
  4769 ;;		line 3 in file "micro.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;		None
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;		None
  4774 ;; Return value:  Size  Location     Type
  4775 ;;		None               void
  4776 ;; Registers used:
  4777 ;;		wreg, status,2
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4783 ;;      Params:         0       0       0       0       0       0       0
  4784 ;;      Locals:         0       0       0       0       0       0       0
  4785 ;;      Temps:          0       0       0       0       0       0       0
  4786 ;;      Totals:         0       0       0       0       0       0       0
  4787 ;;Total ram usage:        0 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; Hardware stack levels required when called:    2
  4790 ;; This function calls:
  4791 ;;		Nothing
  4792 ;; This function is called by:
  4793 ;;		_check_idtest
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text18
  4798  002D42                     __ptext18:
  4799                           	opt stack 0
  4800  002D42                     _micro_config_rs:
  4801                           	opt stack 27
  4802                           
  4803                           ;incstack = 0
  4804  002D42  FFFF               	dw	65535
  4805                           
  4806                           ;micro.c: 5: PORTEbits.RE2 = 0;
  4807  002D44  9484               	bcf	3972,2,c	;volatile
  4808                           
  4809                           ;micro.c: 9: SPBRG = 207;
  4810  002D46  0ECF               	movlw	207
  4811  002D48  6EAF               	movwf	4015,c	;volatile
  4812                           
  4813                           ;micro.c: 14: TXSTA = 0x20;
  4814  002D4A  0E20               	movlw	32
  4815  002D4C  6EAC               	movwf	4012,c	;volatile
  4816                           
  4817                           ;micro.c: 22: RCSTA = 0x90;
  4818  002D4E  0E90               	movlw	144
  4819  002D50  6EAB               	movwf	4011,c	;volatile
  4820                           
  4821                           ;micro.c: 34: RCIP = 0;
  4822  002D52  9A9F               	bcf	3999,5,c	;volatile
  4823                           
  4824                           ;micro.c: 35: RCIE = 1;
  4825  002D54  8A9D               	bsf	3997,5,c	;volatile
  4826                           
  4827                           ;micro.c: 36: PEIE = 1;
  4828  002D56  8CF2               	bsf	intcon,6,c	;volatile
  4829  002D58  0012               	return	
  4830  002D5A  FFFF               	dw	65535	; errata NOP
  4831  002D5C                     __end_of_micro_config_rs:
  4832                           	opt stack 0
  4833                           tblptru	equ	0xFF8
  4834                           tblptrh	equ	0xFF7
  4835                           tblptrl	equ	0xFF6
  4836                           tablat	equ	0xFF5
  4837                           prodh	equ	0xFF4
  4838                           prodl	equ	0xFF3
  4839                           intcon	equ	0xFF2
  4840                           intcon2	equ	0xFF1
  4841                           postinc0	equ	0xFEE
  4842                           wreg	equ	0xFE8
  4843                           postdec1	equ	0xFE5
  4844                           fsr1l	equ	0xFE1
  4845                           indf2	equ	0xFDF
  4846                           postinc2	equ	0xFDE
  4847                           postdec2	equ	0xFDD
  4848                           fsr2h	equ	0xFDA
  4849                           fsr2l	equ	0xFD9
  4850                           status	equ	0xFD8
  4851                           
  4852 ;; *************** function _cf_rcv *****************
  4853 ;; Defined at:
  4854 ;;		line 132 in file "config.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  i               1   11[BANK0 ] unsigned char 
  4859 ;;  temp            1   10[BANK0 ] unsigned char 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;		None               void
  4862 ;; Registers used:
  4863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4869 ;;      Params:         0       0       0       0       0       0       0
  4870 ;;      Locals:         0       2       0       0       0       0       0
  4871 ;;      Temps:          0       2       0       0       0       0       0
  4872 ;;      Totals:         0       4       0       0       0       0       0
  4873 ;;Total ram usage:        4 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:    5
  4876 ;; This function calls:
  4877 ;;		_cf_check
  4878 ;;		_ecran_print_one_char
  4879 ;;		_eeprom_read_array
  4880 ;;		_eeprom_write_array
  4881 ;; This function is called by:
  4882 ;;		_check_idtest
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	text19
  4887  00142A                     __ptext19:
  4888                           	opt stack 0
  4889  00142A                     _cf_rcv:
  4890                           	opt stack 24
  4891                           
  4892                           ;incstack = 0
  4893  00142A  FFFF               	dw	65535
  4894                           
  4895                           ;config.c: 134: unsigned char i, temp = 0;
  4896  00142C  0100               	movlb	0	; () banked
  4897  00142E  6FB0               	movwf	??_cf_rcv& (0+255),b
  4898  001430  0E00               	movlw	0
  4899  001432  0100               	movlb	0	; () banked
  4900  001434  0100               	movlb	0	; () banked
  4901  001436  6FB2               	movwf	cf_rcv@temp& (0+255),b
  4902  001438  0100               	movlb	0	; () banked
  4903  00143A  51B0               	movf	??_cf_rcv& (0+255),w,b
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;config.c: 136: if ((((unsigned short) (Cptms - Cf.Time2) > 100) ? 1 : 0))
  4907  00143C  0101               	movlb	1	; () banked
  4908  00143E  EE21  F068         	lfsr	2,_Cf+104	;volatile
  4909  001442  CFDE F0B0          	movff	postinc2,??_cf_rcv
  4910  001446  CFDD F0B1          	movff	postdec2,??_cf_rcv+1
  4911  00144A  0100               	movlb	0	; () banked
  4912  00144C  1FB0               	comf	??_cf_rcv& (0+255),f,b
  4913  00144E  1FB1               	comf	(??_cf_rcv+1)& (0+255),f,b
  4914  001450  4BB0               	infsnz	??_cf_rcv& (0+255),f,b
  4915  001452  2BB1               	incf	(??_cf_rcv+1)& (0+255),f,b
  4916  001454  502D               	movf	_Cptms,w,c	;volatile
  4917  001456  0100               	movlb	0	; () banked
  4918  001458  27B0               	addwf	??_cf_rcv& (0+255),f,b
  4919  00145A  502E               	movf	_Cptms+1,w,c	;volatile
  4920  00145C  0100               	movlb	0	; () banked
  4921  00145E  23B1               	addwfc	(??_cf_rcv+1)& (0+255),f,b
  4922  001460  0E65               	movlw	101
  4923  001462  0100               	movlb	0	; () banked
  4924  001464  5DB0               	subwf	??_cf_rcv& (0+255),w,b
  4925  001466  0E00               	movlw	0
  4926  001468  59B1               	subwfb	(??_cf_rcv+1)& (0+255),w,b
  4927  00146A  A0D8               	btfss	status,0,c
  4928  00146C  D024               	goto	l5653
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;config.c: 137: {
  4932                           ;config.c: 138: Cf.Time2 = Cptms;
  4933  00146E  C02D  F168         	movff	_Cptms,_Cf+104	;volatile
  4934  001472  C02E  F169         	movff	_Cptms+1,_Cf+105	;volatile
  4935                           
  4936                           ;config.c: 140: (INTCONbits.GIE = 0);
  4937  001476  9EF2               	bcf	intcon,7,c	;volatile
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;config.c: 141: if ((((unsigned short) (Cptms - Cf.Time1) > 100) ? 1 : 0)) {Cf.Index = 0
      +                          ;}
  4941  001478  0101               	movlb	1	; () banked
  4942  00147A  EE21  F066         	lfsr	2,_Cf+102	;volatile
  4943  00147E  CFDE F0B0          	movff	postinc2,??_cf_rcv
  4944  001482  CFDD F0B1          	movff	postdec2,??_cf_rcv+1
  4945  001486  0100               	movlb	0	; () banked
  4946  001488  1FB0               	comf	??_cf_rcv& (0+255),f,b
  4947  00148A  1FB1               	comf	(??_cf_rcv+1)& (0+255),f,b
  4948  00148C  4BB0               	infsnz	??_cf_rcv& (0+255),f,b
  4949  00148E  2BB1               	incf	(??_cf_rcv+1)& (0+255),f,b
  4950  001490  502D               	movf	_Cptms,w,c	;volatile
  4951  001492  0100               	movlb	0	; () banked
  4952  001494  27B0               	addwf	??_cf_rcv& (0+255),f,b
  4953  001496  502E               	movf	_Cptms+1,w,c	;volatile
  4954  001498  0100               	movlb	0	; () banked
  4955  00149A  23B1               	addwfc	(??_cf_rcv+1)& (0+255),f,b
  4956  00149C  0E65               	movlw	101
  4957  00149E  0100               	movlb	0	; () banked
  4958  0014A0  5DB0               	subwf	??_cf_rcv& (0+255),w,b
  4959  0014A2  0E00               	movlw	0
  4960  0014A4  59B1               	subwfb	(??_cf_rcv+1)& (0+255),w,b
  4961  0014A6  A0D8               	btfss	status,0,c
  4962  0014A8  D004               	goto	l5651
  4963                           
  4964                           ; BSR set to: 0
  4965  0014AA  0E00               	movlw	0
  4966  0014AC  0101               	movlb	1	; () banked
  4967  0014AE  0101               	movlb	1	; () banked
  4968  0014B0  6F65               	movwf	(_Cf+101)& (0+255),b	;volatile
  4969  0014B2                     l5651:
  4970                           
  4971                           ;config.c: 142: (INTCONbits.GIE = 1);
  4972  0014B2  8EF2               	bsf	intcon,7,c	;volatile
  4973                           
  4974                           ;config.c: 143: }
  4975  0014B4  D082               	goto	l438
  4976  0014B6                     l5653:
  4977                           
  4978                           ;config.c: 144: else if (Cf.Index == (32 * 3 + 5))
  4979  0014B6  0101               	movlb	1	; () banked
  4980  0014B8  0101               	movlb	1	; () banked
  4981  0014BA  5165               	movf	(_Cf+101)& (0+255),w,b	;volatile
  4982  0014BC  0A65               	xorlw	101
  4983  0014BE  A4D8               	btfss	status,2,c
  4984  0014C0  D07C               	goto	l438
  4985                           
  4986                           ; BSR set to: 1
  4987                           ;config.c: 145: {
  4988                           ;config.c: 146: RCIE = 0;
  4989  0014C2  9A9D               	bcf	3997,5,c	;volatile
  4990                           
  4991                           ; BSR set to: 1
  4992                           ;config.c: 148: temp = cf_check();
  4993  0014C4  EC13  F015         	call	_cf_check	;wreg free
  4994  0014C8  0100               	movlb	0	; () banked
  4995  0014CA  0100               	movlb	0	; () banked
  4996  0014CC  6FB2               	movwf	cf_rcv@temp& (0+255),b
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;config.c: 150: if (temp == 0)
  5000  0014CE  0100               	movlb	0	; () banked
  5001  0014D0  0100               	movlb	0	; () banked
  5002  0014D2  67B2               	tstfsz	cf_rcv@temp& (0+255),b
  5003  0014D4  D00A               	goto	l5663
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;config.c: 151: {
  5007                           ;config.c: 152: ecran_print_one_char(3, 'E');
  5008  0014D6  0100               	movlb	0	; () banked
  5009  0014D8  6FB0               	movwf	??_cf_rcv& (0+255),b
  5010  0014DA  0E45               	movlw	69
  5011  0014DC  6E50               	movwf	ecran_print_one_char@Character,c
  5012  0014DE  0100               	movlb	0	; () banked
  5013  0014E0  51B0               	movf	??_cf_rcv& (0+255),w,b
  5014  0014E2  0E03               	movlw	3
  5015  0014E4  EC35  F015         	call	_ecran_print_one_char
  5016                           
  5017                           ;config.c: 153: }
  5018  0014E8  D063               	goto	l5687
  5019  0014EA                     l5663:
  5020                           
  5021                           ;config.c: 154: else
  5022                           ;config.c: 155: {
  5023                           ;config.c: 157: eeprom_write_array(&Cf.Data[0], 0, (32 * 3 + 5));
  5024  0014EA  0101               	movlb	1	; () banked
  5025  0014EC  0E01               	movlw	high _Cf	;volatile
  5026  0014EE  6E52               	movwf	eeprom_write_array@pData+1,c
  5027  0014F0  0101               	movlb	1	; () banked
  5028  0014F2  0E00               	movlw	low _Cf	;volatile
  5029  0014F4  6E51               	movwf	eeprom_write_array@pData,c
  5030  0014F6  0100               	movlb	0	; () banked
  5031  0014F8  6FB0               	movwf	??_cf_rcv& (0+255),b
  5032  0014FA  0E00               	movlw	0
  5033  0014FC  6E53               	movwf	eeprom_write_array@Address,c
  5034  0014FE  0100               	movlb	0	; () banked
  5035  001500  51B0               	movf	??_cf_rcv& (0+255),w,b
  5036  001502  0100               	movlb	0	; () banked
  5037  001504  6FB1               	movwf	(??_cf_rcv+1)& (0+255),b
  5038  001506  0E65               	movlw	101
  5039  001508  6E54               	movwf	eeprom_write_array@NbData,c
  5040  00150A  0100               	movlb	0	; () banked
  5041  00150C  51B1               	movf	(??_cf_rcv+1)& (0+255),w,b
  5042  00150E  ECE3  F015         	call	_eeprom_write_array	;wreg free
  5043                           
  5044                           ;config.c: 159: for (i = 0; i < (32 * 3 + 5); i ++)
  5045  001512  0100               	movlb	0	; () banked
  5046  001514  6FB0               	movwf	??_cf_rcv& (0+255),b
  5047  001516  0E00               	movlw	0
  5048  001518  0100               	movlb	0	; () banked
  5049  00151A  0100               	movlb	0	; () banked
  5050  00151C  6FB3               	movwf	cf_rcv@i& (0+255),b
  5051  00151E  0100               	movlb	0	; () banked
  5052  001520  51B0               	movf	??_cf_rcv& (0+255),w,b
  5053  001522  D011               	goto	L38
  5054  001524                     l5671:
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;config.c: 160: {
  5058                           ;config.c: 161: Cf.Data[i] = 0;
  5059  001524  0100               	movlb	0	; () banked
  5060  001526  0100               	movlb	0	; () banked
  5061  001528  51B3               	movf	cf_rcv@i& (0+255),w,b
  5062  00152A  0D01               	mullw	1
  5063  00152C  0101               	movlb	1	; () banked
  5064  00152E  0E00               	movlw	low _Cf	;volatile
  5065  001530  24F3               	addwf	prodl,w,c
  5066  001532  6ED9               	movwf	fsr2l,c
  5067  001534  0101               	movlb	1	; () banked
  5068  001536  0E01               	movlw	high _Cf	;volatile
  5069  001538  20F4               	addwfc	prodh,w,c
  5070  00153A  6EDA               	movwf	fsr2h,c
  5071  00153C  0E00               	movlw	0
  5072  00153E  6EDF               	movwf	indf2,c
  5073                           
  5074                           ; BSR set to: 1
  5075  001540  0100               	movlb	0	; () banked
  5076  001542  0100               	movlb	0	; () banked
  5077  001544  2BB3               	incf	cf_rcv@i& (0+255),f,b
  5078  001546                     L38:
  5079                           
  5080                           ; BSR set to: 0
  5081  001546  0E64               	movlw	100
  5082  001548  0100               	movlb	0	; () banked
  5083  00154A  0100               	movlb	0	; () banked
  5084  00154C  65B3               	cpfsgt	cf_rcv@i& (0+255),b
  5085  00154E  D7EA               	goto	l5671
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;config.c: 162: }
  5089                           ;config.c: 164: eeprom_read_array(&Cf.Data[0], 0, (32 * 3 + 5));
  5090                           
  5091                           ; BSR set to: 0
  5092  001550  0101               	movlb	1	; () banked
  5093  001552  0E01               	movlw	high _Cf	;volatile
  5094  001554  6E51               	movwf	eeprom_read_array@pData+1,c
  5095  001556  0101               	movlb	1	; () banked
  5096  001558  0E00               	movlw	low _Cf	;volatile
  5097  00155A  6E50               	movwf	eeprom_read_array@pData,c
  5098  00155C  0100               	movlb	0	; () banked
  5099  00155E  6FB0               	movwf	??_cf_rcv& (0+255),b
  5100  001560  0E00               	movlw	0
  5101  001562  6E52               	movwf	eeprom_read_array@Address,c
  5102  001564  0100               	movlb	0	; () banked
  5103  001566  51B0               	movf	??_cf_rcv& (0+255),w,b
  5104  001568  0100               	movlb	0	; () banked
  5105  00156A  6FB1               	movwf	(??_cf_rcv+1)& (0+255),b
  5106  00156C  0E65               	movlw	101
  5107  00156E  6E53               	movwf	eeprom_read_array@NbData,c
  5108  001570  0100               	movlb	0	; () banked
  5109  001572  51B1               	movf	(??_cf_rcv+1)& (0+255),w,b
  5110  001574  EC17  F016         	call	_eeprom_read_array	;wreg free
  5111                           
  5112                           ;config.c: 166: temp = cf_check();
  5113  001578  EC13  F015         	call	_cf_check	;wreg free
  5114  00157C  0100               	movlb	0	; () banked
  5115  00157E  0100               	movlb	0	; () banked
  5116  001580  6FB2               	movwf	cf_rcv@temp& (0+255),b
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;config.c: 168: if (temp == 0)
  5120  001582  0100               	movlb	0	; () banked
  5121  001584  0100               	movlb	0	; () banked
  5122  001586  67B2               	tstfsz	cf_rcv@temp& (0+255),b
  5123  001588  D00A               	goto	l5685
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;config.c: 169: {
  5127                           ;config.c: 170: ecran_print_one_char(3, 'E');
  5128  00158A  0100               	movlb	0	; () banked
  5129  00158C  6FB0               	movwf	??_cf_rcv& (0+255),b
  5130  00158E  0E45               	movlw	69
  5131  001590  6E50               	movwf	ecran_print_one_char@Character,c
  5132  001592  0100               	movlb	0	; () banked
  5133  001594  51B0               	movf	??_cf_rcv& (0+255),w,b
  5134  001596  0E03               	movlw	3
  5135  001598  EC35  F015         	call	_ecran_print_one_char
  5136                           
  5137                           ;config.c: 171: }
  5138  00159C  D009               	goto	l5687
  5139  00159E                     l5685:
  5140                           
  5141                           ;config.c: 172: else
  5142                           ;config.c: 173: {
  5143                           ;config.c: 174: ecran_print_one_char(3, 'P');
  5144  00159E  0100               	movlb	0	; () banked
  5145  0015A0  6FB0               	movwf	??_cf_rcv& (0+255),b
  5146  0015A2  0E50               	movlw	80
  5147  0015A4  6E50               	movwf	ecran_print_one_char@Character,c
  5148  0015A6  0100               	movlb	0	; () banked
  5149  0015A8  51B0               	movf	??_cf_rcv& (0+255),w,b
  5150  0015AA  0E03               	movlw	3
  5151  0015AC  EC35  F015         	call	_ecran_print_one_char
  5152  0015B0                     l5687:
  5153                           
  5154                           ;config.c: 175: }
  5155                           ;config.c: 176: }
  5156                           ;config.c: 178: Cf.Index = 0;
  5157  0015B0  0E00               	movlw	0
  5158  0015B2  0101               	movlb	1	; () banked
  5159  0015B4  0101               	movlb	1	; () banked
  5160  0015B6  6F65               	movwf	(_Cf+101)& (0+255),b	;volatile
  5161                           
  5162                           ; BSR set to: 1
  5163                           ;config.c: 180: RCIE = 1;
  5164  0015B8  8A9D               	bsf	3997,5,c	;volatile
  5165  0015BA                     l438:
  5166  0015BA  0012               	return	
  5167  0015BC  FFFF               	dw	65535	; errata NOP
  5168  0015BE                     __end_of_cf_rcv:
  5169                           	opt stack 0
  5170                           tblptru	equ	0xFF8
  5171                           tblptrh	equ	0xFF7
  5172                           tblptrl	equ	0xFF6
  5173                           tablat	equ	0xFF5
  5174                           prodh	equ	0xFF4
  5175                           prodl	equ	0xFF3
  5176                           intcon	equ	0xFF2
  5177                           intcon2	equ	0xFF1
  5178                           postinc0	equ	0xFEE
  5179                           wreg	equ	0xFE8
  5180                           postdec1	equ	0xFE5
  5181                           fsr1l	equ	0xFE1
  5182                           indf2	equ	0xFDF
  5183                           postinc2	equ	0xFDE
  5184                           postdec2	equ	0xFDD
  5185                           fsr2h	equ	0xFDA
  5186                           fsr2l	equ	0xFD9
  5187                           status	equ	0xFD8
  5188                           
  5189 ;; *************** function _eeprom_write_array *****************
  5190 ;; Defined at:
  5191 ;;		line 52 in file "eeprom.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;  pData           2   33[COMRAM] PTR unsigned char 
  5194 ;;		 -> Cf(107), 
  5195 ;;  Address         1   35[COMRAM] unsigned char 
  5196 ;;  NbData          1   36[COMRAM] unsigned char 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  i               1   38[COMRAM] unsigned char 
  5199 ;; Return value:  Size  Location     Type
  5200 ;;		None               void
  5201 ;; Registers used:
  5202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5208 ;;      Params:         4       0       0       0       0       0       0
  5209 ;;      Locals:         1       0       0       0       0       0       0
  5210 ;;      Temps:          1       0       0       0       0       0       0
  5211 ;;      Totals:         6       0       0       0       0       0       0
  5212 ;;Total ram usage:        6 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:    3
  5215 ;; This function calls:
  5216 ;;		_eeprom_write
  5217 ;; This function is called by:
  5218 ;;		_cf_rcv
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           	psect	text20
  5223  002BC6                     __ptext20:
  5224                           	opt stack 0
  5225  002BC6                     _eeprom_write_array:
  5226                           	opt stack 25
  5227                           
  5228                           ;incstack = 0
  5229  002BC6  FFFF               	dw	65535
  5230                           
  5231                           ;eeprom.c: 54: unsigned char i;
  5232                           ;eeprom.c: 56: for (i = 0; i < NbData; i ++)
  5233  002BC8  6E55               	movwf	??_eeprom_write_array& (0+255),c
  5234  002BCA  0E00               	movlw	0
  5235  002BCC  6E56               	movwf	eeprom_write_array@i,c
  5236  002BCE  5055               	movf	??_eeprom_write_array& (0+255),w,c
  5237  002BD0  D00D               	goto	l5409
  5238  002BD2                     l5401:
  5239                           
  5240                           ;eeprom.c: 57: {
  5241                           ;eeprom.c: 58: eeprom_write(*pData, Address);
  5242  002BD2  C053  F04F         	movff	eeprom_write_array@Address,eeprom_write@Address
  5243  002BD6  C051  FFD9         	movff	eeprom_write_array@pData,fsr2l
  5244  002BDA  C052  FFDA         	movff	eeprom_write_array@pData+1,fsr2h
  5245  002BDE  50DF               	movf	indf2,w,c
  5246  002BE0  EC48  F016         	call	_eeprom_write
  5247                           
  5248                           ;eeprom.c: 59: pData ++;
  5249  002BE4  4A51               	infsnz	eeprom_write_array@pData,f,c
  5250  002BE6  2A52               	incf	eeprom_write_array@pData+1,f,c
  5251                           
  5252                           ;eeprom.c: 60: Address ++;
  5253  002BE8  2A53               	incf	eeprom_write_array@Address,f,c
  5254  002BEA  2A56               	incf	eeprom_write_array@i,f,c
  5255  002BEC                     l5409:
  5256  002BEC  5054               	movf	eeprom_write_array@NbData,w,c
  5257  002BEE  5C56               	subwf	eeprom_write_array@i,w,c
  5258  002BF0  B0D8               	btfsc	status,0,c
  5259  002BF2  0012               	return	
  5260  002BF4  FFFF               	dw	65535	; assembler added errata NOP
  5261  002BF6  D7ED               	goto	l5401
  5262  002BF8  FFFF               	dw	65535	; errata NOP
  5263  002BFA                     __end_of_eeprom_write_array:
  5264                           	opt stack 0
  5265                           tblptru	equ	0xFF8
  5266                           tblptrh	equ	0xFF7
  5267                           tblptrl	equ	0xFF6
  5268                           tablat	equ	0xFF5
  5269                           prodh	equ	0xFF4
  5270                           prodl	equ	0xFF3
  5271                           intcon	equ	0xFF2
  5272                           intcon2	equ	0xFF1
  5273                           postinc0	equ	0xFEE
  5274                           wreg	equ	0xFE8
  5275                           postdec1	equ	0xFE5
  5276                           fsr1l	equ	0xFE1
  5277                           indf2	equ	0xFDF
  5278                           postinc2	equ	0xFDE
  5279                           postdec2	equ	0xFDD
  5280                           fsr2h	equ	0xFDA
  5281                           fsr2l	equ	0xFD9
  5282                           status	equ	0xFD8
  5283                           
  5284 ;; *************** function _eeprom_write *****************
  5285 ;; Defined at:
  5286 ;;		line 18 in file "eeprom.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  Data            1    wreg     unsigned char 
  5289 ;;  Address         1   31[COMRAM] unsigned char 
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;  Data            1   32[COMRAM] unsigned char 
  5292 ;; Return value:  Size  Location     Type
  5293 ;;		None               void
  5294 ;; Registers used:
  5295 ;;		wreg, status,2
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5301 ;;      Params:         1       0       0       0       0       0       0
  5302 ;;      Locals:         1       0       0       0       0       0       0
  5303 ;;      Temps:          0       0       0       0       0       0       0
  5304 ;;      Totals:         2       0       0       0       0       0       0
  5305 ;;Total ram usage:        2 bytes
  5306 ;; Hardware stack levels used:    1
  5307 ;; Hardware stack levels required when called:    2
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_eeprom_write_array
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text21
  5316  002C90                     __ptext21:
  5317                           	opt stack 0
  5318  002C90                     _eeprom_write:
  5319                           	opt stack 25
  5320                           
  5321                           ;incstack = 0
  5322  002C90  FFFF               	dw	65535
  5323                           
  5324                           ;eeprom_write@Data stored from wreg
  5325  002C92  CFE8 F050          	movff	wreg,eeprom_write@Data
  5326                           
  5327                           ;eeprom.c: 20: EEADR = Address;
  5328  002C96  C04F  FFA9         	movff	eeprom_write@Address,4009	;volatile
  5329                           
  5330                           ;eeprom.c: 21: EEDATA = Data;
  5331  002C9A  C050  FFA8         	movff	eeprom_write@Data,4008	;volatile
  5332                           
  5333                           ;eeprom.c: 23: EEPGD = 0;
  5334  002C9E  9EA6               	bcf	4006,7,c	;volatile
  5335                           
  5336                           ;eeprom.c: 24: CFGS = 0;
  5337  002CA0  9CA6               	bcf	4006,6,c	;volatile
  5338                           
  5339                           ;eeprom.c: 25: WREN = 1;
  5340  002CA2  84A6               	bsf	4006,2,c	;volatile
  5341                           
  5342                           ;eeprom.c: 27: (INTCONbits.GIE = 0);
  5343  002CA4  9EF2               	bcf	intcon,7,c	;volatile
  5344                           
  5345                           ;eeprom.c: 29: EECON2 = 0x55;
  5346  002CA6  0E55               	movlw	85
  5347  002CA8  6EA7               	movwf	4007,c	;volatile
  5348                           
  5349                           ;eeprom.c: 30: EECON2 = 0xAA;
  5350  002CAA  0EAA               	movlw	170
  5351  002CAC  6EA7               	movwf	4007,c	;volatile
  5352                           
  5353                           ;eeprom.c: 32: WR = 1;
  5354  002CAE  82A6               	bsf	4006,1,c	;volatile
  5355  002CB0                     l319:
  5356  002CB0  B2A6               	btfsc	4006,1,c	;volatile
  5357  002CB2  D7FE               	goto	l319
  5358                           
  5359                           ;eeprom.c: 35: (INTCONbits.GIE = 1);
  5360  002CB4  8EF2               	bsf	intcon,7,c	;volatile
  5361                           
  5362                           ;eeprom.c: 37: WREN = 0;
  5363  002CB6  94A6               	bcf	4006,2,c	;volatile
  5364  002CB8  0012               	return	
  5365  002CBA  FFFF               	dw	65535	; errata NOP
  5366  002CBC                     __end_of_eeprom_write:
  5367                           	opt stack 0
  5368                           tblptru	equ	0xFF8
  5369                           tblptrh	equ	0xFF7
  5370                           tblptrl	equ	0xFF6
  5371                           tablat	equ	0xFF5
  5372                           prodh	equ	0xFF4
  5373                           prodl	equ	0xFF3
  5374                           intcon	equ	0xFF2
  5375                           intcon2	equ	0xFF1
  5376                           postinc0	equ	0xFEE
  5377                           wreg	equ	0xFE8
  5378                           postdec1	equ	0xFE5
  5379                           fsr1l	equ	0xFE1
  5380                           indf2	equ	0xFDF
  5381                           postinc2	equ	0xFDE
  5382                           postdec2	equ	0xFDD
  5383                           fsr2h	equ	0xFDA
  5384                           fsr2l	equ	0xFD9
  5385                           status	equ	0xFD8
  5386                           
  5387 ;; *************** function _check_bpon *****************
  5388 ;; Defined at:
  5389 ;;		line 52 in file "test.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;		None
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;		None
  5394 ;; Return value:  Size  Location     Type
  5395 ;;		None               void
  5396 ;; Registers used:
  5397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5403 ;;      Params:         0       0       0       0       0       0       0
  5404 ;;      Locals:         0       0       0       0       0       0       0
  5405 ;;      Temps:          2       0       0       0       0       0       0
  5406 ;;      Totals:         2       0       0       0       0       0       0
  5407 ;;Total ram usage:        2 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:    4
  5410 ;; This function calls:
  5411 ;;		_ecran_print_one_char
  5412 ;; This function is called by:
  5413 ;;		_main
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text22
  5418  0028B2                     __ptext22:
  5419                           	opt stack 0
  5420  0028B2                     _check_bpon:
  5421                           	opt stack 26
  5422                           
  5423                           ;incstack = 0
  5424  0028B2  FFFF               	dw	65535
  5425                           
  5426                           ;test.c: 54: Test.Time = Cptms;
  5427  0028B4  C02D  F003         	movff	_Cptms,_Test+2	;volatile
  5428  0028B8  C02E  F004         	movff	_Cptms+1,_Test+3	;volatile
  5429                           
  5430                           ;test.c: 56: if (PORTEbits.RE0 == 0)
  5431  0028BC  B084               	btfsc	3972,0,c	;volatile
  5432  0028BE  D01D               	goto	l528
  5433                           
  5434                           ;test.c: 57: {
  5435                           ;test.c: 58: ecran_print_one_char(3, 'A');
  5436  0028C0  6E52               	movwf	??_check_bpon& (0+255),c
  5437  0028C2  0E41               	movlw	65
  5438  0028C4  6E50               	movwf	ecran_print_one_char@Character,c
  5439  0028C6  5052               	movf	??_check_bpon& (0+255),w,c
  5440  0028C8  0E03               	movlw	3
  5441  0028CA  EC35  F015         	call	_ecran_print_one_char
  5442  0028CE                     l523:
  5443  0028CE  B084               	btfsc	3972,0,c	;volatile
  5444  0028D0  D014               	goto	l528
  5445  0028D2  EE20  F003         	lfsr	2,_Test+2
  5446  0028D6  CFDE F052          	movff	postinc2,??_check_bpon
  5447  0028DA  CFDD F053          	movff	postdec2,??_check_bpon+1
  5448  0028DE  1E52               	comf	??_check_bpon,f,c
  5449  0028E0  1E53               	comf	??_check_bpon+1,f,c
  5450  0028E2  4A52               	infsnz	??_check_bpon,f,c
  5451  0028E4  2A53               	incf	??_check_bpon+1,f,c
  5452  0028E6  502D               	movf	_Cptms,w,c	;volatile
  5453  0028E8  2652               	addwf	??_check_bpon,f,c
  5454  0028EA  502E               	movf	_Cptms+1,w,c	;volatile
  5455  0028EC  2253               	addwfc	??_check_bpon+1,f,c
  5456  0028EE  0EE8               	movlw	232
  5457  0028F0  5C52               	subwf	??_check_bpon,w,c
  5458  0028F2  0E03               	movlw	3
  5459  0028F4  5853               	subwfb	??_check_bpon+1,w,c
  5460  0028F6  A0D8               	btfss	status,0,c
  5461  0028F8  D7EA               	goto	l523
  5462  0028FA                     l528:
  5463  0028FA  0012               	return	
  5464  0028FC  FFFF               	dw	65535	; errata NOP
  5465  0028FE                     __end_of_check_bpon:
  5466                           	opt stack 0
  5467                           tblptru	equ	0xFF8
  5468                           tblptrh	equ	0xFF7
  5469                           tblptrl	equ	0xFF6
  5470                           tablat	equ	0xFF5
  5471                           prodh	equ	0xFF4
  5472                           prodl	equ	0xFF3
  5473                           intcon	equ	0xFF2
  5474                           intcon2	equ	0xFF1
  5475                           postinc0	equ	0xFEE
  5476                           wreg	equ	0xFE8
  5477                           postdec1	equ	0xFE5
  5478                           fsr1l	equ	0xFE1
  5479                           indf2	equ	0xFDF
  5480                           postinc2	equ	0xFDE
  5481                           postdec2	equ	0xFDD
  5482                           fsr2h	equ	0xFDA
  5483                           fsr2l	equ	0xFD9
  5484                           status	equ	0xFD8
  5485                           
  5486 ;; *************** function _cf_check_and_display *****************
  5487 ;; Defined at:
  5488 ;;		line 92 in file "config.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;		None
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;  temp            2   10[BANK0 ] unsigned short 
  5493 ;;  configOk        1   12[BANK0 ] unsigned char 
  5494 ;; Return value:  Size  Location     Type
  5495 ;;		None               void
  5496 ;; Registers used:
  5497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5503 ;;      Params:         0       0       0       0       0       0       0
  5504 ;;      Locals:         0       3       0       0       0       0       0
  5505 ;;      Temps:          0       2       0       0       0       0       0
  5506 ;;      Totals:         0       5       0       0       0       0       0
  5507 ;;Total ram usage:        5 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    5
  5510 ;; This function calls:
  5511 ;;		_HexToAscii
  5512 ;;		_cf_check
  5513 ;;		_ecran_print_one_char
  5514 ;;		_ecran_refresh
  5515 ;;		_eeprom_read_array
  5516 ;; This function is called by:
  5517 ;;		_main
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text23
  5522  001744                     __ptext23:
  5523                           	opt stack 0
  5524  001744                     _cf_check_and_display:
  5525                           	opt stack 25
  5526                           
  5527                           ;incstack = 0
  5528  001744  FFFF               	dw	65535
  5529                           
  5530                           ;config.c: 94: unsigned char configOk = 0;
  5531  001746  0100               	movlb	0	; () banked
  5532  001748  6FB0               	movwf	??_cf_check_and_display& (0+255),b
  5533  00174A  0E00               	movlw	0
  5534  00174C  0100               	movlb	0	; () banked
  5535  00174E  0100               	movlb	0	; () banked
  5536  001750  6FB4               	movwf	cf_check_and_display@configOk& (0+255),b
  5537  001752  0100               	movlb	0	; () banked
  5538  001754  51B0               	movf	??_cf_check_and_display& (0+255),w,b
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;config.c: 95: unsigned short temp;
  5542                           ;config.c: 97: eeprom_read_array(&Cf.Data[0], 0, (32 * 3 + 5));
  5543  001756  0101               	movlb	1	; () banked
  5544  001758  0E01               	movlw	high _Cf	;volatile
  5545  00175A  6E51               	movwf	eeprom_read_array@pData+1,c
  5546  00175C  0101               	movlb	1	; () banked
  5547  00175E  0E00               	movlw	low _Cf	;volatile
  5548  001760  6E50               	movwf	eeprom_read_array@pData,c
  5549  001762  0100               	movlb	0	; () banked
  5550  001764  6FB0               	movwf	??_cf_check_and_display& (0+255),b
  5551  001766  0E00               	movlw	0
  5552  001768  6E52               	movwf	eeprom_read_array@Address,c
  5553  00176A  0100               	movlb	0	; () banked
  5554  00176C  51B0               	movf	??_cf_check_and_display& (0+255),w,b
  5555  00176E  0100               	movlb	0	; () banked
  5556  001770  6FB1               	movwf	(??_cf_check_and_display+1)& (0+255),b
  5557  001772  0E65               	movlw	101
  5558  001774  6E53               	movwf	eeprom_read_array@NbData,c
  5559  001776  0100               	movlb	0	; () banked
  5560  001778  51B1               	movf	(??_cf_check_and_display+1)& (0+255),w,b
  5561  00177A  EC17  F016         	call	_eeprom_read_array	;wreg free
  5562                           
  5563                           ;config.c: 99: configOk = cf_check();
  5564  00177E  EC13  F015         	call	_cf_check	;wreg free
  5565  001782  0100               	movlb	0	; () banked
  5566  001784  0100               	movlb	0	; () banked
  5567  001786  6FB4               	movwf	cf_check_and_display@configOk& (0+255),b
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;config.c: 101: if (configOk == 1)
  5571  001788  0100               	movlb	0	; () banked
  5572  00178A  0100               	movlb	0	; () banked
  5573  00178C  05B4               	decf	cf_check_and_display@configOk& (0+255),w,b
  5574  00178E  A4D8               	btfss	status,2,c
  5575  001790  D080               	goto	l5945
  5576                           
  5577                           ; BSR set to: 0
  5578                           ;config.c: 102: {
  5579                           ;config.c: 104: if (Cf.IsLong == 1)
  5580  001792  0101               	movlb	1	; () banked
  5581  001794  A16A               	btfss	(_Cf+106)& (0+255),0,b	;volatile
  5582  001796  D04C               	goto	l5941
  5583                           
  5584                           ; BSR set to: 1
  5585                           ;config.c: 105: {
  5586                           ;config.c: 106: Ecran.Digit[0] = ' ';
  5587  001798  0100               	movlb	0	; () banked
  5588  00179A  6FB0               	movwf	??_cf_check_and_display& (0+255),b
  5589  00179C  0E20               	movlw	32
  5590  00179E  0100               	movlb	0	; () banked
  5591  0017A0  0100               	movlb	0	; () banked
  5592  0017A2  6F98               	movwf	_Ecran& (0+255),b
  5593  0017A4  0100               	movlb	0	; () banked
  5594  0017A6  51B0               	movf	??_cf_check_and_display& (0+255),w,b
  5595                           
  5596                           ;config.c: 107: Ecran.Digit[1] = ' ';
  5597  0017A8  0100               	movlb	0	; () banked
  5598  0017AA  6FB0               	movwf	??_cf_check_and_display& (0+255),b
  5599  0017AC  0E20               	movlw	32
  5600  0017AE  0100               	movlb	0	; () banked
  5601  0017B0  0100               	movlb	0	; () banked
  5602  0017B2  6F99               	movwf	(_Ecran+1)& (0+255),b
  5603  0017B4  0100               	movlb	0	; () banked
  5604  0017B6  51B0               	movf	??_cf_check_and_display& (0+255),w,b
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;config.c: 108: Ecran.Digit[2] = HexToAscii(((unsigned char) ((unsigned char) ((Cf.Data[
      +                          98]) & 0xF0) >> 4)));
  5608  0017B8  0101               	movlb	1	; () banked
  5609  0017BA  0101               	movlb	1	; () banked
  5610  0017BC  3962               	swapf	(_Cf+98)& (0+255),w,b	;volatile
  5611  0017BE  0B0F               	andlw	15
  5612  0017C0  0B0F               	andlw	15
  5613  0017C2  EC82  F016         	call	_HexToAscii
  5614  0017C6  0100               	movlb	0	; () banked
  5615  0017C8  0100               	movlb	0	; () banked
  5616  0017CA  6F9A               	movwf	(_Ecran+2)& (0+255),b
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;config.c: 109: Ecran.Digit[3] = HexToAscii(((unsigned char) ((Cf.Data[98]) & 0x0F)));
  5620  0017CC  0101               	movlb	1	; () banked
  5621  0017CE  0101               	movlb	1	; () banked
  5622  0017D0  5162               	movf	(_Cf+98)& (0+255),w,b	;volatile
  5623  0017D2  0B0F               	andlw	15
  5624  0017D4  EC82  F016         	call	_HexToAscii
  5625  0017D8  0100               	movlb	0	; () banked
  5626  0017DA  0100               	movlb	0	; () banked
  5627  0017DC  6F9B               	movwf	(_Ecran+3)& (0+255),b
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;config.c: 111: Ecran.Digits = Ecran.Digit;
  5631  0017DE  0100               	movlb	0	; () banked
  5632  0017E0  0E00               	movlw	high _Ecran
  5633  0017E2  0100               	movlb	0	; () banked
  5634  0017E4  0100               	movlb	0	; () banked
  5635  0017E6  6F9D               	movwf	(_Ecran+5)& (0+255),b
  5636  0017E8  0100               	movlb	0	; () banked
  5637  0017EA  0E98               	movlw	low _Ecran
  5638  0017EC  0100               	movlb	0	; () banked
  5639  0017EE  0100               	movlb	0	; () banked
  5640  0017F0  6F9C               	movwf	(_Ecran+4)& (0+255),b
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;config.c: 113: temp = Cptms;
  5644  0017F2  C02D  F0B2         	movff	_Cptms,cf_check_and_display@temp	;volatile
  5645  0017F6  C02E  F0B3         	movff	_Cptms+1,cf_check_and_display@temp+1	;volatile
  5646                           
  5647                           ;config.c: 115: while((((unsigned short) (Cptms - temp) < 1000) ? 1 : 0)) {ecran_refresh
      +                          ();}
  5648  0017FA  D002               	goto	l5939
  5649  0017FC                     l5937:
  5650                           
  5651                           ; BSR set to: 0
  5652  0017FC  EC9C  F011         	call	_ecran_refresh	;wreg free
  5653  001800                     l5939:
  5654  001800  0100               	movlb	0	; () banked
  5655  001802  C0B2  F0B0         	movff	cf_check_and_display@temp,??_cf_check_and_display
  5656  001806  0100               	movlb	0	; () banked
  5657  001808  C0B3  F0B1         	movff	cf_check_and_display@temp+1,??_cf_check_and_display+1
  5658  00180C  0100               	movlb	0	; () banked
  5659  00180E  1FB0               	comf	??_cf_check_and_display& (0+255),f,b
  5660  001810  1FB1               	comf	(??_cf_check_and_display+1)& (0+255),f,b
  5661  001812  4BB0               	infsnz	??_cf_check_and_display& (0+255),f,b
  5662  001814  2BB1               	incf	(??_cf_check_and_display+1)& (0+255),f,b
  5663  001816  502D               	movf	_Cptms,w,c	;volatile
  5664  001818  0100               	movlb	0	; () banked
  5665  00181A  27B0               	addwf	??_cf_check_and_display& (0+255),f,b
  5666  00181C  502E               	movf	_Cptms+1,w,c	;volatile
  5667  00181E  0100               	movlb	0	; () banked
  5668  001820  23B1               	addwfc	(??_cf_check_and_display+1)& (0+255),f,b
  5669  001822  0EE8               	movlw	232
  5670  001824  0100               	movlb	0	; () banked
  5671  001826  5DB0               	subwf	??_cf_check_and_display& (0+255),w,b
  5672  001828  0E03               	movlw	3
  5673  00182A  59B1               	subwfb	(??_cf_check_and_display+1)& (0+255),w,b
  5674  00182C  A0D8               	btfss	status,0,c
  5675  00182E  D7E6               	goto	l5937
  5676  001830                     l5941:
  5677                           
  5678                           ;config.c: 116: }
  5679                           ;config.c: 118: Ecran.Digit[0] = HexToAscii(((unsigned char) ((unsigned char) ((Cf.Data[
      +                          99]) & 0xF0) >> 4)));
  5680  001830  0101               	movlb	1	; () banked
  5681  001832  0101               	movlb	1	; () banked
  5682  001834  3963               	swapf	(_Cf+99)& (0+255),w,b	;volatile
  5683  001836  0B0F               	andlw	15
  5684  001838  0B0F               	andlw	15
  5685  00183A  EC82  F016         	call	_HexToAscii
  5686  00183E  0100               	movlb	0	; () banked
  5687  001840  0100               	movlb	0	; () banked
  5688  001842  6F98               	movwf	_Ecran& (0+255),b
  5689                           
  5690                           ;config.c: 119: Ecran.Digit[1] = HexToAscii(((unsigned char) ((Cf.Data[99]) & 0x0F)));
  5691  001844  0101               	movlb	1	; () banked
  5692  001846  0101               	movlb	1	; () banked
  5693  001848  5163               	movf	(_Cf+99)& (0+255),w,b	;volatile
  5694  00184A  0B0F               	andlw	15
  5695  00184C  EC82  F016         	call	_HexToAscii
  5696  001850  0100               	movlb	0	; () banked
  5697  001852  0100               	movlb	0	; () banked
  5698  001854  6F99               	movwf	(_Ecran+1)& (0+255),b
  5699                           
  5700                           ;config.c: 120: Ecran.Digit[2] = HexToAscii(((unsigned char) ((unsigned char) ((Cf.Data[
      +                          100]) & 0xF0) >> 4)));
  5701  001856  0101               	movlb	1	; () banked
  5702  001858  0101               	movlb	1	; () banked
  5703  00185A  3964               	swapf	(_Cf+100)& (0+255),w,b	;volatile
  5704  00185C  0B0F               	andlw	15
  5705  00185E  0B0F               	andlw	15
  5706  001860  EC82  F016         	call	_HexToAscii
  5707  001864  0100               	movlb	0	; () banked
  5708  001866  0100               	movlb	0	; () banked
  5709  001868  6F9A               	movwf	(_Ecran+2)& (0+255),b
  5710                           
  5711                           ;config.c: 121: Ecran.Digit[3] = HexToAscii(((unsigned char) ((Cf.Data[100]) & 0x0F)));
  5712  00186A  0101               	movlb	1	; () banked
  5713  00186C  0101               	movlb	1	; () banked
  5714  00186E  5164               	movf	(_Cf+100)& (0+255),w,b	;volatile
  5715  001870  0B0F               	andlw	15
  5716  001872  EC82  F016         	call	_HexToAscii
  5717  001876  0100               	movlb	0	; () banked
  5718  001878  0100               	movlb	0	; () banked
  5719  00187A  6F9B               	movwf	(_Ecran+3)& (0+255),b
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;config.c: 123: Ecran.Digits = Ecran.Digit;
  5723  00187C  0100               	movlb	0	; () banked
  5724  00187E  0E00               	movlw	high _Ecran
  5725  001880  0100               	movlb	0	; () banked
  5726  001882  0100               	movlb	0	; () banked
  5727  001884  6F9D               	movwf	(_Ecran+5)& (0+255),b
  5728  001886  0100               	movlb	0	; () banked
  5729  001888  0E98               	movlw	low _Ecran
  5730  00188A  0100               	movlb	0	; () banked
  5731  00188C  0100               	movlb	0	; () banked
  5732  00188E  6F9C               	movwf	(_Ecran+4)& (0+255),b
  5733                           
  5734                           ;config.c: 124: }
  5735  001890  D00A               	goto	l425
  5736  001892                     l5945:
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;config.c: 125: else
  5740                           ;config.c: 126: {
  5741                           ;config.c: 127: ecran_print_one_char(3, 'E');
  5742  001892  0100               	movlb	0	; () banked
  5743  001894  6FB0               	movwf	??_cf_check_and_display& (0+255),b
  5744  001896  0E45               	movlw	69
  5745  001898  6E50               	movwf	ecran_print_one_char@Character,c
  5746  00189A  0100               	movlb	0	; () banked
  5747  00189C  51B0               	movf	??_cf_check_and_display& (0+255),w,b
  5748  00189E  0E03               	movlw	3
  5749  0018A0  EC35  F015         	call	_ecran_print_one_char
  5750  0018A4                     l422:
  5751  0018A4  D7FF               	goto	l422
  5752  0018A6                     l425:
  5753  0018A6  0012               	return	
  5754  0018A8  FFFF               	dw	65535	; errata NOP
  5755  0018AA                     __end_of_cf_check_and_display:
  5756                           	opt stack 0
  5757                           tblptru	equ	0xFF8
  5758                           tblptrh	equ	0xFF7
  5759                           tblptrl	equ	0xFF6
  5760                           tablat	equ	0xFF5
  5761                           prodh	equ	0xFF4
  5762                           prodl	equ	0xFF3
  5763                           intcon	equ	0xFF2
  5764                           intcon2	equ	0xFF1
  5765                           postinc0	equ	0xFEE
  5766                           wreg	equ	0xFE8
  5767                           postdec1	equ	0xFE5
  5768                           fsr1l	equ	0xFE1
  5769                           indf2	equ	0xFDF
  5770                           postinc2	equ	0xFDE
  5771                           postdec2	equ	0xFDD
  5772                           fsr2h	equ	0xFDA
  5773                           fsr2l	equ	0xFD9
  5774                           status	equ	0xFD8
  5775                           
  5776 ;; *************** function _eeprom_read_array *****************
  5777 ;; Defined at:
  5778 ;;		line 40 in file "eeprom.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;  pData           2   32[COMRAM] PTR unsigned char 
  5781 ;;		 -> Cf(107), 
  5782 ;;  Address         1   34[COMRAM] unsigned char 
  5783 ;;  NbData          1   35[COMRAM] unsigned char 
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;  i               1   37[COMRAM] unsigned char 
  5786 ;; Return value:  Size  Location     Type
  5787 ;;		None               void
  5788 ;; Registers used:
  5789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5790 ;; Tracked objects:
  5791 ;;		On entry : 0/0
  5792 ;;		On exit  : 0/0
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5795 ;;      Params:         4       0       0       0       0       0       0
  5796 ;;      Locals:         1       0       0       0       0       0       0
  5797 ;;      Temps:          1       0       0       0       0       0       0
  5798 ;;      Totals:         6       0       0       0       0       0       0
  5799 ;;Total ram usage:        6 bytes
  5800 ;; Hardware stack levels used:    1
  5801 ;; Hardware stack levels required when called:    3
  5802 ;; This function calls:
  5803 ;;		_eeprom_read
  5804 ;; This function is called by:
  5805 ;;		_cf_check_and_display
  5806 ;;		_cf_rcv
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           	psect	text24
  5811  002C2E                     __ptext24:
  5812                           	opt stack 0
  5813  002C2E                     _eeprom_read_array:
  5814                           	opt stack 25
  5815                           
  5816                           ;incstack = 0
  5817  002C2E  FFFF               	dw	65535
  5818                           
  5819                           ;eeprom.c: 42: unsigned char i;
  5820                           ;eeprom.c: 44: for (i = 0; i < NbData; i ++)
  5821  002C30  6E54               	movwf	??_eeprom_read_array& (0+255),c
  5822  002C32  0E00               	movlw	0
  5823  002C34  6E55               	movwf	eeprom_read_array@i,c
  5824  002C36  5054               	movf	??_eeprom_read_array& (0+255),w,c
  5825  002C38  D00C               	goto	l5397
  5826  002C3A                     l5389:
  5827                           
  5828                           ;eeprom.c: 45: {
  5829                           ;eeprom.c: 46: *pData = eeprom_read(Address);
  5830  002C3A  5052               	movf	eeprom_read_array@Address,w,c
  5831  002C3C  ECAE  F016         	call	_eeprom_read
  5832  002C40  C050  FFD9         	movff	eeprom_read_array@pData,fsr2l
  5833  002C44  C051  FFDA         	movff	eeprom_read_array@pData+1,fsr2h
  5834  002C48  6EDF               	movwf	indf2,c
  5835                           
  5836                           ;eeprom.c: 47: pData ++;
  5837  002C4A  4A50               	infsnz	eeprom_read_array@pData,f,c
  5838  002C4C  2A51               	incf	eeprom_read_array@pData+1,f,c
  5839                           
  5840                           ;eeprom.c: 48: Address ++;
  5841  002C4E  2A52               	incf	eeprom_read_array@Address,f,c
  5842  002C50  2A55               	incf	eeprom_read_array@i,f,c
  5843  002C52                     l5397:
  5844  002C52  5053               	movf	eeprom_read_array@NbData,w,c
  5845  002C54  5C55               	subwf	eeprom_read_array@i,w,c
  5846  002C56  B0D8               	btfsc	status,0,c
  5847  002C58  0012               	return	
  5848  002C5A  FFFF               	dw	65535	; assembler added errata NOP
  5849  002C5C  D7EE               	goto	l5389
  5850  002C5E  FFFF               	dw	65535	; errata NOP
  5851  002C60                     __end_of_eeprom_read_array:
  5852                           	opt stack 0
  5853                           tblptru	equ	0xFF8
  5854                           tblptrh	equ	0xFF7
  5855                           tblptrl	equ	0xFF6
  5856                           tablat	equ	0xFF5
  5857                           prodh	equ	0xFF4
  5858                           prodl	equ	0xFF3
  5859                           intcon	equ	0xFF2
  5860                           intcon2	equ	0xFF1
  5861                           postinc0	equ	0xFEE
  5862                           wreg	equ	0xFE8
  5863                           postdec1	equ	0xFE5
  5864                           fsr1l	equ	0xFE1
  5865                           indf2	equ	0xFDF
  5866                           postinc2	equ	0xFDE
  5867                           postdec2	equ	0xFDD
  5868                           fsr2h	equ	0xFDA
  5869                           fsr2l	equ	0xFD9
  5870                           status	equ	0xFD8
  5871                           
  5872 ;; *************** function _eeprom_read *****************
  5873 ;; Defined at:
  5874 ;;		line 3 in file "eeprom.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;  Address         1    wreg     unsigned char 
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;  Address         1   31[COMRAM] unsigned char 
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  1    wreg      unsigned char 
  5881 ;; Registers used:
  5882 ;;		wreg, status,2
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5888 ;;      Params:         0       0       0       0       0       0       0
  5889 ;;      Locals:         1       0       0       0       0       0       0
  5890 ;;      Temps:          0       0       0       0       0       0       0
  5891 ;;      Totals:         1       0       0       0       0       0       0
  5892 ;;Total ram usage:        1 bytes
  5893 ;; Hardware stack levels used:    1
  5894 ;; Hardware stack levels required when called:    2
  5895 ;; This function calls:
  5896 ;;		Nothing
  5897 ;; This function is called by:
  5898 ;;		_eeprom_read_array
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           	psect	text25
  5903  002D5C                     __ptext25:
  5904                           	opt stack 0
  5905  002D5C                     _eeprom_read:
  5906                           	opt stack 25
  5907                           
  5908                           ;incstack = 0
  5909  002D5C  FFFF               	dw	65535
  5910                           
  5911                           ;eeprom_read@Address stored from wreg
  5912  002D5E  CFE8 F04F          	movff	wreg,eeprom_read@Address
  5913                           
  5914                           ;eeprom.c: 5: EEADR = Address;
  5915  002D62  C04F  FFA9         	movff	eeprom_read@Address,4009	;volatile
  5916                           
  5917                           ;eeprom.c: 7: EEPGD = 0;
  5918  002D66  9EA6               	bcf	4006,7,c	;volatile
  5919                           
  5920                           ;eeprom.c: 8: CFGS = 0;
  5921  002D68  9CA6               	bcf	4006,6,c	;volatile
  5922                           
  5923                           ;eeprom.c: 9: RD = 1;
  5924  002D6A  80A6               	bsf	4006,0,c	;volatile
  5925                           
  5926                           ;eeprom.c: 11: __nop();
  5927  002D6C  F000               	nop	
  5928                           
  5929                           ;eeprom.c: 12: __nop();
  5930  002D6E  F000               	nop	
  5931                           
  5932                           ;eeprom.c: 14: return EEDATA;
  5933  002D70  50A8               	movf	4008,w,c	;volatile
  5934  002D72  0012               	return	
  5935  002D74  FFFF               	dw	65535	; errata NOP
  5936  002D76                     __end_of_eeprom_read:
  5937                           	opt stack 0
  5938                           tblptru	equ	0xFF8
  5939                           tblptrh	equ	0xFF7
  5940                           tblptrl	equ	0xFF6
  5941                           tablat	equ	0xFF5
  5942                           prodh	equ	0xFF4
  5943                           prodl	equ	0xFF3
  5944                           intcon	equ	0xFF2
  5945                           intcon2	equ	0xFF1
  5946                           postinc0	equ	0xFEE
  5947                           wreg	equ	0xFE8
  5948                           postdec1	equ	0xFE5
  5949                           fsr1l	equ	0xFE1
  5950                           indf2	equ	0xFDF
  5951                           postinc2	equ	0xFDE
  5952                           postdec2	equ	0xFDD
  5953                           fsr2h	equ	0xFDA
  5954                           fsr2l	equ	0xFD9
  5955                           status	equ	0xFD8
  5956                           
  5957 ;; *************** function _cf_check *****************
  5958 ;; Defined at:
  5959 ;;		line 79 in file "config.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;		None
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;  valid           1    7[BANK0 ] unsigned char 
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  1    wreg      unsigned char 
  5966 ;; Registers used:
  5967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5973 ;;      Params:         0       0       0       0       0       0       0
  5974 ;;      Locals:         0       1       0       0       0       0       0
  5975 ;;      Temps:          0       1       0       0       0       0       0
  5976 ;;      Totals:         0       2       0       0       0       0       0
  5977 ;;Total ram usage:        2 bytes
  5978 ;; Hardware stack levels used:    1
  5979 ;; Hardware stack levels required when called:    4
  5980 ;; This function calls:
  5981 ;;		_cf_checkout
  5982 ;;		_cf_checkrange
  5983 ;;		_cf_checksum
  5984 ;; This function is called by:
  5985 ;;		_cf_check_and_display
  5986 ;;		_cf_rcv
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           	psect	text26
  5991  002A26                     __ptext26:
  5992                           	opt stack 0
  5993  002A26                     _cf_check:
  5994                           	opt stack 24
  5995                           
  5996                           ;incstack = 0
  5997  002A26  FFFF               	dw	65535
  5998                           
  5999                           ;config.c: 81: unsigned char valid = 0;
  6000  002A28  0100               	movlb	0	; () banked
  6001  002A2A  6FAE               	movwf	??_cf_check& (0+255),b
  6002  002A2C  0E00               	movlw	0
  6003  002A2E  0100               	movlb	0	; () banked
  6004  002A30  0100               	movlb	0	; () banked
  6005  002A32  6FAF               	movwf	cf_check@valid& (0+255),b
  6006  002A34  0100               	movlb	0	; () banked
  6007  002A36  51AE               	movf	??_cf_check& (0+255),w,b
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;config.c: 83: if (cf_checksum() && cf_checkout() && cf_checkrange())
  6011  002A38  ECEF  F005         	call	_cf_checksum	;wreg free
  6012  002A3C  A0D8               	btfss	status,0,c
  6013  002A3E  D010               	goto	l5421
  6014  002A40  EC87  F010         	call	_cf_checkout	;wreg free
  6015  002A44  A0D8               	btfss	status,0,c
  6016  002A46  D00C               	goto	l5421
  6017  002A48  ECA5  F014         	call	_cf_checkrange	;wreg free
  6018  002A4C  A0D8               	btfss	status,0,c
  6019  002A4E  D008               	goto	l5421
  6020                           
  6021                           ;config.c: 84: {
  6022                           ;config.c: 85: valid = 1;
  6023  002A50  0100               	movlb	0	; () banked
  6024  002A52  6FAE               	movwf	??_cf_check& (0+255),b
  6025  002A54  0E01               	movlw	1
  6026  002A56  0100               	movlb	0	; () banked
  6027  002A58  0100               	movlb	0	; () banked
  6028  002A5A  6FAF               	movwf	cf_check@valid& (0+255),b
  6029  002A5C  0100               	movlb	0	; () banked
  6030  002A5E  51AE               	movf	??_cf_check& (0+255),w,b
  6031  002A60                     l5421:
  6032                           
  6033                           ;config.c: 86: }
  6034                           ;config.c: 88: return valid;
  6035  002A60  0100               	movlb	0	; () banked
  6036  002A62  0100               	movlb	0	; () banked
  6037  002A64  51AF               	movf	cf_check@valid& (0+255),w,b
  6038                           
  6039                           ; BSR set to: 0
  6040                           
  6041                           ; BSR set to: 0
  6042  002A66  0012               	return	
  6043  002A68  FFFF               	dw	65535	; errata NOP
  6044  002A6A                     __end_of_cf_check:
  6045                           	opt stack 0
  6046                           tblptru	equ	0xFF8
  6047                           tblptrh	equ	0xFF7
  6048                           tblptrl	equ	0xFF6
  6049                           tablat	equ	0xFF5
  6050                           prodh	equ	0xFF4
  6051                           prodl	equ	0xFF3
  6052                           intcon	equ	0xFF2
  6053                           intcon2	equ	0xFF1
  6054                           postinc0	equ	0xFEE
  6055                           wreg	equ	0xFE8
  6056                           postdec1	equ	0xFE5
  6057                           fsr1l	equ	0xFE1
  6058                           indf2	equ	0xFDF
  6059                           postinc2	equ	0xFDE
  6060                           postdec2	equ	0xFDD
  6061                           fsr2h	equ	0xFDA
  6062                           fsr2l	equ	0xFD9
  6063                           status	equ	0xFD8
  6064                           
  6065 ;; *************** function _cf_checksum *****************
  6066 ;; Defined at:
  6067 ;;		line 4 in file "config.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;		None
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;  calcul          4    2[BANK0 ] unsigned long 
  6072 ;;  i               1    1[BANK0 ] unsigned char 
  6073 ;;  valid           1    0[BANK0 ] unsigned char 
  6074 ;; Return value:  Size  Location     Type
  6075 ;;		None               void
  6076 ;; Registers used:
  6077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6083 ;;      Params:         0       0       0       0       0       0       0
  6084 ;;      Locals:         0       6       0       0       0       0       0
  6085 ;;      Temps:         12       0       0       0       0       0       0
  6086 ;;      Totals:        12       6       0       0       0       0       0
  6087 ;;Total ram usage:       18 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    2
  6090 ;; This function calls:
  6091 ;;		Nothing
  6092 ;; This function is called by:
  6093 ;;		_cf_check
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text27
  6098  000BDE                     __ptext27:
  6099                           	opt stack 0
  6100  000BDE                     _cf_checksum:
  6101                           	opt stack 25
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;incstack = 0
  6105  000BDE  FFFF               	dw	65535
  6106                           
  6107                           ;config.c: 6: unsigned long calcul;
  6108                           ;config.c: 7: unsigned char i, valid = 0;
  6109  000BE0  6E4F               	movwf	??_cf_checksum& (0+255),c
  6110  000BE2  0E00               	movlw	0
  6111  000BE4  0100               	movlb	0	; () banked
  6112  000BE6  0100               	movlb	0	; () banked
  6113  000BE8  6FA8               	movwf	cf_checksum@valid& (0+255),b
  6114  000BEA  504F               	movf	??_cf_checksum& (0+255),w,c
  6115                           
  6116                           ;config.c: 9: for (i = 0, calcul = 0; i < 32; i ++)
  6117  000BEC  6E4F               	movwf	??_cf_checksum& (0+255),c
  6118  000BEE  0E00               	movlw	0
  6119  000BF0  0100               	movlb	0	; () banked
  6120  000BF2  0100               	movlb	0	; () banked
  6121  000BF4  6FA9               	movwf	cf_checksum@i& (0+255),b
  6122  000BF6  504F               	movf	??_cf_checksum& (0+255),w,c
  6123                           
  6124                           ; BSR set to: 0
  6125  000BF8  0E00               	movlw	0
  6126  000BFA  0100               	movlb	0	; () banked
  6127  000BFC  0100               	movlb	0	; () banked
  6128  000BFE  6FAA               	movwf	cf_checksum@calcul& (0+255),b
  6129  000C00  0E00               	movlw	0
  6130  000C02  0100               	movlb	0	; () banked
  6131  000C04  6FAB               	movwf	(cf_checksum@calcul+1)& (0+255),b
  6132  000C06  0E00               	movlw	0
  6133  000C08  0100               	movlb	0	; () banked
  6134  000C0A  6FAC               	movwf	(cf_checksum@calcul+2)& (0+255),b
  6135  000C0C  0E00               	movlw	0
  6136  000C0E  0100               	movlb	0	; () banked
  6137  000C10  6FAD               	movwf	(cf_checksum@calcul+3)& (0+255),b
  6138  000C12  D03E               	goto	L39
  6139  000C14                     l5105:
  6140                           
  6141                           ; BSR set to: 0
  6142                           ;config.c: 10: {
  6143                           ;config.c: 11: calcul += (unsigned long) ((unsigned short) (Cf.Data[i*3+1] << 8) + Cf.Da
      +                          ta[i*3+2]);
  6144  000C14  0100               	movlb	0	; () banked
  6145  000C16  0100               	movlb	0	; () banked
  6146  000C18  51A9               	movf	cf_checksum@i& (0+255),w,b
  6147  000C1A  0D03               	mullw	3
  6148  000C1C  0E01               	movlw	1
  6149  000C1E  26F3               	addwf	prodl,f,c
  6150  000C20  0E00               	movlw	0
  6151  000C22  22F4               	addwfc	prodh,f,c
  6152  000C24  0101               	movlb	1	; () banked
  6153  000C26  0E00               	movlw	low _Cf	;volatile
  6154  000C28  24F3               	addwf	prodl,w,c
  6155  000C2A  6ED9               	movwf	fsr2l,c
  6156  000C2C  0101               	movlb	1	; () banked
  6157  000C2E  0E01               	movlw	high _Cf	;volatile
  6158  000C30  20F4               	addwfc	prodh,w,c
  6159  000C32  6EDA               	movwf	fsr2h,c
  6160  000C34  50DF               	movf	indf2,w,c
  6161  000C36  6E4F               	movwf	??_cf_checksum& (0+255),c
  6162  000C38  504F               	movf	??_cf_checksum,w,c
  6163  000C3A  6E51               	movwf	(??_cf_checksum+2)& (0+255),c
  6164  000C3C  6A50               	clrf	(??_cf_checksum+1)& (0+255),c
  6165  000C3E  0100               	movlb	0	; () banked
  6166  000C40  0100               	movlb	0	; () banked
  6167  000C42  51A9               	movf	cf_checksum@i& (0+255),w,b
  6168  000C44  0D03               	mullw	3
  6169  000C46  0E02               	movlw	2
  6170  000C48  26F3               	addwf	prodl,f,c
  6171  000C4A  0E00               	movlw	0
  6172  000C4C  22F4               	addwfc	prodh,f,c
  6173  000C4E  0101               	movlb	1	; () banked
  6174  000C50  0E00               	movlw	low _Cf	;volatile
  6175  000C52  24F3               	addwf	prodl,w,c
  6176  000C54  6ED9               	movwf	fsr2l,c
  6177  000C56  0101               	movlb	1	; () banked
  6178  000C58  0E01               	movlw	high _Cf	;volatile
  6179  000C5A  20F4               	addwfc	prodh,w,c
  6180  000C5C  6EDA               	movwf	fsr2h,c
  6181  000C5E  50DF               	movf	indf2,w,c
  6182  000C60  6E52               	movwf	(??_cf_checksum+3)& (0+255),c
  6183  000C62  5052               	movf	??_cf_checksum+3,w,c
  6184  000C64  2650               	addwf	??_cf_checksum+1,f,c
  6185  000C66  0E00               	movlw	0
  6186  000C68  2251               	addwfc	??_cf_checksum+2,f,c
  6187  000C6A  5050               	movf	??_cf_checksum+1,w,c
  6188  000C6C  0100               	movlb	0	; () banked
  6189  000C6E  0100               	movlb	0	; () banked
  6190  000C70  27AA               	addwf	cf_checksum@calcul& (0+255),f,b
  6191  000C72  5051               	movf	??_cf_checksum+2,w,c
  6192  000C74  0100               	movlb	0	; () banked
  6193  000C76  0100               	movlb	0	; () banked
  6194  000C78  23AB               	addwfc	(cf_checksum@calcul+1)& (0+255),f,b
  6195  000C7A  0E00               	movlw	0
  6196  000C7C  0100               	movlb	0	; () banked
  6197  000C7E  0100               	movlb	0	; () banked
  6198  000C80  23AC               	addwfc	(cf_checksum@calcul+2)& (0+255),f,b
  6199  000C82  0E00               	movlw	0
  6200  000C84  0100               	movlb	0	; () banked
  6201  000C86  0100               	movlb	0	; () banked
  6202  000C88  23AD               	addwfc	(cf_checksum@calcul+3)& (0+255),f,b
  6203                           
  6204                           ; BSR set to: 0
  6205  000C8A  0100               	movlb	0	; () banked
  6206  000C8C  0100               	movlb	0	; () banked
  6207  000C8E  2BA9               	incf	cf_checksum@i& (0+255),f,b
  6208  000C90                     L39:
  6209                           
  6210                           ; BSR set to: 0
  6211  000C90  0E1F               	movlw	31
  6212  000C92  0100               	movlb	0	; () banked
  6213  000C94  0100               	movlb	0	; () banked
  6214  000C96  65A9               	cpfsgt	cf_checksum@i& (0+255),b
  6215  000C98  D7BD               	goto	l5105
  6216                           
  6217                           ; BSR set to: 0
  6218                           ;config.c: 12: }
  6219                           ;config.c: 14: if ( (((calcul >> 24) & 0x000000FF) == Cf.Data[97])
  6220                           ;config.c: 15: && (((calcul >> 16) & 0x000000FF) == Cf.Data[98])
  6221                           ;config.c: 16: && (((calcul >> 8) & 0x000000FF) == Cf.Data[99])
  6222                           ;config.c: 17: && ((calcul & 0x000000FF) == Cf.Data[100]))
  6223                           
  6224                           ; BSR set to: 0
  6225  000C9A  0101               	movlb	1	; () banked
  6226  000C9C  C161  F04F         	movff	_Cf+97,??_cf_checksum	;volatile
  6227  000CA0  6A50               	clrf	(??_cf_checksum+1)& (0+255),c
  6228  000CA2  6A51               	clrf	(??_cf_checksum+2)& (0+255),c
  6229  000CA4  6A52               	clrf	(??_cf_checksum+3)& (0+255),c
  6230  000CA6  0100               	movlb	0	; () banked
  6231  000CA8  C0AA  F053         	movff	cf_checksum@calcul,??_cf_checksum+4
  6232  000CAC  0100               	movlb	0	; () banked
  6233  000CAE  C0AB  F054         	movff	cf_checksum@calcul+1,??_cf_checksum+5
  6234  000CB2  0100               	movlb	0	; () banked
  6235  000CB4  C0AC  F055         	movff	cf_checksum@calcul+2,??_cf_checksum+6
  6236  000CB8  0100               	movlb	0	; () banked
  6237  000CBA  C0AD  F056         	movff	cf_checksum@calcul+3,??_cf_checksum+7
  6238  000CBE  0E19               	movlw	25
  6239  000CC0  D005               	goto	u4110
  6240  000CC2                     u4115:
  6241  000CC2  90D8               	bcf	status,0,c
  6242  000CC4  3256               	rrcf	??_cf_checksum+7,f,c
  6243  000CC6  3255               	rrcf	??_cf_checksum+6,f,c
  6244  000CC8  3254               	rrcf	??_cf_checksum+5,f,c
  6245  000CCA  3253               	rrcf	??_cf_checksum+4,f,c
  6246  000CCC                     u4110:
  6247  000CCC  2EE8               	decfsz	wreg,f,c
  6248  000CCE  D7F9               	goto	u4115
  6249  000CD0  0EFF               	movlw	255
  6250  000CD2  1453               	andwf	??_cf_checksum+4,w,c
  6251  000CD4  6E57               	movwf	(??_cf_checksum+8)& (0+255),c
  6252  000CD6  0E00               	movlw	0
  6253  000CD8  1454               	andwf	??_cf_checksum+5,w,c
  6254  000CDA  6E58               	movwf	(??_cf_checksum+9)& (0+255),c
  6255  000CDC  0E00               	movlw	0
  6256  000CDE  1455               	andwf	??_cf_checksum+6,w,c
  6257  000CE0  6E59               	movwf	(??_cf_checksum+10)& (0+255),c
  6258  000CE2  0E00               	movlw	0
  6259  000CE4  1456               	andwf	??_cf_checksum+7,w,c
  6260  000CE6  6E5A               	movwf	(??_cf_checksum+11)& (0+255),c
  6261  000CE8  5052               	movf	??_cf_checksum+3,w,c
  6262  000CEA  185A               	xorwf	??_cf_checksum+11,w,c
  6263  000CEC  E108               	bnz	u4125
  6264  000CEE  5051               	movf	??_cf_checksum+2,w,c
  6265  000CF0  1859               	xorwf	??_cf_checksum+10,w,c
  6266  000CF2  E105               	bnz	u4125
  6267  000CF4  5050               	movf	??_cf_checksum+1,w,c
  6268  000CF6  1858               	xorwf	??_cf_checksum+9,w,c
  6269  000CF8  E102               	bnz	u4125
  6270  000CFA  504F               	movf	??_cf_checksum,w,c
  6271  000CFC  1857               	xorwf	??_cf_checksum+8,w,c
  6272  000CFE                     u4125:
  6273  000CFE  A4D8               	btfss	status,2,c
  6274  000D00  D093               	goto	l5121
  6275                           
  6276                           ; BSR set to: 0
  6277  000D02  0101               	movlb	1	; () banked
  6278  000D04  C162  F04F         	movff	_Cf+98,??_cf_checksum	;volatile
  6279  000D08  6A50               	clrf	(??_cf_checksum+1)& (0+255),c
  6280  000D0A  6A51               	clrf	(??_cf_checksum+2)& (0+255),c
  6281  000D0C  6A52               	clrf	(??_cf_checksum+3)& (0+255),c
  6282  000D0E  0100               	movlb	0	; () banked
  6283  000D10  C0AA  F053         	movff	cf_checksum@calcul,??_cf_checksum+4
  6284  000D14  0100               	movlb	0	; () banked
  6285  000D16  C0AB  F054         	movff	cf_checksum@calcul+1,??_cf_checksum+5
  6286  000D1A  0100               	movlb	0	; () banked
  6287  000D1C  C0AC  F055         	movff	cf_checksum@calcul+2,??_cf_checksum+6
  6288  000D20  0100               	movlb	0	; () banked
  6289  000D22  C0AD  F056         	movff	cf_checksum@calcul+3,??_cf_checksum+7
  6290  000D26  0E11               	movlw	17
  6291  000D28  D005               	goto	u4130
  6292  000D2A                     u4135:
  6293  000D2A  90D8               	bcf	status,0,c
  6294  000D2C  3256               	rrcf	??_cf_checksum+7,f,c
  6295  000D2E  3255               	rrcf	??_cf_checksum+6,f,c
  6296  000D30  3254               	rrcf	??_cf_checksum+5,f,c
  6297  000D32  3253               	rrcf	??_cf_checksum+4,f,c
  6298  000D34                     u4130:
  6299  000D34  2EE8               	decfsz	wreg,f,c
  6300  000D36  D7F9               	goto	u4135
  6301  000D38  0EFF               	movlw	255
  6302  000D3A  1453               	andwf	??_cf_checksum+4,w,c
  6303  000D3C  6E57               	movwf	(??_cf_checksum+8)& (0+255),c
  6304  000D3E  0E00               	movlw	0
  6305  000D40  1454               	andwf	??_cf_checksum+5,w,c
  6306  000D42  6E58               	movwf	(??_cf_checksum+9)& (0+255),c
  6307  000D44  0E00               	movlw	0
  6308  000D46  1455               	andwf	??_cf_checksum+6,w,c
  6309  000D48  6E59               	movwf	(??_cf_checksum+10)& (0+255),c
  6310  000D4A  0E00               	movlw	0
  6311  000D4C  1456               	andwf	??_cf_checksum+7,w,c
  6312  000D4E  6E5A               	movwf	(??_cf_checksum+11)& (0+255),c
  6313  000D50  5052               	movf	??_cf_checksum+3,w,c
  6314  000D52  185A               	xorwf	??_cf_checksum+11,w,c
  6315  000D54  E108               	bnz	u4145
  6316  000D56  5051               	movf	??_cf_checksum+2,w,c
  6317  000D58  1859               	xorwf	??_cf_checksum+10,w,c
  6318  000D5A  E105               	bnz	u4145
  6319  000D5C  5050               	movf	??_cf_checksum+1,w,c
  6320  000D5E  1858               	xorwf	??_cf_checksum+9,w,c
  6321  000D60  E102               	bnz	u4145
  6322  000D62  504F               	movf	??_cf_checksum,w,c
  6323  000D64  1857               	xorwf	??_cf_checksum+8,w,c
  6324  000D66                     u4145:
  6325  000D66  A4D8               	btfss	status,2,c
  6326  000D68  D05F               	goto	l5121
  6327                           
  6328                           ; BSR set to: 0
  6329  000D6A  0101               	movlb	1	; () banked
  6330  000D6C  C163  F04F         	movff	_Cf+99,??_cf_checksum	;volatile
  6331  000D70  6A50               	clrf	(??_cf_checksum+1)& (0+255),c
  6332  000D72  6A51               	clrf	(??_cf_checksum+2)& (0+255),c
  6333  000D74  6A52               	clrf	(??_cf_checksum+3)& (0+255),c
  6334  000D76  0EFF               	movlw	255
  6335  000D78  0100               	movlb	0	; () banked
  6336  000D7A  C0AA  F053         	movff	cf_checksum@calcul,??_cf_checksum+4
  6337  000D7E  0100               	movlb	0	; () banked
  6338  000D80  C0AB  F054         	movff	cf_checksum@calcul+1,??_cf_checksum+5
  6339  000D84  0100               	movlb	0	; () banked
  6340  000D86  C0AC  F055         	movff	cf_checksum@calcul+2,??_cf_checksum+6
  6341  000D8A  0100               	movlb	0	; () banked
  6342  000D8C  C0AD  F056         	movff	cf_checksum@calcul+3,??_cf_checksum+7
  6343  000D90  C054  F053         	movff	??_cf_checksum+5,??_cf_checksum+4
  6344  000D94  C055  F054         	movff	??_cf_checksum+6,??_cf_checksum+5
  6345  000D98  C056  F055         	movff	??_cf_checksum+7,??_cf_checksum+6
  6346  000D9C  6A56               	clrf	??_cf_checksum+7,c
  6347  000D9E  1453               	andwf	??_cf_checksum+4,w,c
  6348  000DA0  6E57               	movwf	(??_cf_checksum+8)& (0+255),c
  6349  000DA2  0E00               	movlw	0
  6350  000DA4  1454               	andwf	??_cf_checksum+5,w,c
  6351  000DA6  6E58               	movwf	(??_cf_checksum+9)& (0+255),c
  6352  000DA8  0E00               	movlw	0
  6353  000DAA  1455               	andwf	??_cf_checksum+6,w,c
  6354  000DAC  6E59               	movwf	(??_cf_checksum+10)& (0+255),c
  6355  000DAE  0E00               	movlw	0
  6356  000DB0  1456               	andwf	??_cf_checksum+7,w,c
  6357  000DB2  6E5A               	movwf	(??_cf_checksum+11)& (0+255),c
  6358  000DB4  5052               	movf	??_cf_checksum+3,w,c
  6359  000DB6  185A               	xorwf	??_cf_checksum+11,w,c
  6360  000DB8  E108               	bnz	u4155
  6361  000DBA  5051               	movf	??_cf_checksum+2,w,c
  6362  000DBC  1859               	xorwf	??_cf_checksum+10,w,c
  6363  000DBE  E105               	bnz	u4155
  6364  000DC0  5050               	movf	??_cf_checksum+1,w,c
  6365  000DC2  1858               	xorwf	??_cf_checksum+9,w,c
  6366  000DC4  E102               	bnz	u4155
  6367  000DC6  504F               	movf	??_cf_checksum,w,c
  6368  000DC8  1857               	xorwf	??_cf_checksum+8,w,c
  6369  000DCA                     u4155:
  6370  000DCA  A4D8               	btfss	status,2,c
  6371  000DCC  D02D               	goto	l5121
  6372                           
  6373                           ; BSR set to: 0
  6374  000DCE  0101               	movlb	1	; () banked
  6375  000DD0  C164  F04F         	movff	_Cf+100,??_cf_checksum	;volatile
  6376  000DD4  6A50               	clrf	(??_cf_checksum+1)& (0+255),c
  6377  000DD6  6A51               	clrf	(??_cf_checksum+2)& (0+255),c
  6378  000DD8  6A52               	clrf	(??_cf_checksum+3)& (0+255),c
  6379  000DDA  0EFF               	movlw	255
  6380  000DDC  0100               	movlb	0	; () banked
  6381  000DDE  0100               	movlb	0	; () banked
  6382  000DE0  15AA               	andwf	cf_checksum@calcul& (0+255),w,b
  6383  000DE2  6E53               	movwf	(??_cf_checksum+4)& (0+255),c
  6384  000DE4  0E00               	movlw	0
  6385  000DE6  0100               	movlb	0	; () banked
  6386  000DE8  0100               	movlb	0	; () banked
  6387  000DEA  15AB               	andwf	(cf_checksum@calcul+1)& (0+255),w,b
  6388  000DEC  6E54               	movwf	(??_cf_checksum+5)& (0+255),c
  6389  000DEE  0E00               	movlw	0
  6390  000DF0  0100               	movlb	0	; () banked
  6391  000DF2  0100               	movlb	0	; () banked
  6392  000DF4  15AC               	andwf	(cf_checksum@calcul+2)& (0+255),w,b
  6393  000DF6  6E55               	movwf	(??_cf_checksum+6)& (0+255),c
  6394  000DF8  0E00               	movlw	0
  6395  000DFA  0100               	movlb	0	; () banked
  6396  000DFC  0100               	movlb	0	; () banked
  6397  000DFE  15AD               	andwf	(cf_checksum@calcul+3)& (0+255),w,b
  6398  000E00  6E56               	movwf	(??_cf_checksum+7)& (0+255),c
  6399  000E02  5052               	movf	??_cf_checksum+3,w,c
  6400  000E04  1856               	xorwf	??_cf_checksum+7,w,c
  6401  000E06  E108               	bnz	u4165
  6402  000E08  5051               	movf	??_cf_checksum+2,w,c
  6403  000E0A  1855               	xorwf	??_cf_checksum+6,w,c
  6404  000E0C  E105               	bnz	u4165
  6405  000E0E  5050               	movf	??_cf_checksum+1,w,c
  6406  000E10  1854               	xorwf	??_cf_checksum+5,w,c
  6407  000E12  E102               	bnz	u4165
  6408  000E14  504F               	movf	??_cf_checksum,w,c
  6409  000E16  1853               	xorwf	??_cf_checksum+4,w,c
  6410  000E18                     u4165:
  6411  000E18  A4D8               	btfss	status,2,c
  6412  000E1A  D006               	goto	l5121
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;config.c: 18: {
  6416                           ;config.c: 19: valid = 1;
  6417  000E1C  6E4F               	movwf	??_cf_checksum& (0+255),c
  6418  000E1E  0E01               	movlw	1
  6419  000E20  0100               	movlb	0	; () banked
  6420  000E22  0100               	movlb	0	; () banked
  6421  000E24  6FA8               	movwf	cf_checksum@valid& (0+255),b
  6422  000E26  504F               	movf	??_cf_checksum& (0+255),w,c
  6423  000E28                     l5121:
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;config.c: 20: }
  6427                           ;config.c: 22: if ((Cf.Data[97] == 0) && (Cf.Data[98] == 0) && (Cf.Data[99] == 0) && (Cf
      +                          .Data[100] == 0))
  6428  000E28  0101               	movlb	1	; () banked
  6429  000E2A  0101               	movlb	1	; () banked
  6430  000E2C  6761               	tstfsz	(_Cf+97)& (0+255),b	;volatile
  6431  000E2E  D00D               	goto	l5131
  6432                           
  6433                           ; BSR set to: 1
  6434  000E30  0101               	movlb	1	; () banked
  6435  000E32  0101               	movlb	1	; () banked
  6436  000E34  6762               	tstfsz	(_Cf+98)& (0+255),b	;volatile
  6437  000E36  D009               	goto	l5131
  6438                           
  6439                           ; BSR set to: 1
  6440  000E38  0101               	movlb	1	; () banked
  6441  000E3A  0101               	movlb	1	; () banked
  6442  000E3C  6763               	tstfsz	(_Cf+99)& (0+255),b	;volatile
  6443  000E3E  D005               	goto	l5131
  6444                           
  6445                           ; BSR set to: 1
  6446  000E40  0101               	movlb	1	; () banked
  6447  000E42  0101               	movlb	1	; () banked
  6448  000E44  6764               	tstfsz	(_Cf+100)& (0+255),b	;volatile
  6449  000E46  D001               	goto	l5131
  6450                           
  6451                           ; BSR set to: 1
  6452                           ;config.c: 23: {
  6453                           ;config.c: 24: Micro.Mod.P_00 = 1;
  6454  000E48  8260               	bsf	_Micro+5,1,c
  6455  000E4A                     l5131:
  6456                           
  6457                           ; BSR set to: 1
  6458                           ;config.c: 25: }
  6459                           ;config.c: 27: if (calcul > 0x0000FFFF) {Cf.IsLong = 1;}
  6460  000E4A  0E00               	movlw	0
  6461  000E4C  0100               	movlb	0	; () banked
  6462  000E4E  0100               	movlb	0	; () banked
  6463  000E50  5DAA               	subwf	cf_checksum@calcul& (0+255),w,b
  6464  000E52  0E00               	movlw	0
  6465  000E54  0100               	movlb	0	; () banked
  6466  000E56  59AB               	subwfb	(cf_checksum@calcul+1)& (0+255),w,b
  6467  000E58  0E01               	movlw	1
  6468  000E5A  0100               	movlb	0	; () banked
  6469  000E5C  59AC               	subwfb	(cf_checksum@calcul+2)& (0+255),w,b
  6470  000E5E  0E00               	movlw	0
  6471  000E60  0100               	movlb	0	; () banked
  6472  000E62  0100               	movlb	0	; () banked
  6473  000E64  59AD               	subwfb	(cf_checksum@calcul+3)& (0+255),w,b
  6474  000E66  A0D8               	btfss	status,0,c
  6475  000E68  D003               	goto	l5135
  6476                           
  6477                           ; BSR set to: 0
  6478  000E6A  0101               	movlb	1	; () banked
  6479  000E6C  0101               	movlb	1	; () banked
  6480  000E6E  816A               	bsf	(_Cf+106)& (0+255),0,b	;volatile
  6481  000E70                     l5135:
  6482                           
  6483                           ;config.c: 29: return valid;
  6484  000E70  C0A8  F04F         	movff	cf_checksum@valid,??_cf_checksum
  6485  000E74  304F               	rrcf	??_cf_checksum,w,c
  6486  000E76  0012               	return	
  6487  000E78  FFFF               	dw	65535	; errata NOP
  6488  000E7A                     __end_of_cf_checksum:
  6489                           	opt stack 0
  6490                           tblptru	equ	0xFF8
  6491                           tblptrh	equ	0xFF7
  6492                           tblptrl	equ	0xFF6
  6493                           tablat	equ	0xFF5
  6494                           prodh	equ	0xFF4
  6495                           prodl	equ	0xFF3
  6496                           intcon	equ	0xFF2
  6497                           intcon2	equ	0xFF1
  6498                           postinc0	equ	0xFEE
  6499                           wreg	equ	0xFE8
  6500                           postdec1	equ	0xFE5
  6501                           fsr1l	equ	0xFE1
  6502                           indf2	equ	0xFDF
  6503                           postinc2	equ	0xFDE
  6504                           postdec2	equ	0xFDD
  6505                           fsr2h	equ	0xFDA
  6506                           fsr2l	equ	0xFD9
  6507                           status	equ	0xFD8
  6508                           
  6509 ;; *************** function _cf_checkrange *****************
  6510 ;; Defined at:
  6511 ;;		line 65 in file "config.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;		None
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;  i               1   33[COMRAM] unsigned char 
  6516 ;;  valid           1   32[COMRAM] unsigned char 
  6517 ;; Return value:  Size  Location     Type
  6518 ;;		None               void
  6519 ;; Registers used:
  6520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6526 ;;      Params:         0       0       0       0       0       0       0
  6527 ;;      Locals:         2       0       0       0       0       0       0
  6528 ;;      Temps:          1       0       0       0       0       0       0
  6529 ;;      Totals:         3       0       0       0       0       0       0
  6530 ;;Total ram usage:        3 bytes
  6531 ;; Hardware stack levels used:    1
  6532 ;; Hardware stack levels required when called:    2
  6533 ;; This function calls:
  6534 ;;		Nothing
  6535 ;; This function is called by:
  6536 ;;		_cf_check
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           	psect	text28
  6541  00294A                     __ptext28:
  6542                           	opt stack 0
  6543  00294A                     _cf_checkrange:
  6544                           	opt stack 25
  6545                           
  6546                           ;incstack = 0
  6547  00294A  FFFF               	dw	65535
  6548                           
  6549                           ;config.c: 67: unsigned char i, valid = 0;
  6550  00294C  6E4F               	movwf	??_cf_checkrange& (0+255),c
  6551  00294E  0E00               	movlw	0
  6552  002950  6E50               	movwf	cf_checkrange@valid,c
  6553  002952  504F               	movf	??_cf_checkrange& (0+255),w,c
  6554                           
  6555                           ;config.c: 69: for (i = 0; i < 32; i ++)
  6556  002954  6E4F               	movwf	??_cf_checkrange& (0+255),c
  6557  002956  0E00               	movlw	0
  6558  002958  6E51               	movwf	cf_checkrange@i,c
  6559  00295A  504F               	movf	??_cf_checkrange& (0+255),w,c
  6560  00295C  D00F               	goto	L41
  6561  00295E                     l5183:
  6562                           
  6563                           ;config.c: 70: {
  6564                           ;config.c: 71: if (Cf.Data[i*3] > 32) {return valid;}
  6565  00295E  5051               	movf	cf_checkrange@i,w,c
  6566  002960  0D03               	mullw	3
  6567  002962  0101               	movlb	1	; () banked
  6568  002964  0E00               	movlw	low _Cf	;volatile
  6569  002966  24F3               	addwf	prodl,w,c
  6570  002968  6ED9               	movwf	fsr2l,c
  6571  00296A  0101               	movlb	1	; () banked
  6572  00296C  0E01               	movlw	high _Cf	;volatile
  6573  00296E  20F4               	addwfc	prodh,w,c
  6574  002970  6EDA               	movwf	fsr2h,c
  6575  002972  0E20               	movlw	32
  6576  002974  64DF               	cpfsgt	indf2,c
  6577  002976  D001               	goto	l5189
  6578  002978  D008               	goto	L40
  6579  00297A                     l5189:
  6580                           
  6581                           ; BSR set to: 1
  6582  00297A  2A51               	incf	cf_checkrange@i,f,c
  6583  00297C                     L41:
  6584                           
  6585                           ; BSR set to: 1
  6586  00297C  0E1F               	movlw	31
  6587  00297E  6451               	cpfsgt	cf_checkrange@i,c
  6588  002980  D7EE               	goto	l5183
  6589                           
  6590                           ;config.c: 72: }
  6591                           ;config.c: 74: valid = 1;
  6592                           
  6593                           ; BSR set to: 1
  6594  002982  6E4F               	movwf	??_cf_checkrange& (0+255),c
  6595  002984  0E01               	movlw	1
  6596  002986  6E50               	movwf	cf_checkrange@valid,c
  6597  002988  504F               	movf	??_cf_checkrange& (0+255),w,c
  6598  00298A                     L40:
  6599                           
  6600                           ;config.c: 76: return valid;
  6601  00298A  C050  F04F         	movff	cf_checkrange@valid,??_cf_checkrange
  6602  00298E  304F               	rrcf	??_cf_checkrange,w,c
  6603  002990  0012               	return	
  6604  002992  FFFF               	dw	65535	; errata NOP
  6605  002994                     __end_of_cf_checkrange:
  6606                           	opt stack 0
  6607                           tblptru	equ	0xFF8
  6608                           tblptrh	equ	0xFF7
  6609                           tblptrl	equ	0xFF6
  6610                           tablat	equ	0xFF5
  6611                           prodh	equ	0xFF4
  6612                           prodl	equ	0xFF3
  6613                           intcon	equ	0xFF2
  6614                           intcon2	equ	0xFF1
  6615                           postinc0	equ	0xFEE
  6616                           wreg	equ	0xFE8
  6617                           postdec1	equ	0xFE5
  6618                           fsr1l	equ	0xFE1
  6619                           indf2	equ	0xFDF
  6620                           postinc2	equ	0xFDE
  6621                           postdec2	equ	0xFDD
  6622                           fsr2h	equ	0xFDA
  6623                           fsr2l	equ	0xFD9
  6624                           status	equ	0xFD8
  6625                           
  6626 ;; *************** function _cf_checkout *****************
  6627 ;; Defined at:
  6628 ;;		line 33 in file "config.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;		None
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  i               1   40[COMRAM] unsigned char 
  6633 ;;  last_out        1   39[COMRAM] unsigned char 
  6634 ;;  valid           1   38[COMRAM] unsigned char 
  6635 ;; Return value:  Size  Location     Type
  6636 ;;		None               void
  6637 ;; Registers used:
  6638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6639 ;; Tracked objects:
  6640 ;;		On entry : 0/0
  6641 ;;		On exit  : 0/0
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6644 ;;      Params:         0       0       0       0       0       0       0
  6645 ;;      Locals:         3       0       0       0       0       0       0
  6646 ;;      Temps:          1       0       0       0       0       0       0
  6647 ;;      Totals:         4       0       0       0       0       0       0
  6648 ;;Total ram usage:        4 bytes
  6649 ;; Hardware stack levels used:    1
  6650 ;; Hardware stack levels required when called:    3
  6651 ;; This function calls:
  6652 ;;		___wmul
  6653 ;; This function is called by:
  6654 ;;		_cf_check
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           
  6658                           	psect	text29
  6659  00210E                     __ptext29:
  6660                           	opt stack 0
  6661  00210E                     _cf_checkout:
  6662                           	opt stack 24
  6663                           
  6664                           ;incstack = 0
  6665  00210E  FFFF               	dw	65535
  6666                           
  6667                           ;config.c: 35: unsigned char i, valid = 0;
  6668  002110  6E55               	movwf	??_cf_checkout& (0+255),c
  6669  002112  0E00               	movlw	0
  6670  002114  6E56               	movwf	cf_checkout@valid,c
  6671  002116  5055               	movf	??_cf_checkout& (0+255),w,c
  6672                           
  6673                           ;config.c: 36: unsigned char last_out = 0;
  6674  002118  6E55               	movwf	??_cf_checkout& (0+255),c
  6675  00211A  0E00               	movlw	0
  6676  00211C  6E57               	movwf	cf_checkout@last_out,c
  6677  00211E  5055               	movf	??_cf_checkout& (0+255),w,c
  6678                           
  6679                           ;config.c: 38: for (i = 0; i < 32; i ++)
  6680  002120  6E55               	movwf	??_cf_checkout& (0+255),c
  6681  002122  0E00               	movlw	0
  6682  002124  6E58               	movwf	cf_checkout@i,c
  6683  002126  5055               	movf	??_cf_checkout& (0+255),w,c
  6684  002128  D02D               	goto	L42
  6685  00212A                     l5145:
  6686                           
  6687                           ;config.c: 39: {
  6688                           ;config.c: 40: if (Cf.Data[i*3] == 0)
  6689  00212A  5058               	movf	cf_checkout@i,w,c
  6690  00212C  0D03               	mullw	3
  6691  00212E  0101               	movlb	1	; () banked
  6692  002130  0E00               	movlw	low _Cf	;volatile
  6693  002132  24F3               	addwf	prodl,w,c
  6694  002134  6ED9               	movwf	fsr2l,c
  6695  002136  0101               	movlb	1	; () banked
  6696  002138  0E01               	movlw	high _Cf	;volatile
  6697  00213A  20F4               	addwfc	prodh,w,c
  6698  00213C  6EDA               	movwf	fsr2h,c
  6699  00213E  50DF               	movf	indf2,w,c
  6700  002140  A4D8               	btfss	status,2,c
  6701  002142  D01C               	goto	l5155
  6702                           
  6703                           ; BSR set to: 1
  6704                           ;config.c: 41: {
  6705                           ;config.c: 42: if (i == 0) {return valid;}
  6706  002144  6658               	tstfsz	cf_checkout@i,c
  6707  002146  D001               	goto	l394
  6708  002148  D03E               	goto	l5173
  6709  00214A                     l394:
  6710                           
  6711                           ; BSR set to: 1
  6712                           ;config.c: 44: if (last_out == 0)
  6713  00214A  6657               	tstfsz	cf_checkout@last_out,c
  6714  00214C  D01A               	goto	l5161
  6715                           
  6716                           ; BSR set to: 1
  6717                           ;config.c: 45: {
  6718                           ;config.c: 46: last_out = Cf.Data[(i - 1) * 3];
  6719  00214E  0EFF               	movlw	255
  6720  002150  2458               	addwf	cf_checkout@i,w,c
  6721  002152  6E4F               	movwf	___wmul@multiplier,c
  6722  002154  6A50               	clrf	___wmul@multiplier+1,c
  6723  002156  0EFF               	movlw	255
  6724  002158  2250               	addwfc	___wmul@multiplier+1,f,c
  6725  00215A  0E00               	movlw	0
  6726  00215C  6E52               	movwf	___wmul@multiplicand+1,c
  6727  00215E  0E03               	movlw	3
  6728  002160  6E51               	movwf	___wmul@multiplicand,c
  6729  002162  EC55  F015         	call	___wmul	;wreg free
  6730  002166  0101               	movlb	1	; () banked
  6731  002168  0E00               	movlw	low _Cf	;volatile
  6732  00216A  244F               	addwf	?___wmul,w,c
  6733  00216C  6ED9               	movwf	fsr2l,c
  6734  00216E  0101               	movlb	1	; () banked
  6735  002170  0E01               	movlw	high _Cf	;volatile
  6736  002172  2050               	addwfc	?___wmul+1,w,c
  6737  002174  6EDA               	movwf	fsr2h,c
  6738  002176  50DF               	movf	indf2,w,c
  6739  002178  6E57               	movwf	cf_checkout@last_out,c
  6740  00217A  D003               	goto	l5161
  6741  00217C                     l5155:
  6742                           
  6743                           ; BSR set to: 1
  6744                           ;config.c: 49: else
  6745                           ;config.c: 50: {
  6746                           ;config.c: 51: if (last_out != 0) {return valid;}
  6747  00217C  5057               	movf	cf_checkout@last_out,w,c
  6748  00217E  A4D8               	btfss	status,2,c
  6749  002180  D022               	goto	l5173
  6750  002182                     l5161:
  6751                           
  6752                           ; BSR set to: 1
  6753  002182  2A58               	incf	cf_checkout@i,f,c
  6754  002184                     L42:
  6755                           
  6756                           ; BSR set to: 1
  6757  002184  0E1F               	movlw	31
  6758  002186  6458               	cpfsgt	cf_checkout@i,c
  6759  002188  D7D0               	goto	l5145
  6760                           
  6761                           ;config.c: 52: }
  6762                           ;config.c: 53: }
  6763                           ;config.c: 55: if ( ((last_out != 0) && (last_out == Cf.Data[96]))
  6764                           ;config.c: 56: || ((last_out == 0) && (Cf.Data[i*3] == Cf.Data[96])))
  6765                           
  6766                           ; BSR set to: 1
  6767  00218A  5057               	movf	cf_checkout@last_out,w,c
  6768  00218C  B4D8               	btfsc	status,2,c
  6769  00218E  D006               	goto	l403
  6770  002190  0101               	movlb	1	; () banked
  6771  002192  0101               	movlb	1	; () banked
  6772  002194  5160               	movf	(_Cf+96)& (0+255),w,b	;volatile
  6773  002196  1857               	xorwf	cf_checkout@last_out,w,c
  6774  002198  B4D8               	btfsc	status,2,c
  6775  00219A  D011               	goto	l5171
  6776  00219C                     l403:
  6777  00219C  6657               	tstfsz	cf_checkout@last_out,c
  6778  00219E  D013               	goto	l5173
  6779  0021A0  5058               	movf	cf_checkout@i,w,c
  6780  0021A2  0D03               	mullw	3
  6781  0021A4  0101               	movlb	1	; () banked
  6782  0021A6  0E00               	movlw	low _Cf	;volatile
  6783  0021A8  24F3               	addwf	prodl,w,c
  6784  0021AA  6ED9               	movwf	fsr2l,c
  6785  0021AC  0101               	movlb	1	; () banked
  6786  0021AE  0E01               	movlw	high _Cf	;volatile
  6787  0021B0  20F4               	addwfc	prodh,w,c
  6788  0021B2  6EDA               	movwf	fsr2h,c
  6789  0021B4  0101               	movlb	1	; () banked
  6790  0021B6  0101               	movlb	1	; () banked
  6791  0021B8  5160               	movf	(_Cf+96)& (0+255),w,b	;volatile
  6792  0021BA  62DF               	cpfseq	indf2,c
  6793  0021BC  D004               	goto	l5173
  6794  0021BE                     l5171:
  6795                           
  6796                           ; BSR set to: 1
  6797                           ;config.c: 57: {
  6798                           ;config.c: 58: valid = 1;
  6799  0021BE  6E55               	movwf	??_cf_checkout& (0+255),c
  6800  0021C0  0E01               	movlw	1
  6801  0021C2  6E56               	movwf	cf_checkout@valid,c
  6802  0021C4  5055               	movf	??_cf_checkout& (0+255),w,c
  6803  0021C6                     l5173:
  6804                           
  6805                           ;config.c: 59: }
  6806                           ;config.c: 61: return valid;
  6807  0021C6  C056  F055         	movff	cf_checkout@valid,??_cf_checkout
  6808  0021CA  3055               	rrcf	??_cf_checkout,w,c
  6809  0021CC  0012               	return	
  6810  0021CE  FFFF               	dw	65535	; errata NOP
  6811  0021D0                     __end_of_cf_checkout:
  6812                           	opt stack 0
  6813                           tblptru	equ	0xFF8
  6814                           tblptrh	equ	0xFF7
  6815                           tblptrl	equ	0xFF6
  6816                           tablat	equ	0xFF5
  6817                           prodh	equ	0xFF4
  6818                           prodl	equ	0xFF3
  6819                           intcon	equ	0xFF2
  6820                           intcon2	equ	0xFF1
  6821                           postinc0	equ	0xFEE
  6822                           wreg	equ	0xFE8
  6823                           postdec1	equ	0xFE5
  6824                           fsr1l	equ	0xFE1
  6825                           indf2	equ	0xFDF
  6826                           postinc2	equ	0xFDE
  6827                           postdec2	equ	0xFDD
  6828                           fsr2h	equ	0xFDA
  6829                           fsr2l	equ	0xFD9
  6830                           status	equ	0xFD8
  6831                           
  6832 ;; *************** function ___wmul *****************
  6833 ;; Defined at:
  6834 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\wmul.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;  multiplier      2   31[COMRAM] unsigned int 
  6837 ;;  multiplicand    2   33[COMRAM] unsigned int 
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;  product         2   35[COMRAM] unsigned int 
  6840 ;; Return value:  Size  Location     Type
  6841 ;;                  2   31[COMRAM] unsigned int 
  6842 ;; Registers used:
  6843 ;;		wreg, status,2, status,0, prodl, prodh
  6844 ;; Tracked objects:
  6845 ;;		On entry : 0/0
  6846 ;;		On exit  : 0/0
  6847 ;;		Unchanged: 0/0
  6848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6849 ;;      Params:         4       0       0       0       0       0       0
  6850 ;;      Locals:         2       0       0       0       0       0       0
  6851 ;;      Temps:          0       0       0       0       0       0       0
  6852 ;;      Totals:         6       0       0       0       0       0       0
  6853 ;;Total ram usage:        6 bytes
  6854 ;; Hardware stack levels used:    1
  6855 ;; Hardware stack levels required when called:    2
  6856 ;; This function calls:
  6857 ;;		Nothing
  6858 ;; This function is called by:
  6859 ;;		_cf_checkout
  6860 ;;		_DecToStr
  6861 ;;		_delay_s
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865                           	psect	text30
  6866  002AAA                     __ptext30:
  6867                           	opt stack 0
  6868  002AAA                     ___wmul:
  6869                           	opt stack 25
  6870                           
  6871                           ;incstack = 0
  6872  002AAA  FFFF               	dw	65535
  6873  002AAC  504F               	movf	___wmul@multiplier,w,c
  6874  002AAE  0251               	mulwf	___wmul@multiplicand,c
  6875  002AB0  CFF3 F053          	movff	prodl,___wmul@product
  6876  002AB4  CFF4 F054          	movff	prodh,___wmul@product+1
  6877  002AB8  504F               	movf	___wmul@multiplier,w,c
  6878  002ABA  0252               	mulwf	___wmul@multiplicand+1,c
  6879  002ABC  CFF3 FFF4          	movff	prodl,prodh
  6880  002AC0  6AF3               	clrf	prodl,c
  6881  002AC2  50F3               	movf	prodl,w,c
  6882  002AC4  2653               	addwf	___wmul@product,f,c
  6883  002AC6  50F4               	movf	prodh,w,c
  6884  002AC8  2254               	addwfc	___wmul@product+1,f,c
  6885  002ACA  5050               	movf	___wmul@multiplier+1,w,c
  6886  002ACC  0251               	mulwf	___wmul@multiplicand,c
  6887  002ACE  CFF3 FFF4          	movff	prodl,prodh
  6888  002AD2  6AF3               	clrf	prodl,c
  6889  002AD4  50F3               	movf	prodl,w,c
  6890  002AD6  2653               	addwf	___wmul@product,f,c
  6891  002AD8  50F4               	movf	prodh,w,c
  6892  002ADA  2254               	addwfc	___wmul@product+1,f,c
  6893  002ADC  C053  F04F         	movff	___wmul@product,?___wmul
  6894  002AE0  C054  F050         	movff	___wmul@product+1,?___wmul+1
  6895  002AE4  0012               	return	
  6896  002AE6  FFFF               	dw	65535	; errata NOP
  6897  002AE8                     __end_of___wmul:
  6898                           	opt stack 0
  6899                           tblptru	equ	0xFF8
  6900                           tblptrh	equ	0xFF7
  6901                           tblptrl	equ	0xFF6
  6902                           tablat	equ	0xFF5
  6903                           prodh	equ	0xFF4
  6904                           prodl	equ	0xFF3
  6905                           intcon	equ	0xFF2
  6906                           intcon2	equ	0xFF1
  6907                           postinc0	equ	0xFEE
  6908                           wreg	equ	0xFE8
  6909                           postdec1	equ	0xFE5
  6910                           fsr1l	equ	0xFE1
  6911                           indf2	equ	0xFDF
  6912                           postinc2	equ	0xFDE
  6913                           postdec2	equ	0xFDD
  6914                           fsr2h	equ	0xFDA
  6915                           fsr2l	equ	0xFD9
  6916                           status	equ	0xFD8
  6917                           
  6918 ;; *************** function _HexToAscii *****************
  6919 ;; Defined at:
  6920 ;;		line 28 in file "utils.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;  Value           1    wreg     unsigned char 
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;  Value           1   32[COMRAM] unsigned char 
  6925 ;;  character       1   31[COMRAM] unsigned char 
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      unsigned char 
  6928 ;; Registers used:
  6929 ;;		wreg, status,2, status,0
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6935 ;;      Params:         0       0       0       0       0       0       0
  6936 ;;      Locals:         2       0       0       0       0       0       0
  6937 ;;      Temps:          0       0       0       0       0       0       0
  6938 ;;      Totals:         2       0       0       0       0       0       0
  6939 ;;Total ram usage:        2 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:    2
  6942 ;; This function calls:
  6943 ;;		Nothing
  6944 ;; This function is called by:
  6945 ;;		_cf_check_and_display
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text31
  6950  002D04                     __ptext31:
  6951                           	opt stack 0
  6952  002D04                     _HexToAscii:
  6953                           	opt stack 27
  6954                           
  6955                           ;incstack = 0
  6956  002D04  FFFF               	dw	65535
  6957                           
  6958                           ;HexToAscii@Value stored from wreg
  6959  002D06  CFE8 F050          	movff	wreg,HexToAscii@Value
  6960                           
  6961                           ;utils.c: 30: char character;
  6962                           ;utils.c: 32: if (Value < 10)
  6963  002D0A  0E0A               	movlw	10
  6964  002D0C  5C50               	subwf	HexToAscii@Value,w,c
  6965  002D0E  B0D8               	btfsc	status,0,c
  6966  002D10  D003               	goto	l5635
  6967                           
  6968                           ;utils.c: 33: {
  6969                           ;utils.c: 34: character = Value + 0x30;
  6970  002D12  5050               	movf	HexToAscii@Value,w,c
  6971  002D14  0F30               	addlw	48
  6972  002D16  D002               	goto	L43
  6973  002D18                     l5635:
  6974                           
  6975                           ;utils.c: 36: else
  6976                           ;utils.c: 37: {
  6977                           ;utils.c: 38: character = Value - 9 + 0x40;
  6978  002D18  5050               	movf	HexToAscii@Value,w,c
  6979  002D1A  0F37               	addlw	55
  6980  002D1C                     L43:
  6981  002D1C  6E4F               	movwf	HexToAscii@character,c
  6982                           
  6983                           ;utils.c: 39: }
  6984                           ;utils.c: 41: return character;
  6985  002D1E  504F               	movf	HexToAscii@character,w,c
  6986  002D20  0012               	return	
  6987  002D22  FFFF               	dw	65535	; errata NOP
  6988  002D24                     __end_of_HexToAscii:
  6989                           	opt stack 0
  6990                           tblptru	equ	0xFF8
  6991                           tblptrh	equ	0xFF7
  6992                           tblptrl	equ	0xFF6
  6993                           tablat	equ	0xFF5
  6994                           prodh	equ	0xFF4
  6995                           prodl	equ	0xFF3
  6996                           intcon	equ	0xFF2
  6997                           intcon2	equ	0xFF1
  6998                           postinc0	equ	0xFEE
  6999                           wreg	equ	0xFE8
  7000                           postdec1	equ	0xFE5
  7001                           fsr1l	equ	0xFE1
  7002                           indf2	equ	0xFDF
  7003                           postinc2	equ	0xFDE
  7004                           postdec2	equ	0xFDD
  7005                           fsr2h	equ	0xFDA
  7006                           fsr2l	equ	0xFD9
  7007                           status	equ	0xFD8
  7008                           
  7009 ;; *************** function _bouton_refresh *****************
  7010 ;; Defined at:
  7011 ;;		line 11 in file "bouton.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;		None
  7014 ;; Auto vars:     Size  Location     Type
  7015 ;;  temp            1   35[COMRAM] unsigned char 
  7016 ;;  i               1   36[COMRAM] unsigned char 
  7017 ;; Return value:  Size  Location     Type
  7018 ;;		None               void
  7019 ;; Registers used:
  7020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7021 ;; Tracked objects:
  7022 ;;		On entry : 0/0
  7023 ;;		On exit  : 0/0
  7024 ;;		Unchanged: 0/0
  7025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7026 ;;      Params:         0       0       0       0       0       0       0
  7027 ;;      Locals:         4       0       0       0       0       0       0
  7028 ;;      Temps:          2       0       0       0       0       0       0
  7029 ;;      Totals:         6       0       0       0       0       0       0
  7030 ;;Total ram usage:        6 bytes
  7031 ;; Hardware stack levels used:    1
  7032 ;; Hardware stack levels required when called:    2
  7033 ;; This function calls:
  7034 ;;		Nothing
  7035 ;; This function is called by:
  7036 ;;		_main
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           	psect	text32
  7041  0010A2                     __ptext32:
  7042                           	opt stack 0
  7043  0010A2                     _bouton_refresh:
  7044                           	opt stack 28
  7045                           
  7046                           ;incstack = 0
  7047  0010A2  FFFF               	dw	65535
  7048                           
  7049                           ;bouton.c: 13: unsigned char i;
  7050                           ;bouton.c: 15: for (i = 0; i < Bp_Max; i++)
  7051  0010A4  6E4F               	movwf	??_bouton_refresh& (0+255),c
  7052  0010A6  0E00               	movlw	0
  7053  0010A8  6E54               	movwf	bouton_refresh@i,c
  7054  0010AA  504F               	movf	??_bouton_refresh& (0+255),w,c
  7055  0010AC  D0D7               	goto	L45
  7056  0010AE                     l5955:
  7057  0010AE  0E00               	movlw	0
  7058  0010B0  B084               	btfsc	3972,0,c	;volatile
  7059  0010B2  0E01               	movlw	1
  7060  0010B4  6E53               	movwf	bouton_refresh@temp,c
  7061  0010B6  D01C               	goto	l5967
  7062  0010B8                     l5957:
  7063  0010B8  0E00               	movlw	0
  7064  0010BA  B284               	btfsc	3972,1,c	;volatile
  7065  0010BC  0E01               	movlw	1
  7066  0010BE  6E53               	movwf	bouton_refresh@temp,c
  7067  0010C0  D017               	goto	l5967
  7068  0010C2                     l5959:
  7069  0010C2  0E00               	movlw	0
  7070  0010C4  BA82               	btfsc	3970,5,c	;volatile
  7071  0010C6  0E01               	movlw	1
  7072  0010C8  6E53               	movwf	bouton_refresh@temp,c
  7073  0010CA  D012               	goto	l5967
  7074  0010CC                     l5961:
  7075  0010CC  0E00               	movlw	0
  7076  0010CE  B081               	btfsc	3969,0,c	;volatile
  7077  0010D0  0E01               	movlw	1
  7078  0010D2  6E53               	movwf	bouton_refresh@temp,c
  7079  0010D4  D00D               	goto	l5967
  7080  0010D6                     l5965:
  7081  0010D6  5054               	movf	bouton_refresh@i,w,c
  7082                           
  7083                           ; Switch size 1, requested type "space"
  7084                           ; Number of cases is 4, Range of values is 0 to 3
  7085                           ; switch strategies available:
  7086                           ; Name         Instructions Cycles
  7087                           ; simple_byte           13     7 (average)
  7088                           ;	Chosen strategy is simple_byte
  7089  0010D8  0A00               	xorlw	0	; case 0
  7090  0010DA  B4D8               	btfsc	status,2,c
  7091  0010DC  D7E8               	goto	l5955
  7092  0010DE  0A01               	xorlw	1	; case 1
  7093  0010E0  B4D8               	btfsc	status,2,c
  7094  0010E2  D7EA               	goto	l5957
  7095  0010E4  0A03               	xorlw	3	; case 2
  7096  0010E6  B4D8               	btfsc	status,2,c
  7097  0010E8  D7EC               	goto	l5959
  7098  0010EA  0A01               	xorlw	1	; case 3
  7099  0010EC  B4D8               	btfsc	status,2,c
  7100  0010EE  D7EE               	goto	l5961
  7101  0010F0                     l5967:
  7102                           
  7103                           ;bouton.c: 28: if (temp == Bouton[i].Memo)
  7104  0010F0  5054               	movf	bouton_refresh@i,w,c
  7105  0010F2  0D03               	mullw	3
  7106  0010F4  0E02               	movlw	2
  7107  0010F6  26F3               	addwf	prodl,f,c
  7108  0010F8  0E00               	movlw	0
  7109  0010FA  22F4               	addwfc	prodh,f,c
  7110  0010FC  0100               	movlb	0	; () banked
  7111  0010FE  0E80               	movlw	low _Bouton
  7112  001100  24F3               	addwf	prodl,w,c
  7113  001102  6ED9               	movwf	fsr2l,c
  7114  001104  0100               	movlb	0	; () banked
  7115  001106  0E00               	movlw	high _Bouton
  7116  001108  20F4               	addwfc	prodh,w,c
  7117  00110A  6EDA               	movwf	fsr2h,c
  7118  00110C  A0DF               	btfss	indf2,0,c
  7119  00110E  D002               	goto	u5290
  7120  001110  0E01               	movlw	1
  7121  001112  D001               	goto	u5296
  7122  001114                     u5290:
  7123  001114  0E00               	movlw	0
  7124  001116                     u5296:
  7125  001116  1853               	xorwf	bouton_refresh@temp,w,c
  7126  001118  A4D8               	btfss	status,2,c
  7127  00111A  D07C               	goto	l5983
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;bouton.c: 29: {
  7131                           ;bouton.c: 30: if (Bouton[i].State != Bouton[i].Memo)
  7132  00111C  5054               	movf	bouton_refresh@i,w,c
  7133  00111E  0D03               	mullw	3
  7134  001120  0E02               	movlw	2
  7135  001122  26F3               	addwf	prodl,f,c
  7136  001124  0E00               	movlw	0
  7137  001126  22F4               	addwfc	prodh,f,c
  7138  001128  0100               	movlb	0	; () banked
  7139  00112A  0E80               	movlw	low _Bouton
  7140  00112C  24F3               	addwf	prodl,w,c
  7141  00112E  6ED9               	movwf	fsr2l,c
  7142  001130  0100               	movlb	0	; () banked
  7143  001132  0E00               	movlw	high _Bouton
  7144  001134  20F4               	addwfc	prodh,w,c
  7145  001136  6EDA               	movwf	fsr2h,c
  7146  001138  A0DF               	btfss	indf2,0,c
  7147  00113A  D002               	goto	u5310
  7148  00113C  0E01               	movlw	1
  7149  00113E  D001               	goto	u5312
  7150  001140                     u5310:
  7151  001140  0E00               	movlw	0
  7152  001142                     u5312:
  7153  001142  6E4F               	movwf	??_bouton_refresh& (0+255),c
  7154  001144  5054               	movf	bouton_refresh@i,w,c
  7155  001146  0D03               	mullw	3
  7156  001148  0E02               	movlw	2
  7157  00114A  26F3               	addwf	prodl,f,c
  7158  00114C  0E00               	movlw	0
  7159  00114E  22F4               	addwfc	prodh,f,c
  7160  001150  0100               	movlb	0	; () banked
  7161  001152  0E80               	movlw	low _Bouton
  7162  001154  24F3               	addwf	prodl,w,c
  7163  001156  6ED9               	movwf	fsr2l,c
  7164  001158  0100               	movlb	0	; () banked
  7165  00115A  0E00               	movlw	high _Bouton
  7166  00115C  20F4               	addwfc	prodh,w,c
  7167  00115E  6EDA               	movwf	fsr2h,c
  7168  001160  A2DF               	btfss	indf2,1,c
  7169  001162  D002               	goto	u5320
  7170  001164  0E01               	movlw	1
  7171  001166  D001               	goto	u5322
  7172  001168                     u5320:
  7173  001168  0E00               	movlw	0
  7174  00116A                     u5322:
  7175  00116A  1A4F               	xorwf	??_bouton_refresh,f,c
  7176  00116C  B4D8               	btfsc	status,2,c
  7177  00116E  D075               	goto	l5985
  7178                           
  7179                           ; BSR set to: 0
  7180                           ;bouton.c: 31: {
  7181                           ;bouton.c: 32: if ((((unsigned short) (Cptms - Bouton[i].Time) > (((i == Bp_Start) && (M
      +                          icro.Mods == 1)) ? 5 : 100)) ? 1 : 0))
  7182  001170  5054               	movf	bouton_refresh@i,w,c
  7183  001172  0A03               	xorlw	3
  7184  001174  A4D8               	btfss	status,2,c
  7185  001176  D003               	goto	l5975
  7186                           
  7187                           ; BSR set to: 0
  7188  001178  0460               	decf	_Micro+5,w,c
  7189  00117A  B4D8               	btfsc	status,2,c
  7190  00117C  D004               	goto	l5977
  7191  00117E                     l5975:
  7192                           
  7193                           ; BSR set to: 0
  7194  00117E  0E00               	movlw	0
  7195  001180  6E52               	movwf	_bouton_refresh$2033+1,c
  7196  001182  0E64               	movlw	100
  7197  001184  D003               	goto	L44
  7198  001186                     l5977:
  7199                           
  7200                           ; BSR set to: 0
  7201  001186  0E00               	movlw	0
  7202  001188  6E52               	movwf	_bouton_refresh$2033+1,c
  7203  00118A  0E05               	movlw	5
  7204  00118C                     L44:
  7205  00118C  6E51               	movwf	_bouton_refresh$2033,c
  7206                           
  7207                           ; BSR set to: 0
  7208                           
  7209                           ; BSR set to: 0
  7210  00118E  5054               	movf	bouton_refresh@i,w,c
  7211  001190  0D03               	mullw	3
  7212  001192  0100               	movlb	0	; () banked
  7213  001194  0E80               	movlw	low _Bouton
  7214  001196  24F3               	addwf	prodl,w,c
  7215  001198  6ED9               	movwf	fsr2l,c
  7216  00119A  0100               	movlb	0	; () banked
  7217  00119C  0E00               	movlw	high _Bouton
  7218  00119E  20F4               	addwfc	prodh,w,c
  7219  0011A0  6EDA               	movwf	fsr2h,c
  7220  0011A2  CFDE F04F          	movff	postinc2,??_bouton_refresh
  7221  0011A6  CFDD F050          	movff	postdec2,??_bouton_refresh+1
  7222  0011AA  1E4F               	comf	??_bouton_refresh,f,c
  7223  0011AC  1E50               	comf	??_bouton_refresh+1,f,c
  7224  0011AE  4A4F               	infsnz	??_bouton_refresh,f,c
  7225  0011B0  2A50               	incf	??_bouton_refresh+1,f,c
  7226  0011B2  502D               	movf	_Cptms,w,c	;volatile
  7227  0011B4  264F               	addwf	??_bouton_refresh,f,c
  7228  0011B6  502E               	movf	_Cptms+1,w,c	;volatile
  7229  0011B8  2250               	addwfc	??_bouton_refresh+1,f,c
  7230  0011BA  504F               	movf	??_bouton_refresh,w,c
  7231  0011BC  5C51               	subwf	_bouton_refresh$2033,w,c
  7232  0011BE  5050               	movf	??_bouton_refresh+1,w,c
  7233  0011C0  5852               	subwfb	_bouton_refresh$2033+1,w,c
  7234  0011C2  B0D8               	btfsc	status,0,c
  7235  0011C4  D04A               	goto	l5985
  7236                           
  7237                           ; BSR set to: 0
  7238                           ;bouton.c: 33: {
  7239                           ;bouton.c: 34: Bouton[i].State = Bouton[i].Memo;
  7240  0011C6  5054               	movf	bouton_refresh@i,w,c
  7241  0011C8  0D03               	mullw	3
  7242  0011CA  0E02               	movlw	2
  7243  0011CC  26F3               	addwf	prodl,f,c
  7244  0011CE  0E00               	movlw	0
  7245  0011D0  22F4               	addwfc	prodh,f,c
  7246  0011D2  0100               	movlb	0	; () banked
  7247  0011D4  0E80               	movlw	low _Bouton
  7248  0011D6  24F3               	addwf	prodl,w,c
  7249  0011D8  6ED9               	movwf	fsr2l,c
  7250  0011DA  0100               	movlb	0	; () banked
  7251  0011DC  0E00               	movlw	high _Bouton
  7252  0011DE  20F4               	addwfc	prodh,w,c
  7253  0011E0  6EDA               	movwf	fsr2h,c
  7254  0011E2  5054               	movf	bouton_refresh@i,w,c
  7255  0011E4  0D03               	mullw	3
  7256  0011E6  0E02               	movlw	2
  7257  0011E8  26F3               	addwf	prodl,f,c
  7258  0011EA  0E00               	movlw	0
  7259  0011EC  22F4               	addwfc	prodh,f,c
  7260  0011EE  0100               	movlb	0	; () banked
  7261  0011F0  0E80               	movlw	low _Bouton
  7262  0011F2  24F3               	addwf	prodl,w,c
  7263  0011F4  6EE1               	movwf	fsr1l,c
  7264  0011F6  0100               	movlb	0	; () banked
  7265  0011F8  0E00               	movlw	high _Bouton
  7266  0011FA  20F4               	addwfc	prodh,w,c
  7267  0011FC  6EE2               	movwf	fsr1h,c
  7268  0011FE  0100               	movlb	0	; () banked
  7269  001200  A0DF               	btfss	indf2,0,c
  7270  001202  D002               	bra	u5375
  7271  001204  0100               	movlb	0	; () banked
  7272  001206  82E7               	bsf	indf1,1,c
  7273  001208                     u5375:
  7274  001208  0100               	movlb	0	; () banked
  7275  00120A  B0DF               	btfsc	indf2,0,c
  7276  00120C  D002               	bra	u5376
  7277  00120E  0100               	movlb	0	; () banked
  7278  001210  92E7               	bcf	indf1,1,c
  7279  001212                     u5376:
  7280  001212  D023               	goto	l5985
  7281  001214                     l5983:
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;bouton.c: 38: else
  7285                           ;bouton.c: 39: {
  7286                           ;bouton.c: 40: Bouton[i].Memo = temp;
  7287  001214  5054               	movf	bouton_refresh@i,w,c
  7288  001216  0D03               	mullw	3
  7289  001218  0E02               	movlw	2
  7290  00121A  26F3               	addwf	prodl,f,c
  7291  00121C  0E00               	movlw	0
  7292  00121E  22F4               	addwfc	prodh,f,c
  7293  001220  0100               	movlb	0	; () banked
  7294  001222  0E80               	movlw	low _Bouton
  7295  001224  24F3               	addwf	prodl,w,c
  7296  001226  6ED9               	movwf	fsr2l,c
  7297  001228  0100               	movlb	0	; () banked
  7298  00122A  0E00               	movlw	high _Bouton
  7299  00122C  20F4               	addwfc	prodh,w,c
  7300  00122E  6EDA               	movwf	fsr2h,c
  7301  001230  B053               	btfsc	bouton_refresh@temp,0,c
  7302  001232  D003               	bra	u5385
  7303  001234  0100               	movlb	0	; () banked
  7304  001236  90DF               	bcf	indf2,0,c
  7305  001238  D002               	bra	u5386
  7306  00123A                     u5385:
  7307  00123A  0100               	movlb	0	; () banked
  7308  00123C  80DF               	bsf	indf2,0,c
  7309  00123E                     u5386:
  7310                           
  7311                           ;bouton.c: 41: Bouton[i].Time = Cptms;
  7312  00123E  5054               	movf	bouton_refresh@i,w,c
  7313  001240  0D03               	mullw	3
  7314  001242  0100               	movlb	0	; () banked
  7315  001244  0E80               	movlw	low _Bouton
  7316  001246  24F3               	addwf	prodl,w,c
  7317  001248  6ED9               	movwf	fsr2l,c
  7318  00124A  0100               	movlb	0	; () banked
  7319  00124C  0E00               	movlw	high _Bouton
  7320  00124E  20F4               	addwfc	prodh,w,c
  7321  001250  6EDA               	movwf	fsr2h,c
  7322  001252  C02D  FFDE         	movff	_Cptms,postinc2	;volatile
  7323  001256  C02E  FFDD         	movff	_Cptms+1,postdec2	;volatile
  7324  00125A                     l5985:
  7325                           
  7326                           ; BSR set to: 0
  7327  00125A  2A54               	incf	bouton_refresh@i,f,c
  7328  00125C                     L45:
  7329                           
  7330                           ; BSR set to: 0
  7331  00125C  0E03               	movlw	3
  7332  00125E  6454               	cpfsgt	bouton_refresh@i,c
  7333  001260  D73A               	goto	l5965
  7334                           
  7335                           ; BSR set to: 0
  7336  001262  0012               	return	
  7337  001264  FFFF               	dw	65535	; errata NOP
  7338  001266                     __end_of_bouton_refresh:
  7339                           	opt stack 0
  7340                           tblptru	equ	0xFF8
  7341                           tblptrh	equ	0xFF7
  7342                           tblptrl	equ	0xFF6
  7343                           tablat	equ	0xFF5
  7344                           prodh	equ	0xFF4
  7345                           prodl	equ	0xFF3
  7346                           intcon	equ	0xFF2
  7347                           intcon2	equ	0xFF1
  7348                           postinc0	equ	0xFEE
  7349                           wreg	equ	0xFE8
  7350                           indf1	equ	0xFE7
  7351                           postdec1	equ	0xFE5
  7352                           fsr1h	equ	0xFE2
  7353                           fsr1l	equ	0xFE1
  7354                           indf2	equ	0xFDF
  7355                           postinc2	equ	0xFDE
  7356                           postdec2	equ	0xFDD
  7357                           fsr2h	equ	0xFDA
  7358                           fsr2l	equ	0xFD9
  7359                           status	equ	0xFD8
  7360                           
  7361 ;; *************** function _bouton_init *****************
  7362 ;; Defined at:
  7363 ;;		line 3 in file "bouton.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;		None
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;		None
  7368 ;; Return value:  Size  Location     Type
  7369 ;;		None               void
  7370 ;; Registers used:
  7371 ;;		None
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7377 ;;      Params:         0       0       0       0       0       0       0
  7378 ;;      Locals:         0       0       0       0       0       0       0
  7379 ;;      Temps:          0       0       0       0       0       0       0
  7380 ;;      Totals:         0       0       0       0       0       0       0
  7381 ;;Total ram usage:        0 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; Hardware stack levels required when called:    2
  7384 ;; This function calls:
  7385 ;;		Nothing
  7386 ;; This function is called by:
  7387 ;;		_main
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           	psect	text33
  7392  002816                     __ptext33:
  7393                           	opt stack 0
  7394  002816                     _bouton_init:
  7395                           	opt stack 28
  7396                           
  7397                           ;incstack = 0
  7398  002816  FFFF               	dw	65535
  7399                           
  7400                           ;bouton.c: 5: Bouton[Bp_On].State = PORTEbits.RE0;
  7401  002818  A084               	btfss	3972,0,c	;volatile
  7402  00281A  D004               	bra	u5245
  7403  00281C  0100               	movlb	0	; () banked
  7404  00281E  0100               	movlb	0	; () banked
  7405  002820  8382               	bsf	(_Bouton+2)& (0+255),1,b
  7406  002822  D003               	bra	u5247
  7407  002824                     u5245:
  7408  002824  0100               	movlb	0	; () banked
  7409  002826  0100               	movlb	0	; () banked
  7410  002828  9382               	bcf	(_Bouton+2)& (0+255),1,b
  7411  00282A                     u5247:
  7412                           
  7413                           ;bouton.c: 6: Bouton[Bp_IdTest].State = PORTEbits.RE1;
  7414  00282A  A284               	btfss	3972,1,c	;volatile
  7415  00282C  D004               	bra	u5255
  7416  00282E  0100               	movlb	0	; () banked
  7417  002830  0100               	movlb	0	; () banked
  7418  002832  8385               	bsf	(_Bouton+5)& (0+255),1,b
  7419  002834  D003               	bra	u5257
  7420  002836                     u5255:
  7421  002836  0100               	movlb	0	; () banked
  7422  002838  0100               	movlb	0	; () banked
  7423  00283A  9385               	bcf	(_Bouton+5)& (0+255),1,b
  7424  00283C                     u5257:
  7425                           
  7426                           ;bouton.c: 7: Bouton[Comu_Test].State = PORTCbits.RC5;
  7427  00283C  AA82               	btfss	3970,5,c	;volatile
  7428  00283E  D004               	bra	u5265
  7429  002840  0100               	movlb	0	; () banked
  7430  002842  0100               	movlb	0	; () banked
  7431  002844  8388               	bsf	(_Bouton+8)& (0+255),1,b
  7432  002846  D003               	bra	u5267
  7433  002848                     u5265:
  7434  002848  0100               	movlb	0	; () banked
  7435  00284A  0100               	movlb	0	; () banked
  7436  00284C  9388               	bcf	(_Bouton+8)& (0+255),1,b
  7437  00284E                     u5267:
  7438                           
  7439                           ;bouton.c: 8: Bouton[Bp_Start].State = PORTBbits.RB0;
  7440  00284E  A081               	btfss	3969,0,c	;volatile
  7441  002850  D004               	bra	u5275
  7442  002852  0100               	movlb	0	; () banked
  7443  002854  0100               	movlb	0	; () banked
  7444  002856  838B               	bsf	(_Bouton+11)& (0+255),1,b
  7445  002858  D003               	bra	u5277
  7446  00285A                     u5275:
  7447  00285A  0100               	movlb	0	; () banked
  7448  00285C  0100               	movlb	0	; () banked
  7449  00285E  938B               	bcf	(_Bouton+11)& (0+255),1,b
  7450  002860                     u5277:
  7451                           
  7452                           ; BSR set to: 0
  7453  002860  0012               	return	
  7454  002862  FFFF               	dw	65535	; errata NOP
  7455  002864                     __end_of_bouton_init:
  7456                           	opt stack 0
  7457                           tblptru	equ	0xFF8
  7458                           tblptrh	equ	0xFF7
  7459                           tblptrl	equ	0xFF6
  7460                           tablat	equ	0xFF5
  7461                           prodh	equ	0xFF4
  7462                           prodl	equ	0xFF3
  7463                           intcon	equ	0xFF2
  7464                           intcon2	equ	0xFF1
  7465                           postinc0	equ	0xFEE
  7466                           wreg	equ	0xFE8
  7467                           indf1	equ	0xFE7
  7468                           postdec1	equ	0xFE5
  7469                           fsr1h	equ	0xFE2
  7470                           fsr1l	equ	0xFE1
  7471                           indf2	equ	0xFDF
  7472                           postinc2	equ	0xFDE
  7473                           postdec2	equ	0xFDD
  7474                           fsr2h	equ	0xFDA
  7475                           fsr2l	equ	0xFD9
  7476                           status	equ	0xFD8
  7477                           
  7478 ;; *************** function _armement_process *****************
  7479 ;; Defined at:
  7480 ;;		line 24 in file "armement.c"
  7481 ;; Parameters:    Size  Location     Type
  7482 ;;		None
  7483 ;; Auto vars:     Size  Location     Type
  7484 ;;  temp            2   27[BANK0 ] unsigned short 
  7485 ;; Return value:  Size  Location     Type
  7486 ;;		None               void
  7487 ;; Registers used:
  7488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7489 ;; Tracked objects:
  7490 ;;		On entry : 0/0
  7491 ;;		On exit  : 0/0
  7492 ;;		Unchanged: 0/0
  7493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7494 ;;      Params:         0       0       0       0       0       0       0
  7495 ;;      Locals:         0       2       0       0       0       0       0
  7496 ;;      Temps:          0       2       0       0       0       0       0
  7497 ;;      Totals:         0       4       0       0       0       0       0
  7498 ;;Total ram usage:        4 bytes
  7499 ;; Hardware stack levels used:    1
  7500 ;; Hardware stack levels required when called:    6
  7501 ;; This function calls:
  7502 ;;		_arm_UAlim_1A
  7503 ;;		_check_comutest
  7504 ;;		_ecran_blank
  7505 ;;		_ecran_wait
  7506 ;;		_itoa
  7507 ;; This function is called by:
  7508 ;;		_main
  7509 ;; This function uses a non-reentrant model
  7510 ;;
  7511                           
  7512                           	psect	text34
  7513  0015BE                     __ptext34:
  7514                           	opt stack 0
  7515  0015BE                     _armement_process:
  7516                           	opt stack 24
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;incstack = 0
  7520  0015BE  FFFF               	dw	65535
  7521                           
  7522                           ;armement.c: 26: unsigned short temp;
  7523                           ;armement.c: 28: switch(Arm.Step)
  7524  0015C0  D0B2               	goto	l6239
  7525  0015C2                     l988:
  7526                           
  7527                           ;armement.c: 31: if (Bouton[Bp_On].State == 1)
  7528  0015C2  0100               	movlb	0	; () banked
  7529  0015C4  A382               	btfss	(_Bouton+2)& (0+255),1,b
  7530  0015C6  D0BC               	goto	l1002
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;armement.c: 32: {
  7534                           ;armement.c: 33: Arm.Step = 0x00;
  7535  0015C8  0100               	movlb	0	; () banked
  7536  0015CA  6FC1               	movwf	??_armement_process& (0+255),b
  7537  0015CC  0E00               	movlw	0
  7538  0015CE  D04D               	goto	L46
  7539  0015D0                     l6199:
  7540                           
  7541                           ;armement.c: 37: check_comutest(1);
  7542  0015D0  0E01               	movlw	1
  7543  0015D2  EC7F  F014         	call	_check_comutest
  7544                           
  7545                           ;armement.c: 39: temp = arm_UAlim_1A();
  7546  0015D6  EC13  F00E         	call	_arm_UAlim_1A	;wreg free
  7547  0015DA  0100               	movlb	0	; () banked
  7548  0015DC  C0B9  F0C3         	movff	?_arm_UAlim_1A,armement_process@temp
  7549  0015E0  0100               	movlb	0	; () banked
  7550  0015E2  C0BA  F0C4         	movff	?_arm_UAlim_1A+1,armement_process@temp+1
  7551                           
  7552                           ; BSR set to: 0
  7553                           ;armement.c: 41: Ecran.Digits = PrintTest;
  7554  0015E6  0100               	movlb	0	; () banked
  7555  0015E8  0E00               	movlw	high _PrintTest
  7556  0015EA  0100               	movlb	0	; () banked
  7557  0015EC  0100               	movlb	0	; () banked
  7558  0015EE  6F9D               	movwf	(_Ecran+5)& (0+255),b
  7559  0015F0  0100               	movlb	0	; () banked
  7560  0015F2  0EC8               	movlw	low _PrintTest
  7561  0015F4  0100               	movlb	0	; () banked
  7562  0015F6  0100               	movlb	0	; () banked
  7563  0015F8  6F9C               	movwf	(_Ecran+4)& (0+255),b
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;armement.c: 43: itoa(Ecran.Digits,temp,10);
  7567  0015FA  0100               	movlb	0	; () banked
  7568  0015FC  0100               	movlb	0	; () banked
  7569  0015FE  C09D  F0AF         	movff	_Ecran+5,itoa@buf+1
  7570  001602  0100               	movlb	0	; () banked
  7571  001604  0100               	movlb	0	; () banked
  7572  001606  C09C  F0AE         	movff	_Ecran+4,itoa@buf
  7573  00160A  C0C3  F0B0         	movff	armement_process@temp,itoa@val
  7574  00160E  C0C4  F0B1         	movff	armement_process@temp+1,itoa@val+1
  7575  001612  0E00               	movlw	0
  7576  001614  0100               	movlb	0	; () banked
  7577  001616  0100               	movlb	0	; () banked
  7578  001618  6FB3               	movwf	(itoa@base+1)& (0+255),b
  7579  00161A  0E0A               	movlw	10
  7580  00161C  0100               	movlb	0	; () banked
  7581  00161E  6FB2               	movwf	itoa@base& (0+255),b
  7582  001620  EC91  F012         	call	_itoa	;wreg free
  7583                           
  7584                           ;armement.c: 45: Ecran.Dot[0] = 0;
  7585  001624  0100               	movlb	0	; () banked
  7586  001626  6FC1               	movwf	??_armement_process& (0+255),b
  7587  001628  0E00               	movlw	0
  7588  00162A  0100               	movlb	0	; () banked
  7589  00162C  0100               	movlb	0	; () banked
  7590  00162E  6F9E               	movwf	(_Ecran+6)& (0+255),b
  7591  001630  0100               	movlb	0	; () banked
  7592  001632  51C1               	movf	??_armement_process& (0+255),w,b
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;armement.c: 46: Ecran.Dot[1] = 1;
  7596  001634  0100               	movlb	0	; () banked
  7597  001636  6FC1               	movwf	??_armement_process& (0+255),b
  7598  001638  0E01               	movlw	1
  7599  00163A  0100               	movlb	0	; () banked
  7600  00163C  0100               	movlb	0	; () banked
  7601  00163E  6F9F               	movwf	(_Ecran+7)& (0+255),b
  7602  001640  0100               	movlb	0	; () banked
  7603  001642  51C1               	movf	??_armement_process& (0+255),w,b
  7604                           
  7605                           ; BSR set to: 0
  7606                           ;armement.c: 47: Ecran.Dot[2] = 0;
  7607  001644  0100               	movlb	0	; () banked
  7608  001646  6FC1               	movwf	??_armement_process& (0+255),b
  7609  001648  0E00               	movlw	0
  7610  00164A  0100               	movlb	0	; () banked
  7611  00164C  0100               	movlb	0	; () banked
  7612  00164E  6FA0               	movwf	(_Ecran+8)& (0+255),b
  7613  001650  0100               	movlb	0	; () banked
  7614  001652  51C1               	movf	??_armement_process& (0+255),w,b
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;armement.c: 48: Ecran.Dot[3] = 0;
  7618  001654  0100               	movlb	0	; () banked
  7619  001656  6FC1               	movwf	??_armement_process& (0+255),b
  7620  001658  0E00               	movlw	0
  7621  00165A  0100               	movlb	0	; () banked
  7622  00165C  0100               	movlb	0	; () banked
  7623  00165E  6FA1               	movwf	(_Ecran+9)& (0+255),b
  7624  001660  0100               	movlb	0	; () banked
  7625  001662  51C1               	movf	??_armement_process& (0+255),w,b
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;armement.c: 50: Arm.Step = 0x02;
  7629  001664  0100               	movlb	0	; () banked
  7630  001666  6FC1               	movwf	??_armement_process& (0+255),b
  7631  001668  0E02               	movlw	2
  7632  00166A                     L46:
  7633  00166A  6E20               	movwf	_Arm,c
  7634  00166C  D059               	goto	L47
  7635  00166E                     l992:
  7636                           
  7637                           ;armement.c: 53: if (Bouton[Bp_On].State == 0)
  7638  00166E  0100               	movlb	0	; () banked
  7639  001670  B382               	btfsc	(_Bouton+2)& (0+255),1,b
  7640  001672  D066               	goto	l1002
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;armement.c: 54: {
  7644                           ;armement.c: 55: Arm.Time = Cptms;
  7645  001674  C02D  F022         	movff	_Cptms,_Arm+2	;volatile
  7646  001678  C02E  F023         	movff	_Cptms+1,_Arm+3	;volatile
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;armement.c: 56: Arm.Step = 0x03;
  7650  00167C  0100               	movlb	0	; () banked
  7651  00167E  6FC1               	movwf	??_armement_process& (0+255),b
  7652  001680  0E03               	movlw	3
  7653  001682  6E20               	movwf	_Arm,c
  7654  001684  0100               	movlb	0	; () banked
  7655  001686  51C1               	movf	??_armement_process& (0+255),w,b
  7656                           
  7657                           ; BSR set to: 0
  7658                           ;armement.c: 58: ecran_blank();
  7659  001688  ECBB  F013         	call	_ecran_blank	;wreg free
  7660  00168C  D059               	goto	l1002
  7661  00168E                     l994:
  7662                           
  7663                           ;armement.c: 62: if (Bouton[Bp_On].State == 1)
  7664  00168E  0100               	movlb	0	; () banked
  7665  001690  A382               	btfss	(_Bouton+2)& (0+255),1,b
  7666  001692  D009               	goto	l995
  7667                           
  7668                           ; BSR set to: 0
  7669                           ;armement.c: 63: {
  7670                           ;armement.c: 64: Micro.Phase = 0x00;
  7671  001694  0100               	movlb	0	; () banked
  7672  001696  6FC1               	movwf	??_armement_process& (0+255),b
  7673  001698  0E00               	movlw	0
  7674  00169A  6E5D               	movwf	_Micro+2,c
  7675  00169C  0100               	movlb	0	; () banked
  7676  00169E  51C1               	movf	??_armement_process& (0+255),w,b
  7677                           
  7678                           ; BSR set to: 0
  7679                           ;armement.c: 66: ecran_wait();
  7680  0016A0  EC92  F016         	call	_ecran_wait	;wreg free
  7681                           
  7682                           ;armement.c: 67: }
  7683  0016A4  D04D               	goto	l1002
  7684  0016A6                     l995:
  7685                           
  7686                           ; BSR set to: 0
  7687                           ;armement.c: 68: else if (Bouton[Bp_Start].State == 0)
  7688  0016A6  0100               	movlb	0	; () banked
  7689  0016A8  A38B               	btfss	(_Bouton+11)& (0+255),1,b
  7690  0016AA  D04A               	goto	l1002
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;armement.c: 72: else if ((((unsigned short) (Cptms - Arm.Time) > 4000) ? 1 : 0))
  7694                           
  7695                           ; BSR set to: 0
  7696                           
  7697                           ; BSR set to: 0
  7698                           ;armement.c: 69: {
  7699                           ;armement.c: 71: }
  7700  0016AC  EE20  F022         	lfsr	2,_Arm+2
  7701  0016B0  CFDE F0C1          	movff	postinc2,??_armement_process
  7702  0016B4  CFDD F0C2          	movff	postdec2,??_armement_process+1
  7703  0016B8  0100               	movlb	0	; () banked
  7704  0016BA  1FC1               	comf	??_armement_process& (0+255),f,b
  7705  0016BC  1FC2               	comf	(??_armement_process+1)& (0+255),f,b
  7706  0016BE  4BC1               	infsnz	??_armement_process& (0+255),f,b
  7707  0016C0  2BC2               	incf	(??_armement_process+1)& (0+255),f,b
  7708  0016C2  502D               	movf	_Cptms,w,c	;volatile
  7709  0016C4  0100               	movlb	0	; () banked
  7710  0016C6  27C1               	addwf	??_armement_process& (0+255),f,b
  7711  0016C8  502E               	movf	_Cptms+1,w,c	;volatile
  7712  0016CA  0100               	movlb	0	; () banked
  7713  0016CC  23C2               	addwfc	(??_armement_process+1)& (0+255),f,b
  7714  0016CE  0EA1               	movlw	161
  7715  0016D0  0100               	movlb	0	; () banked
  7716  0016D2  5DC1               	subwf	??_armement_process& (0+255),w,b
  7717  0016D4  0E0F               	movlw	15
  7718  0016D6  59C2               	subwfb	(??_armement_process+1)& (0+255),w,b
  7719  0016D8  B0D8               	btfsc	status,0,c
  7720  0016DA  D032               	goto	l1002
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;armement.c: 76: else if ((((unsigned short) (Cptms - Arm.Time) > 3000) ? 1 : 0))
  7724                           
  7725                           ; BSR set to: 0
  7726                           
  7727                           ; BSR set to: 0
  7728                           ;armement.c: 73: {
  7729                           ;armement.c: 75: }
  7730  0016DC  EE20  F022         	lfsr	2,_Arm+2
  7731  0016E0  CFDE F0C1          	movff	postinc2,??_armement_process
  7732  0016E4  CFDD F0C2          	movff	postdec2,??_armement_process+1
  7733  0016E8  0100               	movlb	0	; () banked
  7734  0016EA  1FC1               	comf	??_armement_process& (0+255),f,b
  7735  0016EC  1FC2               	comf	(??_armement_process+1)& (0+255),f,b
  7736  0016EE  4BC1               	infsnz	??_armement_process& (0+255),f,b
  7737  0016F0  2BC2               	incf	(??_armement_process+1)& (0+255),f,b
  7738  0016F2  502D               	movf	_Cptms,w,c	;volatile
  7739  0016F4  0100               	movlb	0	; () banked
  7740  0016F6  27C1               	addwf	??_armement_process& (0+255),f,b
  7741  0016F8  502E               	movf	_Cptms+1,w,c	;volatile
  7742  0016FA  0100               	movlb	0	; () banked
  7743  0016FC  23C2               	addwfc	(??_armement_process+1)& (0+255),f,b
  7744  0016FE  0EB9               	movlw	185
  7745  001700  0100               	movlb	0	; () banked
  7746  001702  5DC1               	subwf	??_armement_process& (0+255),w,b
  7747  001704  0E0B               	movlw	11
  7748  001706  59C2               	subwfb	(??_armement_process+1)& (0+255),w,b
  7749  001708  A0D8               	btfss	status,0,c
  7750  00170A  D01A               	goto	l1002
  7751                           
  7752                           ; BSR set to: 0
  7753                           ;armement.c: 77: {
  7754                           ;armement.c: 78: Micro.Phase = 0x03;
  7755  00170C  0100               	movlb	0	; () banked
  7756  00170E  6FC1               	movwf	??_armement_process& (0+255),b
  7757  001710  0E03               	movlw	3
  7758  001712  6E5D               	movwf	_Micro+2,c
  7759  001714  0100               	movlb	0	; () banked
  7760  001716  51C1               	movf	??_armement_process& (0+255),w,b
  7761                           
  7762                           ;armement.c: 79: Micro.State = 0x01;
  7763  001718  0100               	movlb	0	; () banked
  7764  00171A  6FC1               	movwf	??_armement_process& (0+255),b
  7765  00171C  0E01               	movlw	1
  7766  00171E  6E5F               	movwf	_Micro+4,c
  7767  001720                     L47:
  7768  001720  0100               	movlb	0	; () banked
  7769  001722  51C1               	movf	??_armement_process& (0+255),w,b
  7770  001724  D00D               	goto	l1002
  7771  001726                     l6239:
  7772  001726  5020               	movf	_Arm,w,c
  7773                           
  7774                           ; Switch size 1, requested type "space"
  7775                           ; Number of cases is 4, Range of values is 0 to 3
  7776                           ; switch strategies available:
  7777                           ; Name         Instructions Cycles
  7778                           ; simple_byte           13     7 (average)
  7779                           ;	Chosen strategy is simple_byte
  7780  001728  0A00               	xorlw	0	; case 0
  7781  00172A  B4D8               	btfsc	status,2,c
  7782  00172C  D751               	goto	l6199
  7783  00172E  0A01               	xorlw	1	; case 1
  7784  001730  B4D8               	btfsc	status,2,c
  7785  001732  D747               	goto	l988
  7786  001734  0A03               	xorlw	3	; case 2
  7787  001736  B4D8               	btfsc	status,2,c
  7788  001738  D79A               	goto	l992
  7789  00173A  0A01               	xorlw	1	; case 3
  7790  00173C  B4D8               	btfsc	status,2,c
  7791  00173E  D7A7               	goto	l994
  7792  001740                     l1002:
  7793  001740  0012               	return	
  7794  001742  FFFF               	dw	65535	; errata NOP
  7795  001744                     __end_of_armement_process:
  7796                           	opt stack 0
  7797                           tblptru	equ	0xFF8
  7798                           tblptrh	equ	0xFF7
  7799                           tblptrl	equ	0xFF6
  7800                           tablat	equ	0xFF5
  7801                           prodh	equ	0xFF4
  7802                           prodl	equ	0xFF3
  7803                           intcon	equ	0xFF2
  7804                           intcon2	equ	0xFF1
  7805                           postinc0	equ	0xFEE
  7806                           wreg	equ	0xFE8
  7807                           indf1	equ	0xFE7
  7808                           postdec1	equ	0xFE5
  7809                           fsr1h	equ	0xFE2
  7810                           fsr1l	equ	0xFE1
  7811                           indf2	equ	0xFDF
  7812                           postinc2	equ	0xFDE
  7813                           postdec2	equ	0xFDD
  7814                           fsr2h	equ	0xFDA
  7815                           fsr2l	equ	0xFD9
  7816                           status	equ	0xFD8
  7817                           
  7818 ;; *************** function _itoa *****************
  7819 ;; Defined at:
  7820 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\itoa.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;  buf             2    6[BANK0 ] PTR unsigned char 
  7823 ;;		 -> Version(5), ErreurTir(5), Blank(5), Ecran.Digit(4), 
  7824 ;;		 -> Ecran(16), PrintTest(5), 
  7825 ;;  val             2    8[BANK0 ] int 
  7826 ;;  base            2   10[BANK0 ] int 
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;  cp              2   12[BANK0 ] PTR unsigned char 
  7829 ;;		 -> Version(5), ErreurTir(5), Blank(5), Ecran.Digit(4), 
  7830 ;;		 -> Ecran(16), PrintTest(5), 
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  2    6[BANK0 ] PTR unsigned char 
  7833 ;; Registers used:
  7834 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7840 ;;      Params:         0       6       0       0       0       0       0
  7841 ;;      Locals:         0       2       0       0       0       0       0
  7842 ;;      Temps:          0       0       0       0       0       0       0
  7843 ;;      Totals:         0       8       0       0       0       0       0
  7844 ;;Total ram usage:        8 bytes
  7845 ;; Hardware stack levels used:    1
  7846 ;; Hardware stack levels required when called:    4
  7847 ;; This function calls:
  7848 ;;		_utoa
  7849 ;; This function is called by:
  7850 ;;		_test_process
  7851 ;;		_armement_process
  7852 ;; This function uses a non-reentrant model
  7853 ;;
  7854                           
  7855                           	psect	text35
  7856  002522                     __ptext35:
  7857                           	opt stack 0
  7858  002522                     _itoa:
  7859                           	opt stack 25
  7860                           
  7861                           ;incstack = 0
  7862  002522  FFFF               	dw	65535
  7863  002524  0100               	movlb	0	; () banked
  7864  002526  0100               	movlb	0	; () banked
  7865  002528  C0AF  F0B5         	movff	itoa@buf+1,itoa@cp+1
  7866  00252C  0100               	movlb	0	; () banked
  7867  00252E  0100               	movlb	0	; () banked
  7868  002530  C0AE  F0B4         	movff	itoa@buf,itoa@cp
  7869                           
  7870                           ; BSR set to: 0
  7871  002534  0100               	movlb	0	; () banked
  7872  002536  0100               	movlb	0	; () banked
  7873  002538  51B1               	movf	(itoa@val+1)& (0+255),w,b
  7874  00253A  0A80               	xorlw	128
  7875  00253C  6EF3               	movwf	prodl,c
  7876  00253E  0E80               	movlw	128
  7877  002540  5CF3               	subwf	prodl,w,c
  7878  002542  0E00               	movlw	0
  7879  002544  B4D8               	btfsc	status,2,c
  7880  002546  5DB0               	subwf	itoa@val& (0+255),w,b
  7881  002548  B0D8               	btfsc	status,0,c
  7882  00254A  D01F               	goto	l5743
  7883                           
  7884                           ; BSR set to: 0
  7885  00254C  0100               	movlb	0	; () banked
  7886  00254E  C0AE  FFF6         	movff	itoa@buf,tblptrl
  7887  002552  0100               	movlb	0	; () banked
  7888  002554  C0AF  FFF7         	movff	itoa@buf+1,tblptrh
  7889  002558  6AF8               	clrf	tblptru,c
  7890  00255A  0E05               	movlw	(high __ramtop+-1)
  7891  00255C  64F7               	cpfsgt	tblptrh,c
  7892  00255E  D004               	bra	u5097
  7893  002560  0E2D               	movlw	45
  7894  002562  6EF5               	movwf	tablat,c
  7895  002564  000C               	tblwt		*
  7896  002566  D006               	bra	u5090
  7897  002568                     u5097:
  7898  002568  CFF6 FFE1          	movff	tblptrl,fsr1l
  7899  00256C  CFF7 FFE2          	movff	tblptrh,fsr1h
  7900  002570  0E2D               	movlw	45
  7901  002572  6EE7               	movwf	indf1,c
  7902  002574                     u5090:
  7903  002574  0100               	movlb	0	; () banked
  7904  002576  0100               	movlb	0	; () banked
  7905  002578  4BAE               	infsnz	itoa@buf& (0+255),f,b
  7906  00257A  2BAF               	incf	(itoa@buf+1)& (0+255),f,b
  7907                           
  7908                           ; BSR set to: 0
  7909  00257C  0100               	movlb	0	; () banked
  7910  00257E  0100               	movlb	0	; () banked
  7911  002580  6DB0               	negf	itoa@val& (0+255),b
  7912  002582  0100               	movlb	0	; () banked
  7913  002584  1FB1               	comf	(itoa@val+1)& (0+255),f,b
  7914  002586  B0D8               	btfsc	status,0,c
  7915  002588  2BB1               	incf	(itoa@val+1)& (0+255),f,b
  7916  00258A                     l5743:
  7917                           
  7918                           ; BSR set to: 0
  7919  00258A  0100               	movlb	0	; () banked
  7920  00258C  0100               	movlb	0	; () banked
  7921  00258E  C0AF  F0A9         	movff	itoa@buf+1,utoa@buf+1
  7922  002592  0100               	movlb	0	; () banked
  7923  002594  0100               	movlb	0	; () banked
  7924  002596  C0AE  F0A8         	movff	itoa@buf,utoa@buf
  7925  00259A  C0B0  F0AA         	movff	itoa@val,utoa@val
  7926  00259E  C0B1  F0AB         	movff	itoa@val+1,utoa@val+1
  7927  0025A2  C0B2  F0AC         	movff	itoa@base,utoa@base
  7928  0025A6  C0B3  F0AD         	movff	itoa@base+1,utoa@base+1
  7929  0025AA  EC0D  F010         	call	_utoa	;wreg free
  7930                           
  7931                           ;	Return value of _itoa is never used
  7932  0025AE  0012               	return	
  7933  0025B0  FFFF               	dw	65535	; errata NOP
  7934  0025B2                     __end_of_itoa:
  7935                           	opt stack 0
  7936                           tblptru	equ	0xFF8
  7937                           tblptrh	equ	0xFF7
  7938                           tblptrl	equ	0xFF6
  7939                           tablat	equ	0xFF5
  7940                           prodh	equ	0xFF4
  7941                           prodl	equ	0xFF3
  7942                           intcon	equ	0xFF2
  7943                           intcon2	equ	0xFF1
  7944                           postinc0	equ	0xFEE
  7945                           wreg	equ	0xFE8
  7946                           indf1	equ	0xFE7
  7947                           postdec1	equ	0xFE5
  7948                           fsr1h	equ	0xFE2
  7949                           fsr1l	equ	0xFE1
  7950                           indf2	equ	0xFDF
  7951                           postinc2	equ	0xFDE
  7952                           postdec2	equ	0xFDD
  7953                           fsr2h	equ	0xFDA
  7954                           fsr2l	equ	0xFD9
  7955                           status	equ	0xFD8
  7956                           
  7957 ;; *************** function _utoa *****************
  7958 ;; Defined at:
  7959 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\itoa.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;  buf             2    0[BANK0 ] PTR unsigned char 
  7962 ;;		 -> Version(5), ErreurTir(5), Blank(5), Ecran.Digit(4), 
  7963 ;;		 -> Ecran(16), PrintTest(5), 
  7964 ;;  val             2    2[BANK0 ] unsigned int 
  7965 ;;  base            2    4[BANK0 ] int 
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;  v               2   39[COMRAM] unsigned int 
  7968 ;;  c               1   41[COMRAM] unsigned char 
  7969 ;; Return value:  Size  Location     Type
  7970 ;;                  2    0[BANK0 ] PTR unsigned char 
  7971 ;; Registers used:
  7972 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7973 ;; Tracked objects:
  7974 ;;		On entry : 0/0
  7975 ;;		On exit  : 0/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7978 ;;      Params:         0       6       0       0       0       0       0
  7979 ;;      Locals:         3       0       0       0       0       0       0
  7980 ;;      Temps:          0       0       0       0       0       0       0
  7981 ;;      Totals:         3       6       0       0       0       0       0
  7982 ;;Total ram usage:        9 bytes
  7983 ;; Hardware stack levels used:    1
  7984 ;; Hardware stack levels required when called:    3
  7985 ;; This function calls:
  7986 ;;		___lwdiv
  7987 ;;		___lwmod
  7988 ;; This function is called by:
  7989 ;;		_itoa
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           
  7993                           	psect	text36
  7994  00201A                     __ptext36:
  7995                           	opt stack 0
  7996  00201A                     _utoa:
  7997                           	opt stack 25
  7998                           
  7999                           ;incstack = 0
  8000  00201A  FFFF               	dw	65535
  8001  00201C  C0AA  F057         	movff	utoa@val,utoa@v
  8002  002020  C0AB  F058         	movff	utoa@val+1,utoa@v+1
  8003  002024                     l5557:
  8004  002024  C057  F04F         	movff	utoa@v,___lwdiv@dividend
  8005  002028  C058  F050         	movff	utoa@v+1,___lwdiv@dividend+1
  8006  00202C  C0AC  F051         	movff	utoa@base,___lwdiv@divisor
  8007  002030  C0AD  F052         	movff	utoa@base+1,___lwdiv@divisor+1
  8008  002034  EC8E  F013         	call	___lwdiv	;wreg free
  8009  002038  C04F  F057         	movff	?___lwdiv,utoa@v
  8010  00203C  C050  F058         	movff	?___lwdiv+1,utoa@v+1
  8011  002040  0100               	movlb	0	; () banked
  8012  002042  0100               	movlb	0	; () banked
  8013  002044  4BA8               	infsnz	utoa@buf& (0+255),f,b
  8014  002046  2BA9               	incf	(utoa@buf+1)& (0+255),f,b
  8015                           
  8016                           ; BSR set to: 0
  8017  002048  5058               	movf	utoa@v+1,w,c
  8018  00204A  1057               	iorwf	utoa@v,w,c
  8019  00204C  A4D8               	btfss	status,2,c
  8020  00204E  D7EA               	goto	l5557
  8021                           
  8022                           ; BSR set to: 0
  8023                           
  8024                           ; BSR set to: 0
  8025  002050  0100               	movlb	0	; () banked
  8026  002052  C0A8  FFF6         	movff	utoa@buf,tblptrl
  8027  002056  0100               	movlb	0	; () banked
  8028  002058  C0A9  FFF7         	movff	utoa@buf+1,tblptrh
  8029  00205C  6AF8               	clrf	tblptru,c
  8030  00205E  0E05               	movlw	(high __ramtop+-1)
  8031  002060  64F7               	cpfsgt	tblptrh,c
  8032  002062  D004               	bra	u4907
  8033  002064  0E00               	movlw	0
  8034  002066  6EF5               	movwf	tablat,c
  8035  002068  000C               	tblwt		*
  8036  00206A  D006               	bra	u4900
  8037  00206C                     u4907:
  8038  00206C  CFF6 FFE1          	movff	tblptrl,fsr1l
  8039  002070  CFF7 FFE2          	movff	tblptrh,fsr1h
  8040  002074  0E00               	movlw	0
  8041  002076  6EE7               	movwf	indf1,c
  8042  002078                     u4900:
  8043  002078  0100               	movlb	0	; () banked
  8044  00207A  0100               	movlb	0	; () banked
  8045  00207C  07A8               	decf	utoa@buf& (0+255),f,b
  8046  00207E  A0D8               	btfss	status,0,c
  8047  002080  07A9               	decf	(utoa@buf+1)& (0+255),f,b
  8048  002082                     l5567:
  8049                           
  8050                           ; BSR set to: 0
  8051  002082  C0AA  F04F         	movff	utoa@val,___lwmod@dividend
  8052  002086  C0AB  F050         	movff	utoa@val+1,___lwmod@dividend+1
  8053  00208A  C0AC  F051         	movff	utoa@base,___lwmod@divisor
  8054  00208E  C0AD  F052         	movff	utoa@base+1,___lwmod@divisor+1
  8055  002092  ECCA  F014         	call	___lwmod	;wreg free
  8056  002096  504F               	movf	?___lwmod,w,c
  8057  002098  6E59               	movwf	utoa@c,c
  8058  00209A  C0AA  F04F         	movff	utoa@val,___lwdiv@dividend
  8059  00209E  C0AB  F050         	movff	utoa@val+1,___lwdiv@dividend+1
  8060  0020A2  C0AC  F051         	movff	utoa@base,___lwdiv@divisor
  8061  0020A6  C0AD  F052         	movff	utoa@base+1,___lwdiv@divisor+1
  8062  0020AA  EC8E  F013         	call	___lwdiv	;wreg free
  8063  0020AE  C04F  F0AA         	movff	?___lwdiv,utoa@val
  8064  0020B2  C050  F0AB         	movff	?___lwdiv+1,utoa@val+1
  8065  0020B6  0E09               	movlw	9
  8066  0020B8  6459               	cpfsgt	utoa@c,c
  8067  0020BA  D002               	goto	l1529
  8068  0020BC  0E07               	movlw	7
  8069  0020BE  2659               	addwf	utoa@c,f,c
  8070  0020C0                     l1529:
  8071  0020C0  0E30               	movlw	48
  8072  0020C2  2659               	addwf	utoa@c,f,c
  8073  0020C4  0100               	movlb	0	; () banked
  8074  0020C6  C0A8  FFF6         	movff	utoa@buf,tblptrl
  8075  0020CA  0100               	movlb	0	; () banked
  8076  0020CC  C0A9  FFF7         	movff	utoa@buf+1,tblptrh
  8077  0020D0  6AF8               	clrf	tblptru,c
  8078  0020D2  0E05               	movlw	(high __ramtop+-1)
  8079  0020D4  64F7               	cpfsgt	tblptrh,c
  8080  0020D6  D004               	bra	u4927
  8081  0020D8  C059  FFF5         	movff	utoa@c,tablat
  8082  0020DC  000C               	tblwt		*
  8083  0020DE  D006               	bra	u4920
  8084  0020E0                     u4927:
  8085  0020E0  CFF6 FFE1          	movff	tblptrl,fsr1l
  8086  0020E4  CFF7 FFE2          	movff	tblptrh,fsr1h
  8087  0020E8  C059  FFE7         	movff	utoa@c,indf1
  8088  0020EC                     u4920:
  8089  0020EC  0100               	movlb	0	; () banked
  8090  0020EE  0100               	movlb	0	; () banked
  8091  0020F0  07A8               	decf	utoa@buf& (0+255),f,b
  8092  0020F2  A0D8               	btfss	status,0,c
  8093  0020F4  07A9               	decf	(utoa@buf+1)& (0+255),f,b
  8094                           
  8095                           ; BSR set to: 0
  8096  0020F6  0100               	movlb	0	; () banked
  8097  0020F8  0100               	movlb	0	; () banked
  8098  0020FA  51AB               	movf	(utoa@val+1)& (0+255),w,b
  8099  0020FC  11AA               	iorwf	utoa@val& (0+255),w,b
  8100  0020FE  A4D8               	btfss	status,2,c
  8101  002100  D7C0               	goto	l5567
  8102                           
  8103                           ; BSR set to: 0
  8104                           ;	Return value of _utoa is never used
  8105                           
  8106                           ; BSR set to: 0
  8107  002102  0100               	movlb	0	; () banked
  8108  002104  0100               	movlb	0	; () banked
  8109  002106  4BA8               	infsnz	utoa@buf& (0+255),f,b
  8110  002108  2BA9               	incf	(utoa@buf+1)& (0+255),f,b
  8111                           
  8112                           ; BSR set to: 0
  8113                           
  8114                           ; BSR set to: 0
  8115  00210A  0012               	return	
  8116  00210C  FFFF               	dw	65535	; errata NOP
  8117  00210E                     __end_of_utoa:
  8118                           	opt stack 0
  8119                           tblptru	equ	0xFF8
  8120                           tblptrh	equ	0xFF7
  8121                           tblptrl	equ	0xFF6
  8122                           tablat	equ	0xFF5
  8123                           prodh	equ	0xFF4
  8124                           prodl	equ	0xFF3
  8125                           intcon	equ	0xFF2
  8126                           intcon2	equ	0xFF1
  8127                           postinc0	equ	0xFEE
  8128                           wreg	equ	0xFE8
  8129                           indf1	equ	0xFE7
  8130                           postdec1	equ	0xFE5
  8131                           fsr1h	equ	0xFE2
  8132                           fsr1l	equ	0xFE1
  8133                           indf2	equ	0xFDF
  8134                           postinc2	equ	0xFDE
  8135                           postdec2	equ	0xFDD
  8136                           fsr2h	equ	0xFDA
  8137                           fsr2l	equ	0xFD9
  8138                           status	equ	0xFD8
  8139                           
  8140 ;; *************** function ___lwmod *****************
  8141 ;; Defined at:
  8142 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwmod.c"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;  dividend        2   31[COMRAM] unsigned int 
  8145 ;;  divisor         2   33[COMRAM] unsigned int 
  8146 ;; Auto vars:     Size  Location     Type
  8147 ;;  counter         1   36[COMRAM] unsigned char 
  8148 ;; Return value:  Size  Location     Type
  8149 ;;                  2   31[COMRAM] unsigned int 
  8150 ;; Registers used:
  8151 ;;		wreg, status,2, status,0
  8152 ;; Tracked objects:
  8153 ;;		On entry : 0/0
  8154 ;;		On exit  : 0/0
  8155 ;;		Unchanged: 0/0
  8156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8157 ;;      Params:         4       0       0       0       0       0       0
  8158 ;;      Locals:         1       0       0       0       0       0       0
  8159 ;;      Temps:          1       0       0       0       0       0       0
  8160 ;;      Totals:         6       0       0       0       0       0       0
  8161 ;;Total ram usage:        6 bytes
  8162 ;; Hardware stack levels used:    1
  8163 ;; Hardware stack levels required when called:    2
  8164 ;; This function calls:
  8165 ;;		Nothing
  8166 ;; This function is called by:
  8167 ;;		_utoa
  8168 ;; This function uses a non-reentrant model
  8169 ;;
  8170                           
  8171                           	psect	text37
  8172  002994                     __ptext37:
  8173                           	opt stack 0
  8174  002994                     ___lwmod:
  8175                           	opt stack 25
  8176                           
  8177                           ; BSR set to: 0
  8178                           ;incstack = 0
  8179  002994  FFFF               	dw	65535
  8180  002996  5052               	movf	___lwmod@divisor+1,w,c
  8181  002998  1051               	iorwf	___lwmod@divisor,w,c
  8182  00299A  B4D8               	btfsc	status,2,c
  8183  00299C  D01A               	goto	l1639
  8184  00299E  6E53               	movwf	??___lwmod& (0+255),c
  8185  0029A0  0E01               	movlw	1
  8186  0029A2  6E54               	movwf	___lwmod@counter,c
  8187  0029A4  5053               	movf	??___lwmod& (0+255),w,c
  8188  0029A6  D004               	goto	l5325
  8189  0029A8                     l5323:
  8190  0029A8  90D8               	bcf	status,0,c
  8191  0029AA  3651               	rlcf	___lwmod@divisor,f,c
  8192  0029AC  3652               	rlcf	___lwmod@divisor+1,f,c
  8193  0029AE  2A54               	incf	___lwmod@counter,f,c
  8194  0029B0                     l5325:
  8195  0029B0  AE52               	btfss	___lwmod@divisor+1,7,c
  8196  0029B2  D7FA               	goto	l5323
  8197  0029B4                     l5327:
  8198  0029B4  5051               	movf	___lwmod@divisor,w,c
  8199  0029B6  5C4F               	subwf	___lwmod@dividend,w,c
  8200  0029B8  5052               	movf	___lwmod@divisor+1,w,c
  8201  0029BA  5850               	subwfb	___lwmod@dividend+1,w,c
  8202  0029BC  A0D8               	btfss	status,0,c
  8203  0029BE  D004               	goto	l5331
  8204  0029C0  5051               	movf	___lwmod@divisor,w,c
  8205  0029C2  5E4F               	subwf	___lwmod@dividend,f,c
  8206  0029C4  5052               	movf	___lwmod@divisor+1,w,c
  8207  0029C6  5A50               	subwfb	___lwmod@dividend+1,f,c
  8208  0029C8                     l5331:
  8209  0029C8  90D8               	bcf	status,0,c
  8210  0029CA  3252               	rrcf	___lwmod@divisor+1,f,c
  8211  0029CC  3251               	rrcf	___lwmod@divisor,f,c
  8212  0029CE  2E54               	decfsz	___lwmod@counter,f,c
  8213  0029D0  D7F1               	goto	l5327
  8214  0029D2                     l1639:
  8215  0029D2  C04F  F04F         	movff	___lwmod@dividend,?___lwmod
  8216  0029D6  C050  F050         	movff	___lwmod@dividend+1,?___lwmod+1
  8217  0029DA  0012               	return	
  8218  0029DC  FFFF               	dw	65535	; errata NOP
  8219  0029DE                     __end_of___lwmod:
  8220                           	opt stack 0
  8221                           tblptru	equ	0xFF8
  8222                           tblptrh	equ	0xFF7
  8223                           tblptrl	equ	0xFF6
  8224                           tablat	equ	0xFF5
  8225                           prodh	equ	0xFF4
  8226                           prodl	equ	0xFF3
  8227                           intcon	equ	0xFF2
  8228                           intcon2	equ	0xFF1
  8229                           postinc0	equ	0xFEE
  8230                           wreg	equ	0xFE8
  8231                           indf1	equ	0xFE7
  8232                           postdec1	equ	0xFE5
  8233                           fsr1h	equ	0xFE2
  8234                           fsr1l	equ	0xFE1
  8235                           indf2	equ	0xFDF
  8236                           postinc2	equ	0xFDE
  8237                           postdec2	equ	0xFDD
  8238                           fsr2h	equ	0xFDA
  8239                           fsr2l	equ	0xFD9
  8240                           status	equ	0xFD8
  8241                           
  8242 ;; *************** function ___lwdiv *****************
  8243 ;; Defined at:
  8244 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwdiv.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;  dividend        2   31[COMRAM] unsigned int 
  8247 ;;  divisor         2   33[COMRAM] unsigned int 
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;  quotient        2   37[COMRAM] unsigned int 
  8250 ;;  counter         1   36[COMRAM] unsigned char 
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  2   31[COMRAM] unsigned int 
  8253 ;; Registers used:
  8254 ;;		wreg, status,2, status,0
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8260 ;;      Params:         4       0       0       0       0       0       0
  8261 ;;      Locals:         3       0       0       0       0       0       0
  8262 ;;      Temps:          1       0       0       0       0       0       0
  8263 ;;      Totals:         8       0       0       0       0       0       0
  8264 ;;Total ram usage:        8 bytes
  8265 ;; Hardware stack levels used:    1
  8266 ;; Hardware stack levels required when called:    2
  8267 ;; This function calls:
  8268 ;;		Nothing
  8269 ;; This function is called by:
  8270 ;;		_utoa
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           	psect	text38
  8275  00271C                     __ptext38:
  8276                           	opt stack 0
  8277  00271C                     ___lwdiv:
  8278                           	opt stack 25
  8279                           
  8280                           ;incstack = 0
  8281  00271C  FFFF               	dw	65535
  8282  00271E  0E00               	movlw	0
  8283  002720  6E56               	movwf	___lwdiv@quotient+1,c
  8284  002722  0E00               	movlw	0
  8285  002724  6E55               	movwf	___lwdiv@quotient,c
  8286  002726  5052               	movf	___lwdiv@divisor+1,w,c
  8287  002728  1051               	iorwf	___lwdiv@divisor,w,c
  8288  00272A  B4D8               	btfsc	status,2,c
  8289  00272C  D01E               	goto	l1629
  8290  00272E  6E53               	movwf	??___lwdiv& (0+255),c
  8291  002730  0E01               	movlw	1
  8292  002732  6E54               	movwf	___lwdiv@counter,c
  8293  002734  5053               	movf	??___lwdiv& (0+255),w,c
  8294  002736  D004               	goto	l5305
  8295  002738                     l5303:
  8296  002738  90D8               	bcf	status,0,c
  8297  00273A  3651               	rlcf	___lwdiv@divisor,f,c
  8298  00273C  3652               	rlcf	___lwdiv@divisor+1,f,c
  8299  00273E  2A54               	incf	___lwdiv@counter,f,c
  8300  002740                     l5305:
  8301  002740  AE52               	btfss	___lwdiv@divisor+1,7,c
  8302  002742  D7FA               	goto	l5303
  8303  002744                     l5307:
  8304  002744  90D8               	bcf	status,0,c
  8305  002746  3655               	rlcf	___lwdiv@quotient,f,c
  8306  002748  3656               	rlcf	___lwdiv@quotient+1,f,c
  8307  00274A  5051               	movf	___lwdiv@divisor,w,c
  8308  00274C  5C4F               	subwf	___lwdiv@dividend,w,c
  8309  00274E  5052               	movf	___lwdiv@divisor+1,w,c
  8310  002750  5850               	subwfb	___lwdiv@dividend+1,w,c
  8311  002752  A0D8               	btfss	status,0,c
  8312  002754  D005               	goto	l5315
  8313  002756  5051               	movf	___lwdiv@divisor,w,c
  8314  002758  5E4F               	subwf	___lwdiv@dividend,f,c
  8315  00275A  5052               	movf	___lwdiv@divisor+1,w,c
  8316  00275C  5A50               	subwfb	___lwdiv@dividend+1,f,c
  8317  00275E  8055               	bsf	___lwdiv@quotient,0,c
  8318  002760                     l5315:
  8319  002760  90D8               	bcf	status,0,c
  8320  002762  3252               	rrcf	___lwdiv@divisor+1,f,c
  8321  002764  3251               	rrcf	___lwdiv@divisor,f,c
  8322  002766  2E54               	decfsz	___lwdiv@counter,f,c
  8323  002768  D7ED               	goto	l5307
  8324  00276A                     l1629:
  8325  00276A  C055  F04F         	movff	___lwdiv@quotient,?___lwdiv
  8326  00276E  C056  F050         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8327  002772  0012               	return	
  8328  002774  FFFF               	dw	65535	; errata NOP
  8329  002776                     __end_of___lwdiv:
  8330                           	opt stack 0
  8331                           tblptru	equ	0xFF8
  8332                           tblptrh	equ	0xFF7
  8333                           tblptrl	equ	0xFF6
  8334                           tablat	equ	0xFF5
  8335                           prodh	equ	0xFF4
  8336                           prodl	equ	0xFF3
  8337                           intcon	equ	0xFF2
  8338                           intcon2	equ	0xFF1
  8339                           postinc0	equ	0xFEE
  8340                           wreg	equ	0xFE8
  8341                           indf1	equ	0xFE7
  8342                           postdec1	equ	0xFE5
  8343                           fsr1h	equ	0xFE2
  8344                           fsr1l	equ	0xFE1
  8345                           indf2	equ	0xFDF
  8346                           postinc2	equ	0xFDE
  8347                           postdec2	equ	0xFDD
  8348                           fsr2h	equ	0xFDA
  8349                           fsr2l	equ	0xFD9
  8350                           status	equ	0xFD8
  8351                           
  8352 ;; *************** function _ecran_wait *****************
  8353 ;; Defined at:
  8354 ;;		line 91 in file "ecran.c"
  8355 ;; Parameters:    Size  Location     Type
  8356 ;;		None
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;		None
  8359 ;; Return value:  Size  Location     Type
  8360 ;;		None               void
  8361 ;; Registers used:
  8362 ;;		wreg, status,2, status,0, cstack
  8363 ;; Tracked objects:
  8364 ;;		On entry : 0/0
  8365 ;;		On exit  : 0/0
  8366 ;;		Unchanged: 0/0
  8367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8368 ;;      Params:         0       0       0       0       0       0       0
  8369 ;;      Locals:         0       0       0       0       0       0       0
  8370 ;;      Temps:          1       0       0       0       0       0       0
  8371 ;;      Totals:         1       0       0       0       0       0       0
  8372 ;;Total ram usage:        1 bytes
  8373 ;; Hardware stack levels used:    1
  8374 ;; Hardware stack levels required when called:    3
  8375 ;; This function calls:
  8376 ;;		_ecran_dot
  8377 ;;		_ecran_raz_digit
  8378 ;; This function is called by:
  8379 ;;		_check_program_0
  8380 ;;		_test_process
  8381 ;;		_micro_wait
  8382 ;;		_armement_process
  8383 ;; This function uses a non-reentrant model
  8384 ;;
  8385                           
  8386                           	psect	text39
  8387  002D24                     __ptext39:
  8388                           	opt stack 0
  8389  002D24                     _ecran_wait:
  8390                           	opt stack 26
  8391                           
  8392                           ;incstack = 0
  8393  002D24  FFFF               	dw	65535
  8394                           
  8395                           ;ecran.c: 94: ecran_raz_digit();
  8396  002D26  ECC3  F016         	call	_ecran_raz_digit	;wreg free
  8397                           
  8398                           ;ecran.c: 96: ecran_dot(1);
  8399  002D2A  0E01               	movlw	1
  8400  002D2C  ECBB  F016         	call	_ecran_dot
  8401                           
  8402                           ;ecran.c: 98: PORTCbits.RC2 = 1;
  8403  002D30  8482               	bsf	3970,2,c	;volatile
  8404                           
  8405                           ;ecran.c: 100: Ecran.Solid = 1;
  8406  002D32  6E50               	movwf	??_ecran_wait& (0+255),c
  8407  002D34  0E01               	movlw	1
  8408  002D36  0100               	movlb	0	; () banked
  8409  002D38  0100               	movlb	0	; () banked
  8410  002D3A  6FA7               	movwf	(_Ecran+15)& (0+255),b
  8411  002D3C  5050               	movf	??_ecran_wait& (0+255),w,c
  8412                           
  8413                           ; BSR set to: 0
  8414  002D3E  0012               	return	
  8415  002D40  FFFF               	dw	65535	; errata NOP
  8416  002D42                     __end_of_ecran_wait:
  8417                           	opt stack 0
  8418                           tblptru	equ	0xFF8
  8419                           tblptrh	equ	0xFF7
  8420                           tblptrl	equ	0xFF6
  8421                           tablat	equ	0xFF5
  8422                           prodh	equ	0xFF4
  8423                           prodl	equ	0xFF3
  8424                           intcon	equ	0xFF2
  8425                           intcon2	equ	0xFF1
  8426                           postinc0	equ	0xFEE
  8427                           wreg	equ	0xFE8
  8428                           indf1	equ	0xFE7
  8429                           postdec1	equ	0xFE5
  8430                           fsr1h	equ	0xFE2
  8431                           fsr1l	equ	0xFE1
  8432                           indf2	equ	0xFDF
  8433                           postinc2	equ	0xFDE
  8434                           postdec2	equ	0xFDD
  8435                           fsr2h	equ	0xFDA
  8436                           fsr2l	equ	0xFD9
  8437                           status	equ	0xFD8
  8438                           
  8439 ;; *************** function _check_comutest *****************
  8440 ;; Defined at:
  8441 ;;		line 3 in file "test.c"
  8442 ;; Parameters:    Size  Location     Type
  8443 ;;  State           1    wreg     unsigned char 
  8444 ;; Auto vars:     Size  Location     Type
  8445 ;;  State           1   37[COMRAM] unsigned char 
  8446 ;; Return value:  Size  Location     Type
  8447 ;;		None               void
  8448 ;; Registers used:
  8449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8450 ;; Tracked objects:
  8451 ;;		On entry : 0/0
  8452 ;;		On exit  : 0/0
  8453 ;;		Unchanged: 0/0
  8454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8455 ;;      Params:         0       0       0       0       0       0       0
  8456 ;;      Locals:         1       0       0       0       0       0       0
  8457 ;;      Temps:          1       0       0       0       0       0       0
  8458 ;;      Totals:         2       0       0       0       0       0       0
  8459 ;;Total ram usage:        2 bytes
  8460 ;; Hardware stack levels used:    1
  8461 ;; Hardware stack levels required when called:    5
  8462 ;; This function calls:
  8463 ;;		_ecran_blank
  8464 ;;		_ecran_refresh
  8465 ;; This function is called by:
  8466 ;;		_main
  8467 ;;		_test_process
  8468 ;;		_micro_wait
  8469 ;;		_armement_process
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           	psect	text40
  8474  0028FE                     __ptext40:
  8475                           	opt stack 0
  8476  0028FE                     _check_comutest:
  8477                           	opt stack 24
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;incstack = 0
  8481  0028FE  FFFF               	dw	65535
  8482                           
  8483                           ;check_comutest@State stored from wreg
  8484  002900  CFE8 F055          	movff	wreg,check_comutest@State
  8485                           
  8486                           ;test.c: 5: ecran_blank();
  8487  002904  ECBB  F013         	call	_ecran_blank	;wreg free
  8488                           
  8489                           ;test.c: 6: while(PORTCbits.RC5 == State)
  8490  002908  D015               	goto	l5603
  8491  00290A                     l5591:
  8492                           
  8493                           ;test.c: 7: {
  8494                           ;test.c: 8: Ecran.Digits = (char *) ErreurTir;
  8495  00290A  0E06               	movlw	high _ErreurTir
  8496  00290C  0100               	movlb	0	; () banked
  8497  00290E  0100               	movlb	0	; () banked
  8498  002910  6F9D               	movwf	(_Ecran+5)& (0+255),b
  8499  002912  0E0B               	movlw	low _ErreurTir
  8500  002914  0100               	movlb	0	; () banked
  8501  002916  0100               	movlb	0	; () banked
  8502  002918  6F9C               	movwf	(_Ecran+4)& (0+255),b
  8503                           
  8504                           ; BSR set to: 0
  8505                           ;test.c: 9: ecran_refresh();
  8506  00291A  EC9C  F011         	call	_ecran_refresh	;wreg free
  8507                           
  8508                           ;test.c: 11: if ((PORTCbits.RC5 == 0) && (Micro.Phase == 0x01))
  8509  00291E  BA82               	btfsc	3970,5,c	;volatile
  8510  002920  D009               	goto	l5603
  8511  002922  045D               	decf	_Micro+2,w,c
  8512  002924  A4D8               	btfss	status,2,c
  8513  002926  D006               	goto	l5603
  8514                           
  8515                           ;test.c: 12: {
  8516                           ;test.c: 13: Test.Step = 0x01;
  8517  002928  6E54               	movwf	??_check_comutest& (0+255),c
  8518  00292A  0E01               	movlw	1
  8519  00292C  6E01               	movwf	_Test,c
  8520  00292E  5054               	movf	??_check_comutest& (0+255),w,c
  8521                           
  8522                           ;test.c: 14: ecran_blank();
  8523  002930  ECBB  F013         	call	_ecran_blank	;wreg free
  8524  002934                     l5603:
  8525  002934  AA82               	btfss	3970,5,c	;volatile
  8526  002936  D002               	goto	u4960
  8527  002938  0E01               	movlw	1
  8528  00293A  D001               	goto	u4966
  8529  00293C                     u4960:
  8530  00293C  0E00               	movlw	0
  8531  00293E                     u4966:
  8532  00293E  1855               	xorwf	check_comutest@State,w,c
  8533  002940  A4D8               	btfss	status,2,c
  8534  002942  0012               	return	
  8535  002944  FFFF               	dw	65535	; assembler added errata NOP
  8536  002946  D7E1               	goto	l5591
  8537  002948  FFFF               	dw	65535	; errata NOP
  8538  00294A                     __end_of_check_comutest:
  8539                           	opt stack 0
  8540                           tblptru	equ	0xFF8
  8541                           tblptrh	equ	0xFF7
  8542                           tblptrl	equ	0xFF6
  8543                           tablat	equ	0xFF5
  8544                           prodh	equ	0xFF4
  8545                           prodl	equ	0xFF3
  8546                           intcon	equ	0xFF2
  8547                           intcon2	equ	0xFF1
  8548                           postinc0	equ	0xFEE
  8549                           wreg	equ	0xFE8
  8550                           indf1	equ	0xFE7
  8551                           postdec1	equ	0xFE5
  8552                           fsr1h	equ	0xFE2
  8553                           fsr1l	equ	0xFE1
  8554                           indf2	equ	0xFDF
  8555                           postinc2	equ	0xFDE
  8556                           postdec2	equ	0xFDD
  8557                           fsr2h	equ	0xFDA
  8558                           fsr2l	equ	0xFD9
  8559                           status	equ	0xFD8
  8560                           
  8561 ;; *************** function _ecran_refresh *****************
  8562 ;; Defined at:
  8563 ;;		line 116 in file "ecran.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;		None
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;		None               void
  8570 ;; Registers used:
  8571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8577 ;;      Params:         0       0       0       0       0       0       0
  8578 ;;      Locals:         0       0       0       0       0       0       0
  8579 ;;      Temps:          2       0       0       0       0       0       0
  8580 ;;      Totals:         2       0       0       0       0       0       0
  8581 ;;Total ram usage:        2 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; Hardware stack levels required when called:    4
  8584 ;; This function calls:
  8585 ;;		_ecran_dot
  8586 ;;		_ecran_print_one_char
  8587 ;; This function is called by:
  8588 ;;		_main
  8589 ;;		_cf_check_and_display
  8590 ;;		_check_comutest
  8591 ;;		_check_program_0
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           	psect	text41
  8596  002338                     __ptext41:
  8597                           	opt stack 0
  8598  002338                     _ecran_refresh:
  8599                           	opt stack 24
  8600                           
  8601                           ;incstack = 0
  8602  002338  FFFF               	dw	65535
  8603                           
  8604                           ;ecran.c: 118: if ( (Ecran.Solid == 0)
  8605                           ;ecran.c: 119: && ((++ Ecran.Cpt) <= Ecran.tRate))
  8606  00233A  0100               	movlb	0	; () banked
  8607  00233C  0100               	movlb	0	; () banked
  8608  00233E  67A7               	tstfsz	(_Ecran+15)& (0+255),b
  8609  002340  D04C               	goto	l261
  8610                           
  8611                           ; BSR set to: 0
  8612  002342  0100               	movlb	0	; () banked
  8613  002344  0100               	movlb	0	; () banked
  8614  002346  2BA3               	incf	(_Ecran+11)& (0+255),f,b
  8615  002348  0100               	movlb	0	; () banked
  8616  00234A  51A3               	movf	(_Ecran+11)& (0+255),w,b
  8617  00234C  0100               	movlb	0	; () banked
  8618  00234E  0100               	movlb	0	; () banked
  8619  002350  5DA4               	subwf	(_Ecran+12)& (0+255),w,b
  8620  002352  A0D8               	btfss	status,0,c
  8621  002354  D042               	goto	l261
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;ecran.c: 120: {
  8625                           ;ecran.c: 121: ecran_print_one_char(Ecran.Index, Ecran.Digits[Ecran.Index]);
  8626  002356  0100               	movlb	0	; () banked
  8627  002358  0100               	movlb	0	; () banked
  8628  00235A  51A2               	movf	(_Ecran+10)& (0+255),w,b
  8629  00235C  0D01               	mullw	1
  8630  00235E  0100               	movlb	0	; () banked
  8631  002360  EE20  F09C         	lfsr	2,_Ecran+4
  8632  002364  CFDE F052          	movff	postinc2,??_ecran_refresh
  8633  002368  CFDD F053          	movff	postdec2,??_ecran_refresh+1
  8634  00236C  50F3               	movf	prodl,w,c
  8635  00236E  2652               	addwf	??_ecran_refresh,f,c
  8636  002370  50F4               	movf	prodh,w,c
  8637  002372  2253               	addwfc	??_ecran_refresh+1,f,c
  8638  002374  C052  FFF6         	movff	??_ecran_refresh,tblptrl
  8639  002378  C053  FFF7         	movff	??_ecran_refresh+1,tblptrh
  8640  00237C  6AF8               	clrf	tblptru,c
  8641  00237E  0E05               	movlw	(high __ramtop+-1)
  8642  002380  64F7               	cpfsgt	tblptrh,c
  8643  002382  D004               	bra	u4607
  8644  002384  0008               	tblrd		*
  8645  002386  FFFF               	dw	65535	; errata NOP
  8646  002388  50F5               	movf	tablat,w,c
  8647  00238A  D005               	bra	u4600
  8648  00238C                     u4607:
  8649  00238C  CFF6 FFE1          	movff	tblptrl,fsr1l
  8650  002390  CFF7 FFE2          	movff	tblptrh,fsr1h
  8651  002394  50E7               	movf	indf1,w,c
  8652  002396                     u4600:
  8653  002396  6E50               	movwf	ecran_print_one_char@Character,c
  8654  002398  0100               	movlb	0	; () banked
  8655  00239A  0100               	movlb	0	; () banked
  8656  00239C  51A2               	movf	(_Ecran+10)& (0+255),w,b
  8657  00239E  EC35  F015         	call	_ecran_print_one_char
  8658                           
  8659                           ;ecran.c: 123: ecran_dot(Ecran.Dot[Ecran.Index]);
  8660  0023A2  0100               	movlb	0	; () banked
  8661  0023A4  0100               	movlb	0	; () banked
  8662  0023A6  51A2               	movf	(_Ecran+10)& (0+255),w,b
  8663  0023A8  0D01               	mullw	1
  8664  0023AA  0100               	movlb	0	; () banked
  8665  0023AC  0E9E               	movlw	low (_Ecran+6)
  8666  0023AE  24F3               	addwf	prodl,w,c
  8667  0023B0  6ED9               	movwf	fsr2l,c
  8668  0023B2  0100               	movlb	0	; () banked
  8669  0023B4  0E00               	movlw	high (_Ecran+6)
  8670  0023B6  20F4               	addwfc	prodh,w,c
  8671  0023B8  6EDA               	movwf	fsr2h,c
  8672  0023BA  50DF               	movf	indf2,w,c
  8673  0023BC  ECBB  F016         	call	_ecran_dot
  8674                           
  8675                           ;ecran.c: 125: if (++ Ecran.Index > 3) {Ecran.Index = 0;}
  8676  0023C0  0100               	movlb	0	; () banked
  8677  0023C2  EE20  F0A2         	lfsr	2,_Ecran+10
  8678  0023C6  2ADF               	incf	indf2,f,c
  8679  0023C8  0E03               	movlw	3
  8680  0023CA  64DF               	cpfsgt	indf2,c
  8681  0023CC  D006               	goto	l261
  8682                           
  8683                           ; BSR set to: 0
  8684  0023CE  6E52               	movwf	??_ecran_refresh& (0+255),c
  8685  0023D0  0E00               	movlw	0
  8686  0023D2  0100               	movlb	0	; () banked
  8687  0023D4  0100               	movlb	0	; () banked
  8688  0023D6  6FA2               	movwf	(_Ecran+10)& (0+255),b
  8689  0023D8  5052               	movf	??_ecran_refresh& (0+255),w,c
  8690  0023DA                     l261:
  8691                           
  8692                           ; BSR set to: 0
  8693  0023DA  0012               	return	
  8694  0023DC  FFFF               	dw	65535	; errata NOP
  8695  0023DE                     __end_of_ecran_refresh:
  8696                           	opt stack 0
  8697                           tblptru	equ	0xFF8
  8698                           tblptrh	equ	0xFF7
  8699                           tblptrl	equ	0xFF6
  8700                           tablat	equ	0xFF5
  8701                           prodh	equ	0xFF4
  8702                           prodl	equ	0xFF3
  8703                           intcon	equ	0xFF2
  8704                           intcon2	equ	0xFF1
  8705                           postinc0	equ	0xFEE
  8706                           wreg	equ	0xFE8
  8707                           indf1	equ	0xFE7
  8708                           postdec1	equ	0xFE5
  8709                           fsr1h	equ	0xFE2
  8710                           fsr1l	equ	0xFE1
  8711                           indf2	equ	0xFDF
  8712                           postinc2	equ	0xFDE
  8713                           postdec2	equ	0xFDD
  8714                           fsr2h	equ	0xFDA
  8715                           fsr2l	equ	0xFD9
  8716                           status	equ	0xFD8
  8717                           
  8718 ;; *************** function _ecran_print_one_char *****************
  8719 ;; Defined at:
  8720 ;;		line 50 in file "ecran.c"
  8721 ;; Parameters:    Size  Location     Type
  8722 ;;  Digit           1    wreg     unsigned char 
  8723 ;;  Character       1   32[COMRAM] unsigned char 
  8724 ;; Auto vars:     Size  Location     Type
  8725 ;;  Digit           1   33[COMRAM] unsigned char 
  8726 ;; Return value:  Size  Location     Type
  8727 ;;		None               void
  8728 ;; Registers used:
  8729 ;;		wreg, status,2, status,0, cstack
  8730 ;; Tracked objects:
  8731 ;;		On entry : 0/0
  8732 ;;		On exit  : 0/0
  8733 ;;		Unchanged: 0/0
  8734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8735 ;;      Params:         1       0       0       0       0       0       0
  8736 ;;      Locals:         1       0       0       0       0       0       0
  8737 ;;      Temps:          0       0       0       0       0       0       0
  8738 ;;      Totals:         2       0       0       0       0       0       0
  8739 ;;Total ram usage:        2 bytes
  8740 ;; Hardware stack levels used:    1
  8741 ;; Hardware stack levels required when called:    3
  8742 ;; This function calls:
  8743 ;;		_ecran_digit
  8744 ;;		_ecran_raz_digit
  8745 ;; This function is called by:
  8746 ;;		_ecran_refresh
  8747 ;;		_cf_check_and_display
  8748 ;;		_cf_rcv
  8749 ;;		_check_idtest
  8750 ;;		_check_bpon
  8751 ;;		_micro_wait
  8752 ;;		_feu_check_bp
  8753 ;; This function uses a non-reentrant model
  8754 ;;
  8755                           
  8756                           	psect	text42
  8757  002A6A                     __ptext42:
  8758                           	opt stack 0
  8759  002A6A                     _ecran_print_one_char:
  8760                           	opt stack 24
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;incstack = 0
  8764  002A6A  FFFF               	dw	65535
  8765                           
  8766                           ;ecran_print_one_char@Digit stored from wreg
  8767  002A6C  CFE8 F051          	movff	wreg,ecran_print_one_char@Digit
  8768                           
  8769                           ;ecran.c: 52: ecran_raz_digit();
  8770  002A70  ECC3  F016         	call	_ecran_raz_digit	;wreg free
  8771                           
  8772                           ;ecran.c: 54: ecran_digit(Character);
  8773  002A74  5050               	movf	ecran_print_one_char@Character,w,c
  8774  002A76  EC15  F00F         	call	_ecran_digit
  8775                           
  8776                           ;ecran.c: 56: switch (Digit)
  8777  002A7A  D008               	goto	l5063
  8778  002A7C                     l239:
  8779  002A7C  8282               	bsf	3970,1,c	;volatile
  8780  002A7E  D013               	goto	l245
  8781  002A80                     l241:
  8782  002A80  8482               	bsf	3970,2,c	;volatile
  8783  002A82  D011               	goto	l245
  8784  002A84                     l242:
  8785  002A84  8682               	bsf	3970,3,c	;volatile
  8786  002A86  D00F               	goto	l245
  8787  002A88                     l243:
  8788  002A88  8082               	bsf	3970,0,c	;volatile
  8789  002A8A  D00D               	goto	l245
  8790  002A8C                     l5063:
  8791  002A8C  5051               	movf	ecran_print_one_char@Digit,w,c
  8792                           
  8793                           ; Switch size 1, requested type "space"
  8794                           ; Number of cases is 4, Range of values is 0 to 3
  8795                           ; switch strategies available:
  8796                           ; Name         Instructions Cycles
  8797                           ; simple_byte           13     7 (average)
  8798                           ;	Chosen strategy is simple_byte
  8799  002A8E  0A00               	xorlw	0	; case 0
  8800  002A90  B4D8               	btfsc	status,2,c
  8801  002A92  D7F4               	goto	l239
  8802  002A94  0A01               	xorlw	1	; case 1
  8803  002A96  B4D8               	btfsc	status,2,c
  8804  002A98  D7F3               	goto	l241
  8805  002A9A  0A03               	xorlw	3	; case 2
  8806  002A9C  B4D8               	btfsc	status,2,c
  8807  002A9E  D7F2               	goto	l242
  8808  002AA0  0A01               	xorlw	1	; case 3
  8809  002AA2  B4D8               	btfsc	status,2,c
  8810  002AA4  D7F1               	goto	l243
  8811  002AA6                     l245:
  8812  002AA6  0012               	return	
  8813  002AA8  FFFF               	dw	65535	; errata NOP
  8814  002AAA                     __end_of_ecran_print_one_char:
  8815                           	opt stack 0
  8816                           tblptru	equ	0xFF8
  8817                           tblptrh	equ	0xFF7
  8818                           tblptrl	equ	0xFF6
  8819                           tablat	equ	0xFF5
  8820                           prodh	equ	0xFF4
  8821                           prodl	equ	0xFF3
  8822                           intcon	equ	0xFF2
  8823                           intcon2	equ	0xFF1
  8824                           postinc0	equ	0xFEE
  8825                           wreg	equ	0xFE8
  8826                           indf1	equ	0xFE7
  8827                           postdec1	equ	0xFE5
  8828                           fsr1h	equ	0xFE2
  8829                           fsr1l	equ	0xFE1
  8830                           indf2	equ	0xFDF
  8831                           postinc2	equ	0xFDE
  8832                           postdec2	equ	0xFDD
  8833                           fsr2h	equ	0xFDA
  8834                           fsr2l	equ	0xFD9
  8835                           status	equ	0xFD8
  8836                           
  8837 ;; *************** function _ecran_raz_digit *****************
  8838 ;; Defined at:
  8839 ;;		line 3 in file "ecran.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;		None
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;		None               void
  8846 ;; Registers used:
  8847 ;;		wreg, status,2, status,0
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8853 ;;      Params:         0       0       0       0       0       0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0
  8856 ;;      Totals:         0       0       0       0       0       0       0
  8857 ;;Total ram usage:        0 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:    2
  8860 ;; This function calls:
  8861 ;;		Nothing
  8862 ;; This function is called by:
  8863 ;;		_ecran_print_one_char
  8864 ;;		_ecran_wait
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868                           	psect	text43
  8869  002D86                     __ptext43:
  8870                           	opt stack 0
  8871  002D86                     _ecran_raz_digit:
  8872                           	opt stack 26
  8873                           
  8874                           ;incstack = 0
  8875  002D86  FFFF               	dw	65535
  8876                           
  8877                           ;ecran.c: 5: PORTD = 0;
  8878  002D88  0E00               	movlw	0
  8879  002D8A  6E83               	movwf	3971,c	;volatile
  8880                           
  8881                           ;ecran.c: 6: PORTC &= 0xF0;
  8882  002D8C  0EF0               	movlw	240
  8883  002D8E  1682               	andwf	3970,f,c	;volatile
  8884  002D90  0012               	return	
  8885  002D92  FFFF               	dw	65535	; errata NOP
  8886  002D94                     __end_of_ecran_raz_digit:
  8887                           	opt stack 0
  8888                           tblptru	equ	0xFF8
  8889                           tblptrh	equ	0xFF7
  8890                           tblptrl	equ	0xFF6
  8891                           tablat	equ	0xFF5
  8892                           prodh	equ	0xFF4
  8893                           prodl	equ	0xFF3
  8894                           intcon	equ	0xFF2
  8895                           intcon2	equ	0xFF1
  8896                           postinc0	equ	0xFEE
  8897                           wreg	equ	0xFE8
  8898                           indf1	equ	0xFE7
  8899                           postdec1	equ	0xFE5
  8900                           fsr1h	equ	0xFE2
  8901                           fsr1l	equ	0xFE1
  8902                           indf2	equ	0xFDF
  8903                           postinc2	equ	0xFDE
  8904                           postdec2	equ	0xFDD
  8905                           fsr2h	equ	0xFDA
  8906                           fsr2l	equ	0xFD9
  8907                           status	equ	0xFD8
  8908                           
  8909 ;; *************** function _ecran_digit *****************
  8910 ;; Defined at:
  8911 ;;		line 9 in file "ecran.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;  Char            1    wreg     unsigned char 
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;  Char            1   31[COMRAM] unsigned char 
  8916 ;; Return value:  Size  Location     Type
  8917 ;;		None               void
  8918 ;; Registers used:
  8919 ;;		wreg, status,2, status,0
  8920 ;; Tracked objects:
  8921 ;;		On entry : 0/0
  8922 ;;		On exit  : 0/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8925 ;;      Params:         0       0       0       0       0       0       0
  8926 ;;      Locals:         1       0       0       0       0       0       0
  8927 ;;      Temps:          0       0       0       0       0       0       0
  8928 ;;      Totals:         1       0       0       0       0       0       0
  8929 ;;Total ram usage:        1 bytes
  8930 ;; Hardware stack levels used:    1
  8931 ;; Hardware stack levels required when called:    2
  8932 ;; This function calls:
  8933 ;;		Nothing
  8934 ;; This function is called by:
  8935 ;;		_ecran_print_one_char
  8936 ;; This function uses a non-reentrant model
  8937 ;;
  8938                           
  8939                           	psect	text44
  8940  001E2A                     __ptext44:
  8941                           	opt stack 0
  8942  001E2A                     _ecran_digit:
  8943                           	opt stack 24
  8944                           
  8945                           ;incstack = 0
  8946  001E2A  FFFF               	dw	65535
  8947                           
  8948                           ;ecran_digit@Char stored from wreg
  8949  001E2C  CFE8 F04F          	movff	wreg,ecran_digit@Char
  8950                           
  8951                           ;ecran.c: 11: switch (Char)
  8952  001E30  D02B               	goto	l5047
  8953  001E32                     l4995:
  8954  001E32  0E00               	movlw	0
  8955  001E34  D027               	goto	L71
  8956  001E36                     l4997:
  8957  001E36  0EB7               	movlw	183
  8958  001E38  D025               	goto	L71
  8959  001E3A                     l5005:
  8960  001E3A  0ED6               	movlw	214
  8961  001E3C  D023               	goto	L71
  8962  001E3E                     l5007:
  8963  001E3E  0E96               	movlw	150
  8964  001E40  D021               	goto	L71
  8965  001E42                     l5009:
  8966  001E42  0E97               	movlw	151
  8967  001E44  D01F               	goto	L71
  8968  001E46                     l5011:
  8969  001E46  0EF2               	movlw	242
  8970  001E48  D01D               	goto	L71
  8971  001E4A                     l5013:
  8972  001E4A  0ED0               	movlw	208
  8973  001E4C  D01B               	goto	L71
  8974  001E4E                     l5015:
  8975  001E4E  0EF1               	movlw	241
  8976  001E50  D019               	goto	L71
  8977  001E52                     l5019:
  8978  001E52  0ED2               	movlw	210
  8979  001E54  D017               	goto	L71
  8980  001E56                     l5021:
  8981  001E56  0E40               	movlw	64
  8982  001E58  D015               	goto	L71
  8983  001E5A                     l5023:
  8984  001E5A  0E10               	movlw	16
  8985  001E5C  D013               	goto	L71
  8986  001E5E                     l5025:
  8987  001E5E  0EE7               	movlw	231
  8988  001E60  D011               	goto	L71
  8989  001E62                     l5027:
  8990  001E62  0E21               	movlw	33
  8991  001E64  D00F               	goto	L71
  8992  001E66                     l5029:
  8993  001E66  0ED5               	movlw	213
  8994  001E68  D00D               	goto	L71
  8995  001E6A                     l5031:
  8996  001E6A  0E75               	movlw	117
  8997  001E6C  D00B               	goto	L71
  8998  001E6E                     l5033:
  8999  001E6E  0E33               	movlw	51
  9000  001E70  D009               	goto	L71
  9001  001E72                     l5035:
  9002  001E72  0E76               	movlw	118
  9003  001E74  D007               	goto	L71
  9004  001E76                     l5037:
  9005  001E76  0EF6               	movlw	246
  9006  001E78  D005               	goto	L71
  9007  001E7A                     l5039:
  9008  001E7A  0E25               	movlw	37
  9009  001E7C  D003               	goto	L71
  9010  001E7E                     l5041:
  9011  001E7E  0EF7               	movlw	247
  9012  001E80  D001               	goto	L71
  9013  001E82                     l5043:
  9014  001E82  0E77               	movlw	119
  9015  001E84                     L71:
  9016  001E84  6E83               	movwf	3971,c	;volatile
  9017  001E86  D04C               	goto	l231
  9018  001E88                     l5047:
  9019  001E88  504F               	movf	ecran_digit@Char,w,c
  9020                           
  9021                           ; Switch size 1, requested type "space"
  9022                           ; Number of cases is 25, Range of values is 32 to 116
  9023                           ; switch strategies available:
  9024                           ; Name         Instructions Cycles
  9025                           ; simple_byte           76    39 (average)
  9026                           ;	Chosen strategy is simple_byte
  9027  001E8A  0A20               	xorlw	32	; case 32
  9028  001E8C  B4D8               	btfsc	status,2,c
  9029  001E8E  D7D1               	goto	l4995
  9030  001E90  0A0D               	xorlw	13	; case 45
  9031  001E92  B4D8               	btfsc	status,2,c
  9032  001E94  D7E2               	goto	l5023
  9033  001E96  0A1D               	xorlw	29	; case 48
  9034  001E98  B4D8               	btfsc	status,2,c
  9035  001E9A  D7E1               	goto	l5025
  9036  001E9C  0A01               	xorlw	1	; case 49
  9037  001E9E  B4D8               	btfsc	status,2,c
  9038  001EA0  D7E0               	goto	l5027
  9039  001EA2  0A03               	xorlw	3	; case 50
  9040  001EA4  B4D8               	btfsc	status,2,c
  9041  001EA6  D7DF               	goto	l5029
  9042  001EA8  0A01               	xorlw	1	; case 51
  9043  001EAA  B4D8               	btfsc	status,2,c
  9044  001EAC  D7DE               	goto	l5031
  9045  001EAE  0A07               	xorlw	7	; case 52
  9046  001EB0  B4D8               	btfsc	status,2,c
  9047  001EB2  D7DD               	goto	l5033
  9048  001EB4  0A01               	xorlw	1	; case 53
  9049  001EB6  B4D8               	btfsc	status,2,c
  9050  001EB8  D7DC               	goto	l5035
  9051  001EBA  0A03               	xorlw	3	; case 54
  9052  001EBC  B4D8               	btfsc	status,2,c
  9053  001EBE  D7DB               	goto	l5037
  9054  001EC0  0A01               	xorlw	1	; case 55
  9055  001EC2  B4D8               	btfsc	status,2,c
  9056  001EC4  D7DA               	goto	l5039
  9057  001EC6  0A0F               	xorlw	15	; case 56
  9058  001EC8  B4D8               	btfsc	status,2,c
  9059  001ECA  D7D9               	goto	l5041
  9060  001ECC  0A01               	xorlw	1	; case 57
  9061  001ECE  B4D8               	btfsc	status,2,c
  9062  001ED0  D7D8               	goto	l5043
  9063  001ED2  0A78               	xorlw	120	; case 65
  9064  001ED4  B4D8               	btfsc	status,2,c
  9065  001ED6  D7AF               	goto	l4997
  9066  001ED8  0A03               	xorlw	3	; case 66
  9067  001EDA  B4D8               	btfsc	status,2,c
  9068  001EDC  D7B4               	goto	l5011
  9069  001EDE  0A01               	xorlw	1	; case 67
  9070  001EE0  B4D8               	btfsc	status,2,c
  9071  001EE2  D7B3               	goto	l5013
  9072  001EE4  0A07               	xorlw	7	; case 68
  9073  001EE6  B4D8               	btfsc	status,2,c
  9074  001EE8  D7B2               	goto	l5015
  9075  001EEA  0A01               	xorlw	1	; case 69
  9076  001EEC  B4D8               	btfsc	status,2,c
  9077  001EEE  D7A5               	goto	l5005
  9078  001EF0  0A03               	xorlw	3	; case 70
  9079  001EF2  B4D8               	btfsc	status,2,c
  9080  001EF4  D7A4               	goto	l5007
  9081  001EF6  0A16               	xorlw	22	; case 80
  9082  001EF8  B4D8               	btfsc	status,2,c
  9083  001EFA  D7A3               	goto	l5009
  9084  001EFC  0A03               	xorlw	3	; case 83
  9085  001EFE  B4D8               	btfsc	status,2,c
  9086  001F00  D7B8               	goto	l5035
  9087  001F02  0A0C               	xorlw	12	; case 95
  9088  001F04  B4D8               	btfsc	status,2,c
  9089  001F06  D7A7               	goto	l5021
  9090  001F08  0A3D               	xorlw	61	; case 98
  9091  001F0A  B4D8               	btfsc	status,2,c
  9092  001F0C  D79C               	goto	l5011
  9093  001F0E  0A01               	xorlw	1	; case 99
  9094  001F10  B4D8               	btfsc	status,2,c
  9095  001F12  D79B               	goto	l5013
  9096  001F14  0A07               	xorlw	7	; case 100
  9097  001F16  B4D8               	btfsc	status,2,c
  9098  001F18  D79A               	goto	l5015
  9099  001F1A  0A10               	xorlw	16	; case 116
  9100  001F1C  B4D8               	btfsc	status,2,c
  9101  001F1E  D799               	goto	l5019
  9102  001F20                     l231:
  9103  001F20  0012               	return	
  9104  001F22  FFFF               	dw	65535	; errata NOP
  9105  001F24                     __end_of_ecran_digit:
  9106                           	opt stack 0
  9107                           tblptru	equ	0xFF8
  9108                           tblptrh	equ	0xFF7
  9109                           tblptrl	equ	0xFF6
  9110                           tablat	equ	0xFF5
  9111                           prodh	equ	0xFF4
  9112                           prodl	equ	0xFF3
  9113                           intcon	equ	0xFF2
  9114                           intcon2	equ	0xFF1
  9115                           postinc0	equ	0xFEE
  9116                           wreg	equ	0xFE8
  9117                           indf1	equ	0xFE7
  9118                           postdec1	equ	0xFE5
  9119                           fsr1h	equ	0xFE2
  9120                           fsr1l	equ	0xFE1
  9121                           indf2	equ	0xFDF
  9122                           postinc2	equ	0xFDE
  9123                           postdec2	equ	0xFDD
  9124                           fsr2h	equ	0xFDA
  9125                           fsr2l	equ	0xFD9
  9126                           status	equ	0xFD8
  9127                           
  9128 ;; *************** function _ecran_dot *****************
  9129 ;; Defined at:
  9130 ;;		line 42 in file "ecran.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;  Dot             1    wreg     unsigned char 
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;  Dot             1   31[COMRAM] unsigned char 
  9135 ;; Return value:  Size  Location     Type
  9136 ;;		None               void
  9137 ;; Registers used:
  9138 ;;		wreg, status,2, status,0
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9144 ;;      Params:         0       0       0       0       0       0       0
  9145 ;;      Locals:         1       0       0       0       0       0       0
  9146 ;;      Temps:          0       0       0       0       0       0       0
  9147 ;;      Totals:         1       0       0       0       0       0       0
  9148 ;;Total ram usage:        1 bytes
  9149 ;; Hardware stack levels used:    1
  9150 ;; Hardware stack levels required when called:    2
  9151 ;; This function calls:
  9152 ;;		Nothing
  9153 ;; This function is called by:
  9154 ;;		_ecran_wait
  9155 ;;		_ecran_refresh
  9156 ;; This function uses a non-reentrant model
  9157 ;;
  9158                           
  9159                           	psect	text45
  9160  002D76                     __ptext45:
  9161                           	opt stack 0
  9162  002D76                     _ecran_dot:
  9163                           	opt stack 26
  9164                           
  9165                           ;incstack = 0
  9166  002D76  FFFF               	dw	65535
  9167                           
  9168                           ;ecran_dot@Dot stored from wreg
  9169  002D78  CFE8 F04F          	movff	wreg,ecran_dot@Dot
  9170                           
  9171                           ;ecran.c: 44: if (Dot == 1)
  9172  002D7C  044F               	decf	ecran_dot@Dot,w,c
  9173  002D7E  B4D8               	btfsc	status,2,c
  9174                           
  9175                           ;ecran.c: 45: {
  9176                           ;ecran.c: 46: PORTD |= 0x08;
  9177  002D80  8683               	bsf	3971,3,c	;volatile
  9178  002D82  0012               	return	
  9179  002D84  FFFF               	dw	65535	; errata NOP
  9180  002D86                     __end_of_ecran_dot:
  9181                           	opt stack 0
  9182                           tblptru	equ	0xFF8
  9183                           tblptrh	equ	0xFF7
  9184                           tblptrl	equ	0xFF6
  9185                           tablat	equ	0xFF5
  9186                           prodh	equ	0xFF4
  9187                           prodl	equ	0xFF3
  9188                           intcon	equ	0xFF2
  9189                           intcon2	equ	0xFF1
  9190                           postinc0	equ	0xFEE
  9191                           wreg	equ	0xFE8
  9192                           indf1	equ	0xFE7
  9193                           postdec1	equ	0xFE5
  9194                           fsr1h	equ	0xFE2
  9195                           fsr1l	equ	0xFE1
  9196                           indf2	equ	0xFDF
  9197                           postinc2	equ	0xFDE
  9198                           postdec2	equ	0xFDD
  9199                           fsr2h	equ	0xFDA
  9200                           fsr2l	equ	0xFD9
  9201                           status	equ	0xFD8
  9202                           
  9203 ;; *************** function _ecran_blank *****************
  9204 ;; Defined at:
  9205 ;;		line 103 in file "ecran.c"
  9206 ;; Parameters:    Size  Location     Type
  9207 ;;		None
  9208 ;; Auto vars:     Size  Location     Type
  9209 ;;		None
  9210 ;; Return value:  Size  Location     Type
  9211 ;;		None               void
  9212 ;; Registers used:
  9213 ;;		wreg, status,2, status,0
  9214 ;; Tracked objects:
  9215 ;;		On entry : 0/0
  9216 ;;		On exit  : 0/0
  9217 ;;		Unchanged: 0/0
  9218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9219 ;;      Params:         0       0       0       0       0       0       0
  9220 ;;      Locals:         0       0       0       0       0       0       0
  9221 ;;      Temps:          1       0       0       0       0       0       0
  9222 ;;      Totals:         1       0       0       0       0       0       0
  9223 ;;Total ram usage:        1 bytes
  9224 ;; Hardware stack levels used:    1
  9225 ;; Hardware stack levels required when called:    2
  9226 ;; This function calls:
  9227 ;;		Nothing
  9228 ;; This function is called by:
  9229 ;;		_check_comutest
  9230 ;;		_check_program_0
  9231 ;;		_test_process
  9232 ;;		_micro_wait
  9233 ;;		_armement_process
  9234 ;; This function uses a non-reentrant model
  9235 ;;
  9236                           
  9237                           	psect	text46
  9238  002776                     __ptext46:
  9239                           	opt stack 0
  9240  002776                     _ecran_blank:
  9241                           	opt stack 27
  9242                           
  9243                           ;incstack = 0
  9244  002776  FFFF               	dw	65535
  9245                           
  9246                           ;ecran.c: 106: Ecran.Digits = (char *) Blank;
  9247  002778  0E06               	movlw	high _Blank
  9248  00277A  0100               	movlb	0	; () banked
  9249  00277C  0100               	movlb	0	; () banked
  9250  00277E  6F9D               	movwf	(_Ecran+5)& (0+255),b
  9251  002780  0E06               	movlw	low _Blank
  9252  002782  0100               	movlb	0	; () banked
  9253  002784  0100               	movlb	0	; () banked
  9254  002786  6F9C               	movwf	(_Ecran+4)& (0+255),b
  9255                           
  9256                           ; BSR set to: 0
  9257                           ;ecran.c: 108: Ecran.Dot[0] = 0;
  9258  002788  6E4F               	movwf	??_ecran_blank& (0+255),c
  9259  00278A  0E00               	movlw	0
  9260  00278C  0100               	movlb	0	; () banked
  9261  00278E  0100               	movlb	0	; () banked
  9262  002790  6F9E               	movwf	(_Ecran+6)& (0+255),b
  9263  002792  504F               	movf	??_ecran_blank& (0+255),w,c
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;ecran.c: 109: Ecran.Dot[1] = 0;
  9267  002794  6E4F               	movwf	??_ecran_blank& (0+255),c
  9268  002796  0E00               	movlw	0
  9269  002798  0100               	movlb	0	; () banked
  9270  00279A  0100               	movlb	0	; () banked
  9271  00279C  6F9F               	movwf	(_Ecran+7)& (0+255),b
  9272  00279E  504F               	movf	??_ecran_blank& (0+255),w,c
  9273                           
  9274                           ; BSR set to: 0
  9275                           ;ecran.c: 110: Ecran.Dot[2] = 0;
  9276  0027A0  6E4F               	movwf	??_ecran_blank& (0+255),c
  9277  0027A2  0E00               	movlw	0
  9278  0027A4  0100               	movlb	0	; () banked
  9279  0027A6  0100               	movlb	0	; () banked
  9280  0027A8  6FA0               	movwf	(_Ecran+8)& (0+255),b
  9281  0027AA  504F               	movf	??_ecran_blank& (0+255),w,c
  9282                           
  9283                           ; BSR set to: 0
  9284                           ;ecran.c: 111: Ecran.Dot[3] = 0;
  9285  0027AC  6E4F               	movwf	??_ecran_blank& (0+255),c
  9286  0027AE  0E00               	movlw	0
  9287  0027B0  0100               	movlb	0	; () banked
  9288  0027B2  0100               	movlb	0	; () banked
  9289  0027B4  6FA1               	movwf	(_Ecran+9)& (0+255),b
  9290  0027B6  504F               	movf	??_ecran_blank& (0+255),w,c
  9291                           
  9292                           ; BSR set to: 0
  9293                           ;ecran.c: 113: Ecran.Solid = 0;
  9294  0027B8  6E4F               	movwf	??_ecran_blank& (0+255),c
  9295  0027BA  0E00               	movlw	0
  9296  0027BC  0100               	movlb	0	; () banked
  9297  0027BE  0100               	movlb	0	; () banked
  9298  0027C0  6FA7               	movwf	(_Ecran+15)& (0+255),b
  9299  0027C2  504F               	movf	??_ecran_blank& (0+255),w,c
  9300                           
  9301                           ; BSR set to: 0
  9302  0027C4  0012               	return	
  9303  0027C6  FFFF               	dw	65535	; errata NOP
  9304  0027C8                     __end_of_ecran_blank:
  9305                           	opt stack 0
  9306                           tblptru	equ	0xFF8
  9307                           tblptrh	equ	0xFF7
  9308                           tblptrl	equ	0xFF6
  9309                           tablat	equ	0xFF5
  9310                           prodh	equ	0xFF4
  9311                           prodl	equ	0xFF3
  9312                           intcon	equ	0xFF2
  9313                           intcon2	equ	0xFF1
  9314                           postinc0	equ	0xFEE
  9315                           wreg	equ	0xFE8
  9316                           indf1	equ	0xFE7
  9317                           postdec1	equ	0xFE5
  9318                           fsr1h	equ	0xFE2
  9319                           fsr1l	equ	0xFE1
  9320                           indf2	equ	0xFDF
  9321                           postinc2	equ	0xFDE
  9322                           postdec2	equ	0xFDD
  9323                           fsr2h	equ	0xFDA
  9324                           fsr2l	equ	0xFD9
  9325                           status	equ	0xFD8
  9326                           
  9327 ;; *************** function _arm_UAlim_1A *****************
  9328 ;; Defined at:
  9329 ;;		line 3 in file "armement.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;		None
  9332 ;; Auto vars:     Size  Location     Type
  9333 ;;  temp            2   23[BANK0 ] unsigned short 
  9334 ;; Return value:  Size  Location     Type
  9335 ;;                  2   17[BANK0 ] unsigned short 
  9336 ;; Registers used:
  9337 ;;		wreg, status,2, status,0, cstack
  9338 ;; Tracked objects:
  9339 ;;		On entry : 0/0
  9340 ;;		On exit  : 0/0
  9341 ;;		Unchanged: 0/0
  9342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9343 ;;      Params:         0       2       0       0       0       0       0
  9344 ;;      Locals:         0       2       0       0       0       0       0
  9345 ;;      Temps:          0       4       0       0       0       0       0
  9346 ;;      Totals:         0       8       0       0       0       0       0
  9347 ;;Total ram usage:        8 bytes
  9348 ;; Hardware stack levels used:    1
  9349 ;; Hardware stack levels required when called:    4
  9350 ;; This function calls:
  9351 ;;		___ftmul
  9352 ;;		___fttol
  9353 ;;		___lwtoft
  9354 ;;		_ana_read
  9355 ;;		_delay_ms
  9356 ;; This function is called by:
  9357 ;;		_armement_process
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           	psect	text47
  9362  001C26                     __ptext47:
  9363                           	opt stack 0
  9364  001C26                     _arm_UAlim_1A:
  9365                           	opt stack 25
  9366                           
  9367                           ; BSR set to: 0
  9368                           ;incstack = 0
  9369  001C26  FFFF               	dw	65535
  9370                           
  9371                           ;armement.c: 5: unsigned short temp = 0;
  9372  001C28  0E00               	movlw	0
  9373  001C2A  0100               	movlb	0	; () banked
  9374  001C2C  0100               	movlb	0	; () banked
  9375  001C2E  6FC0               	movwf	(arm_UAlim_1A@temp+1)& (0+255),b
  9376  001C30  0E00               	movlw	0
  9377  001C32  0100               	movlb	0	; () banked
  9378  001C34  6FBF               	movwf	arm_UAlim_1A@temp& (0+255),b
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;armement.c: 7: PORTAbits.RA5 = 0;
  9382  001C36  9A80               	bcf	3968,5,c	;volatile
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;armement.c: 8: PORTBbits.RB1 = 1;
  9386  001C38  8281               	bsf	3969,1,c	;volatile
  9387                           
  9388                           ; BSR set to: 0
  9389                           ;armement.c: 10: delay_ms(10);
  9390  001C3A  0E00               	movlw	0
  9391  001C3C  6E50               	movwf	delay_ms@TimeToWait+1,c
  9392  001C3E  0E0A               	movlw	10
  9393  001C40  6E4F               	movwf	delay_ms@TimeToWait,c
  9394  001C42  ECFD  F015         	call	_delay_ms	;wreg free
  9395                           
  9396                           ;armement.c: 12: temp = ana_read(0);
  9397  001C46  0E00               	movlw	0
  9398  001C48  EC32  F014         	call	_ana_read
  9399  001C4C  C055  F0BF         	movff	?_ana_read,arm_UAlim_1A@temp
  9400  001C50  C056  F0C0         	movff	?_ana_read+1,arm_UAlim_1A@temp+1
  9401                           
  9402                           ;armement.c: 14: PORTAbits.RA5 = 0;
  9403  001C54  9A80               	bcf	3968,5,c	;volatile
  9404                           
  9405                           ;armement.c: 15: PORTBbits.RB1 = 0;
  9406  001C56  9281               	bcf	3969,1,c	;volatile
  9407                           
  9408                           ;armement.c: 17: Arm.U_Alim_1A = (float) temp * 0.0049f;
  9409  001C58  C0BF  F057         	movff	arm_UAlim_1A@temp,___lwtoft@c
  9410  001C5C  C0C0  F058         	movff	arm_UAlim_1A@temp+1,___lwtoft@c+1
  9411  001C60  EC92  F015         	call	___lwtoft	;wreg free
  9412  001C64  C057  F0AA         	movff	?___lwtoft,___ftmul@f1
  9413  001C68  C058  F0AB         	movff	?___lwtoft+1,___ftmul@f1+1
  9414  001C6C  C059  F0AC         	movff	?___lwtoft+2,___ftmul@f1+2
  9415  001C70  0E90               	movlw	144
  9416  001C72  0100               	movlb	0	; () banked
  9417  001C74  0100               	movlb	0	; () banked
  9418  001C76  6FAD               	movwf	___ftmul@f2& (0+255),b
  9419  001C78  0EA0               	movlw	160
  9420  001C7A  0100               	movlb	0	; () banked
  9421  001C7C  0100               	movlb	0	; () banked
  9422  001C7E  6FAE               	movwf	(___ftmul@f2+1)& (0+255),b
  9423  001C80  0E3B               	movlw	59
  9424  001C82  0100               	movlb	0	; () banked
  9425  001C84  0100               	movlb	0	; () banked
  9426  001C86  6FAF               	movwf	(___ftmul@f2+2)& (0+255),b
  9427  001C88  EC33  F009         	call	___ftmul	;wreg free
  9428  001C8C  C0AA  F024         	movff	?___ftmul,_Arm+4
  9429  001C90  C0AB  F025         	movff	?___ftmul+1,_Arm+5
  9430  001C94  C0AC  F026         	movff	?___ftmul+2,_Arm+6
  9431                           
  9432                           ;armement.c: 18: Arm.U_Alim_1A = Arm.U_Alim_1A * 11.62f;
  9433  001C98  C024  F0AA         	movff	_Arm+4,___ftmul@f1
  9434  001C9C  C025  F0AB         	movff	_Arm+5,___ftmul@f1+1
  9435  001CA0  C026  F0AC         	movff	_Arm+6,___ftmul@f1+2
  9436  001CA4  0EEC               	movlw	236
  9437  001CA6  0100               	movlb	0	; () banked
  9438  001CA8  0100               	movlb	0	; () banked
  9439  001CAA  6FAD               	movwf	___ftmul@f2& (0+255),b
  9440  001CAC  0E39               	movlw	57
  9441  001CAE  0100               	movlb	0	; () banked
  9442  001CB0  0100               	movlb	0	; () banked
  9443  001CB2  6FAE               	movwf	(___ftmul@f2+1)& (0+255),b
  9444  001CB4  0E41               	movlw	65
  9445  001CB6  0100               	movlb	0	; () banked
  9446  001CB8  0100               	movlb	0	; () banked
  9447  001CBA  6FAF               	movwf	(___ftmul@f2+2)& (0+255),b
  9448  001CBC  EC33  F009         	call	___ftmul	;wreg free
  9449  001CC0  C0AA  F024         	movff	?___ftmul,_Arm+4
  9450  001CC4  C0AB  F025         	movff	?___ftmul+1,_Arm+5
  9451  001CC8  C0AC  F026         	movff	?___ftmul+2,_Arm+6
  9452                           
  9453                           ;armement.c: 19: Arm.U_Alim_1A = Arm.U_Alim_1A * 100.0f;
  9454  001CCC  C024  F0AA         	movff	_Arm+4,___ftmul@f1
  9455  001CD0  C025  F0AB         	movff	_Arm+5,___ftmul@f1+1
  9456  001CD4  C026  F0AC         	movff	_Arm+6,___ftmul@f1+2
  9457  001CD8  0E00               	movlw	0
  9458  001CDA  0100               	movlb	0	; () banked
  9459  001CDC  0100               	movlb	0	; () banked
  9460  001CDE  6FAD               	movwf	___ftmul@f2& (0+255),b
  9461  001CE0  0EC8               	movlw	200
  9462  001CE2  0100               	movlb	0	; () banked
  9463  001CE4  0100               	movlb	0	; () banked
  9464  001CE6  6FAE               	movwf	(___ftmul@f2+1)& (0+255),b
  9465  001CE8  0E42               	movlw	66
  9466  001CEA  0100               	movlb	0	; () banked
  9467  001CEC  0100               	movlb	0	; () banked
  9468  001CEE  6FAF               	movwf	(___ftmul@f2+2)& (0+255),b
  9469  001CF0  EC33  F009         	call	___ftmul	;wreg free
  9470  001CF4  C0AA  F024         	movff	?___ftmul,_Arm+4
  9471  001CF8  C0AB  F025         	movff	?___ftmul+1,_Arm+5
  9472  001CFC  C0AC  F026         	movff	?___ftmul+2,_Arm+6
  9473                           
  9474                           ;armement.c: 21: return (unsigned short) Arm.U_Alim_1A;
  9475  001D00  C024  F04F         	movff	_Arm+4,___fttol@f1
  9476  001D04  C025  F050         	movff	_Arm+5,___fttol@f1+1
  9477  001D08  C026  F051         	movff	_Arm+6,___fttol@f1+2
  9478  001D0C  EC55  F00C         	call	___fttol	;wreg free
  9479  001D10  C04F  F0BB         	movff	?___fttol,??_arm_UAlim_1A
  9480  001D14  C050  F0BC         	movff	?___fttol+1,??_arm_UAlim_1A+1
  9481  001D18  C051  F0BD         	movff	?___fttol+2,??_arm_UAlim_1A+2
  9482  001D1C  C052  F0BE         	movff	?___fttol+3,??_arm_UAlim_1A+3
  9483  001D20  C0BB  F0B9         	movff	??_arm_UAlim_1A,?_arm_UAlim_1A
  9484  001D24  C0BC  F0BA         	movff	??_arm_UAlim_1A+1,?_arm_UAlim_1A+1
  9485  001D28  0012               	return	
  9486  001D2A  FFFF               	dw	65535	; errata NOP
  9487  001D2C                     __end_of_arm_UAlim_1A:
  9488                           	opt stack 0
  9489                           tblptru	equ	0xFF8
  9490                           tblptrh	equ	0xFF7
  9491                           tblptrl	equ	0xFF6
  9492                           tablat	equ	0xFF5
  9493                           prodh	equ	0xFF4
  9494                           prodl	equ	0xFF3
  9495                           intcon	equ	0xFF2
  9496                           intcon2	equ	0xFF1
  9497                           postinc0	equ	0xFEE
  9498                           wreg	equ	0xFE8
  9499                           indf1	equ	0xFE7
  9500                           postdec1	equ	0xFE5
  9501                           fsr1h	equ	0xFE2
  9502                           fsr1l	equ	0xFE1
  9503                           indf2	equ	0xFDF
  9504                           postinc2	equ	0xFDE
  9505                           postdec2	equ	0xFDD
  9506                           fsr2h	equ	0xFDA
  9507                           fsr2l	equ	0xFD9
  9508                           status	equ	0xFD8
  9509                           
  9510 ;; *************** function _ana_read *****************
  9511 ;; Defined at:
  9512 ;;		line 4 in file "analog.c"
  9513 ;; Parameters:    Size  Location     Type
  9514 ;;  ANx             1    wreg     unsigned char 
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;  ANx             1   40[COMRAM] unsigned char 
  9517 ;;  temp            2   41[COMRAM] unsigned short 
  9518 ;; Return value:  Size  Location     Type
  9519 ;;                  2   37[COMRAM] unsigned short 
  9520 ;; Registers used:
  9521 ;;		wreg, status,2, status,0, cstack
  9522 ;; Tracked objects:
  9523 ;;		On entry : 0/0
  9524 ;;		On exit  : 0/0
  9525 ;;		Unchanged: 0/0
  9526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9527 ;;      Params:         2       0       0       0       0       0       0
  9528 ;;      Locals:         3       0       0       0       0       0       0
  9529 ;;      Temps:          1       0       0       0       0       0       0
  9530 ;;      Totals:         6       0       0       0       0       0       0
  9531 ;;Total ram usage:        6 bytes
  9532 ;; Hardware stack levels used:    1
  9533 ;; Hardware stack levels required when called:    3
  9534 ;; This function calls:
  9535 ;;		_delay_ms
  9536 ;; This function is called by:
  9537 ;;		_check_UAlim
  9538 ;;		_check_UInfla
  9539 ;;		_arm_UAlim_1A
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543                           	psect	text48
  9544  002864                     __ptext48:
  9545                           	opt stack 0
  9546  002864                     _ana_read:
  9547                           	opt stack 25
  9548                           
  9549                           ;incstack = 0
  9550  002864  FFFF               	dw	65535
  9551                           
  9552                           ;ana_read@ANx stored from wreg
  9553  002866  CFE8 F058          	movff	wreg,ana_read@ANx
  9554                           
  9555                           ;analog.c: 6: unsigned short temp = 0;
  9556  00286A  0E00               	movlw	0
  9557  00286C  6E5A               	movwf	ana_read@temp+1,c
  9558  00286E  0E00               	movlw	0
  9559  002870  6E59               	movwf	ana_read@temp,c
  9560                           
  9561                           ;analog.c: 8: ADCON0bits.CHS = ANx;
  9562  002872  C058  F057         	movff	ana_read@ANx,??_ana_read
  9563  002876  4657               	rlncf	??_ana_read,f,c
  9564  002878  4657               	rlncf	??_ana_read,f,c
  9565  00287A  4657               	rlncf	??_ana_read,f,c
  9566  00287C  50C2               	movf	4034,w,c	;volatile
  9567  00287E  1857               	xorwf	??_ana_read,w,c
  9568  002880  0BC7               	andlw	-57
  9569  002882  1857               	xorwf	??_ana_read,w,c
  9570  002884  6EC2               	movwf	4034,c	;volatile
  9571                           
  9572                           ;analog.c: 9: ADCON0bits.ADON = 1;
  9573  002886  80C2               	bsf	4034,0,c	;volatile
  9574                           
  9575                           ;analog.c: 11: delay_ms(5);
  9576  002888  0E00               	movlw	0
  9577  00288A  6E50               	movwf	delay_ms@TimeToWait+1,c
  9578  00288C  0E05               	movlw	5
  9579  00288E  6E4F               	movwf	delay_ms@TimeToWait,c
  9580  002890  ECFD  F015         	call	_delay_ms	;wreg free
  9581                           
  9582                           ;analog.c: 13: ADCON0bits.GO_nDONE = 1;
  9583  002894  84C2               	bsf	4034,2,c	;volatile
  9584  002896                     l930:
  9585  002896  B4C2               	btfsc	4034,2,c	;volatile
  9586  002898  D7FE               	goto	l930
  9587                           
  9588                           ;analog.c: 16: temp = ADRESH << 8;
  9589  00289A  50C4               	movf	4036,w,c	;volatile
  9590  00289C  6E5A               	movwf	ana_read@temp+1,c
  9591  00289E  6A59               	clrf	ana_read@temp,c
  9592                           
  9593                           ;analog.c: 17: temp |= ADRESL;
  9594  0028A0  50C3               	movf	4035,w,c	;volatile
  9595  0028A2  1259               	iorwf	ana_read@temp,f,c
  9596                           
  9597                           ;analog.c: 19: ADCON0bits.ADON = 0;
  9598  0028A4  90C2               	bcf	4034,0,c	;volatile
  9599                           
  9600                           ;analog.c: 21: return temp;
  9601  0028A6  C059  F055         	movff	ana_read@temp,?_ana_read
  9602  0028AA  C05A  F056         	movff	ana_read@temp+1,?_ana_read+1
  9603  0028AE  0012               	return	
  9604  0028B0  FFFF               	dw	65535	; errata NOP
  9605  0028B2                     __end_of_ana_read:
  9606                           	opt stack 0
  9607                           tblptru	equ	0xFF8
  9608                           tblptrh	equ	0xFF7
  9609                           tblptrl	equ	0xFF6
  9610                           tablat	equ	0xFF5
  9611                           prodh	equ	0xFF4
  9612                           prodl	equ	0xFF3
  9613                           intcon	equ	0xFF2
  9614                           intcon2	equ	0xFF1
  9615                           postinc0	equ	0xFEE
  9616                           wreg	equ	0xFE8
  9617                           indf1	equ	0xFE7
  9618                           postdec1	equ	0xFE5
  9619                           fsr1h	equ	0xFE2
  9620                           fsr1l	equ	0xFE1
  9621                           indf2	equ	0xFDF
  9622                           postinc2	equ	0xFDE
  9623                           postdec2	equ	0xFDD
  9624                           fsr2h	equ	0xFDA
  9625                           fsr2l	equ	0xFD9
  9626                           status	equ	0xFD8
  9627                           
  9628 ;; *************** function _delay_ms *****************
  9629 ;; Defined at:
  9630 ;;		line 4 in file "time.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;  TimeToWait      2   31[COMRAM] unsigned short 
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;  temp            2   35[COMRAM] unsigned short 
  9635 ;; Return value:  Size  Location     Type
  9636 ;;		None               void
  9637 ;; Registers used:
  9638 ;;		wreg, status,2, status,0
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9644 ;;      Params:         2       0       0       0       0       0       0
  9645 ;;      Locals:         2       0       0       0       0       0       0
  9646 ;;      Temps:          2       0       0       0       0       0       0
  9647 ;;      Totals:         6       0       0       0       0       0       0
  9648 ;;Total ram usage:        6 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; Hardware stack levels required when called:    2
  9651 ;; This function calls:
  9652 ;;		Nothing
  9653 ;; This function is called by:
  9654 ;;		_ana_read
  9655 ;;		_arm_UAlim_1A
  9656 ;;		_feu_tir
  9657 ;;		_feu_process
  9658 ;; This function uses a non-reentrant model
  9659 ;;
  9660                           
  9661                           	psect	text49
  9662  002BFA                     __ptext49:
  9663                           	opt stack 0
  9664  002BFA                     _delay_ms:
  9665                           	opt stack 25
  9666                           
  9667                           ;incstack = 0
  9668  002BFA  FFFF               	dw	65535
  9669                           
  9670                           ;time.c: 6: unsigned short temp = Cptms;
  9671  002BFC  C02D  F053         	movff	_Cptms,delay_ms@temp	;volatile
  9672  002C00  C02E  F054         	movff	_Cptms+1,delay_ms@temp+1	;volatile
  9673  002C04                     l5201:
  9674  002C04  C053  F051         	movff	delay_ms@temp,??_delay_ms
  9675  002C08  C054  F052         	movff	delay_ms@temp+1,??_delay_ms+1
  9676  002C0C  1E51               	comf	??_delay_ms,f,c
  9677  002C0E  1E52               	comf	??_delay_ms+1,f,c
  9678  002C10  4A51               	infsnz	??_delay_ms,f,c
  9679  002C12  2A52               	incf	??_delay_ms+1,f,c
  9680  002C14  502D               	movf	_Cptms,w,c	;volatile
  9681  002C16  2651               	addwf	??_delay_ms,f,c
  9682  002C18  502E               	movf	_Cptms+1,w,c	;volatile
  9683  002C1A  2252               	addwfc	??_delay_ms+1,f,c
  9684  002C1C  504F               	movf	delay_ms@TimeToWait,w,c
  9685  002C1E  5C51               	subwf	??_delay_ms,w,c
  9686  002C20  5050               	movf	delay_ms@TimeToWait+1,w,c
  9687  002C22  5852               	subwfb	??_delay_ms+1,w,c
  9688  002C24  B0D8               	btfsc	status,0,c
  9689  002C26  0012               	return	
  9690  002C28  FFFF               	dw	65535	; assembler added errata NOP
  9691  002C2A  D7EC               	goto	l5201
  9692  002C2C  FFFF               	dw	65535	; errata NOP
  9693  002C2E                     __end_of_delay_ms:
  9694                           	opt stack 0
  9695                           tblptru	equ	0xFF8
  9696                           tblptrh	equ	0xFF7
  9697                           tblptrl	equ	0xFF6
  9698                           tablat	equ	0xFF5
  9699                           prodh	equ	0xFF4
  9700                           prodl	equ	0xFF3
  9701                           intcon	equ	0xFF2
  9702                           intcon2	equ	0xFF1
  9703                           postinc0	equ	0xFEE
  9704                           wreg	equ	0xFE8
  9705                           indf1	equ	0xFE7
  9706                           postdec1	equ	0xFE5
  9707                           fsr1h	equ	0xFE2
  9708                           fsr1l	equ	0xFE1
  9709                           indf2	equ	0xFDF
  9710                           postinc2	equ	0xFDE
  9711                           postdec2	equ	0xFDD
  9712                           fsr2h	equ	0xFDA
  9713                           fsr2l	equ	0xFD9
  9714                           status	equ	0xFD8
  9715                           
  9716 ;; *************** function ___lwtoft *****************
  9717 ;; Defined at:
  9718 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwtoft.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;  c               2   39[COMRAM] unsigned int 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;		None
  9723 ;; Return value:  Size  Location     Type
  9724 ;;                  3   39[COMRAM] float 
  9725 ;; Registers used:
  9726 ;;		wreg, status,2, status,0, cstack
  9727 ;; Tracked objects:
  9728 ;;		On entry : 0/0
  9729 ;;		On exit  : 0/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9732 ;;      Params:         3       0       0       0       0       0       0
  9733 ;;      Locals:         0       0       0       0       0       0       0
  9734 ;;      Temps:          0       2       0       0       0       0       0
  9735 ;;      Totals:         3       2       0       0       0       0       0
  9736 ;;Total ram usage:        5 bytes
  9737 ;; Hardware stack levels used:    1
  9738 ;; Hardware stack levels required when called:    3
  9739 ;; This function calls:
  9740 ;;		___ftpack
  9741 ;; This function is called by:
  9742 ;;		_check_UAlim
  9743 ;;		_check_UInfla
  9744 ;;		_arm_UAlim_1A
  9745 ;; This function uses a non-reentrant model
  9746 ;;
  9747                           
  9748                           	psect	text50
  9749  002B24                     __ptext50:
  9750                           	opt stack 0
  9751  002B24                     ___lwtoft:
  9752                           	opt stack 25
  9753                           
  9754                           ;incstack = 0
  9755  002B24  FFFF               	dw	65535
  9756  002B26  C057  F04F         	movff	___lwtoft@c,___ftpack@arg
  9757  002B2A  C058  F050         	movff	___lwtoft@c+1,___ftpack@arg+1
  9758  002B2E  6A51               	clrf	___ftpack@arg+2,c
  9759  002B30  0100               	movlb	0	; () banked
  9760  002B32  6FA8               	movwf	??___lwtoft& (0+255),b
  9761  002B34  0E8E               	movlw	142
  9762  002B36  6E52               	movwf	___ftpack@exp,c
  9763  002B38  0100               	movlb	0	; () banked
  9764  002B3A  51A8               	movf	??___lwtoft& (0+255),w,b
  9765  002B3C  0100               	movlb	0	; () banked
  9766  002B3E  6FA9               	movwf	(??___lwtoft+1)& (0+255),b
  9767  002B40  0E00               	movlw	0
  9768  002B42  6E53               	movwf	___ftpack@sign,c
  9769  002B44  0100               	movlb	0	; () banked
  9770  002B46  51A9               	movf	(??___lwtoft+1)& (0+255),w,b
  9771  002B48  EC46  F011         	call	___ftpack	;wreg free
  9772  002B4C  C04F  F057         	movff	?___ftpack,?___lwtoft
  9773  002B50  C050  F058         	movff	?___ftpack+1,?___lwtoft+1
  9774  002B54  C051  F059         	movff	?___ftpack+2,?___lwtoft+2
  9775  002B58  0012               	return	
  9776  002B5A  FFFF               	dw	65535	; errata NOP
  9777  002B5C                     __end_of___lwtoft:
  9778                           	opt stack 0
  9779                           tblptru	equ	0xFF8
  9780                           tblptrh	equ	0xFF7
  9781                           tblptrl	equ	0xFF6
  9782                           tablat	equ	0xFF5
  9783                           prodh	equ	0xFF4
  9784                           prodl	equ	0xFF3
  9785                           intcon	equ	0xFF2
  9786                           intcon2	equ	0xFF1
  9787                           postinc0	equ	0xFEE
  9788                           wreg	equ	0xFE8
  9789                           indf1	equ	0xFE7
  9790                           postdec1	equ	0xFE5
  9791                           fsr1h	equ	0xFE2
  9792                           fsr1l	equ	0xFE1
  9793                           indf2	equ	0xFDF
  9794                           postinc2	equ	0xFDE
  9795                           postdec2	equ	0xFDD
  9796                           fsr2h	equ	0xFDA
  9797                           fsr2l	equ	0xFD9
  9798                           status	equ	0xFD8
  9799                           
  9800 ;; *************** function ___fttol *****************
  9801 ;; Defined at:
  9802 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\fttol.c"
  9803 ;; Parameters:    Size  Location     Type
  9804 ;;  f1              3   31[COMRAM] float 
  9805 ;; Auto vars:     Size  Location     Type
  9806 ;;  lval            4    1[BANK0 ] unsigned long 
  9807 ;;  exp1            1    5[BANK0 ] unsigned char 
  9808 ;;  sign1           1    0[BANK0 ] unsigned char 
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  4   31[COMRAM] long 
  9811 ;; Registers used:
  9812 ;;		wreg, status,2, status,0
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9818 ;;      Params:         4       0       0       0       0       0       0
  9819 ;;      Locals:         0       6       0       0       0       0       0
  9820 ;;      Temps:          5       0       0       0       0       0       0
  9821 ;;      Totals:         9       6       0       0       0       0       0
  9822 ;;Total ram usage:       15 bytes
  9823 ;; Hardware stack levels used:    1
  9824 ;; Hardware stack levels required when called:    2
  9825 ;; This function calls:
  9826 ;;		Nothing
  9827 ;; This function is called by:
  9828 ;;		_check_UAlim
  9829 ;;		_check_UInfla
  9830 ;;		_arm_UAlim_1A
  9831 ;; This function uses a non-reentrant model
  9832 ;;
  9833                           
  9834                           	psect	text51
  9835  0018AA                     __ptext51:
  9836                           	opt stack 0
  9837  0018AA                     ___fttol:
  9838                           	opt stack 26
  9839                           
  9840                           ;incstack = 0
  9841  0018AA  FFFF               	dw	65535
  9842  0018AC  C051  F053         	movff	___fttol@f1+2,??___fttol
  9843  0018B0  6A54               	clrf	(??___fttol+1)& (0+255),c
  9844  0018B2  6A55               	clrf	(??___fttol+2)& (0+255),c
  9845  0018B4  3450               	rlcf	___fttol@f1+1,w,c
  9846  0018B6  3653               	rlcf	??___fttol& (0+255),f,c
  9847  0018B8  E301               	bnc	u4811
  9848  0018BA  8054               	bsf	(??___fttol+1)& (0+255),0,c
  9849  0018BC                     u4811:
  9850  0018BC  5053               	movf	??___fttol,w,c
  9851  0018BE  0100               	movlb	0	; () banked
  9852  0018C0  0100               	movlb	0	; () banked
  9853  0018C2  6FAD               	movwf	___fttol@exp1& (0+255),b
  9854  0018C4  0100               	movlb	0	; () banked
  9855  0018C6  67AD               	tstfsz	___fttol@exp1& (0+255),b
  9856  0018C8  D001               	goto	l5515
  9857  0018CA  D04E               	goto	u4860
  9858  0018CC                     l5515:
  9859                           
  9860                           ; BSR set to: 0
  9861  0018CC  0E17               	movlw	23
  9862  0018CE  6E53               	movwf	??___fttol& (0+255),c
  9863  0018D0  C04F  F054         	movff	___fttol@f1,??___fttol+1
  9864  0018D4  C050  F055         	movff	___fttol@f1+1,??___fttol+2
  9865  0018D8  C051  F056         	movff	___fttol@f1+2,??___fttol+3
  9866  0018DC  2853               	incf	??___fttol,w,c
  9867  0018DE  6E57               	movwf	(??___fttol+4)& (0+255),c
  9868  0018E0  D004               	goto	u4830
  9869  0018E2                     u4835:
  9870  0018E2  90D8               	bcf	status,0,c
  9871  0018E4  3256               	rrcf	??___fttol+3,f,c
  9872  0018E6  3255               	rrcf	??___fttol+2,f,c
  9873  0018E8  3254               	rrcf	??___fttol+1,f,c
  9874  0018EA                     u4830:
  9875  0018EA  2E57               	decfsz	(??___fttol+4)& (0+255),f,c
  9876  0018EC  D7FA               	goto	u4835
  9877  0018EE  5054               	movf	??___fttol+1,w,c
  9878  0018F0  0100               	movlb	0	; () banked
  9879  0018F2  0100               	movlb	0	; () banked
  9880  0018F4  6FA8               	movwf	___fttol@sign1& (0+255),b
  9881                           
  9882                           ; BSR set to: 0
  9883  0018F6  8E50               	bsf	___fttol@f1+1,7,c
  9884                           
  9885                           ; BSR set to: 0
  9886  0018F8  0EFF               	movlw	255
  9887  0018FA  164F               	andwf	___fttol@f1,f,c
  9888  0018FC  0EFF               	movlw	255
  9889  0018FE  1650               	andwf	___fttol@f1+1,f,c
  9890  001900  0E00               	movlw	0
  9891  001902  1651               	andwf	___fttol@f1+2,f,c
  9892                           
  9893                           ; BSR set to: 0
  9894  001904  504F               	movf	___fttol@f1,w,c
  9895  001906  0100               	movlb	0	; () banked
  9896  001908  0100               	movlb	0	; () banked
  9897  00190A  6FA9               	movwf	___fttol@lval& (0+255),b
  9898  00190C  5050               	movf	___fttol@f1+1,w,c
  9899  00190E  0100               	movlb	0	; () banked
  9900  001910  6FAA               	movwf	(___fttol@lval+1)& (0+255),b
  9901  001912  5051               	movf	___fttol@f1+2,w,c
  9902  001914  0100               	movlb	0	; () banked
  9903  001916  6FAB               	movwf	(___fttol@lval+2)& (0+255),b
  9904  001918  0100               	movlb	0	; () banked
  9905  00191A  6BAC               	clrf	(___fttol@lval+3)& (0+255),b
  9906                           
  9907                           ; BSR set to: 0
  9908  00191C  0E8E               	movlw	142
  9909  00191E  0100               	movlb	0	; () banked
  9910  001920  0100               	movlb	0	; () banked
  9911  001922  5FAD               	subwf	___fttol@exp1& (0+255),f,b
  9912                           
  9913                           ; BSR set to: 0
  9914  001924  0100               	movlb	0	; () banked
  9915  001926  0100               	movlb	0	; () banked
  9916  001928  AFAD               	btfss	___fttol@exp1& (0+255),7,b
  9917  00192A  D019               	goto	l5537
  9918                           
  9919                           ; BSR set to: 0
  9920  00192C  0100               	movlb	0	; () banked
  9921  00192E  0100               	movlb	0	; () banked
  9922  001930  51AD               	movf	___fttol@exp1& (0+255),w,b
  9923  001932  0A80               	xorlw	128
  9924  001934  6E53               	movwf	??___fttol& (0+255),c
  9925  001936  0EF1               	movlw	241
  9926  001938  0A80               	xorlw	128
  9927  00193A  5C53               	subwf	??___fttol,w,c
  9928  00193C  A0D8               	btfss	status,0,c
  9929  00193E  D014               	goto	u4860
  9930  001940                     l5533:
  9931                           
  9932                           ; BSR set to: 0
  9933  001940  0100               	movlb	0	; () banked
  9934  001942  90D8               	bcf	status,0,c
  9935  001944  0100               	movlb	0	; () banked
  9936  001946  33AC               	rrcf	(___fttol@lval+3)& (0+255),f,b
  9937  001948  0100               	movlb	0	; () banked
  9938  00194A  33AB               	rrcf	(___fttol@lval+2)& (0+255),f,b
  9939  00194C  0100               	movlb	0	; () banked
  9940  00194E  33AA               	rrcf	(___fttol@lval+1)& (0+255),f,b
  9941  001950  0100               	movlb	0	; () banked
  9942  001952  33A9               	rrcf	___fttol@lval& (0+255),f,b
  9943                           
  9944                           ; BSR set to: 0
  9945  001954  0100               	movlb	0	; () banked
  9946  001956  0100               	movlb	0	; () banked
  9947  001958  3FAD               	incfsz	___fttol@exp1& (0+255),f,b
  9948  00195A  D7F2               	goto	l5533
  9949  00195C  D01F               	goto	l5547
  9950  00195E                     l5537:
  9951                           
  9952                           ; BSR set to: 0
  9953  00195E  0E17               	movlw	23
  9954  001960  0100               	movlb	0	; () banked
  9955  001962  0100               	movlb	0	; () banked
  9956  001964  65AD               	cpfsgt	___fttol@exp1& (0+255),b
  9957  001966  D016               	goto	l5545
  9958  001968                     u4860:
  9959                           
  9960                           ; BSR set to: 0
  9961  001968  0E00               	movlw	0
  9962  00196A  6E4F               	movwf	?___fttol,c
  9963  00196C  0E00               	movlw	0
  9964  00196E  6E50               	movwf	?___fttol+1,c
  9965  001970  0E00               	movlw	0
  9966  001972  6E51               	movwf	?___fttol+2,c
  9967  001974  0E00               	movlw	0
  9968  001976  6E52               	movwf	?___fttol+3,c
  9969  001978  D02E               	goto	l1507
  9970  00197A                     l5543:
  9971                           
  9972                           ; BSR set to: 0
  9973  00197A  0100               	movlb	0	; () banked
  9974  00197C  90D8               	bcf	status,0,c
  9975  00197E  0100               	movlb	0	; () banked
  9976  001980  37A9               	rlcf	___fttol@lval& (0+255),f,b
  9977  001982  0100               	movlb	0	; () banked
  9978  001984  37AA               	rlcf	(___fttol@lval+1)& (0+255),f,b
  9979  001986  0100               	movlb	0	; () banked
  9980  001988  37AB               	rlcf	(___fttol@lval+2)& (0+255),f,b
  9981  00198A  0100               	movlb	0	; () banked
  9982  00198C  37AC               	rlcf	(___fttol@lval+3)& (0+255),f,b
  9983  00198E  0100               	movlb	0	; () banked
  9984  001990  0100               	movlb	0	; () banked
  9985  001992  07AD               	decf	___fttol@exp1& (0+255),f,b
  9986  001994                     l5545:
  9987                           
  9988                           ; BSR set to: 0
  9989  001994  0100               	movlb	0	; () banked
  9990  001996  0100               	movlb	0	; () banked
  9991  001998  67AD               	tstfsz	___fttol@exp1& (0+255),b
  9992  00199A  D7EF               	goto	l5543
  9993  00199C                     l5547:
  9994                           
  9995                           ; BSR set to: 0
  9996  00199C  0100               	movlb	0	; () banked
  9997  00199E  0100               	movlb	0	; () banked
  9998  0019A0  51A8               	movf	___fttol@sign1& (0+255),w,b
  9999  0019A2  B4D8               	btfsc	status,2,c
 10000  0019A4  D010               	goto	l5551
 10001                           
 10002                           ; BSR set to: 0
 10003  0019A6  0100               	movlb	0	; () banked
 10004  0019A8  0100               	movlb	0	; () banked
 10005  0019AA  1FAC               	comf	(___fttol@lval+3)& (0+255),f,b
 10006  0019AC  0100               	movlb	0	; () banked
 10007  0019AE  1FAB               	comf	(___fttol@lval+2)& (0+255),f,b
 10008  0019B0  0100               	movlb	0	; () banked
 10009  0019B2  1FAA               	comf	(___fttol@lval+1)& (0+255),f,b
 10010  0019B4  0100               	movlb	0	; () banked
 10011  0019B6  6DA9               	negf	___fttol@lval& (0+255),b
 10012  0019B8  0E00               	movlw	0
 10013  0019BA  0100               	movlb	0	; () banked
 10014  0019BC  23AA               	addwfc	(___fttol@lval+1)& (0+255),f,b
 10015  0019BE  0100               	movlb	0	; () banked
 10016  0019C0  23AB               	addwfc	(___fttol@lval+2)& (0+255),f,b
 10017  0019C2  0100               	movlb	0	; () banked
 10018  0019C4  23AC               	addwfc	(___fttol@lval+3)& (0+255),f,b
 10019  0019C6                     l5551:
 10020                           
 10021                           ; BSR set to: 0
 10022  0019C6  C0A9  F04F         	movff	___fttol@lval,?___fttol
 10023  0019CA  C0AA  F050         	movff	___fttol@lval+1,?___fttol+1
 10024  0019CE  C0AB  F051         	movff	___fttol@lval+2,?___fttol+2
 10025  0019D2  C0AC  F052         	movff	___fttol@lval+3,?___fttol+3
 10026  0019D6                     l1507:
 10027                           
 10028                           ; BSR set to: 0
 10029  0019D6  0012               	return	
 10030  0019D8  FFFF               	dw	65535	; errata NOP
 10031  0019DA                     __end_of___fttol:
 10032                           	opt stack 0
 10033                           tblptru	equ	0xFF8
 10034                           tblptrh	equ	0xFF7
 10035                           tblptrl	equ	0xFF6
 10036                           tablat	equ	0xFF5
 10037                           prodh	equ	0xFF4
 10038                           prodl	equ	0xFF3
 10039                           intcon	equ	0xFF2
 10040                           intcon2	equ	0xFF1
 10041                           postinc0	equ	0xFEE
 10042                           wreg	equ	0xFE8
 10043                           indf1	equ	0xFE7
 10044                           postdec1	equ	0xFE5
 10045                           fsr1h	equ	0xFE2
 10046                           fsr1l	equ	0xFE1
 10047                           indf2	equ	0xFDF
 10048                           postinc2	equ	0xFDE
 10049                           postdec2	equ	0xFDD
 10050                           fsr2h	equ	0xFDA
 10051                           fsr2l	equ	0xFD9
 10052                           status	equ	0xFD8
 10053                           
 10054 ;; *************** function ___ftmul *****************
 10055 ;; Defined at:
 10056 ;;		line 51 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\ftmul.c"
 10057 ;; Parameters:    Size  Location     Type
 10058 ;;  f1              3    2[BANK0 ] float 
 10059 ;;  f2              3    5[BANK0 ] float 
 10060 ;; Auto vars:     Size  Location     Type
 10061 ;;  f3_as_produc    3   12[BANK0 ] unsigned um
 10062 ;;  sign            1   16[BANK0 ] unsigned char 
 10063 ;;  cntr            1   15[BANK0 ] unsigned char 
 10064 ;;  exp             1   11[BANK0 ] unsigned char 
 10065 ;; Return value:  Size  Location     Type
 10066 ;;                  3    2[BANK0 ] float 
 10067 ;; Registers used:
 10068 ;;		wreg, status,2, status,0, cstack
 10069 ;; Tracked objects:
 10070 ;;		On entry : 0/0
 10071 ;;		On exit  : 0/0
 10072 ;;		Unchanged: 0/0
 10073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10074 ;;      Params:         0       6       0       0       0       0       0
 10075 ;;      Locals:         0       6       0       0       0       0       0
 10076 ;;      Temps:          0       3       0       0       0       0       0
 10077 ;;      Totals:         0      15       0       0       0       0       0
 10078 ;;Total ram usage:       15 bytes
 10079 ;; Hardware stack levels used:    1
 10080 ;; Hardware stack levels required when called:    3
 10081 ;; This function calls:
 10082 ;;		___ftpack
 10083 ;; This function is called by:
 10084 ;;		_check_UAlim
 10085 ;;		_check_UInfla
 10086 ;;		_arm_UAlim_1A
 10087 ;; This function uses a non-reentrant model
 10088 ;;
 10089                           
 10090                           	psect	text52
 10091  001266                     __ptext52:
 10092                           	opt stack 0
 10093  001266                     ___ftmul:
 10094                           	opt stack 25
 10095                           
 10096                           ; BSR set to: 0
 10097                           ;incstack = 0
 10098  001266  FFFF               	dw	65535
 10099  001268  0100               	movlb	0	; () banked
 10100  00126A  C0AC  F0B0         	movff	___ftmul@f1+2,??___ftmul
 10101  00126E  0100               	movlb	0	; () banked
 10102  001270  6BB1               	clrf	(??___ftmul+1)& (0+255),b
 10103  001272  6BB2               	clrf	(??___ftmul+2)& (0+255),b
 10104  001274  0100               	movlb	0	; () banked
 10105  001276  0100               	movlb	0	; () banked
 10106  001278  35AB               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 10107  00127A  0100               	movlb	0	; () banked
 10108  00127C  37B0               	rlcf	??___ftmul& (0+255),f,b
 10109  00127E  E301               	bnc	u4751
 10110  001280  81B1               	bsf	(??___ftmul+1)& (0+255),0,b
 10111  001282                     u4751:
 10112  001282  0100               	movlb	0	; () banked
 10113  001284  51B0               	movf	??___ftmul& (0+255),w,b
 10114  001286  0100               	movlb	0	; () banked
 10115  001288  0100               	movlb	0	; () banked
 10116  00128A  6FB3               	movwf	___ftmul@exp& (0+255),b
 10117  00128C  0100               	movlb	0	; () banked
 10118  00128E  67B3               	tstfsz	___ftmul@exp& (0+255),b
 10119  001290  D001               	goto	l5467
 10120  001292  D015               	goto	u4780
 10121  001294                     l5467:
 10122                           
 10123                           ; BSR set to: 0
 10124  001294  0100               	movlb	0	; () banked
 10125  001296  C0AF  F0B0         	movff	___ftmul@f2+2,??___ftmul
 10126  00129A  0100               	movlb	0	; () banked
 10127  00129C  6BB1               	clrf	(??___ftmul+1)& (0+255),b
 10128  00129E  6BB2               	clrf	(??___ftmul+2)& (0+255),b
 10129  0012A0  0100               	movlb	0	; () banked
 10130  0012A2  0100               	movlb	0	; () banked
 10131  0012A4  35AE               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 10132  0012A6  0100               	movlb	0	; () banked
 10133  0012A8  37B0               	rlcf	??___ftmul& (0+255),f,b
 10134  0012AA  E301               	bnc	u4771
 10135  0012AC  81B1               	bsf	(??___ftmul+1)& (0+255),0,b
 10136  0012AE                     u4771:
 10137  0012AE  0100               	movlb	0	; () banked
 10138  0012B0  51B0               	movf	??___ftmul& (0+255),w,b
 10139  0012B2  0100               	movlb	0	; () banked
 10140  0012B4  0100               	movlb	0	; () banked
 10141  0012B6  6FB8               	movwf	___ftmul@sign& (0+255),b
 10142  0012B8  0100               	movlb	0	; () banked
 10143  0012BA  67B8               	tstfsz	___ftmul@sign& (0+255),b
 10144  0012BC  D00D               	goto	l5473
 10145  0012BE                     u4780:
 10146                           
 10147                           ; BSR set to: 0
 10148  0012BE  0E00               	movlw	0
 10149  0012C0  0100               	movlb	0	; () banked
 10150  0012C2  0100               	movlb	0	; () banked
 10151  0012C4  6FAA               	movwf	?___ftmul& (0+255),b
 10152  0012C6  0E00               	movlw	0
 10153  0012C8  0100               	movlb	0	; () banked
 10154  0012CA  0100               	movlb	0	; () banked
 10155  0012CC  6FAB               	movwf	(?___ftmul+1)& (0+255),b
 10156  0012CE  0E00               	movlw	0
 10157  0012D0  0100               	movlb	0	; () banked
 10158  0012D2  0100               	movlb	0	; () banked
 10159  0012D4  6FAC               	movwf	(?___ftmul+2)& (0+255),b
 10160  0012D6  D0A7               	goto	l1487
 10161  0012D8                     l5473:
 10162                           
 10163                           ; BSR set to: 0
 10164  0012D8  0100               	movlb	0	; () banked
 10165  0012DA  0100               	movlb	0	; () banked
 10166  0012DC  51B8               	movf	___ftmul@sign& (0+255),w,b
 10167  0012DE  0F7B               	addlw	123
 10168  0012E0  0100               	movlb	0	; () banked
 10169  0012E2  0100               	movlb	0	; () banked
 10170  0012E4  27B3               	addwf	___ftmul@exp& (0+255),f,b
 10171                           
 10172                           ; BSR set to: 0
 10173  0012E6  C0AC  F0B8         	movff	___ftmul@f1+2,___ftmul@sign
 10174  0012EA  0100               	movlb	0	; () banked
 10175  0012EC  0100               	movlb	0	; () banked
 10176  0012EE  51AF               	movf	(___ftmul@f2+2)& (0+255),w,b
 10177  0012F0  0100               	movlb	0	; () banked
 10178  0012F2  0100               	movlb	0	; () banked
 10179  0012F4  1BB8               	xorwf	___ftmul@sign& (0+255),f,b
 10180  0012F6  0E80               	movlw	128
 10181  0012F8  0100               	movlb	0	; () banked
 10182  0012FA  0100               	movlb	0	; () banked
 10183  0012FC  17B8               	andwf	___ftmul@sign& (0+255),f,b
 10184                           
 10185                           ; BSR set to: 0
 10186  0012FE  0100               	movlb	0	; () banked
 10187  001300  0100               	movlb	0	; () banked
 10188  001302  8FAB               	bsf	(___ftmul@f1+1)& (0+255),7,b
 10189                           
 10190                           ; BSR set to: 0
 10191  001304  0100               	movlb	0	; () banked
 10192  001306  0100               	movlb	0	; () banked
 10193  001308  8FAE               	bsf	(___ftmul@f2+1)& (0+255),7,b
 10194                           
 10195                           ; BSR set to: 0
 10196  00130A  0EFF               	movlw	255
 10197  00130C  0100               	movlb	0	; () banked
 10198  00130E  0100               	movlb	0	; () banked
 10199  001310  17AD               	andwf	___ftmul@f2& (0+255),f,b
 10200  001312  0EFF               	movlw	255
 10201  001314  0100               	movlb	0	; () banked
 10202  001316  0100               	movlb	0	; () banked
 10203  001318  17AE               	andwf	(___ftmul@f2+1)& (0+255),f,b
 10204  00131A  0E00               	movlw	0
 10205  00131C  0100               	movlb	0	; () banked
 10206  00131E  0100               	movlb	0	; () banked
 10207  001320  17AF               	andwf	(___ftmul@f2+2)& (0+255),f,b
 10208                           
 10209                           ; BSR set to: 0
 10210  001322  0E00               	movlw	0
 10211  001324  0100               	movlb	0	; () banked
 10212  001326  0100               	movlb	0	; () banked
 10213  001328  6FB4               	movwf	___ftmul@f3_as_product& (0+255),b
 10214  00132A  0E00               	movlw	0
 10215  00132C  0100               	movlb	0	; () banked
 10216  00132E  0100               	movlb	0	; () banked
 10217  001330  6FB5               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 10218  001332  0E00               	movlw	0
 10219  001334  0100               	movlb	0	; () banked
 10220  001336  0100               	movlb	0	; () banked
 10221  001338  6FB6               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 10222                           
 10223                           ; BSR set to: 0
 10224  00133A  0100               	movlb	0	; () banked
 10225  00133C  6FB0               	movwf	??___ftmul& (0+255),b
 10226  00133E  0E07               	movlw	7
 10227  001340  0100               	movlb	0	; () banked
 10228  001342  0100               	movlb	0	; () banked
 10229  001344  6FB7               	movwf	___ftmul@cntr& (0+255),b
 10230  001346  0100               	movlb	0	; () banked
 10231  001348  51B0               	movf	??___ftmul& (0+255),w,b
 10232  00134A                     l5487:
 10233                           
 10234                           ; BSR set to: 0
 10235  00134A  0100               	movlb	0	; () banked
 10236  00134C  0100               	movlb	0	; () banked
 10237  00134E  A1AA               	btfss	___ftmul@f1& (0+255),0,b
 10238  001350  D012               	goto	l5491
 10239                           
 10240                           ; BSR set to: 0
 10241  001352  0100               	movlb	0	; () banked
 10242  001354  0100               	movlb	0	; () banked
 10243  001356  51AD               	movf	___ftmul@f2& (0+255),w,b
 10244  001358  0100               	movlb	0	; () banked
 10245  00135A  0100               	movlb	0	; () banked
 10246  00135C  27B4               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10247  00135E  0100               	movlb	0	; () banked
 10248  001360  0100               	movlb	0	; () banked
 10249  001362  51AE               	movf	(___ftmul@f2+1)& (0+255),w,b
 10250  001364  0100               	movlb	0	; () banked
 10251  001366  0100               	movlb	0	; () banked
 10252  001368  23B5               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10253  00136A  0100               	movlb	0	; () banked
 10254  00136C  0100               	movlb	0	; () banked
 10255  00136E  51AF               	movf	(___ftmul@f2+2)& (0+255),w,b
 10256  001370  0100               	movlb	0	; () banked
 10257  001372  0100               	movlb	0	; () banked
 10258  001374  23B6               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10259  001376                     l5491:
 10260                           
 10261                           ; BSR set to: 0
 10262  001376  0100               	movlb	0	; () banked
 10263  001378  90D8               	bcf	status,0,c
 10264  00137A  0100               	movlb	0	; () banked
 10265  00137C  33AC               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10266  00137E  0100               	movlb	0	; () banked
 10267  001380  33AB               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10268  001382  0100               	movlb	0	; () banked
 10269  001384  33AA               	rrcf	___ftmul@f1& (0+255),f,b
 10270  001386  0100               	movlb	0	; () banked
 10271  001388  90D8               	bcf	status,0,c
 10272  00138A  0100               	movlb	0	; () banked
 10273  00138C  37AD               	rlcf	___ftmul@f2& (0+255),f,b
 10274  00138E  0100               	movlb	0	; () banked
 10275  001390  37AE               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 10276  001392  0100               	movlb	0	; () banked
 10277  001394  37AF               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 10278                           
 10279                           ; BSR set to: 0
 10280  001396  0100               	movlb	0	; () banked
 10281  001398  0100               	movlb	0	; () banked
 10282  00139A  2FB7               	decfsz	___ftmul@cntr& (0+255),f,b
 10283  00139C  D7D6               	goto	l5487
 10284                           
 10285                           ; BSR set to: 0
 10286                           
 10287                           ; BSR set to: 0
 10288  00139E  0100               	movlb	0	; () banked
 10289  0013A0  6FB0               	movwf	??___ftmul& (0+255),b
 10290  0013A2  0E09               	movlw	9
 10291  0013A4  0100               	movlb	0	; () banked
 10292  0013A6  0100               	movlb	0	; () banked
 10293  0013A8  6FB7               	movwf	___ftmul@cntr& (0+255),b
 10294  0013AA  0100               	movlb	0	; () banked
 10295  0013AC  51B0               	movf	??___ftmul& (0+255),w,b
 10296  0013AE                     l5497:
 10297                           
 10298                           ; BSR set to: 0
 10299  0013AE  0100               	movlb	0	; () banked
 10300  0013B0  0100               	movlb	0	; () banked
 10301  0013B2  A1AA               	btfss	___ftmul@f1& (0+255),0,b
 10302  0013B4  D012               	goto	l5501
 10303                           
 10304                           ; BSR set to: 0
 10305  0013B6  0100               	movlb	0	; () banked
 10306  0013B8  0100               	movlb	0	; () banked
 10307  0013BA  51AD               	movf	___ftmul@f2& (0+255),w,b
 10308  0013BC  0100               	movlb	0	; () banked
 10309  0013BE  0100               	movlb	0	; () banked
 10310  0013C0  27B4               	addwf	___ftmul@f3_as_product& (0+255),f,b
 10311  0013C2  0100               	movlb	0	; () banked
 10312  0013C4  0100               	movlb	0	; () banked
 10313  0013C6  51AE               	movf	(___ftmul@f2+1)& (0+255),w,b
 10314  0013C8  0100               	movlb	0	; () banked
 10315  0013CA  0100               	movlb	0	; () banked
 10316  0013CC  23B5               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 10317  0013CE  0100               	movlb	0	; () banked
 10318  0013D0  0100               	movlb	0	; () banked
 10319  0013D2  51AF               	movf	(___ftmul@f2+2)& (0+255),w,b
 10320  0013D4  0100               	movlb	0	; () banked
 10321  0013D6  0100               	movlb	0	; () banked
 10322  0013D8  23B6               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 10323  0013DA                     l5501:
 10324                           
 10325                           ; BSR set to: 0
 10326  0013DA  0100               	movlb	0	; () banked
 10327  0013DC  90D8               	bcf	status,0,c
 10328  0013DE  0100               	movlb	0	; () banked
 10329  0013E0  33AC               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 10330  0013E2  0100               	movlb	0	; () banked
 10331  0013E4  33AB               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 10332  0013E6  0100               	movlb	0	; () banked
 10333  0013E8  33AA               	rrcf	___ftmul@f1& (0+255),f,b
 10334  0013EA  0100               	movlb	0	; () banked
 10335  0013EC  90D8               	bcf	status,0,c
 10336  0013EE  0100               	movlb	0	; () banked
 10337  0013F0  33B6               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 10338  0013F2  0100               	movlb	0	; () banked
 10339  0013F4  33B5               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 10340  0013F6  0100               	movlb	0	; () banked
 10341  0013F8  33B4               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 10342                           
 10343                           ; BSR set to: 0
 10344  0013FA  0100               	movlb	0	; () banked
 10345  0013FC  0100               	movlb	0	; () banked
 10346  0013FE  2FB7               	decfsz	___ftmul@cntr& (0+255),f,b
 10347  001400  D7D6               	goto	l5497
 10348                           
 10349                           ; BSR set to: 0
 10350                           
 10351                           ; BSR set to: 0
 10352  001402  C0B4  F04F         	movff	___ftmul@f3_as_product,___ftpack@arg
 10353  001406  C0B5  F050         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 10354  00140A  C0B6  F051         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 10355  00140E  C0B3  F052         	movff	___ftmul@exp,___ftpack@exp
 10356  001412  C0B8  F053         	movff	___ftmul@sign,___ftpack@sign
 10357  001416  EC46  F011         	call	___ftpack	;wreg free
 10358  00141A  C04F  F0AA         	movff	?___ftpack,?___ftmul
 10359  00141E  C050  F0AB         	movff	?___ftpack+1,?___ftmul+1
 10360  001422  C051  F0AC         	movff	?___ftpack+2,?___ftmul+2
 10361  001426                     l1487:
 10362  001426  0012               	return	
 10363  001428  FFFF               	dw	65535	; errata NOP
 10364  00142A                     __end_of___ftmul:
 10365                           	opt stack 0
 10366                           tblptru	equ	0xFF8
 10367                           tblptrh	equ	0xFF7
 10368                           tblptrl	equ	0xFF6
 10369                           tablat	equ	0xFF5
 10370                           prodh	equ	0xFF4
 10371                           prodl	equ	0xFF3
 10372                           intcon	equ	0xFF2
 10373                           intcon2	equ	0xFF1
 10374                           postinc0	equ	0xFEE
 10375                           wreg	equ	0xFE8
 10376                           indf1	equ	0xFE7
 10377                           postdec1	equ	0xFE5
 10378                           fsr1h	equ	0xFE2
 10379                           fsr1l	equ	0xFE1
 10380                           indf2	equ	0xFDF
 10381                           postinc2	equ	0xFDE
 10382                           postdec2	equ	0xFDD
 10383                           fsr2h	equ	0xFDA
 10384                           fsr2l	equ	0xFD9
 10385                           status	equ	0xFD8
 10386                           
 10387 ;; *************** function ___ftpack *****************
 10388 ;; Defined at:
 10389 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\float.c"
 10390 ;; Parameters:    Size  Location     Type
 10391 ;;  arg             3   31[COMRAM] unsigned um
 10392 ;;  exp             1   34[COMRAM] unsigned char 
 10393 ;;  sign            1   35[COMRAM] unsigned char 
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;		None
 10396 ;; Return value:  Size  Location     Type
 10397 ;;                  3   31[COMRAM] float 
 10398 ;; Registers used:
 10399 ;;		wreg, status,2, status,0
 10400 ;; Tracked objects:
 10401 ;;		On entry : 0/0
 10402 ;;		On exit  : 0/0
 10403 ;;		Unchanged: 0/0
 10404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10405 ;;      Params:         5       0       0       0       0       0       0
 10406 ;;      Locals:         0       0       0       0       0       0       0
 10407 ;;      Temps:          3       0       0       0       0       0       0
 10408 ;;      Totals:         8       0       0       0       0       0       0
 10409 ;;Total ram usage:        8 bytes
 10410 ;; Hardware stack levels used:    1
 10411 ;; Hardware stack levels required when called:    2
 10412 ;; This function calls:
 10413 ;;		Nothing
 10414 ;; This function is called by:
 10415 ;;		___ftmul
 10416 ;;		___lwtoft
 10417 ;; This function uses a non-reentrant model
 10418 ;;
 10419                           
 10420                           	psect	text53
 10421  00228C                     __ptext53:
 10422                           	opt stack 0
 10423  00228C                     ___ftpack:
 10424                           	opt stack 25
 10425                           
 10426                           ;incstack = 0
 10427  00228C  FFFF               	dw	65535
 10428  00228E  5052               	movf	___ftpack@exp,w,c
 10429  002290  B4D8               	btfsc	status,2,c
 10430  002292  D005               	goto	l5207
 10431  002294  504F               	movf	___ftpack@arg,w,c
 10432  002296  1050               	iorwf	___ftpack@arg+1,w,c
 10433  002298  1051               	iorwf	___ftpack@arg+2,w,c
 10434  00229A  A4D8               	btfss	status,2,c
 10435  00229C  D00C               	goto	l5213
 10436  00229E                     l5207:
 10437  00229E  0E00               	movlw	0
 10438  0022A0  6E4F               	movwf	?___ftpack,c
 10439  0022A2  0E00               	movlw	0
 10440  0022A4  6E50               	movwf	?___ftpack+1,c
 10441  0022A6  0E00               	movlw	0
 10442  0022A8  6E51               	movwf	?___ftpack+2,c
 10443  0022AA  D044               	goto	l1403
 10444  0022AC                     l5211:
 10445  0022AC  2A52               	incf	___ftpack@exp,f,c
 10446  0022AE  90D8               	bcf	status,0,c
 10447  0022B0  3251               	rrcf	___ftpack@arg+2,f,c
 10448  0022B2  3250               	rrcf	___ftpack@arg+1,f,c
 10449  0022B4  324F               	rrcf	___ftpack@arg,f,c
 10450  0022B6                     l5213:
 10451  0022B6  0E00               	movlw	0
 10452  0022B8  144F               	andwf	___ftpack@arg,w,c
 10453  0022BA  6E54               	movwf	??___ftpack& (0+255),c
 10454  0022BC  0E00               	movlw	0
 10455  0022BE  1450               	andwf	___ftpack@arg+1,w,c
 10456  0022C0  6E55               	movwf	(??___ftpack+1)& (0+255),c
 10457  0022C2  0EFE               	movlw	254
 10458  0022C4  1451               	andwf	___ftpack@arg+2,w,c
 10459  0022C6  6E56               	movwf	(??___ftpack+2)& (0+255),c
 10460  0022C8  5054               	movf	??___ftpack,w,c
 10461  0022CA  1055               	iorwf	??___ftpack+1,w,c
 10462  0022CC  1056               	iorwf	??___ftpack+2,w,c
 10463  0022CE  B4D8               	btfsc	status,2,c
 10464  0022D0  D00C               	goto	l5219
 10465  0022D2  D7EC               	goto	l5211
 10466  0022D4                     l5215:
 10467  0022D4  2A52               	incf	___ftpack@exp,f,c
 10468  0022D6  0E01               	movlw	1
 10469  0022D8  264F               	addwf	___ftpack@arg,f,c
 10470  0022DA  0E00               	movlw	0
 10471  0022DC  2250               	addwfc	___ftpack@arg+1,f,c
 10472  0022DE  0E00               	movlw	0
 10473  0022E0  2251               	addwfc	___ftpack@arg+2,f,c
 10474  0022E2  90D8               	bcf	status,0,c
 10475  0022E4  3251               	rrcf	___ftpack@arg+2,f,c
 10476  0022E6  3250               	rrcf	___ftpack@arg+1,f,c
 10477  0022E8  324F               	rrcf	___ftpack@arg,f,c
 10478  0022EA                     l5219:
 10479  0022EA  0E00               	movlw	0
 10480  0022EC  144F               	andwf	___ftpack@arg,w,c
 10481  0022EE  6E54               	movwf	??___ftpack& (0+255),c
 10482  0022F0  0E00               	movlw	0
 10483  0022F2  1450               	andwf	___ftpack@arg+1,w,c
 10484  0022F4  6E55               	movwf	(??___ftpack+1)& (0+255),c
 10485  0022F6  0EFF               	movlw	255
 10486  0022F8  1451               	andwf	___ftpack@arg+2,w,c
 10487  0022FA  6E56               	movwf	(??___ftpack+2)& (0+255),c
 10488  0022FC  5054               	movf	??___ftpack,w,c
 10489  0022FE  1055               	iorwf	??___ftpack+1,w,c
 10490  002300  1056               	iorwf	??___ftpack+2,w,c
 10491  002302  B4D8               	btfsc	status,2,c
 10492  002304  D006               	goto	l5223
 10493  002306  D7E6               	goto	l5215
 10494  002308                     l5221:
 10495  002308  0652               	decf	___ftpack@exp,f,c
 10496  00230A  90D8               	bcf	status,0,c
 10497  00230C  364F               	rlcf	___ftpack@arg,f,c
 10498  00230E  3650               	rlcf	___ftpack@arg+1,f,c
 10499  002310  3651               	rlcf	___ftpack@arg+2,f,c
 10500  002312                     l5223:
 10501  002312  AE50               	btfss	___ftpack@arg+1,7,c
 10502  002314  D7F9               	goto	l5221
 10503  002316  A052               	btfss	___ftpack@exp,0,c
 10504  002318  9E50               	bcf	___ftpack@arg+1,7,c
 10505  00231A  90D8               	bcf	status,0,c
 10506  00231C  3252               	rrcf	___ftpack@exp,f,c
 10507  00231E  5052               	movf	___ftpack@exp,w,c
 10508  002320  1251               	iorwf	___ftpack@arg+2,f,c
 10509  002322  5053               	movf	___ftpack@sign,w,c
 10510  002324  A4D8               	btfss	status,2,c
 10511  002326  8E51               	bsf	___ftpack@arg+2,7,c
 10512  002328  C04F  F04F         	movff	___ftpack@arg,?___ftpack
 10513  00232C  C050  F050         	movff	___ftpack@arg+1,?___ftpack+1
 10514  002330  C051  F051         	movff	___ftpack@arg+2,?___ftpack+2
 10515  002334                     l1403:
 10516  002334  0012               	return	
 10517  002336  FFFF               	dw	65535	; errata NOP
 10518  002338                     __end_of___ftpack:
 10519                           	opt stack 0
 10520                           tblptru	equ	0xFF8
 10521                           tblptrh	equ	0xFF7
 10522                           tblptrl	equ	0xFF6
 10523                           tablat	equ	0xFF5
 10524                           prodh	equ	0xFF4
 10525                           prodl	equ	0xFF3
 10526                           intcon	equ	0xFF2
 10527                           intcon2	equ	0xFF1
 10528                           postinc0	equ	0xFEE
 10529                           wreg	equ	0xFE8
 10530                           indf1	equ	0xFE7
 10531                           postdec1	equ	0xFE5
 10532                           fsr1h	equ	0xFE2
 10533                           fsr1l	equ	0xFE1
 10534                           indf2	equ	0xFDF
 10535                           postinc2	equ	0xFDE
 10536                           postdec2	equ	0xFDD
 10537                           fsr2h	equ	0xFDA
 10538                           fsr2l	equ	0xFD9
 10539                           status	equ	0xFD8
 10540                           
 10541 ;; *************** function _Low_priority *****************
 10542 ;; Defined at:
 10543 ;;		line 51 in file "main.c"
 10544 ;; Parameters:    Size  Location     Type
 10545 ;;		None
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;		None
 10548 ;; Return value:  Size  Location     Type
 10549 ;;		None               void
 10550 ;; Registers used:
 10551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10552 ;; Tracked objects:
 10553 ;;		On entry : 0/0
 10554 ;;		On exit  : 0/0
 10555 ;;		Unchanged: 0/0
 10556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10557 ;;      Params:         0       0       0       0       0       0       0
 10558 ;;      Locals:         0       0       0       0       0       0       0
 10559 ;;      Temps:         17       0       0       0       0       0       0
 10560 ;;      Totals:        17       0       0       0       0       0       0
 10561 ;;Total ram usage:       17 bytes
 10562 ;; Hardware stack levels used:    1
 10563 ;; Hardware stack levels required when called:    1
 10564 ;; This function calls:
 10565 ;;		Nothing
 10566 ;; This function is called by:
 10567 ;;		Interrupt level 1
 10568 ;; This function uses a non-reentrant model
 10569 ;;
 10570                           
 10571                           	psect	intcodelo
 10572  000018                     __pintcodelo:
 10573                           	opt stack 0
 10574  000018                     _Low_priority:
 10575                           	opt stack 24
 10576                           
 10577                           ;incstack = 0
 10578  000018  FFFF               	dw	65535	; errata NOP
 10579  00001A  CFD8 F03E          	movff	status,??_Low_priority
 10580  00001E  CFE8 F03F          	movff	wreg,??_Low_priority+1
 10581  000022  CFE0 F040          	movff	bsr,??_Low_priority+2
 10582  000026  CFFA F041          	movff	pclath,??_Low_priority+3
 10583  00002A  CFFB F042          	movff	pclatu,??_Low_priority+4
 10584  00002E  CFE9 F043          	movff	fsr0l,??_Low_priority+5
 10585  000032  CFEA F044          	movff	fsr0h,??_Low_priority+6
 10586  000036  CFE1 F045          	movff	fsr1l,??_Low_priority+7
 10587  00003A  CFE2 F046          	movff	fsr1h,??_Low_priority+8
 10588  00003E  CFD9 F047          	movff	fsr2l,??_Low_priority+9
 10589  000042  CFDA F048          	movff	fsr2h,??_Low_priority+10
 10590  000046  CFF3 F049          	movff	prodl,??_Low_priority+11
 10591  00004A  CFF4 F04A          	movff	prodh,??_Low_priority+12
 10592  00004E  CFF6 F04B          	movff	tblptrl,??_Low_priority+13
 10593  000052  CFF7 F04C          	movff	tblptrh,??_Low_priority+14
 10594  000056  CFF8 F04D          	movff	tblptru,??_Low_priority+15
 10595  00005A  CFF5 F04E          	movff	tablat,??_Low_priority+16
 10596                           
 10597                           ;main.c: 53: if (RCIE && RCIF)
 10598  00005E  BA9D               	btfsc	3997,5,c	;volatile
 10599  000060  AA9E               	btfss	3998,5,c	;volatile
 10600  000062  D023               	goto	i1l82
 10601                           
 10602                           ;main.c: 54: {
 10603                           ;main.c: 55: Cf.Data[Cf.Index] = RCREG;
 10604  000064  0101               	movlb	1	; () banked
 10605  000066  0101               	movlb	1	; () banked
 10606  000068  5165               	movf	(_Cf+101)& (0+255),w,b	;volatile
 10607  00006A  0D01               	mullw	1
 10608  00006C  0101               	movlb	1	; () banked
 10609  00006E  0E00               	movlw	low _Cf	;volatile
 10610  000070  24F3               	addwf	prodl,w,c
 10611  000072  6ED9               	movwf	fsr2l,c
 10612  000074  0101               	movlb	1	; () banked
 10613  000076  0E01               	movlw	high _Cf	;volatile
 10614  000078  20F4               	addwfc	prodh,w,c
 10615  00007A  6EDA               	movwf	fsr2h,c
 10616  00007C  CFAE FFDF          	movff	4014,indf2	;volatile
 10617                           
 10618                           ;main.c: 56: TXREG = Cf.Data[Cf.Index];
 10619  000080  0101               	movlb	1	; () banked
 10620  000082  0101               	movlb	1	; () banked
 10621  000084  5165               	movf	(_Cf+101)& (0+255),w,b	;volatile
 10622  000086  0D01               	mullw	1
 10623  000088  0101               	movlb	1	; () banked
 10624  00008A  0E00               	movlw	low _Cf	;volatile
 10625  00008C  24F3               	addwf	prodl,w,c
 10626  00008E  6ED9               	movwf	fsr2l,c
 10627  000090  0101               	movlb	1	; () banked
 10628  000092  0E01               	movlw	high _Cf	;volatile
 10629  000094  20F4               	addwfc	prodh,w,c
 10630  000096  6EDA               	movwf	fsr2h,c
 10631  000098  50DF               	movf	indf2,w,c
 10632  00009A  6EAD               	movwf	4013,c	;volatile
 10633                           
 10634                           ; BSR set to: 1
 10635                           ;main.c: 58: Cf.Index ++;
 10636  00009C  0101               	movlb	1	; () banked
 10637  00009E  0101               	movlb	1	; () banked
 10638  0000A0  2B65               	incf	(_Cf+101)& (0+255),f,b	;volatile
 10639                           
 10640                           ; BSR set to: 1
 10641                           ;main.c: 60: Cf.Time1 = Cptms;
 10642  0000A2  C02D  F166         	movff	_Cptms,_Cf+102	;volatile
 10643  0000A6  C02E  F167         	movff	_Cptms+1,_Cf+103	;volatile
 10644  0000AA                     i1l82:
 10645  0000AA  C04E  FFF5         	movff	??_Low_priority+16,tablat
 10646  0000AE  C04D  FFF8         	movff	??_Low_priority+15,tblptru
 10647  0000B2  C04C  FFF7         	movff	??_Low_priority+14,tblptrh
 10648  0000B6  C04B  FFF6         	movff	??_Low_priority+13,tblptrl
 10649  0000BA  C04A  FFF4         	movff	??_Low_priority+12,prodh
 10650  0000BE  C049  FFF3         	movff	??_Low_priority+11,prodl
 10651  0000C2  C048  FFDA         	movff	??_Low_priority+10,fsr2h
 10652  0000C6  C047  FFD9         	movff	??_Low_priority+9,fsr2l
 10653  0000CA  C046  FFE2         	movff	??_Low_priority+8,fsr1h
 10654  0000CE  C045  FFE1         	movff	??_Low_priority+7,fsr1l
 10655  0000D2  C044  FFEA         	movff	??_Low_priority+6,fsr0h
 10656  0000D6  C043  FFE9         	movff	??_Low_priority+5,fsr0l
 10657  0000DA  C042  FFFB         	movff	??_Low_priority+4,pclatu
 10658  0000DE  C041  FFFA         	movff	??_Low_priority+3,pclath
 10659  0000E2  C040  FFE0         	movff	??_Low_priority+2,bsr
 10660  0000E6  C03F  FFE8         	movff	??_Low_priority+1,wreg
 10661  0000EA  C03E  FFD8         	movff	??_Low_priority,status
 10662  0000EE  0010               	retfie	
 10663  0000F0  FFFF               	dw	65535	; errata NOP
 10664  0000F2                     __end_of_Low_priority:
 10665                           	opt stack 0
 10666                           pclatu	equ	0xFFB
 10667                           pclath	equ	0xFFA
 10668                           tblptru	equ	0xFF8
 10669                           tblptrh	equ	0xFF7
 10670                           tblptrl	equ	0xFF6
 10671                           tablat	equ	0xFF5
 10672                           prodh	equ	0xFF4
 10673                           prodl	equ	0xFF3
 10674                           intcon	equ	0xFF2
 10675                           intcon2	equ	0xFF1
 10676                           postinc0	equ	0xFEE
 10677                           fsr0h	equ	0xFEA
 10678                           fsr0l	equ	0xFE9
 10679                           wreg	equ	0xFE8
 10680                           indf1	equ	0xFE7
 10681                           postdec1	equ	0xFE5
 10682                           fsr1h	equ	0xFE2
 10683                           fsr1l	equ	0xFE1
 10684                           bsr	equ	0xFE0
 10685                           indf2	equ	0xFDF
 10686                           postinc2	equ	0xFDE
 10687                           postdec2	equ	0xFDD
 10688                           fsr2h	equ	0xFDA
 10689                           fsr2l	equ	0xFD9
 10690                           status	equ	0xFD8
 10691                           
 10692 ;; *************** function _High_priority *****************
 10693 ;; Defined at:
 10694 ;;		line 66 in file "main.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;		None
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;		None
 10699 ;; Return value:  Size  Location     Type
 10700 ;;		None               void
 10701 ;; Registers used:
 10702 ;;		wreg, status,2, status,0
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10708 ;;      Params:         0       0       0       0       0       0       0
 10709 ;;      Locals:         0       0       0       0       0       0       0
 10710 ;;      Temps:         14       0       0       0       0       0       0
 10711 ;;      Totals:        14       0       0       0       0       0       0
 10712 ;;Total ram usage:       14 bytes
 10713 ;; Hardware stack levels used:    1
 10714 ;; This function calls:
 10715 ;;		Nothing
 10716 ;; This function is called by:
 10717 ;;		Interrupt level 2
 10718 ;; This function uses a non-reentrant model
 10719 ;;
 10720                           
 10721                           	psect	intcode
 10722  000008                     __pintcode:
 10723                           	opt stack 0
 10724  000008                     _High_priority:
 10725                           	opt stack 24
 10726                           
 10727                           ;incstack = 0
 10728  000008  FFFF               	dw	65535	; errata NOP
 10729  00000A  CFFA F030          	movff	pclath,??_High_priority
 10730  00000E  CFFB F031          	movff	pclatu,??_High_priority+1
 10731  000012  EFD9  F012         	goto	int_func
 10732                           pclatu	equ	0xFFB
 10733                           pclath	equ	0xFFA
 10734                           tblptru	equ	0xFF8
 10735                           tblptrh	equ	0xFF7
 10736                           tblptrl	equ	0xFF6
 10737                           tablat	equ	0xFF5
 10738                           prodh	equ	0xFF4
 10739                           prodl	equ	0xFF3
 10740                           intcon	equ	0xFF2
 10741                           intcon2	equ	0xFF1
 10742                           postinc0	equ	0xFEE
 10743                           fsr0h	equ	0xFEA
 10744                           fsr0l	equ	0xFE9
 10745                           wreg	equ	0xFE8
 10746                           indf1	equ	0xFE7
 10747                           postdec1	equ	0xFE5
 10748                           fsr1h	equ	0xFE2
 10749                           fsr1l	equ	0xFE1
 10750                           bsr	equ	0xFE0
 10751                           indf2	equ	0xFDF
 10752                           postinc2	equ	0xFDE
 10753                           postdec2	equ	0xFDD
 10754                           fsr2h	equ	0xFDA
 10755                           fsr2l	equ	0xFD9
 10756                           status	equ	0xFD8
 10757                           
 10758                           	psect	intcode_body
 10759  0025B2                     __pintcode_body:
 10760                           	opt stack 24
 10761  0025B2                     int_func:
 10762                           	opt stack 24
 10763  0025B2  FFFF               	dw	65535	; errata NOP
 10764  0025B4  CFE9 F032          	movff	fsr0l,??_High_priority+2
 10765  0025B8  CFEA F033          	movff	fsr0h,??_High_priority+3
 10766  0025BC  CFE1 F034          	movff	fsr1l,??_High_priority+4
 10767  0025C0  CFE2 F035          	movff	fsr1h,??_High_priority+5
 10768  0025C4  CFD9 F036          	movff	fsr2l,??_High_priority+6
 10769  0025C8  CFDA F037          	movff	fsr2h,??_High_priority+7
 10770  0025CC  CFF3 F038          	movff	prodl,??_High_priority+8
 10771  0025D0  CFF4 F039          	movff	prodh,??_High_priority+9
 10772  0025D4  CFF6 F03A          	movff	tblptrl,??_High_priority+10
 10773  0025D8  CFF7 F03B          	movff	tblptrh,??_High_priority+11
 10774  0025DC  CFF8 F03C          	movff	tblptru,??_High_priority+12
 10775  0025E0  CFF5 F03D          	movff	tablat,??_High_priority+13
 10776                           
 10777                           ;main.c: 68: if (TMR0IE && TMR0IF)
 10778  0025E4  BAF2               	btfsc	intcon,5,c	;volatile
 10779  0025E6  A4F2               	btfss	intcon,2,c	;volatile
 10780  0025E8  D00D               	goto	i2l87
 10781                           
 10782                           ;main.c: 69: {
 10783                           ;main.c: 70: TMR0IF = 0;
 10784  0025EA  94F2               	bcf	intcon,2,c	;volatile
 10785                           
 10786                           ;main.c: 72: TMR0H = 0xF0;
 10787  0025EC  0EF0               	movlw	240
 10788  0025EE  6ED7               	movwf	4055,c	;volatile
 10789                           
 10790                           ;main.c: 73: TMR0L = 0x8C;
 10791  0025F0  0E8C               	movlw	140
 10792  0025F2  6ED6               	movwf	4054,c	;volatile
 10793                           
 10794                           ;main.c: 75: Cptms ++;
 10795  0025F4  4A2D               	infsnz	_Cptms,f,c	;volatile
 10796  0025F6  2A2E               	incf	_Cptms+1,f,c	;volatile
 10797                           
 10798                           ;main.c: 77: if (-- Decompte == 0)
 10799  0025F8  2E2F               	decfsz	_Decompte,f,c	;volatile
 10800  0025FA  D004               	goto	i2l87
 10801                           
 10802                           ;main.c: 78: {
 10803                           ;main.c: 79: Decompte = 50;
 10804  0025FC  0E32               	movlw	50
 10805  0025FE  6E2F               	movwf	_Decompte,c	;volatile
 10806                           
 10807                           ;main.c: 80: Cpt1Sur20s ++;
 10808  002600  4A2B               	infsnz	_Cpt1Sur20s,f,c	;volatile
 10809  002602  2A2C               	incf	_Cpt1Sur20s+1,f,c	;volatile
 10810  002604                     i2l87:
 10811  002604  C03D  FFF5         	movff	??_High_priority+13,tablat
 10812  002608  C03C  FFF8         	movff	??_High_priority+12,tblptru
 10813  00260C  C03B  FFF7         	movff	??_High_priority+11,tblptrh
 10814  002610  C03A  FFF6         	movff	??_High_priority+10,tblptrl
 10815  002614  C039  FFF4         	movff	??_High_priority+9,prodh
 10816  002618  C038  FFF3         	movff	??_High_priority+8,prodl
 10817  00261C  C037  FFDA         	movff	??_High_priority+7,fsr2h
 10818  002620  C036  FFD9         	movff	??_High_priority+6,fsr2l
 10819  002624  C035  FFE2         	movff	??_High_priority+5,fsr1h
 10820  002628  C034  FFE1         	movff	??_High_priority+4,fsr1l
 10821  00262C  C033  FFEA         	movff	??_High_priority+3,fsr0h
 10822  002630  C032  FFE9         	movff	??_High_priority+2,fsr0l
 10823  002634  C031  FFFB         	movff	??_High_priority+1,pclatu
 10824  002638  C030  FFFA         	movff	??_High_priority,pclath
 10825  00263C  0011               	retfie		f
 10826  00263E  FFFF               	dw	65535	; errata NOP
 10827  002640                     __end_of_High_priority:
 10828                           	opt stack 0
 10829                           pclatu	equ	0xFFB
 10830                           pclath	equ	0xFFA
 10831                           tblptru	equ	0xFF8
 10832                           tblptrh	equ	0xFF7
 10833                           tblptrl	equ	0xFF6
 10834                           tablat	equ	0xFF5
 10835                           prodh	equ	0xFF4
 10836                           prodl	equ	0xFF3
 10837                           intcon	equ	0xFF2
 10838                           intcon2	equ	0xFF1
 10839                           postinc0	equ	0xFEE
 10840                           fsr0h	equ	0xFEA
 10841                           fsr0l	equ	0xFE9
 10842                           wreg	equ	0xFE8
 10843                           indf1	equ	0xFE7
 10844                           postdec1	equ	0xFE5
 10845                           fsr1h	equ	0xFE2
 10846                           fsr1l	equ	0xFE1
 10847                           bsr	equ	0xFE0
 10848                           indf2	equ	0xFDF
 10849                           postinc2	equ	0xFDE
 10850                           postdec2	equ	0xFDD
 10851                           fsr2h	equ	0xFDA
 10852                           fsr2l	equ	0xFD9
 10853                           status	equ	0xFD8
 10854                           pclatu	equ	0xFFB
 10855                           pclath	equ	0xFFA
 10856                           tblptru	equ	0xFF8
 10857                           tblptrh	equ	0xFF7
 10858                           tblptrl	equ	0xFF6
 10859                           tablat	equ	0xFF5
 10860                           prodh	equ	0xFF4
 10861                           prodl	equ	0xFF3
 10862                           intcon	equ	0xFF2
 10863                           intcon2	equ	0xFF1
 10864                           postinc0	equ	0xFEE
 10865                           fsr0h	equ	0xFEA
 10866                           fsr0l	equ	0xFE9
 10867                           wreg	equ	0xFE8
 10868                           indf1	equ	0xFE7
 10869                           postdec1	equ	0xFE5
 10870                           fsr1h	equ	0xFE2
 10871                           fsr1l	equ	0xFE1
 10872                           bsr	equ	0xFE0
 10873                           indf2	equ	0xFDF
 10874                           postinc2	equ	0xFDE
 10875                           postdec2	equ	0xFDD
 10876                           fsr2h	equ	0xFDA
 10877                           fsr2l	equ	0xFD9
 10878                           status	equ	0xFD8
 10879                           
 10880                           	psect	rparam
 10881  0000                     pclatu	equ	0xFFB
 10882                           pclath	equ	0xFFA
 10883                           tblptru	equ	0xFF8
 10884                           tblptrh	equ	0xFF7
 10885                           tblptrl	equ	0xFF6
 10886                           tablat	equ	0xFF5
 10887                           prodh	equ	0xFF4
 10888                           prodl	equ	0xFF3
 10889                           intcon	equ	0xFF2
 10890                           intcon2	equ	0xFF1
 10891                           postinc0	equ	0xFEE
 10892                           fsr0h	equ	0xFEA
 10893                           fsr0l	equ	0xFE9
 10894                           wreg	equ	0xFE8
 10895                           indf1	equ	0xFE7
 10896                           postdec1	equ	0xFE5
 10897                           fsr1h	equ	0xFE2
 10898                           fsr1l	equ	0xFE1
 10899                           bsr	equ	0xFE0
 10900                           indf2	equ	0xFDF
 10901                           postinc2	equ	0xFDE
 10902                           postdec2	equ	0xFDD
 10903                           fsr2h	equ	0xFDA
 10904                           fsr2l	equ	0xFD9
 10905                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    20
    Data        5
    BSS         194
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     43      96
    BANK0           128     32      77
    BANK1           256      0     107
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    DecToStr@result	PTR unsigned char  size(2) Largest target is 5
		 -> PrintTest(BANK0[5]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    eeprom_write_array@pData	PTR unsigned char  size(2) Largest target is 107
		 -> Cf(BANK1[107]), 

    eeprom_read_array@pData	PTR unsigned char  size(2) Largest target is 107
		 -> Cf(BANK1[107]), 

    sp__DecToStr	PTR unsigned char  size(2) Largest target is 5
		 -> PrintTest(BANK0[5]), 

    ecran_print_num@tempStr	PTR unsigned char  size(2) Largest target is 5
		 -> PrintTest(BANK0[5]), 

    S58StructEcran$Digits	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran(BANK0[16]), 
		 -> PrintTest(BANK0[5]), 

    Ecran.Digits	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 


Critical Paths under _main in COMRAM

    _check_UInfla->_ana_read
    _check_UAlim->_ana_read
    _micro_wait->_check_comutest
    _feu_process->_feu_tir
    _feu_tir->_delay_ms
    _feu_check_bp->_ecran_print_num
    _ecran_print_num->_DecToStr
    _DecToStr->___awmod
    _check_program_0->_ecran_refresh
    _eeprom_write_array->_eeprom_write
    _check_bpon->_ecran_print_one_char
    _eeprom_read_array->_eeprom_read
    _cf_check->_cf_checksum
    _cf_checkout->___wmul
    _itoa->_utoa
    _utoa->___lwdiv
    _ecran_wait->_ecran_dot
    _check_comutest->_ecran_refresh
    _ecran_refresh->_ecran_print_one_char
    _ecran_print_one_char->_ecran_digit
    _arm_UAlim_1A->_ana_read
    _ana_read->_delay_ms
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft

Critical Paths under _Low_priority in COMRAM

    None.

Critical Paths under _High_priority in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_process
    _test_process->_check_UAlim
    _test_process->_check_UInfla
    _check_UInfla->___ftmul
    _check_UAlim->___ftmul
    _feu_check_bp->_ecran_print_num
    _ecran_print_num->_DecToStr
    _check_idtest->_cf_rcv
    _cf_rcv->_cf_check
    _cf_check_and_display->_cf_check
    _cf_check->_cf_checksum
    _armement_process->_arm_UAlim_1A
    _itoa->_utoa
    _arm_UAlim_1A->___ftmul
    ___ftmul->___lwtoft

Critical Paths under _Low_priority in BANK0

    None.

Critical Paths under _High_priority in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Low_priority in BANK1

    None.

Critical Paths under _High_priority in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Low_priority in BANK2

    None.

Critical Paths under _High_priority in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Low_priority in BANK3

    None.

Critical Paths under _High_priority in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Low_priority in BANK4

    None.

Critical Paths under _High_priority in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Low_priority in BANK5

    None.

Critical Paths under _High_priority in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   54325
                                             30 BANK0      2     2      0
                   _armement_process
                        _bouton_init
                     _bouton_refresh
               _cf_check_and_display
                         _check_bpon
                     _check_comutest
                       _check_idtest
                    _check_program_0
                      _ecran_refresh
                       _feu_check_bp
                        _feu_process
                          _hw_config
                       _micro_config
                         _micro_wait
                       _test_process
 ---------------------------------------------------------------------------------
 (1) _test_process                                         6     6      0   21863
                                             25 BANK0      5     5      0
                        _check_UAlim
                       _check_UInfla
                     _check_comutest
                        _ecran_blank
                    _ecran_print_num
                         _ecran_wait
                               _itoa
                     _register_write
 ---------------------------------------------------------------------------------
 (2) _check_UInfla                                         8     6      2    7959
                                             17 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
                           _ana_read
 ---------------------------------------------------------------------------------
 (2) _check_UAlim                                          8     6      2    7959
                                             17 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
                           _ana_read
 ---------------------------------------------------------------------------------
 (1) _micro_wait                                           1     1      0    2127
                                             38 COMRAM     1     1      0
                     _check_comutest
                        _ecran_blank
               _ecran_print_one_char
                         _ecran_wait
 ---------------------------------------------------------------------------------
 (1) _micro_config                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hw_config                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _feu_process                                          2     2      0     907
                                             38 COMRAM     2     2      0
                           _delay_ms
                      _feu_check_end
                            _feu_tir
 ---------------------------------------------------------------------------------
 (2) _feu_tir                                              1     1      0     534
                                             37 COMRAM     1     1      0
                           _delay_ms
                     _register_write
 ---------------------------------------------------------------------------------
 (2) _register_write                                       3     3      0     130
                                             31 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _feu_check_end                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _feu_check_bp                                         1     1      0    3309
                                             41 COMRAM     1     1      0
                    _ecran_print_num
               _ecran_print_one_char
 ---------------------------------------------------------------------------------
 (2) _ecran_print_num                                      4     4      0    2292
                                             40 COMRAM     1     1      0
                                              8 BANK0      3     3      0
                           _DecToStr
 ---------------------------------------------------------------------------------
 (3) _DecToStr                                            10     8      2    2100
                                             38 COMRAM     2     0      2
                                              0 BANK0      8     8      0
                            ___awmod
                            ___lbdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              5     4      1     318
                                             31 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     587
                                             31 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _check_program_0                                      2     2      0    1116
                                             36 COMRAM     2     2      0
                        _ecran_blank
                      _ecran_refresh
                         _ecran_wait
 ---------------------------------------------------------------------------------
 (1) _check_idtest                                         1     1      0    5017
                                             12 BANK0      1     1      0
                             _cf_rcv
               _ecran_print_one_char
                    _micro_config_rs
 ---------------------------------------------------------------------------------
 (2) _micro_config_rs                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cf_rcv                                               4     4      0    4000
                                              8 BANK0      4     4      0
                           _cf_check
               _ecran_print_one_char
                  _eeprom_read_array
                 _eeprom_write_array
 ---------------------------------------------------------------------------------
 (3) _eeprom_write_array                                   6     2      4     506
                                             33 COMRAM     6     2      4
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (4) _eeprom_write                                         2     1      1     139
                                             31 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _check_bpon                                           2     2      0    1017
                                             34 COMRAM     2     2      0
               _ecran_print_one_char
 ---------------------------------------------------------------------------------
 (1) _cf_check_and_display                                 5     5      0    4573
                                              8 BANK0      5     5      0
                         _HexToAscii
                           _cf_check
               _ecran_print_one_char
                      _ecran_refresh
                  _eeprom_read_array
 ---------------------------------------------------------------------------------
 (3) _eeprom_read_array                                    6     2      4     629
                                             32 COMRAM     6     2      4
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (4) _eeprom_read                                          1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _cf_check                                             2     2      0    1678
                                              6 BANK0      2     2      0
                        _cf_checkout
                      _cf_checkrange
                        _cf_checksum
 ---------------------------------------------------------------------------------
 (4) _cf_checksum                                         18    18      0     328
                                             31 COMRAM    12    12      0
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) _cf_checkrange                                        3     3      0     167
                                             31 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _cf_checkout                                          4     4      0    1146
                                             37 COMRAM     4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     694
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _HexToAscii                                           2     2      0     130
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _bouton_refresh                                       6     6      0     489
                                             31 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _bouton_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _armement_process                                     4     4      0   11777
                                             25 BANK0      4     4      0
                       _arm_UAlim_1A
                     _check_comutest
                        _ecran_blank
                         _ecran_wait
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    2301
                                              6 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1606
                                             39 COMRAM     3     3      0
                                              0 BANK0      6     0      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     386
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     549
                                             31 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ecran_wait                                           1     1      0      31
                                             32 COMRAM     1     1      0
                          _ecran_dot
                    _ecran_raz_digit
 ---------------------------------------------------------------------------------
 (2) _check_comutest                                       2     2      0    1079
                                             36 COMRAM     2     2      0
                        _ecran_blank
                      _ecran_refresh
 ---------------------------------------------------------------------------------
 (3) _ecran_refresh                                        2     2      0    1048
                                             34 COMRAM     2     2      0
                          _ecran_dot
               _ecran_print_one_char
 ---------------------------------------------------------------------------------
 (4) _ecran_print_one_char                                 2     1      1    1017
                                             32 COMRAM     2     1      1
                        _ecran_digit
                    _ecran_raz_digit
 ---------------------------------------------------------------------------------
 (3) _ecran_raz_digit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ecran_digit                                          1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ecran_dot                                            1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ecran_blank                                          1     1      0       0
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _arm_UAlim_1A                                         8     6      2    8332
                                             17 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
                           _ana_read
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _ana_read                                             6     4      2     444
                                             37 COMRAM     6     4      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             6     4      2     373
                                             31 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             5     2      3    2575
                                             39 COMRAM     3     0      3
                                              0 BANK0      2     2      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     602
                                             31 COMRAM     9     5      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4301
                                              2 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2313
                                             31 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Low_priority                                        17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _High_priority                                       14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _armement_process
     _arm_UAlim_1A
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
       ___lwtoft
         ___ftpack
       _ana_read
         _delay_ms
       _delay_ms
     _check_comutest
       _ecran_blank
       _ecran_refresh
         _ecran_dot
         _ecran_print_one_char
           _ecran_digit
           _ecran_raz_digit
     _ecran_blank
     _ecran_wait
       _ecran_dot
       _ecran_raz_digit
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _bouton_init
   _bouton_refresh
   _cf_check_and_display
     _HexToAscii
     _cf_check
       _cf_checkout
         ___wmul
       _cf_checkrange
       _cf_checksum
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
     _ecran_refresh
       _ecran_dot
       _ecran_print_one_char
         _ecran_digit
         _ecran_raz_digit
     _eeprom_read_array
       _eeprom_read
   _check_bpon
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
   _check_comutest
     _ecran_blank
     _ecran_refresh
       _ecran_dot
       _ecran_print_one_char
         _ecran_digit
         _ecran_raz_digit
   _check_idtest
     _cf_rcv
       _cf_check
         _cf_checkout
           ___wmul
         _cf_checkrange
         _cf_checksum
       _ecran_print_one_char
         _ecran_digit
         _ecran_raz_digit
       _eeprom_read_array
         _eeprom_read
       _eeprom_write_array
         _eeprom_write
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
     _micro_config_rs
   _check_program_0
     _ecran_blank
     _ecran_refresh
       _ecran_dot
       _ecran_print_one_char
         _ecran_digit
         _ecran_raz_digit
     _ecran_wait
       _ecran_dot
       _ecran_raz_digit
   _ecran_refresh
     _ecran_dot
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
   _feu_check_bp
     _ecran_print_num
       _DecToStr
         ___awmod
         ___lbdiv
         ___wmul
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
   _feu_process
     _delay_ms
     _feu_check_end
     _feu_tir
       _delay_ms
       _register_write
   _hw_config
   _micro_config
   _micro_wait
     _check_comutest
       _ecran_blank
       _ecran_refresh
         _ecran_dot
         _ecran_print_one_char
           _ecran_digit
           _ecran_raz_digit
     _ecran_blank
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
     _ecran_wait
       _ecran_dot
       _ecran_raz_digit
   _test_process
     _check_UAlim
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
       ___lwtoft
         ___ftpack
       _ana_read
         _delay_ms
     _check_UInfla
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
       ___lwtoft
         ___ftpack
       _ana_read
         _delay_ms
     _check_comutest
       _ecran_blank
       _ecran_refresh
         _ecran_dot
         _ecran_print_one_char
           _ecran_digit
           _ecran_raz_digit
     _ecran_blank
     _ecran_print_num
       _DecToStr
         ___awmod
         ___lbdiv
         ___wmul
     _ecran_wait
       _ecran_dot
       _ecran_raz_digit
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _register_write

 _Low_priority (ROOT)

 _High_priority (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      6B       7       41.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80     20      4D       5       60.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2B      60       1       75.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     118      15        0.0%
DATA                 0      0     118       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Thu Aug 25 18:15:49 2016

                                        __end_of_check_UInfla 1E2A  
                                         ?_eeprom_write_array 0051  
                                              ??_feu_check_bp 0059  
                                                          _RD 007D30  
                                                          _Cf 0100  
                                                          _WR 007D31  
                                      ??_cf_check_and_display 00B0  
                                                 __CFG_BOR$ON 000000  
                                                          bsr 000FE0  
                                         ___wmul@multiplicand 0051  
                                             ??_feu_check_end 004F  
                                                __CFG_CP0$OFF 000000  
                                                __CFG_CP1$OFF 000000  
                                                __CFG_CP2$OFF 000000  
                                                __CFG_CP3$OFF 000000  
                                        __end_of_check_idtest 2CE4  
                                                         l231 1F20  
                                                         l241 2A80  
                                                         l242 2A84  
                                                         l243 2A88  
                                                         l403 219C  
                                                         l245 2AA6  
                                                         l261 23DA  
                                                         l422 18A4  
                                                         l239 2A7C  
                                                         l319 2CB0  
                                                         l425 18A6  
                                                         l523 28CE  
                                                         l438 15BA  
                                                         l519 2CE0  
                                                         l543 06E0  
                                                         l528 28FA  
                                                         l394 214A  
                                                         l539 062A  
                                                         l565 08F4  
                                                         l566 0930  
                                                         l559 0864  
                                                         l591 0BDA  
                                                         l584 0ADE  
                                                         l930 2896  
                                                         l578 0A52  
                                                         l589 0B5E  
                                                         l790 2428  
                                                         l880 2B74  
                                                         l784 23E2  
                                                         l882 2B80  
                                                         l794 2460  
                                                         l883 2B82  
                                                         l787 23F6  
                                                         l789 2406  
                                                         l797 247E  
                                                         l992 166E  
                                                         l994 168E  
                                                         l995 16A6  
                                                         _GIE 007F97  
                                                         l988 15C2  
                                                __CFG_CPB$OFF 000000  
                                                __CFG_CPD$OFF 000000  
                                                         _Arm 0020  
                                                         _Feu 008C  
                                              _check_comutest 28FE  
                                                __CFG_BORV$45 000000  
                                                ___awmod@sign 0055  
                                                         prod 000FF3  
                                                         wreg 000FE8  
                                                __CFG_LVP$OFF 000000  
                                        ??_eeprom_write_array 0055  
                                                __CFG_WDT$OFF 000000  
                                                        l1002 1740  
                                                        l1100 0FB8  
                                                        l1105 1020  
                                                        l1107 103A  
                                                        l1052 2D00  
                                                        l1061 1A06  
                                                        l1109 109E  
                                                        l1070 1AA4  
                                                        l1063 1A4C  
                                                        l1064 1A2C  
                                                        l1080 1AFE  
                                                        l1073 1AB8  
                                                        l1403 2334  
                                                        l1075 1ACC  
                                                        l1059 19F2  
                                                        l1068 1A5E  
                                                        l1084 0E7E  
                                                        l1077 1AE0  
                                                        l1094 0F76  
                                                        l1095 0F82  
                                                        l1507 19D6  
                                                        l1529 20C0  
                                                        l5011 1E46  
                                                        l5021 1E56  
                                                        l5013 1E4A  
                                                        l5005 1E3A  
                                                        l1629 276A  
                                                        l1487 1426  
                                                        l5031 1E6A  
                                                        l5023 1E5A  
                                                        l5015 1E4E  
                                                        l5007 1E3E  
                                                        l1639 29D2  
                                                        l5201 2C04  
                                                        l5041 1E7E  
                                                        l5033 1E6E  
                                                        l5025 1E5E  
                                                        l5009 1E42  
                                                        l5121 0E28  
                                                        l5105 0C14  
                                                        l5211 22AC  
                                                        l5043 1E82  
                                                        l5035 1E72  
                                                        l5027 1E62  
                                                        l5019 1E52  
                                                        l5131 0E4A  
                                                        l5221 2308  
                                                        l5213 22B6  
                                                        l5037 1E76  
                                                        l5029 1E66  
                                                        l6101 08AE  
                                                        l5223 2312  
                                                        l5215 22D4  
                                                        l5207 229E  
                                                        l5039 1E7A  
                                                        l5047 1E88  
                                                        l5063 2A8C  
                                                        l5303 2738  
                                                        l5135 0E70  
                                                        l6111 08D4  
                                                        l6023 0638  
                                                        l5305 2740  
                                                        l5161 2182  
                                                        l5145 212A  
                                                        l5401 2BD2  
                                                        l6009 2448  
                                                        l6017 246A  
                                                        l6121 0948  
                                                        l5219 22EA  
                                                        l5315 2760  
                                                        l5307 2744  
                                                        l5331 29C8  
                                                        l5323 29A8  
                                                        l5171 21BE  
                                                        l5155 217C  
                                                        l6107 08C2  
                                                        l5501 13DA  
                                                        l5325 29B0  
                                                        l5173 21C6  
                                                        l5421 2A60  
                                                        l5261 24FE  
                                                        l5253 24DE  
                                                        l5245 24B0  
                                                        l6301 1062  
                                                        l5327 29B4  
                                                        l5183 295E  
                                                        l5255 24E6  
                                                        l6151 0A3E  
                                                        l6055 070A  
                                                        l6047 06F2  
                                                        l5409 2BEC  
                                                        l5257 24EA  
                                                        l5265 2508  
                                                        l5249 24CC  
                                                        l5281 2A02  
                                                        l5353 1B4A  
                                                        l6145 09FA  
                                                        l6137 09E0  
                                                        l6129 0986  
                                                        l5515 18CC  
                                                        l5603 2934  
                                                        l5283 2A06  
                                                        l5363 1BA0  
                                                        l6163 0A9C  
                                                        l6083 080C  
                                                        l6075 07DE  
                                                        l6067 0784  
                                                        l6059 072C  
                                                        l5533 1940  
                                                        l5189 297A  
                                                        l5269 2516  
                                                        l5277 29FC  
                                                        l5293 2A20  
                                                        l5357 1B86  
                                                        l5349 1B28  
                                                        l6325 1A44  
                                                        l6261 0EF4  
                                                        l6173 0ABE  
                                                        l5551 19C6  
                                                        l5543 197A  
                                                        l6239 1726  
                                                        l5623 2274  
                                                        l6255 0EC2  
                                                        l6247 0E8E  
                                                        l6183 0B1C  
                                                        l5473 12D8  
                                                        l5545 1994  
                                                        l5537 195E  
                                                        l5289 2A18  
                                                        l6265 0F52  
                                                        l6169 0AB0  
                                                        l6089 0850  
                                                        l6193 0B72  
                                                        l5491 1376  
                                                        l5467 1294  
                                                        l5547 199C  
                                                        l5635 2D18  
                                                        l5651 14B2  
                                                        l5619 224A  
                                                        l6339 1A9E  
                                                        l6275 0FA6  
                                                        l5557 2024  
                                                        l5389 2C3A  
                                                        l5397 2C52  
                                                        l5653 14B6  
                                                        l6349 1AF2  
                                                        l5725 1D44  
                                                        l6373 2684  
                                                        l5487 134A  
                                                        l5591 290A  
                                                        l5567 2082  
                                                        l5743 258A  
                                                        l6199 15D0  
                                                        l5671 1524  
                                                        l5663 14EA  
                                                        l6287 0FEA  
                                                        l6375 268A  
                                                        l6383 26A0  
                                                        l6367 2676  
                                                        l5497 13AE  
                                                        l6297 1058  
                                                        l6377 2690  
                                                        l6369 267A  
                                                        l6379 2696  
                                                        l5941 1830  
                                                        l5685 159E  
                                                        l5909 2CDA  
                                                        l5781 2CFE  
                                                        l5687 15B0  
                                                        l5775 2CFA  
                                                        l5961 10CC  
                                                        l5937 17FC  
                                                        l5945 1892  
                                                        l4995 1E32  
                                                        l5955 10AE  
                                                        l5939 1800  
                                                        l4997 1E36  
                                                        l5957 10B8  
                                                        l5965 10D6  
                                                        l5975 117E  
                                                        l5983 1214  
                                                        l5959 10C2  
                                                        l5967 10F0  
                                                        l5887 2AFE  
                                                        l5977 1186  
                                                        l5985 125A  
                                                        l5889 2B02  
                                                        l5897 2B1E  
                                                        _CFGS 007D36  
                                                  _Cpt1Sur20s 002B  
                                                        u4110 0CCC  
                                                        u4130 0D34  
                                                        u4115 0CC2  
                                               __CFG_DEBUG$ON 000000  
                                                        u4125 0CFE  
                                                        u4135 0D2A  
                                                        _IPEN 007E87  
                                                        u4145 0D66  
                                                        u4155 0DCA  
                                                        u4165 0E18  
                                                        u5310 1140  
                                                        u4600 2396  
                                                        u5320 1168  
                                                        u5312 1142  
                                                        u5090 2574  
                                                        u5322 116A  
                                                        _PEIE 007F96  
                                                        u5245 2824  
                                                        u4607 238C  
                                                        u5255 2836  
                                                        u5247 282A  
                                                        u5097 2568  
                                                        u5265 2848  
                                                        u5257 283C  
                                                        u5290 1114  
                                                        u4811 18BC  
                                                        u5275 285A  
                                                        u5267 284E  
                                                        _RCIE 007CED  
                                                        u4900 2078  
                                                        _RCIF 007CF5  
                                                        u5277 2860  
                                                        u4830 18EA  
                                                        u4751 1282  
                                                        u5375 1208  
                                                        u4920 20EC  
                                                        u5376 1212  
                                                        u5296 1116  
                                                        u5385 123A  
                                                        i1l82 00AA  
                                                        u5386 123E  
                                                        u4771 12AE  
                                                        u4835 18E2  
                                                        u4907 206C  
                                                        u4780 12BE  
                                                        u4860 1968  
                                                        _RCIP 007CFD  
                                                        u4927 20E0  
                                                        u4960 293C  
                                                        u4966 293E  
                                                        i2l87 2604  
                                                __CFG_WDTPS$1 000000  
                                                        _WREN 007D32  
                                              ??_eeprom_write 0050  
                                                __CFG_PWRT$ON 000000  
                                                ?_bouton_init 0030  
                                     eeprom_write_array@pData 0051  
                                                        _Test 0001  
                                                        _main 2640  
                                                ___ftpack@arg 004F  
                                                        _itoa 2522  
                                                ___ftpack@exp 0052  
                                                        fsr0h 000FEA  
                                                        fsr1h 000FE2  
                                                        fsr0l 000FE9  
                                                        fsr2h 000FDA  
                                                        indf1 000FE7  
                                                        fsr1l 000FE1  
                                                        indf2 000FDF  
                                                        fsr2l 000FD9  
                                                        _utoa 201A  
                                                        pclat 000FFA  
                                                        prodh 000FF4  
                                                        prodl 000FF3  
                                               feu_tir@Output 0055  
                                                        start 0112  
                                        __size_of_cf_checkout 00C2  
                                        __size_of_cf_checksum 029C  
                                            ?_ecran_raz_digit 0030  
                                                ___ftmul@cntr 00B7  
                                                ___ftmul@sign 00B8  
                                                ___fttol@exp1 00AD  
                                                ___fttol@lval 00A9  
                                     __size_of_bouton_refresh 01C4  
                                               __CFG_OSCS$OFF 000000  
                                           ??_micro_config_rs 004F  
                                      __end_of_check_comutest 294A  
                                            ?_ecran_print_num 0030  
                                             __end_of_Version 0615  
                                    eeprom_write_array@NbData 0054  
                                                       ?_main 0030  
                                                       ?_itoa 00AE  
                                             __end_of___lbdiv 2A26  
                                                       _EEADR 000FA9  
                                             __end_of___awmod 2522  
                                                       _EEPGD 007D37  
                                                       ?_utoa 00A8  
                                             __end_of___ftmul 142A  
                                                       _T0CON 000FD5  
                                             __end_of___fttol 19DA  
                                             __end_of___lwdiv 2776  
                                             __end_of___lwmod 29DE  
                                                       _RCREG 000FAE  
                                                       _RCSTA 000FAB  
                                                  _HexToAscii 2D04  
                                                       _TMR0H 000FD7  
                                                       _TMR0L 000FD6  
                                                       _SPBRG 000FAF  
                                                       _PORTA 000F80  
                                                       _PORTB 000F81  
                                                       _PORTC 000F82  
                                                       _PORTD 000F83  
                                                       _PORTE 000F84  
                                        __size_of_check_UAlim 00F6  
                                        __end_of_arm_UAlim_1A 1D2C  
                                                       _TXREG 000FAD  
                                                       _TXSTA 000FAC  
                                                       _Blank 0606  
                                                       _Ecran 0098  
                                                       _Armed 0601  
                                               __CFG_WRT0$OFF 000000  
                                               __CFG_WRT1$OFF 000000  
                                               __CFG_WRT2$OFF 000000  
                                               __CFG_WRT3$OFF 000000  
                                                       _Cptms 002D  
                                                       _Micro 005B  
                                          eeprom_read_array@i 0055  
                                              __CFG_EBTR0$OFF 000000  
                                              __CFG_EBTR1$OFF 000000  
                                              __CFG_EBTR2$OFF 000000  
                                              __CFG_EBTR3$OFF 000000  
                                               __CFG_STVR$OFF 000000  
                                             __end_of_feu_tir 2BC6  
                                               __CFG_WRTB$OFF 000000  
                                               __CFG_WRTC$OFF 000000  
                                               __CFG_WRTD$OFF 000000  
                                              __CFG_EBTRB$OFF 000000  
                                             _check_program_0 2AE8  
                                               ___ftpack@sign 0053  
                                                       tablat 000FF5  
                                            __end_of_DecToStr 1C26  
                                                       utoa@c 0059  
                                                       utoa@v 0057  
                                                       status 000FD8  
                                             ___lbdiv@divisor 004F  
                                             ___lbdiv@counter 0052  
                                     eeprom_read_array@NbData 0053  
                                             __initialization 27C8  
                                                __end_of_main 26BC  
                                                __end_of_itoa 25B2  
                                                __end_of_utoa 210E  
                                              DecToStr@result 0056  
                                         eeprom_write@Address 004F  
                                        __size_of_ecran_blank 0052  
                                        __size_of_ecran_digit 00FA  
                                              __CFG_OSC$HSPLL 000000  
                                             ?_check_comutest 0030  
                                                      ??_main 00C6  
                                               ___fttol@sign1 00A8  
                                                      ??_itoa 005A  
                                                      ??_utoa 0057  
                                               __activetblptr 000002  
                               __size_of_ecran_print_one_char 0040  
                                                      _ADCON0 000FC2  
                                                      _ADCON1 000FC1  
                                                      _ADRESH 000FC4  
                                                      _ADRESL 000FC3  
                                                      _EEDATA 000FA8  
                                                      _EECON2 000FA7  
                                            __end_of___ftpack 2338  
                                        __end_of_feu_check_bp 1B02  
                                              _register_write 2B5C  
                                            __end_of___lwtoft 2B5C  
                                            __end_of_cf_check 2A6A  
                                                      _TMR0IE 007F95  
                                                      _TMR0IF 007F92  
                                                      _TMR0IP 007F8A  
                                       __size_of_check_UInfla 00FE  
                                            __end_of_ana_read 28B2  
                                             bouton_refresh@i 0054  
                                            test_process@temp 00C4  
                                            __end_of_delay_ms 2C2E  
                                                      _Bouton 0080  
                                            _armement_process 15BE  
                                               ?_micro_config 0030  
                                        __size_of_eeprom_read 001A  
                                        __size_of_feu_process 0228  
                                                      ___wmul 2AAA  
                                                   ??___lbdiv 0050  
                                                      _cf_rcv 142A  
                                                   ??___awmod 0053  
                                       __size_of_check_idtest 0028  
                                                   ??___ftmul 00B0  
                                                   ??___fttol 0053  
                                                   ??___lwdiv 0053  
                                                   ??___lwmod 0053  
                                                      clear_0 27CE  
                                                      clear_1 27DA  
                                                      clear_2 27E6  
                                             ___awmod@divisor 0051  
                                        __end_of_eeprom_write 2CBC  
                                             ___awmod@counter 0054  
                                                   ??_feu_tir 0055  
                                     __end_of_check_program_0 2B24  
                                       ___ftmul@f3_as_product 00B4  
                                                 ?_HexToAscii 0030  
                                                      itoa@cp 00B4  
                                                __mediumconst 0000  
                                       __end_of_ecran_refresh 23DE  
                                                      tblptrh 000FF7  
                                                      tblptrl 000FF6  
                                                      tblptru 000FF8  
                                                _check_UInfla 1D2C  
                                      __end_of_register_write 2B92  
                                      __size_of_cf_checkrange 004A  
                                           cf_checksum@calcul 00AA  
                                            ___lbdiv@dividend 0051  
                                                  __accesstop 0080  
                                     __end_of__initialization 280C  
                                         eeprom_write_array@i 0056  
                                    eeprom_read_array@Address 0052  
                                                _check_idtest 2CBC  
                                        __size_of_bouton_init 004E  
                                              ??_micro_config 004F  
                                               __end_of_Blank 060B  
                                                  ___ftmul@f1 00AA  
                                                  ___ftmul@f2 00AD  
                                               __end_of_Armed 0606  
                                                  ___fttol@f1 004F  
                                              __pcstackCOMRAM 0030  
                                                __pidataBANK0 2D94  
                                cf_check_and_display@configOk 00B4  
                                              _bouton_refresh 10A2  
                                             DecToStr@power10 00AF  
                                       __size_of_arm_UAlim_1A 0106  
                                            ___lbdiv@quotient 0053  
                                                  ___lwtoft@c 0057  
                                          __size_of_ecran_dot 0010  
                                                   ?_DecToStr 0056  
                                           __end_of_ErreurTir 0610  
                                               ?_Low_priority 0030  
                                             ?_register_write 0030  
                                                  __pbssBANK0 0080  
                                                  __pbssBANK1 0100  
                                                  _check_bpon 28B2  
                                          delay_ms@TimeToWait 004F  
                                                  __pnvCOMRAM 005B  
                                       __end_of_High_priority 2640  
                                          __size_of_hw_config 0060  
                                             _micro_config_rs 2D42  
                                          check_program_0@ret 0055  
                                                _arm_UAlim_1A 1C26  
                                         __size_of_HexToAscii 0020  
                                      __end_of_bouton_refresh 1266  
                                                  _ecran_wait 2D24  
                                            __CFG_CCP2MUX$OFF 000000  
                                                     ?___wmul 004F  
                                               _cf_checkrange 294A  
                                                     ?_cf_rcv 0030  
                                                   ?___ftpack 004F  
                               __size_of_cf_check_and_display 0166  
                                                  ??_DecToStr 00A8  
                                                   ?___lwtoft 0057  
                                                   ?_cf_check 0030  
                                       __end_of_feu_check_end 2D04  
                                            ?_check_program_0 0030  
                                              ??_Low_priority 003E  
                                                   ?_ana_read 0055  
                                           _eeprom_read_array 2C2E  
                                       __size_of_feu_check_bp 0128  
                                                   ?_delay_ms 004F  
                                          cf_checkrange@valid 0050  
                                          ?_eeprom_read_array 0050  
                                 __size_of_eeprom_write_array 0034  
                                               ??_cf_checkout 0055  
                                               ??_cf_checksum 004F  
                                         ??_eeprom_read_array 0054  
                                    cf_check_and_display@temp 00B2  
                                           __end_of_ecran_dot 2D86  
                                                  cf_rcv@temp 00B2  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                              ?_cf_checkrange 0030  
                                             ?_bouton_refresh 0030  
                                       __size_of_eeprom_write 002C  
                                            ??_check_comutest 0054  
                                                     _Version 0610  
                                                     ___lbdiv 29DE  
                                                     ___awmod 2482  
                                             __size_of___wmul 003E  
                                                     ___ftmul 1266  
                                                     ___fttol 18AA  
                                             __size_of_cf_rcv 0194  
                                                     ___lwdiv 271C  
                                                     ___lwmod 2994  
                                                __psmallconst 0600  
                                                _feu_check_bp 19DA  
                                               ??_check_UAlim 00BB  
                                                     __pcinit 27C8  
                                                  ??___ftpack 0054  
                                      ecran_print_num@tempStr 00B1  
                                                     __ramtop 0600  
                                    __size_of_ecran_raz_digit 000E  
                                                  _micro_wait 23DE  
                                                     __ptext0 2640  
                                                     __ptext1 0616  
                                                     __ptext2 1D2C  
                                                     __ptext3 1F24  
                                                     __ptext4 23DE  
                                                     __ptext5 2C60  
                                                     __ptext6 26BC  
                                                     __ptext7 0E7A  
                                                     __ptext8 2B92  
                                                     __ptext9 2B5C  
                                                     _feu_tir 2B92  
                                                  ??___lwtoft 00A8  
                                                  ??_cf_check 00AE  
                                   __end_of_eeprom_read_array 2C60  
                                                     cf_rcv@i 00B3  
                                           __end_of_hw_config 271C  
                                                  ??_ana_read 0057  
                                            ___awmod@dividend 004F  
                                        __end_of_micro_config 2C90  
                                    __end_of_armement_process 1744  
                                                  ??_delay_ms 0051  
                                    __size_of_ecran_print_num 00BC  
                                                     main@cpt 00C7  
                                              __pintcode_body 25B2  
                                     __end_of_micro_config_rs 2D5C  
                                        end_of_initialization 280C  
                                         HexToAscii@character 004F  
                                                 ?_check_bpon 0030  
                                                     itoa@buf 00AE  
                                                     itoa@val 00B0  
                                               __Lmediumconst 0000  
                                                _eeprom_write 2C90  
                                                     int_func 25B2  
                                __end_of_ecran_print_one_char 2AAA  
                                         __end_of_cf_checkout 21D0  
                                         __end_of_cf_checksum 0E7A  
                                               ??_ecran_blank 004F  
                                               ??_ecran_digit 004F  
                                                 ?_ecran_wait 0030  
                                                     postdec1 000FE5  
                                                     postdec2 000FDD  
                                                     postinc0 000FEE  
                                                     postinc2 000FDE  
                                                cf_checkout@i 0058  
                                                cf_checksum@i 00A9  
                                                     utoa@buf 00A8  
                                                     utoa@val 00AA  
                                                   _PORTAbits 000F80  
                                                   _PORTBbits 000F81  
                                                   _PORTCbits 000F82  
                                                   _PORTEbits 000F84  
                                                ??_HexToAscii 004F  
                                                   _TRISAbits 000F92  
                                                   _TRISBbits 000F93  
                                                   _TRISCbits 000F94  
                                                   _TRISDbits 000F95  
                                                   _TRISEbits 000F96  
                                         __end_of_check_UAlim 201A  
                                               ?_test_process 0030  
                                          bouton_refresh@temp 0053  
                                               ??_eeprom_read 004F  
                                               ??_feu_process 0056  
                                             ??_cf_checkrange 004F  
                                        __end_of_Low_priority 00F2  
                                          __end_of_HexToAscii 2D24  
                                                 ___ftmul@exp 00B3  
                                        DecToStr@compareValue 00AC  
                                              __end_of___wmul 2AE8  
                                              __end_of_cf_rcv 15BE  
                                                 ?_micro_wait 0030  
                                         __size_of_check_bpon 004C  
                                         __end_of_ecran_blank 27C8  
                                         __end_of_ecran_digit 1F24  
                                  __size_of_eeprom_read_array 0032  
                                            ??_register_write 004F  
                                         start_initialization 27C8  
                                           __size_of_DecToStr 0124  
                                              ??_test_process 00C1  
                                           ??_ecran_raz_digit 004F  
                                                   _ErreurTir 060B  
                                               DecToStr@value 00AE  
                                      eeprom_read_array@pData 0050  
                                         __size_of_ecran_wait 001E  
                                            ?_micro_config_rs 0030  
                                               ??_bouton_init 004F  
                                             ecran_digit@Char 004F  
                                                 _cf_checkout 210E  
                                                 _cf_checksum 0BDE  
                                           ??_ecran_print_num 0058  
                                             test_process@ret 00C3  
                                      __size_of_ecran_refresh 00A6  
                                                    ??___wmul 0053  
                                                    ??_cf_rcv 00B0  
                                         __end_of_eeprom_read 2D76  
                                                   _PrintTest 00C8  
                                                 __pdataBANK0 00C8  
                                         __end_of_feu_process 10A2  
                                            cf_checkout@valid 0056  
                                       __size_of_micro_config 0030  
                                                 _check_UAlim 1F24  
                                            cf_checksum@valid 00A8  
                                           __size_of___ftpack 00AC  
                                                 __pbssCOMRAM 0001  
                                           __size_of___lwtoft 0038  
                                               __pcstackBANK0 00A8  
                                           __size_of_cf_check 0044  
                                                ana_read@temp 0059  
                                           __size_of_ana_read 004E  
                                        _ecran_print_one_char 2A6A  
                                        register_write@Output 0050  
                                           __size_of_delay_ms 0034  
                                            eeprom_write@Data 0050  
                                __end_of_cf_check_and_display 18AA  
                                            ??_bouton_refresh 004F  
                                         __size_of_micro_wait 00A4  
                                   ecran_print_one_char@Digit 0051  
                                            ___lwdiv@dividend 004F  
                                                _micro_config 2C60  
                                         __end_of_bouton_init 2864  
                                                   _ecran_dot 2D76  
                                                   __pintcode 0008  
                                                 _ecran_blank 2776  
                                                 _ecran_digit 1E2A  
                                                    ?___lbdiv 004F  
                                                    ?___awmod 004F  
                                                    ?___ftmul 00AA  
                                                    ?___fttol 004F  
                                                    ?___lwdiv 004F  
                                                    ?___lwmod 004F  
                                                 __pintcodelo 0018  
                                                    ?_feu_tir 0030  
                                                 __smallconst 0600  
                                            arm_UAlim_1A@temp 00BF  
                                      __size_of_High_priority 2638  
                                  __end_of_eeprom_write_array 2BFA  
                                           ?_armement_process 0030  
                                       ?_ecran_print_one_char 0050  
                                               _ecran_refresh 2338  
                                            ___lwdiv@quotient 0055  
                                                   _hw_config 26BC  
                                          ??_armement_process 00C1  
                                    __size_of_check_program_0 003C  
                                                ??_check_bpon 0052  
                                       __size_of_Low_priority 00DA  
                                              ___wmul@product 0053  
                                                 _eeprom_read 2D5C  
                                                 _feu_process 0E7A  
                                      __size_of_feu_check_end 0020  
                                        __end_of_test_process 0BDE  
                                                  ?_ecran_dot 0030  
                                                ??_ecran_wait 0050  
                                                  _ADCON0bits 000FC2  
                                           ___wmul@multiplier 004F  
                                                    _DecToStr 1B02  
                                          __end_of_check_bpon 28FE  
                                   eeprom_write_array@Address 0053  
                                            check_UInfla@temp 00BF  
                                                    _Decompte 002F  
                                              ?_ecran_refresh 0030  
                                                _Low_priority 0018  
                                               ?_check_UInfla 00B9  
                                                  ?_hw_config 0030  
                                                delay_ms@temp 0053  
                                                   copy_data0 2800  
                                          __end_of_ecran_wait 2D42  
                                                 _bouton_init 2816  
                                               ?_check_idtest 0030  
                                               _High_priority 0008  
                                                    _Register 0027  
                                                    __Hrparam 0000  
                                                    __Lrparam 0000  
                                             register_write@i 0051  
                                             _ecran_raz_digit 2D86  
                                            __size_of___lbdiv 0048  
                                            __size_of___awmod 00A0  
                                            __size_of___ftmul 01C4  
                                            __size_of___fttol 0130  
                                                 ana_read@ANx 0058  
                                            __size_of___lwdiv 005A  
                                            __size_of___lwmod 004A  
                                                    ___ftpack 228C  
                                                ??_micro_wait 0056  
                                        _cf_check_and_display 1744  
                                                    ___lwtoft 2B24  
                                                    _cf_check 2A26  
                                                ecran_dot@Dot 004F  
                                            __size_of_feu_tir 0034  
                                               _feu_check_end 2CE4  
                                                    _ana_read 2864  
                                     __size_of_check_comutest 004C  
                                      ??_ecran_print_one_char 0051  
                                              ??_check_UInfla 00BB  
                                                    _delay_ms 2BFA  
                                             _ecran_print_num 21D0  
                                             ___lwdiv@divisor 0051  
                                             ___lwdiv@counter 0054  
                                                    __ptext10 2CE4  
                                                    __ptext11 19DA  
                                                    __ptext20 2BC6  
                                                    __ptext12 21D0  
                                                    __ptext21 2C90  
                                                    __ptext13 1B02  
                                                    __ptext30 2AAA  
                                                    __ptext22 28B2  
                                                    __ptext14 29DE  
                                                    __ptext31 2D04  
                                                    __ptext23 1744  
                                                    __ptext15 2482  
                                                    __ptext40 28FE  
                                                    __ptext32 10A2  
                                                    __ptext24 2C2E  
                                                    __ptext16 2AE8  
                                                    __ptext41 2338  
                                                    __ptext33 2816  
                                                    __ptext25 2D5C  
                                                    __ptext17 2CBC  
                                                    __ptext50 2B24  
                                                    __ptext42 2A6A  
                                                    __ptext34 15BE  
                                                    __ptext26 2A26  
                                                    __ptext18 2D42  
                                                    __ptext51 18AA  
                                                    __ptext43 2D86  
                                                    __ptext35 2522  
                                                    __ptext27 0BDE  
                                                    __ptext19 142A  
                                                    __ptext52 1266  
                                                    __ptext44 1E2A  
                                                    __ptext36 201A  
                                                    __ptext28 294A  
                                                    __ptext53 228C  
                                                    __ptext45 2D76  
                                                    __ptext37 2994  
                                                    __ptext29 210E  
                                                    __ptext46 2776  
                                                    __ptext38 271C  
                                                    __ptext47 1C26  
                                                    __ptext39 2D24  
                                                    __ptext48 2864  
                                                    __ptext49 2BFA  
                                             check_UAlim@temp 00BF  
                               ecran_print_one_char@Character 0050  
                                        armement_process@temp 00C3  
                                                ?_cf_checkout 0030  
                                              ??_check_idtest 00B4  
                                                ?_cf_checksum 0030  
                                         _bouton_refresh$2033 0051  
                                               __size_of_main 007C  
                                               __size_of_itoa 0090  
                                              ?_High_priority 0030  
                                               __size_of_utoa 00F4  
                                          __end_of_micro_wait 2482  
                                               ?_arm_UAlim_1A 00B9  
                                           ??_check_program_0 0054  
                                                 ??_ecran_dot 004F  
                                       __end_of_cf_checkrange 2994  
                                                ?_check_UAlim 00B9  
                                       ?_cf_check_and_display 0030  
                                              ?_feu_check_end 0030  
                                             ??_ecran_refresh 0052  
                                                  _INTCONbits 000FF2  
                                              cf_checkrange@i 0051  
                                                    itoa@base 00B2  
                                                 ??_hw_config 004F  
                                                    intlevel1 2D9A  
                                                    intlevel2 2D9A  
                                         cf_checkout@last_out 0057  
                                            ___lwmod@dividend 004F  
                                       __size_of_test_process 05C8  
                                              ??_arm_UAlim_1A 00BB  
                                               cf_check@valid 00AF  
                                     __end_of_ecran_raz_digit 2D94  
                                    __size_of_micro_config_rs 001A  
                                                ?_ecran_blank 0030  
                                                ?_ecran_digit 0030  
                                         check_comutest@State 0055  
                                               ?_feu_check_bp 0030  
                                     __end_of_ecran_print_num 228C  
                                                    utoa@base 00AC  
                                             ___lwmod@divisor 0051  
                                          ecran_print_num@Num 00B0  
                                             HexToAscii@Value 0050  
                                             ___lwmod@counter 0054  
                                                _test_process 0616  
                                             ??_High_priority 0030  
                                     __size_of_register_write 0036  
                                               ?_eeprom_write 004F  
                                                ?_eeprom_read 0030  
                                          eeprom_read@Address 004F  
                                          _eeprom_write_array 2BC6  
                                                ?_feu_process 0030  
                                   __size_of_armement_process 0186  
