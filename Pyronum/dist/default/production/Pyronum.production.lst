

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Thu Jul 25 01:06:58 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           	psect	idataBANK0
    77  003650                     __pidataBANK0:
    78                           	opt stack 0
    79                           
    80                           ;initializer for _PrintTest
    81  003650  33                 	db	51
    82  003651  34                 	db	52
    83  003652  35                 	db	53
    84  003653  36                 	db	54
    85  003654  00                 	db	0
    86                           
    87                           	psect	smallconst
    88  000600                     __psmallconst:
    89                           	opt stack 0
    90  000600  00                 	db	0
    91  000601                     _Armed:
    92                           	opt stack 0
    93  000601  2D                 	db	45
    94  000602  20                 	db	32
    95  000603  20                 	db	32
    96  000604  20                 	db	32
    97  000605  00                 	db	0
    98  000606                     __end_of_Armed:
    99                           	opt stack 0
   100  000606                     _Blank:
   101                           	opt stack 0
   102  000606  20                 	db	32
   103  000607  20                 	db	32
   104  000608  20                 	db	32
   105  000609  20                 	db	32
   106  00060A  00                 	db	0
   107  00060B                     __end_of_Blank:
   108                           	opt stack 0
   109  00060B                     _ErreurTir:
   110                           	opt stack 0
   111  00060B  45                 	db	69
   112  00060C  5F                 	db	95
   113  00060D  74                 	db	116
   114  00060E  20                 	db	32
   115  00060F  00                 	db	0
   116  000610                     __end_of_ErreurTir:
   117                           	opt stack 0
   118  000610                     _Version:
   119                           	opt stack 0
   120  000610  30                 	db	48
   121  000611  30                 	db	48
   122  000612  30                 	db	48
   123  000613  39                 	db	57
   124  000614  00                 	db	0
   125  000615                     __end_of_Version:
   126                           	opt stack 0
   127  0000                     _ADCON0	set	4034
   128  0000                     _ADCON0bits	set	4034
   129  0000                     _ADCON1	set	4033
   130  0000                     _ADRESH	set	4036
   131  0000                     _ADRESL	set	4035
   132  0000                     _EEADR	set	4009
   133  0000                     _EECON2	set	4007
   134  0000                     _EEDATA	set	4008
   135  0000                     _INTCONbits	set	4082
   136  0000                     _PORTA	set	3968
   137  0000                     _PORTAbits	set	3968
   138  0000                     _PORTB	set	3969
   139  0000                     _PORTBbits	set	3969
   140  0000                     _PORTC	set	3970
   141  0000                     _PORTCbits	set	3970
   142  0000                     _PORTD	set	3971
   143  0000                     _PORTE	set	3972
   144  0000                     _PORTEbits	set	3972
   145  0000                     _RCREG	set	4014
   146  0000                     _RCSTA	set	4011
   147  0000                     _SPBRG	set	4015
   148  0000                     _T0CON	set	4053
   149  0000                     _TMR0H	set	4055
   150  0000                     _TMR0L	set	4054
   151  0000                     _TRISAbits	set	3986
   152  0000                     _TRISBbits	set	3987
   153  0000                     _TRISCbits	set	3988
   154  0000                     _TRISDbits	set	3989
   155  0000                     _TRISEbits	set	3990
   156  0000                     _TXREG	set	4013
   157  0000                     _TXSTA	set	4012
   158  0000                     _CFGS	set	32054
   159  0000                     _EEPGD	set	32055
   160  0000                     _GIE	set	32663
   161  0000                     _IPEN	set	32391
   162  0000                     _PEIE	set	32662
   163  0000                     _RCIE	set	31981
   164  0000                     _RCIF	set	31989
   165  0000                     _RCIP	set	31997
   166  0000                     _RD	set	32048
   167  0000                     _TMR0IE	set	32661
   168  0000                     _TMR0IF	set	32658
   169  0000                     _TMR0IP	set	32650
   170  0000                     _WR	set	32049
   171  0000                     _WREN	set	32050
   172  000615  00                 	db	0	; dummy byte at the end
   173  0000                     
   174                           	psect	nvCOMRAM
   175  000052                     __pnvCOMRAM:
   176                           	opt stack 0
   177  000052                     _Micro:
   178                           	opt stack 0
   179  000052                     	ds	6
   180                           
   181                           ; #config settings
   182  0000                     
   183                           	psect	cinit
   184  0032B2                     __pcinit:
   185                           	opt stack 0
   186  0032B2                     start_initialization:
   187                           	opt stack 0
   188  0032B2                     __initialization:
   189                           	opt stack 0
   190                           
   191                           ; Clear objects allocated to BANK1 (107 bytes)
   192  0032B2  EE01  F000         	lfsr	0,__pbssBANK1
   193  0032B6  0E6B               	movlw	107
   194  0032B8                     clear_0:
   195  0032B8  6AEE               	clrf	postinc0,c
   196  0032BA  06E8               	decf	wreg,f,c
   197  0032BC  E1FD               	bnz	clear_0
   198                           
   199                           ; Clear objects allocated to BANK0 (58 bytes)
   200  0032BE  EE00  F080         	lfsr	0,__pbssBANK0
   201  0032C2  0E3A               	movlw	58
   202  0032C4                     clear_1:
   203  0032C4  6AEE               	clrf	postinc0,c
   204  0032C6  06E8               	decf	wreg,f,c
   205  0032C8  E1FD               	bnz	clear_1
   206                           
   207                           ; Clear objects allocated to COMRAM (36 bytes)
   208  0032CA  EE00  F02E         	lfsr	0,__pbssCOMRAM
   209  0032CE  0E24               	movlw	36
   210  0032D0                     clear_2:
   211  0032D0  6AEE               	clrf	postinc0,c
   212  0032D2  06E8               	decf	wreg,f,c
   213  0032D4  E1FD               	bnz	clear_2
   214                           
   215                           ; Initialize objects allocated to BANK0 (5 bytes)
   216                           ; load TBLPTR registers with __pidataBANK0
   217  0032D6  0E50               	movlw	low __pidataBANK0
   218  0032D8  6EF6               	movwf	tblptrl,c
   219  0032DA  0E36               	movlw	high __pidataBANK0
   220  0032DC  6EF7               	movwf	tblptrh,c
   221  0032DE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   222  0032E0  6EF8               	movwf	tblptru,c
   223  0032E2  EE00  F0E5         	lfsr	0,__pdataBANK0
   224  0032E6  EE10 F005          	lfsr	1,5
   225  0032EA                     copy_data0:
   226  0032EA  0009               	tblrd		*+
   227  0032EC  CFF5 FFEE          	movff	tablat,postinc0
   228  0032F0  50E5               	movf	postdec1,w,c
   229  0032F2  50E1               	movf	fsr1l,w,c
   230  0032F4  E1FA               	bnz	copy_data0
   231  0032F6                     end_of_initialization:
   232                           	opt stack 0
   233  0032F6                     __end_of__initialization:
   234                           	opt stack 0
   235  0032F6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   236  0032F8  6EF8               	movwf	tblptru,c
   237  0032FA  0100               	movlb	0
   238  0032FC  EF46  F017         	goto	_main	;jump to C main() function
   239                           tblptru	equ	0xFF8
   240                           tblptrh	equ	0xFF7
   241                           tblptrl	equ	0xFF6
   242                           tablat	equ	0xFF5
   243                           postinc0	equ	0xFEE
   244                           wreg	equ	0xFE8
   245                           postdec1	equ	0xFE5
   246                           fsr1l	equ	0xFE1
   247                           
   248                           	psect	bssCOMRAM
   249  00002E                     __pbssCOMRAM:
   250                           	opt stack 0
   251  00002E                     _Test:
   252                           	opt stack 0
   253  00002E                     	ds	31
   254  00004D                     _Cpt1Sur20s:
   255                           	opt stack 0
   256  00004D                     	ds	2
   257  00004F                     _Cptms:
   258                           	opt stack 0
   259  00004F                     	ds	2
   260  000051                     _Decompte:
   261                           	opt stack 0
   262  000051                     	ds	1
   263                           tblptru	equ	0xFF8
   264                           tblptrh	equ	0xFF7
   265                           tblptrl	equ	0xFF6
   266                           tablat	equ	0xFF5
   267                           postinc0	equ	0xFEE
   268                           wreg	equ	0xFE8
   269                           postdec1	equ	0xFE5
   270                           fsr1l	equ	0xFE1
   271                           
   272                           	psect	bssBANK0
   273  000080                     __pbssBANK0:
   274                           	opt stack 0
   275  000080                     _Feu:
   276                           	opt stack 0
   277  000080                     	ds	14
   278  00008E                     _Bouton:
   279                           	opt stack 0
   280  00008E                     	ds	12
   281  00009A                     _Arm:
   282                           	opt stack 0
   283  00009A                     	ds	7
   284  0000A1                     _Feedback:
   285                           	opt stack 0
   286  0000A1                     	ds	5
   287  0000A6                     _Register:
   288                           	opt stack 0
   289  0000A6                     	ds	4
   290  0000AA                     _Ecran:
   291                           	opt stack 0
   292  0000AA                     	ds	16
   293                           tblptru	equ	0xFF8
   294                           tblptrh	equ	0xFF7
   295                           tblptrl	equ	0xFF6
   296                           tablat	equ	0xFF5
   297                           postinc0	equ	0xFEE
   298                           wreg	equ	0xFE8
   299                           postdec1	equ	0xFE5
   300                           fsr1l	equ	0xFE1
   301                           
   302                           	psect	dataBANK0
   303  0000E5                     __pdataBANK0:
   304                           	opt stack 0
   305  0000E5                     _PrintTest:
   306                           	opt stack 0
   307  0000E5                     	ds	5
   308                           tblptru	equ	0xFF8
   309                           tblptrh	equ	0xFF7
   310                           tblptrl	equ	0xFF6
   311                           tablat	equ	0xFF5
   312                           postinc0	equ	0xFEE
   313                           wreg	equ	0xFE8
   314                           postdec1	equ	0xFE5
   315                           fsr1l	equ	0xFE1
   316                           
   317                           	psect	bssBANK1
   318  000100                     __pbssBANK1:
   319                           	opt stack 0
   320  000100                     _Cf:
   321                           	opt stack 0
   322  000100                     	ds	107
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           postdec1	equ	0xFE5
   330                           fsr1l	equ	0xFE1
   331                           
   332                           	psect	cstackBANK0
   333  0000BA                     __pcstackBANK0:
   334                           	opt stack 0
   335  0000BA                     ??_bouton_refresh:
   336  0000BA                     ??_register_write:
   337  0000BA                     ??_ecran_blank:
   338  0000BA                     ??_cf_checksum:
   339  0000BA                     ??_cf_checkrange:
   340  0000BA                     ?___awmod:
   341                           	opt stack 0
   342  0000BA                     ?___lwdiv:
   343                           	opt stack 0
   344  0000BA                     ?___lwmod:
   345                           	opt stack 0
   346  0000BA                     ?___wmul:
   347                           	opt stack 0
   348  0000BA                     ?___ftpack:
   349                           	opt stack 0
   350  0000BA                     ?___fttol:
   351                           	opt stack 0
   352  0000BA                     ecran_digit@Char:
   353                           	opt stack 0
   354  0000BA                     ecran_dot@Dot:
   355                           	opt stack 0
   356  0000BA                     eeprom_read@Address:
   357                           	opt stack 0
   358  0000BA                     eeprom_write@Address:
   359                           	opt stack 0
   360  0000BA                     HexToAscii@character:
   361                           	opt stack 0
   362  0000BA                     ___lbdiv@divisor:
   363                           	opt stack 0
   364  0000BA                     delay_ms@TimeToWait:
   365                           	opt stack 0
   366  0000BA                     ___awmod@dividend:
   367                           	opt stack 0
   368  0000BA                     ___lwdiv@dividend:
   369                           	opt stack 0
   370  0000BA                     ___lwmod@dividend:
   371                           	opt stack 0
   372  0000BA                     ___wmul@multiplier:
   373                           	opt stack 0
   374  0000BA                     ___ftpack@arg:
   375                           	opt stack 0
   376  0000BA                     ___fttol@f1:
   377                           	opt stack 0
   378                           
   379                           ; 3 bytes @ 0x0
   380  0000BA                     	ds	1
   381  0000BB                     ??_ecran_wait:
   382  0000BB                     ??___lbdiv:
   383  0000BB                     ecran_print_one_char@Character:
   384                           	opt stack 0
   385  0000BB                     eeprom_write@Data:
   386                           	opt stack 0
   387  0000BB                     cf_checkrange@valid:
   388                           	opt stack 0
   389  0000BB                     HexToAscii@Value:
   390                           	opt stack 0
   391  0000BB                     register_write@Output:
   392                           	opt stack 0
   393  0000BB                     eeprom_read_array@pData:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x1
   397  0000BB                     	ds	1
   398  0000BC                     ??_delay_ms:
   399  0000BC                     ecran_print_one_char@Digit:
   400                           	opt stack 0
   401  0000BC                     cf_checkrange@i:
   402                           	opt stack 0
   403  0000BC                     register_write@i:
   404                           	opt stack 0
   405  0000BC                     ___lbdiv@dividend:
   406                           	opt stack 0
   407  0000BC                     eeprom_write_array@pData:
   408                           	opt stack 0
   409  0000BC                     _bouton_refresh$2134:
   410                           	opt stack 0
   411  0000BC                     ___awmod@divisor:
   412                           	opt stack 0
   413  0000BC                     ___lwdiv@divisor:
   414                           	opt stack 0
   415  0000BC                     ___lwmod@divisor:
   416                           	opt stack 0
   417  0000BC                     ___wmul@multiplicand:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x2
   421  0000BC                     	ds	1
   422  0000BD                     ??_check_bpon:
   423  0000BD                     ??_ecran_refresh:
   424  0000BD                     eeprom_read_array@Address:
   425                           	opt stack 0
   426  0000BD                     ___ftpack@exp:
   427                           	opt stack 0
   428  0000BD                     ___lbdiv@counter:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0x3
   432  0000BD                     	ds	1
   433  0000BE                     ??___awmod:
   434  0000BE                     ??___fttol:
   435  0000BE                     ??___lwdiv:
   436  0000BE                     ??___lwmod:
   437  0000BE                     eeprom_read_array@NbData:
   438                           	opt stack 0
   439  0000BE                     eeprom_write_array@Address:
   440                           	opt stack 0
   441  0000BE                     bouton_refresh@temp:
   442                           	opt stack 0
   443  0000BE                     ___ftpack@sign:
   444                           	opt stack 0
   445  0000BE                     ___lbdiv@quotient:
   446                           	opt stack 0
   447  0000BE                     delay_ms@temp:
   448                           	opt stack 0
   449  0000BE                     ___wmul@product:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x4
   453  0000BE                     	ds	1
   454  0000BF                     ??_check_comutest:
   455  0000BF                     ??_check_program_0:
   456  0000BF                     ??___ftpack:
   457  0000BF                     ??_eeprom_read_array:
   458  0000BF                     eeprom_write_array@NbData:
   459                           	opt stack 0
   460  0000BF                     bouton_refresh@i:
   461                           	opt stack 0
   462  0000BF                     ___awmod@counter:
   463                           	opt stack 0
   464  0000BF                     ___lwdiv@counter:
   465                           	opt stack 0
   466  0000BF                     ___lwmod@counter:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0x5
   470  0000BF                     	ds	1
   471  0000C0                     ??_eeprom_write_array:
   472  0000C0                     ??_cf_checkout:
   473  0000C0                     ?_ana_read:
   474                           	opt stack 0
   475  0000C0                     eeprom_read_array@i:
   476                           	opt stack 0
   477  0000C0                     check_comutest@State:
   478                           	opt stack 0
   479  0000C0                     check_program_0@ret:
   480                           	opt stack 0
   481  0000C0                     feu_tir@Output:
   482                           	opt stack 0
   483  0000C0                     ___awmod@sign:
   484                           	opt stack 0
   485  0000C0                     ___lwdiv@quotient:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x6
   489  0000C0                     	ds	1
   490  0000C1                     ??_micro_wait:
   491  0000C1                     ??_feu_process:
   492  0000C1                     ?_DecToStr:
   493                           	opt stack 0
   494  0000C1                     eeprom_write_array@i:
   495                           	opt stack 0
   496  0000C1                     cf_checkout@valid:
   497                           	opt stack 0
   498  0000C1                     DecToStr@result:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x7
   502  0000C1                     	ds	1
   503  0000C2                     ??_ana_read:
   504  0000C2                     ?___lwtoft:
   505                           	opt stack 0
   506  0000C2                     cf_checkout@last_out:
   507                           	opt stack 0
   508  0000C2                     utoa@buf:
   509                           	opt stack 0
   510  0000C2                     ___lwtoft@c:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x8
   514  0000C2                     	ds	1
   515  0000C3                     ??_DecToStr:
   516  0000C3                     cf_checkout@i:
   517                           	opt stack 0
   518  0000C3                     ana_read@ANx:
   519                           	opt stack 0
   520  0000C3                     ___fttol@sign1:
   521                           	opt stack 0
   522  0000C3                     micro_wait@tempTime:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x9
   526  0000C3                     	ds	1
   527  0000C4                     ana_read@temp:
   528                           	opt stack 0
   529  0000C4                     utoa@val:
   530                           	opt stack 0
   531  0000C4                     ___fttol@lval:
   532                           	opt stack 0
   533                           
   534                           ; 4 bytes @ 0xA
   535  0000C4                     	ds	1
   536  0000C5                     ??___lwtoft:
   537  0000C5                     _micro_wait$2387:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0xB
   541  0000C5                     	ds	1
   542  0000C6                     cf_checksum@valid:
   543                           	opt stack 0
   544  0000C6                     utoa@base:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0xC
   548  0000C6                     	ds	1
   549  0000C7                     ?___ftmul:
   550                           	opt stack 0
   551  0000C7                     cf_checksum@i:
   552                           	opt stack 0
   553  0000C7                     DecToStr@compareValue:
   554                           	opt stack 0
   555  0000C7                     ___ftmul@f1:
   556                           	opt stack 0
   557                           
   558                           ; 3 bytes @ 0xD
   559  0000C7                     	ds	1
   560  0000C8                     ___fttol@exp1:
   561                           	opt stack 0
   562  0000C8                     utoa@v:
   563                           	opt stack 0
   564  0000C8                     cf_checksum@calcul:
   565                           	opt stack 0
   566                           
   567                           ; 4 bytes @ 0xE
   568  0000C8                     	ds	1
   569  0000C9                     DecToStr@value:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0xF
   573  0000C9                     	ds	1
   574  0000CA                     DecToStr@power10:
   575                           	opt stack 0
   576  0000CA                     utoa@c:
   577                           	opt stack 0
   578  0000CA                     ___ftmul@f2:
   579                           	opt stack 0
   580                           
   581                           ; 3 bytes @ 0x10
   582  0000CA                     	ds	1
   583  0000CB                     ??_ecran_print_num:
   584  0000CB                     itoa@buf:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x11
   588  0000CB                     	ds	1
   589  0000CC                     ??_cf_check:
   590  0000CC                     ecran_print_num@Num:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x12
   594  0000CC                     	ds	1
   595  0000CD                     ??___ftmul:
   596  0000CD                     cf_check@valid:
   597                           	opt stack 0
   598  0000CD                     ecran_print_num@tempStr:
   599                           	opt stack 0
   600  0000CD                     itoa@val:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x13
   604  0000CD                     	ds	1
   605  0000CE                     ??_cf_check_and_display:
   606  0000CE                     ??_cf_rcv:
   607                           
   608                           ; 0 bytes @ 0x14
   609  0000CE                     	ds	1
   610  0000CF                     ??_feu_check_bp:
   611  0000CF                     itoa@base:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x15
   615  0000CF                     	ds	1
   616  0000D0                     cf_rcv@temp:
   617                           	opt stack 0
   618  0000D0                     ___ftmul@exp:
   619                           	opt stack 0
   620  0000D0                     cf_check_and_display@temp:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0x16
   624  0000D0                     	ds	1
   625  0000D1                     cf_rcv@i:
   626                           	opt stack 0
   627  0000D1                     itoa@cp:
   628                           	opt stack 0
   629  0000D1                     ___ftmul@f3_as_product:
   630                           	opt stack 0
   631                           
   632                           ; 3 bytes @ 0x17
   633  0000D1                     	ds	1
   634  0000D2                     ??_check_idtest:
   635  0000D2                     cf_check_and_display@configOk:
   636                           	opt stack 0
   637                           
   638                           ; 1 bytes @ 0x18
   639  0000D2                     	ds	2
   640  0000D4                     ___ftmul@cntr:
   641                           	opt stack 0
   642                           
   643                           ; 1 bytes @ 0x1A
   644  0000D4                     	ds	1
   645  0000D5                     ___ftmul@sign:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x1B
   649  0000D5                     	ds	1
   650  0000D6                     ?_check_UAlim:
   651                           	opt stack 0
   652  0000D6                     ?_check_UInfla:
   653                           	opt stack 0
   654  0000D6                     ?_arm_UAlim_1A:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x1C
   658  0000D6                     	ds	2
   659  0000D8                     ??_check_UAlim:
   660  0000D8                     ??_check_UInfla:
   661  0000D8                     ??_arm_UAlim_1A:
   662                           
   663                           ; 0 bytes @ 0x1E
   664  0000D8                     	ds	4
   665  0000DC                     check_UAlim@temp:
   666                           	opt stack 0
   667  0000DC                     check_UInfla@temp:
   668                           	opt stack 0
   669  0000DC                     arm_UAlim_1A@temp:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x22
   673  0000DC                     	ds	2
   674  0000DE                     ??_test_process:
   675  0000DE                     ??_armement_process:
   676                           
   677                           ; 0 bytes @ 0x24
   678  0000DE                     	ds	2
   679  0000E0                     test_process@ret:
   680                           	opt stack 0
   681  0000E0                     armement_process@temp:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x26
   685  0000E0                     	ds	1
   686  0000E1                     test_process@temp:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x27
   690  0000E1                     	ds	2
   691  0000E3                     ??_main:
   692                           
   693                           ; 0 bytes @ 0x29
   694  0000E3                     	ds	1
   695  0000E4                     main@cpt:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x2A
   699  0000E4                     	ds	1
   700                           tblptru	equ	0xFF8
   701                           tblptrh	equ	0xFF7
   702                           tblptrl	equ	0xFF6
   703                           tablat	equ	0xFF5
   704                           postinc0	equ	0xFEE
   705                           wreg	equ	0xFE8
   706                           postdec1	equ	0xFE5
   707                           fsr1l	equ	0xFE1
   708                           
   709                           	psect	cstackCOMRAM
   710  000001                     __pcstackCOMRAM:
   711                           	opt stack 0
   712  000001                     ?___awdiv:
   713                           	opt stack 0
   714  000001                     ___awdiv@dividend:
   715                           	opt stack 0
   716                           
   717                           ; 2 bytes @ 0x0
   718  000001                     	ds	2
   719  000003                     ___awdiv@divisor:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x2
   723  000003                     	ds	2
   724  000005                     ??___awdiv:
   725                           
   726                           ; 0 bytes @ 0x4
   727  000005                     	ds	1
   728  000006                     ___awdiv@counter:
   729                           	opt stack 0
   730                           
   731                           ; 1 bytes @ 0x5
   732  000006                     	ds	1
   733  000007                     ___awdiv@sign:
   734                           	opt stack 0
   735                           
   736                           ; 1 bytes @ 0x6
   737  000007                     	ds	1
   738  000008                     ___awdiv@quotient:
   739                           	opt stack 0
   740                           
   741                           ; 2 bytes @ 0x7
   742  000008                     	ds	2
   743  00000A                     ??_High_priority:
   744                           
   745                           ; 0 bytes @ 0x9
   746  00000A                     	ds	19
   747  00001D                     ??_Low_priority:
   748                           
   749                           ; 0 bytes @ 0x1C
   750  00001D                     	ds	17
   751                           tblptru	equ	0xFF8
   752                           tblptrh	equ	0xFF7
   753                           tblptrl	equ	0xFF6
   754                           tablat	equ	0xFF5
   755                           postinc0	equ	0xFEE
   756                           wreg	equ	0xFE8
   757                           postdec1	equ	0xFE5
   758                           fsr1l	equ	0xFE1
   759                           
   760 ;;
   761 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   762 ;;
   763 ;; *************** function _main *****************
   764 ;; Defined at:
   765 ;;		line 132 in file "main.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;		None
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  cpt             1   42[BANK0 ] unsigned char 
   770 ;;  temp            1    0        unsigned char 
   771 ;;  i               1    0        unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;		None               void
   774 ;; Registers used:
   775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   781 ;;      Params:         0       0       0       0       0       0       0
   782 ;;      Locals:         0       1       0       0       0       0       0
   783 ;;      Temps:          0       1       0       0       0       0       0
   784 ;;      Totals:         0       2       0       0       0       0       0
   785 ;;Total ram usage:        2 bytes
   786 ;; Hardware stack levels required when called:    8
   787 ;; This function calls:
   788 ;;		_armement_process
   789 ;;		_bouton_init
   790 ;;		_bouton_refresh
   791 ;;		_cf_check_and_display
   792 ;;		_check_bpon
   793 ;;		_check_comutest
   794 ;;		_check_idtest
   795 ;;		_check_program_0
   796 ;;		_ecran_refresh
   797 ;;		_feu_check_bp
   798 ;;		_feu_process
   799 ;;		_hw_config
   800 ;;		_micro_config
   801 ;;		_micro_wait
   802 ;;		_test_process
   803 ;; This function is called by:
   804 ;;		Startup code after reset
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text0
   809  002E8C                     __ptext0:
   810                           	opt stack 0
   811  002E8C                     _main:
   812                           	opt stack 23
   813                           
   814                           ;incstack = 0
   815  002E8C  FFFF               	dw	65535
   816                           
   817                           ;main.c: 134: unsigned char i, temp, cpt = 0;
   818  002E8E  0100               	movlb	0	; () banked
   819  002E90  6FE3               	movwf	??_main& (0+255),b
   820  002E92  0E00               	movlw	0
   821  002E94  0100               	movlb	0	; () banked
   822  002E96  0100               	movlb	0	; () banked
   823  002E98  6FE4               	movwf	main@cpt& (0+255),b
   824  002E9A  0100               	movlb	0	; () banked
   825  002E9C  51E3               	movf	??_main& (0+255),w,b
   826                           
   827                           ; BSR set to: 0
   828                           ;main.c: 137: hw_config();
   829  002E9E  EC56  F018         	call	_hw_config	;wreg free
   830                           
   831                           ;main.c: 138: micro_config();
   832  002EA2  EC98  F01A         	call	_micro_config	;wreg free
   833                           
   834                           ;main.c: 141: check_comutest(0);
   835  002EA6  0E00               	movlw	0
   836  002EA8  ECDE  F018         	call	_check_comutest
   837                           
   838                           ;main.c: 144: if (check_program_0() == 0)
   839  002EAC  ECB4  F018         	call	_check_program_0	;wreg free
   840  002EB0  0900               	iorlw	0
   841  002EB2  A4D8               	btfss	status,2,c
   842  002EB4  D006               	goto	l6760
   843                           
   844                           ;main.c: 145: {
   845                           ;main.c: 147: check_idtest();
   846  002EB6  ECB0  F01A         	call	_check_idtest	;wreg free
   847                           
   848                           ;main.c: 150: check_bpon();
   849  002EBA  EC86  F018         	call	_check_bpon	;wreg free
   850                           
   851                           ;main.c: 153: cf_check_and_display();
   852  002EBE  EC3D  F00D         	call	_cf_check_and_display	;wreg free
   853  002EC2                     l6760:
   854                           
   855                           ;main.c: 154: }
   856                           ;main.c: 156: bouton_init();
   857  002EC2  ECA7  F019         	call	_bouton_init	;wreg free
   858  002EC6                     l6762:
   859                           
   860                           ;main.c: 159: {
   861                           ;main.c: 160: bouton_refresh();
   862  002EC6  ECC4  F008         	call	_bouton_refresh	;wreg free
   863                           
   864                           ;main.c: 161: ecran_refresh();
   865  002ECA  ECC4  F015         	call	_ecran_refresh	;wreg free
   866                           
   867                           ;main.c: 163: switch (Micro.Phase)
   868  002ECE  D00E               	goto	l6776
   869  002ED0                     l6766:
   870                           
   871                           ;main.c: 166: micro_wait();
   872  002ED0  EC10  F010         	call	_micro_wait	;wreg free
   873                           
   874                           ;main.c: 167: break;
   875  002ED4  D7F8               	goto	l6762
   876  002ED6                     l6768:
   877                           
   878                           ;main.c: 169: test_process();
   879  002ED6  EC0B  F003         	call	_test_process	;wreg free
   880                           
   881                           ;main.c: 170: break;
   882  002EDA  D7F5               	goto	l6762
   883  002EDC                     l6770:
   884                           
   885                           ;main.c: 172: armement_process();
   886  002EDC  EC72  F00C         	call	_armement_process	;wreg free
   887                           
   888                           ;main.c: 173: break;
   889  002EE0  D7F2               	goto	l6762
   890  002EE2                     l6772:
   891                           
   892                           ;main.c: 175: feu_process();
   893  002EE2  EC8F  F007         	call	_feu_process	;wreg free
   894                           
   895                           ;main.c: 176: feu_check_bp();
   896  002EE6  ECA0  F00B         	call	_feu_check_bp	;wreg free
   897                           
   898                           ;main.c: 177: break;
   899  002EEA  D7ED               	goto	l6762
   900  002EEC                     l6776:
   901  002EEC  5054               	movf	_Micro+2,w,c
   902                           
   903                           ; Switch size 1, requested type "space"
   904                           ; Number of cases is 4, Range of values is 0 to 3
   905                           ; switch strategies available:
   906                           ; Name         Instructions Cycles
   907                           ; simple_byte           13     7 (average)
   908                           ;	Chosen strategy is simple_byte
   909  002EEE  0A00               	xorlw	0	; case 0
   910  002EF0  B4D8               	btfsc	status,2,c
   911  002EF2  D7EE               	goto	l6766
   912  002EF4  0A01               	xorlw	1	; case 1
   913  002EF6  B4D8               	btfsc	status,2,c
   914  002EF8  D7EE               	goto	l6768
   915  002EFA  0A03               	xorlw	3	; case 2
   916  002EFC  B4D8               	btfsc	status,2,c
   917  002EFE  D7EE               	goto	l6770
   918  002F00  0A01               	xorlw	1	; case 3
   919  002F02  B4D8               	btfsc	status,2,c
   920  002F04  D7EE               	goto	l6772
   921  002F06  D7DF               	goto	l6762
   922  002F08                     __end_of_main:
   923                           	opt stack 0
   924                           tblptru	equ	0xFF8
   925                           tblptrh	equ	0xFF7
   926                           tblptrl	equ	0xFF6
   927                           tablat	equ	0xFF5
   928                           postinc0	equ	0xFEE
   929                           wreg	equ	0xFE8
   930                           postdec1	equ	0xFE5
   931                           fsr1l	equ	0xFE1
   932                           status	equ	0xFD8
   933                           
   934 ;; *************** function _test_process *****************
   935 ;; Defined at:
   936 ;;		line 102 in file "test.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;  temp            2   39[BANK0 ] unsigned short 
   941 ;;  ret             1   38[BANK0 ] unsigned char 
   942 ;;  i               1    0        unsigned char 
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      unsigned char 
   945 ;; Registers used:
   946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   952 ;;      Params:         0       0       0       0       0       0       0
   953 ;;      Locals:         0       3       0       0       0       0       0
   954 ;;      Temps:          0       2       0       0       0       0       0
   955 ;;      Totals:         0       5       0       0       0       0       0
   956 ;;Total ram usage:        5 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:    7
   959 ;; This function calls:
   960 ;;		_check_UAlim
   961 ;;		_check_UInfla
   962 ;;		_check_comutest
   963 ;;		_ecran_blank
   964 ;;		_ecran_print_num
   965 ;;		_ecran_wait
   966 ;;		_itoa
   967 ;;		_register_write
   968 ;; This function is called by:
   969 ;;		_main
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           	psect	text1
   974  000616                     __ptext1:
   975                           	opt stack 0
   976  000616                     _test_process:
   977                           	opt stack 23
   978                           
   979                           ;incstack = 0
   980  000616  FFFF               	dw	65535
   981                           
   982                           ;test.c: 104: unsigned short temp;
   983                           ;test.c: 105: unsigned char i, ret = 0;
   984  000618  0100               	movlb	0	; () banked
   985  00061A  6FDE               	movwf	??_test_process& (0+255),b
   986  00061C  0E00               	movlw	0
   987  00061E  0100               	movlb	0	; () banked
   988  000620  0100               	movlb	0	; () banked
   989  000622  6FE0               	movwf	test_process@ret& (0+255),b
   990  000624  0100               	movlb	0	; () banked
   991  000626  51DE               	movf	??_test_process& (0+255),w,b
   992                           
   993                           ;test.c: 107: switch(Test.Step)
   994  000628  D2A4               	goto	l6580
   995  00062A                     l564:
   996                           
   997                           ; BSR set to: 0
   998                           ;test.c: 110: if (Bouton[Bp_IdTest].State == 1)
   999  00062A  0100               	movlb	0	; () banked
  1000  00062C  A393               	btfss	(_Bouton+5)& (0+255),1,b
  1001  00062E  D2D5               	goto	l616
  1002                           
  1003                           ; BSR set to: 0
  1004                           ;test.c: 111: {
  1005                           ;test.c: 112: Test.Step = 0x02;
  1006  000630  0100               	movlb	0	; () banked
  1007  000632  6FDE               	movwf	??_test_process& (0+255),b
  1008  000634  0E02               	movlw	2
  1009  000636  D270               	goto	L13
  1010  000638                     l6410:
  1011                           
  1012                           ; BSR set to: 0
  1013                           ;test.c: 117: check_comutest(0);
  1014  000638  0E00               	movlw	0
  1015  00063A  ECDE  F018         	call	_check_comutest
  1016                           
  1017                           ;test.c: 119: Test.Cpt = 0;
  1018  00063E  0100               	movlb	0	; () banked
  1019  000640  6FDE               	movwf	??_test_process& (0+255),b
  1020  000642  0E00               	movlw	0
  1021  000644  6E2F               	movwf	_Test+1,c
  1022  000646  0100               	movlb	0	; () banked
  1023  000648  51DE               	movf	??_test_process& (0+255),w,b
  1024                           
  1025                           ; BSR set to: 0
  1026                           ;test.c: 121: temp = check_UAlim();
  1027  00064A  EC85  F014         	call	_check_UAlim	;wreg free
  1028  00064E  0100               	movlb	0	; () banked
  1029  000650  C0D6  F0E1         	movff	?_check_UAlim,test_process@temp
  1030  000654  0100               	movlb	0	; () banked
  1031  000656  C0D7  F0E2         	movff	?_check_UAlim+1,test_process@temp+1
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;test.c: 123: Ecran.Digits = PrintTest;
  1035  00065A  0100               	movlb	0	; () banked
  1036  00065C  0E00               	movlw	high _PrintTest
  1037  00065E  0100               	movlb	0	; () banked
  1038  000660  0100               	movlb	0	; () banked
  1039  000662  6FAF               	movwf	(_Ecran+5)& (0+255),b
  1040  000664  0100               	movlb	0	; () banked
  1041  000666  0EE5               	movlw	low _PrintTest
  1042  000668  0100               	movlb	0	; () banked
  1043  00066A  0100               	movlb	0	; () banked
  1044  00066C  6FAE               	movwf	(_Ecran+4)& (0+255),b
  1045                           
  1046                           ; BSR set to: 0
  1047                           ;test.c: 125: itoa(Ecran.Digits,temp,10);
  1048  00066E  0100               	movlb	0	; () banked
  1049  000670  0100               	movlb	0	; () banked
  1050  000672  C0AF  F0CC         	movff	_Ecran+5,itoa@buf+1
  1051  000676  0100               	movlb	0	; () banked
  1052  000678  0100               	movlb	0	; () banked
  1053  00067A  C0AE  F0CB         	movff	_Ecran+4,itoa@buf
  1054  00067E  C0E1  F0CD         	movff	test_process@temp,itoa@val
  1055  000682  C0E2  F0CE         	movff	test_process@temp+1,itoa@val+1
  1056  000686  0E00               	movlw	0
  1057  000688  0100               	movlb	0	; () banked
  1058  00068A  0100               	movlb	0	; () banked
  1059  00068C  6FD0               	movwf	(itoa@base+1)& (0+255),b
  1060  00068E  0E0A               	movlw	10
  1061  000690  0100               	movlb	0	; () banked
  1062  000692  6FCF               	movwf	itoa@base& (0+255),b
  1063  000694  EC74  F016         	call	_itoa	;wreg free
  1064                           
  1065                           ;test.c: 127: Ecran.Dot[0] = 0;
  1066  000698  0100               	movlb	0	; () banked
  1067  00069A  6FDE               	movwf	??_test_process& (0+255),b
  1068  00069C  0E00               	movlw	0
  1069  00069E  0100               	movlb	0	; () banked
  1070  0006A0  0100               	movlb	0	; () banked
  1071  0006A2  6FB0               	movwf	(_Ecran+6)& (0+255),b
  1072  0006A4  0100               	movlb	0	; () banked
  1073  0006A6  51DE               	movf	??_test_process& (0+255),w,b
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;test.c: 128: Ecran.Dot[1] = 1;
  1077  0006A8  0100               	movlb	0	; () banked
  1078  0006AA  6FDE               	movwf	??_test_process& (0+255),b
  1079  0006AC  0E01               	movlw	1
  1080  0006AE  0100               	movlb	0	; () banked
  1081  0006B0  0100               	movlb	0	; () banked
  1082  0006B2  6FB1               	movwf	(_Ecran+7)& (0+255),b
  1083  0006B4  0100               	movlb	0	; () banked
  1084  0006B6  51DE               	movf	??_test_process& (0+255),w,b
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;test.c: 129: Ecran.Dot[2] = 0;
  1088  0006B8  0100               	movlb	0	; () banked
  1089  0006BA  6FDE               	movwf	??_test_process& (0+255),b
  1090  0006BC  0E00               	movlw	0
  1091  0006BE  0100               	movlb	0	; () banked
  1092  0006C0  0100               	movlb	0	; () banked
  1093  0006C2  6FB2               	movwf	(_Ecran+8)& (0+255),b
  1094  0006C4  0100               	movlb	0	; () banked
  1095  0006C6  51DE               	movf	??_test_process& (0+255),w,b
  1096                           
  1097                           ; BSR set to: 0
  1098                           ;test.c: 130: Ecran.Dot[3] = 0;
  1099  0006C8  0100               	movlb	0	; () banked
  1100  0006CA  6FDE               	movwf	??_test_process& (0+255),b
  1101  0006CC  0E00               	movlw	0
  1102  0006CE  0100               	movlb	0	; () banked
  1103  0006D0  0100               	movlb	0	; () banked
  1104  0006D2  6FB3               	movwf	(_Ecran+9)& (0+255),b
  1105  0006D4  0100               	movlb	0	; () banked
  1106  0006D6  51DE               	movf	??_test_process& (0+255),w,b
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;test.c: 132: Test.Step = 0x03;
  1110  0006D8  0100               	movlb	0	; () banked
  1111  0006DA  6FDE               	movwf	??_test_process& (0+255),b
  1112  0006DC  0E03               	movlw	3
  1113  0006DE  D21C               	goto	L13
  1114  0006E0                     l568:
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;test.c: 135: if (Bouton[Bp_IdTest].State == 0)
  1118  0006E0  0100               	movlb	0	; () banked
  1119  0006E2  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  1120  0006E4  D27A               	goto	l616
  1121                           
  1122                           ; BSR set to: 0
  1123                           ;test.c: 136: {
  1124                           ;test.c: 137: if (Micro.Mod.P_0 == 0) {Test.Step = 0x04;}
  1125  0006E6  B057               	btfsc	_Micro+5,0,c
  1126  0006E8  D004               	goto	l6434
  1127                           
  1128                           ; BSR set to: 0
  1129  0006EA  0100               	movlb	0	; () banked
  1130  0006EC  6FDE               	movwf	??_test_process& (0+255),b
  1131  0006EE  0E04               	movlw	4
  1132  0006F0  D003               	goto	L3
  1133  0006F2                     l6434:
  1134                           
  1135                           ; BSR set to: 0
  1136                           ;test.c: 138: else {Test.Step = 0x0A;}
  1137  0006F2  0100               	movlb	0	; () banked
  1138  0006F4  6FDE               	movwf	??_test_process& (0+255),b
  1139  0006F6  0E0A               	movlw	10
  1140  0006F8                     L3:
  1141  0006F8  6E2E               	movwf	_Test,c
  1142  0006FA  0100               	movlb	0	; () banked
  1143  0006FC  51DE               	movf	??_test_process& (0+255),w,b
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;test.c: 140: ecran_blank();
  1147                           
  1148                           ; BSR set to: 0
  1149  0006FE  EC23  F018         	call	_ecran_blank	;wreg free
  1150                           
  1151                           ;test.c: 141: check_comutest(0);
  1152  000702  0E00               	movlw	0
  1153  000704  ECDE  F018         	call	_check_comutest
  1154  000708  D11A               	goto	L12
  1155  00070A                     l6442:
  1156                           
  1157                           ;test.c: 146: if (Cf.Data[Test.Cpt*3] == 0)
  1158  00070A  502F               	movf	_Test+1,w,c
  1159  00070C  0D03               	mullw	3
  1160  00070E  0101               	movlb	1	; () banked
  1161  000710  0E00               	movlw	low _Cf	;volatile
  1162  000712  24F3               	addwf	prodl,w,c
  1163  000714  6ED9               	movwf	fsr2l,c
  1164  000716  0101               	movlb	1	; () banked
  1165  000718  0E01               	movlw	high _Cf	;volatile
  1166  00071A  20F4               	addwfc	prodh,w,c
  1167  00071C  6EDA               	movwf	fsr2h,c
  1168  00071E  50DF               	movf	indf2,w,c
  1169  000720  A4D8               	btfss	status,2,c
  1170  000722  D004               	goto	l6446
  1171                           
  1172                           ; BSR set to: 1
  1173                           ;test.c: 147: {
  1174                           ;test.c: 149: Test.Step = 0x08;
  1175  000724  0100               	movlb	0	; () banked
  1176  000726  6FDE               	movwf	??_test_process& (0+255),b
  1177  000728  0E08               	movlw	8
  1178  00072A  D1F6               	goto	L13
  1179  00072C                     l6446:
  1180                           
  1181                           ;test.c: 151: else if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1182  00072C  EE20  F030         	lfsr	2,_Test+2
  1183  000730  CFDE F0DE          	movff	postinc2,??_test_process
  1184  000734  CFDD F0DF          	movff	postdec2,??_test_process+1
  1185  000738  0100               	movlb	0	; () banked
  1186  00073A  1FDE               	comf	??_test_process& (0+255),f,b
  1187  00073C  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1188  00073E  4BDE               	infsnz	??_test_process& (0+255),f,b
  1189  000740  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1190  000742  504F               	movf	_Cptms,w,c	;volatile
  1191  000744  0100               	movlb	0	; () banked
  1192  000746  27DE               	addwf	??_test_process& (0+255),f,b
  1193  000748  5050               	movf	_Cptms+1,w,c	;volatile
  1194  00074A  0100               	movlb	0	; () banked
  1195  00074C  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1196  00074E  0E15               	movlw	21
  1197  000750  0100               	movlb	0	; () banked
  1198  000752  5DDE               	subwf	??_test_process& (0+255),w,b
  1199  000754  0E00               	movlw	0
  1200  000756  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1201  000758  A0D8               	btfss	status,0,c
  1202  00075A  D23F               	goto	l616
  1203                           
  1204                           ; BSR set to: 0
  1205                           ;test.c: 152: {
  1206                           ;test.c: 153: register_write(Cf.Data[Test.Cpt*3]);
  1207  00075C  502F               	movf	_Test+1,w,c
  1208  00075E  0D03               	mullw	3
  1209  000760  0101               	movlb	1	; () banked
  1210  000762  0E00               	movlw	low _Cf	;volatile
  1211  000764  24F3               	addwf	prodl,w,c
  1212  000766  6ED9               	movwf	fsr2l,c
  1213  000768  0101               	movlb	1	; () banked
  1214  00076A  0E01               	movlw	high _Cf	;volatile
  1215  00076C  20F4               	addwfc	prodh,w,c
  1216  00076E  6EDA               	movwf	fsr2h,c
  1217  000770  50DF               	movf	indf2,w,c
  1218  000772  EC80  F019         	call	_register_write
  1219                           
  1220                           ;test.c: 154: Test.Step = 0x05;
  1221  000776  0100               	movlb	0	; () banked
  1222  000778  6FDE               	movwf	??_test_process& (0+255),b
  1223  00077A  0E05               	movlw	5
  1224  00077C  6E2E               	movwf	_Test,c
  1225  00077E  0100               	movlb	0	; () banked
  1226  000780  51DE               	movf	??_test_process& (0+255),w,b
  1227  000782  D0DD               	goto	L12
  1228  000784                     l6454:
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;test.c: 159: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1232  000784  EE20  F030         	lfsr	2,_Test+2
  1233  000788  CFDE F0DE          	movff	postinc2,??_test_process
  1234  00078C  CFDD F0DF          	movff	postdec2,??_test_process+1
  1235  000790  0100               	movlb	0	; () banked
  1236  000792  1FDE               	comf	??_test_process& (0+255),f,b
  1237  000794  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1238  000796  4BDE               	infsnz	??_test_process& (0+255),f,b
  1239  000798  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1240  00079A  504F               	movf	_Cptms,w,c	;volatile
  1241  00079C  0100               	movlb	0	; () banked
  1242  00079E  27DE               	addwf	??_test_process& (0+255),f,b
  1243  0007A0  5050               	movf	_Cptms+1,w,c	;volatile
  1244  0007A2  0100               	movlb	0	; () banked
  1245  0007A4  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1246  0007A6  0E15               	movlw	21
  1247  0007A8  0100               	movlb	0	; () banked
  1248  0007AA  5DDE               	subwf	??_test_process& (0+255),w,b
  1249  0007AC  0E00               	movlw	0
  1250  0007AE  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1251  0007B0  A0D8               	btfss	status,0,c
  1252  0007B2  D213               	goto	l616
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;test.c: 160: {
  1256                           ;test.c: 161: temp = check_UInfla();
  1257  0007B4  EC85  F013         	call	_check_UInfla	;wreg free
  1258  0007B8  0100               	movlb	0	; () banked
  1259  0007BA  C0D6  F0E1         	movff	?_check_UInfla,test_process@temp
  1260  0007BE  0100               	movlb	0	; () banked
  1261  0007C0  C0D7  F0E2         	movff	?_check_UInfla+1,test_process@temp+1
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;test.c: 163: if (temp > 85) {Test.Step = 0x07;}
  1265  0007C4  0E56               	movlw	86
  1266  0007C6  0100               	movlb	0	; () banked
  1267  0007C8  0100               	movlb	0	; () banked
  1268  0007CA  5DE1               	subwf	test_process@temp& (0+255),w,b
  1269  0007CC  0E00               	movlw	0
  1270  0007CE  0100               	movlb	0	; () banked
  1271  0007D0  59E2               	subwfb	(test_process@temp+1)& (0+255),w,b
  1272  0007D2  A0D8               	btfss	status,0,c
  1273  0007D4  D004               	goto	l6462
  1274                           
  1275                           ; BSR set to: 0
  1276  0007D6  0100               	movlb	0	; () banked
  1277  0007D8  6FDE               	movwf	??_test_process& (0+255),b
  1278  0007DA  0E07               	movlw	7
  1279  0007DC  D003               	goto	L7
  1280  0007DE                     l6462:
  1281                           
  1282                           ; BSR set to: 0
  1283                           ;test.c: 164: else {Test.Step = 0x06;}
  1284  0007DE  0100               	movlb	0	; () banked
  1285  0007E0  6FDE               	movwf	??_test_process& (0+255),b
  1286  0007E2  0E06               	movlw	6
  1287  0007E4                     L7:
  1288  0007E4  6E2E               	movwf	_Test,c
  1289  0007E6  0100               	movlb	0	; () banked
  1290  0007E8  51DE               	movf	??_test_process& (0+255),w,b
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;test.c: 167: ecran_print_num(Cf.Data[Test.Cpt*3]);
  1294                           
  1295                           ; BSR set to: 0
  1296  0007EA  502F               	movf	_Test+1,w,c
  1297  0007EC  0D03               	mullw	3
  1298  0007EE  0101               	movlb	1	; () banked
  1299  0007F0  0E00               	movlw	low _Cf	;volatile
  1300  0007F2  24F3               	addwf	prodl,w,c
  1301  0007F4  6ED9               	movwf	fsr2l,c
  1302  0007F6  0101               	movlb	1	; () banked
  1303  0007F8  0E01               	movlw	high _Cf	;volatile
  1304  0007FA  20F4               	addwfc	prodh,w,c
  1305  0007FC  6EDA               	movwf	fsr2h,c
  1306  0007FE  50DF               	movf	indf2,w,c
  1307  000800  EC02  F015         	call	_ecran_print_num
  1308                           
  1309                           ;test.c: 168: register_write(0);
  1310  000804  0E00               	movlw	0
  1311  000806  EC80  F019         	call	_register_write
  1312  00080A  D099               	goto	L12
  1313  00080C                     l6470:
  1314                           
  1315                           ;test.c: 174: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1316  00080C  EE20  F030         	lfsr	2,_Test+2
  1317  000810  CFDE F0DE          	movff	postinc2,??_test_process
  1318  000814  CFDD F0DF          	movff	postdec2,??_test_process+1
  1319  000818  0100               	movlb	0	; () banked
  1320  00081A  1FDE               	comf	??_test_process& (0+255),f,b
  1321  00081C  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1322  00081E  4BDE               	infsnz	??_test_process& (0+255),f,b
  1323  000820  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1324  000822  504F               	movf	_Cptms,w,c	;volatile
  1325  000824  0100               	movlb	0	; () banked
  1326  000826  27DE               	addwf	??_test_process& (0+255),f,b
  1327  000828  5050               	movf	_Cptms+1,w,c	;volatile
  1328  00082A  0100               	movlb	0	; () banked
  1329  00082C  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1330  00082E  0E15               	movlw	21
  1331  000830  0100               	movlb	0	; () banked
  1332  000832  5DDE               	subwf	??_test_process& (0+255),w,b
  1333  000834  0E00               	movlw	0
  1334  000836  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1335  000838  A0D8               	btfss	status,0,c
  1336  00083A  D1CF               	goto	l616
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;test.c: 175: {
  1340                           ;test.c: 176: if (++Test.Cpt > 31) {Test.Step = 0x08;}
  1341  00083C  EE20  F02F         	lfsr	2,_Test+1
  1342  000840  2ADF               	incf	indf2,f,c
  1343  000842  0E1F               	movlw	31
  1344  000844  64DF               	cpfsgt	indf2,c
  1345  000846  D004               	goto	l6476
  1346                           
  1347                           ; BSR set to: 0
  1348  000848  0100               	movlb	0	; () banked
  1349  00084A  6FDE               	movwf	??_test_process& (0+255),b
  1350  00084C  0E08               	movlw	8
  1351  00084E  D003               	goto	L9
  1352  000850                     l6476:
  1353                           
  1354                           ; BSR set to: 0
  1355                           ;test.c: 177: else {Test.Step = 0x04;}
  1356  000850  0100               	movlb	0	; () banked
  1357  000852  6FDE               	movwf	??_test_process& (0+255),b
  1358  000854  0E04               	movlw	4
  1359  000856                     L9:
  1360  000856  6E2E               	movwf	_Test,c
  1361  000858  0100               	movlb	0	; () banked
  1362  00085A  51DE               	movf	??_test_process& (0+255),w,b
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;test.c: 178: check_comutest(0);
  1366                           
  1367                           ; BSR set to: 0
  1368  00085C  0E00               	movlw	0
  1369  00085E  ECDE  F018         	call	_check_comutest
  1370  000862  D06D               	goto	L12
  1371  000864                     l584:
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;test.c: 183: if ( (Bouton[Bp_IdTest].State == 0)
  1375                           ;test.c: 184: && ((((unsigned short) (Cptms - Test.Time) > 500) ? 1 : 0)))
  1376  000864  0100               	movlb	0	; () banked
  1377  000866  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  1378  000868  D1B8               	goto	l616
  1379                           
  1380                           ; BSR set to: 0
  1381  00086A  EE20  F030         	lfsr	2,_Test+2
  1382  00086E  CFDE F0DE          	movff	postinc2,??_test_process
  1383  000872  CFDD F0DF          	movff	postdec2,??_test_process+1
  1384  000876  0100               	movlb	0	; () banked
  1385  000878  1FDE               	comf	??_test_process& (0+255),f,b
  1386  00087A  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1387  00087C  4BDE               	infsnz	??_test_process& (0+255),f,b
  1388  00087E  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1389  000880  504F               	movf	_Cptms,w,c	;volatile
  1390  000882  0100               	movlb	0	; () banked
  1391  000884  27DE               	addwf	??_test_process& (0+255),f,b
  1392  000886  5050               	movf	_Cptms+1,w,c	;volatile
  1393  000888  0100               	movlb	0	; () banked
  1394  00088A  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1395  00088C  0EF5               	movlw	245
  1396  00088E  0100               	movlb	0	; () banked
  1397  000890  5DDE               	subwf	??_test_process& (0+255),w,b
  1398  000892  0E01               	movlw	1
  1399  000894  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1400  000896  A0D8               	btfss	status,0,c
  1401  000898  D1A0               	goto	l616
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;test.c: 185: {
  1405                           ;test.c: 186: if (++Test.Cpt > 31) {Test.Step = 0x08;}
  1406  00089A  EE20  F02F         	lfsr	2,_Test+1
  1407  00089E  2ADF               	incf	indf2,f,c
  1408  0008A0  0E1F               	movlw	31
  1409  0008A2  64DF               	cpfsgt	indf2,c
  1410  0008A4  D004               	goto	l6488
  1411                           
  1412                           ; BSR set to: 0
  1413  0008A6  0100               	movlb	0	; () banked
  1414  0008A8  6FDE               	movwf	??_test_process& (0+255),b
  1415  0008AA  0E08               	movlw	8
  1416  0008AC  D003               	goto	L11
  1417  0008AE                     l6488:
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;test.c: 187: else {Test.Step = 0x04;}
  1421  0008AE  0100               	movlb	0	; () banked
  1422  0008B0  6FDE               	movwf	??_test_process& (0+255),b
  1423  0008B2  0E04               	movlw	4
  1424  0008B4                     L11:
  1425  0008B4  6E2E               	movwf	_Test,c
  1426  0008B6  0100               	movlb	0	; () banked
  1427  0008B8  51DE               	movf	??_test_process& (0+255),w,b
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;test.c: 188: check_comutest(0);
  1431                           
  1432                           ; BSR set to: 0
  1433  0008BA  0E00               	movlw	0
  1434  0008BC  ECDE  F018         	call	_check_comutest
  1435  0008C0  D03E               	goto	L12
  1436  0008C2                     l6494:
  1437                           
  1438                           ;test.c: 193: if (Test.Cpt != 0)
  1439  0008C2  502F               	movf	_Test+1,w,c
  1440  0008C4  B4D8               	btfsc	status,2,c
  1441  0008C6  D006               	goto	l6498
  1442                           
  1443                           ;test.c: 194: {
  1444                           ;test.c: 195: ecran_print_num(Cf.Data[96]);
  1445  0008C8  0101               	movlb	1	; () banked
  1446  0008CA  0101               	movlb	1	; () banked
  1447  0008CC  5160               	movf	(_Cf+96)& (0+255),w,b	;volatile
  1448  0008CE  EC02  F015         	call	_ecran_print_num
  1449                           
  1450                           ;test.c: 196: }
  1451  0008D2  D010               	goto	l590
  1452  0008D4                     l6498:
  1453                           
  1454                           ;test.c: 197: else
  1455                           ;test.c: 198: {
  1456                           ;test.c: 199: Ecran.Digit[2] = 0;
  1457  0008D4  0100               	movlb	0	; () banked
  1458  0008D6  6FDE               	movwf	??_test_process& (0+255),b
  1459  0008D8  0E00               	movlw	0
  1460  0008DA  0100               	movlb	0	; () banked
  1461  0008DC  0100               	movlb	0	; () banked
  1462  0008DE  6FAC               	movwf	(_Ecran+2)& (0+255),b
  1463  0008E0  0100               	movlb	0	; () banked
  1464  0008E2  51DE               	movf	??_test_process& (0+255),w,b
  1465                           
  1466                           ;test.c: 200: Ecran.Digit[3] = 0;
  1467  0008E4  0100               	movlb	0	; () banked
  1468  0008E6  6FDE               	movwf	??_test_process& (0+255),b
  1469  0008E8  0E00               	movlw	0
  1470  0008EA  0100               	movlb	0	; () banked
  1471  0008EC  0100               	movlb	0	; () banked
  1472  0008EE  6FAD               	movwf	(_Ecran+3)& (0+255),b
  1473  0008F0  0100               	movlb	0	; () banked
  1474  0008F2  51DE               	movf	??_test_process& (0+255),w,b
  1475  0008F4                     l590:
  1476                           
  1477                           ;test.c: 201: }
  1478                           ;test.c: 203: Ecran.Digit[0] = '-';
  1479  0008F4  0100               	movlb	0	; () banked
  1480  0008F6  6FDE               	movwf	??_test_process& (0+255),b
  1481  0008F8  0E2D               	movlw	45
  1482  0008FA  0100               	movlb	0	; () banked
  1483  0008FC  0100               	movlb	0	; () banked
  1484  0008FE  6FAA               	movwf	_Ecran& (0+255),b
  1485  000900  0100               	movlb	0	; () banked
  1486  000902  51DE               	movf	??_test_process& (0+255),w,b
  1487                           
  1488                           ;test.c: 204: Ecran.Digit[1] = '-';
  1489  000904  0100               	movlb	0	; () banked
  1490  000906  6FDE               	movwf	??_test_process& (0+255),b
  1491  000908  0E2D               	movlw	45
  1492  00090A  0100               	movlb	0	; () banked
  1493  00090C  0100               	movlb	0	; () banked
  1494  00090E  6FAB               	movwf	(_Ecran+1)& (0+255),b
  1495  000910  0100               	movlb	0	; () banked
  1496  000912  51DE               	movf	??_test_process& (0+255),w,b
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;test.c: 206: Ecran.Digits = Ecran.Digit;
  1500  000914  0100               	movlb	0	; () banked
  1501  000916  0E00               	movlw	high _Ecran
  1502  000918  0100               	movlb	0	; () banked
  1503  00091A  0100               	movlb	0	; () banked
  1504  00091C  6FAF               	movwf	(_Ecran+5)& (0+255),b
  1505  00091E  0100               	movlb	0	; () banked
  1506  000920  0EAA               	movlw	low _Ecran
  1507  000922  0100               	movlb	0	; () banked
  1508  000924  0100               	movlb	0	; () banked
  1509  000926  6FAE               	movwf	(_Ecran+4)& (0+255),b
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;test.c: 207: Test.Step = 0x09;
  1513  000928  0100               	movlb	0	; () banked
  1514  00092A  6FDE               	movwf	??_test_process& (0+255),b
  1515  00092C  0E09               	movlw	9
  1516  00092E  D0F4               	goto	L13
  1517  000930                     l591:
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;test.c: 210: if (Bouton[Bp_IdTest].State == 0)
  1521  000930  0100               	movlb	0	; () banked
  1522  000932  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  1523  000934  D152               	goto	l616
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;test.c: 211: {
  1527                           ;test.c: 212: Test.Step = 0x10;
  1528  000936  0100               	movlb	0	; () banked
  1529  000938  6FDE               	movwf	??_test_process& (0+255),b
  1530  00093A  0E10               	movlw	16
  1531  00093C  D71F               	goto	L20
  1532  00093E                     L12:
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;test.c: 214: Test.Time = Cptms;
  1536  00093E  C04F  F030         	movff	_Cptms,_Test+2	;volatile
  1537  000942  C050  F031         	movff	_Cptms+1,_Test+3	;volatile
  1538  000946  D149               	goto	l616
  1539  000948                     l6508:
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;test.c: 218: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1543  000948  EE20  F030         	lfsr	2,_Test+2
  1544  00094C  CFDE F0DE          	movff	postinc2,??_test_process
  1545  000950  CFDD F0DF          	movff	postdec2,??_test_process+1
  1546  000954  0100               	movlb	0	; () banked
  1547  000956  1FDE               	comf	??_test_process& (0+255),f,b
  1548  000958  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1549  00095A  4BDE               	infsnz	??_test_process& (0+255),f,b
  1550  00095C  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1551  00095E  504F               	movf	_Cptms,w,c	;volatile
  1552  000960  0100               	movlb	0	; () banked
  1553  000962  27DE               	addwf	??_test_process& (0+255),f,b
  1554  000964  5050               	movf	_Cptms+1,w,c	;volatile
  1555  000966  0100               	movlb	0	; () banked
  1556  000968  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1557  00096A  0E15               	movlw	21
  1558  00096C  0100               	movlb	0	; () banked
  1559  00096E  5DDE               	subwf	??_test_process& (0+255),w,b
  1560  000970  0E00               	movlw	0
  1561  000972  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1562  000974  A0D8               	btfss	status,0,c
  1563  000976  D131               	goto	l616
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;test.c: 219: {
  1567                           ;test.c: 220: register_write((unsigned char) (Test.Cpt + 1));
  1568  000978  282F               	incf	_Test+1,w,c
  1569  00097A  EC80  F019         	call	_register_write
  1570                           
  1571                           ;test.c: 221: Test.Step = 0x0B;
  1572  00097E  0100               	movlb	0	; () banked
  1573  000980  6FDE               	movwf	??_test_process& (0+255),b
  1574  000982  0E0B               	movlw	11
  1575  000984  D6FB               	goto	L20
  1576  000986                     l6516:
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;test.c: 226: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1580  000986  EE20  F030         	lfsr	2,_Test+2
  1581  00098A  CFDE F0DE          	movff	postinc2,??_test_process
  1582  00098E  CFDD F0DF          	movff	postdec2,??_test_process+1
  1583  000992  0100               	movlb	0	; () banked
  1584  000994  1FDE               	comf	??_test_process& (0+255),f,b
  1585  000996  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1586  000998  4BDE               	infsnz	??_test_process& (0+255),f,b
  1587  00099A  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1588  00099C  504F               	movf	_Cptms,w,c	;volatile
  1589  00099E  0100               	movlb	0	; () banked
  1590  0009A0  27DE               	addwf	??_test_process& (0+255),f,b
  1591  0009A2  5050               	movf	_Cptms+1,w,c	;volatile
  1592  0009A4  0100               	movlb	0	; () banked
  1593  0009A6  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1594  0009A8  0E15               	movlw	21
  1595  0009AA  0100               	movlb	0	; () banked
  1596  0009AC  5DDE               	subwf	??_test_process& (0+255),w,b
  1597  0009AE  0E00               	movlw	0
  1598  0009B0  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1599  0009B2  A0D8               	btfss	status,0,c
  1600  0009B4  D112               	goto	l616
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;test.c: 227: {
  1604                           ;test.c: 228: temp = check_UInfla();
  1605  0009B6  EC85  F013         	call	_check_UInfla	;wreg free
  1606  0009BA  0100               	movlb	0	; () banked
  1607  0009BC  C0D6  F0E1         	movff	?_check_UInfla,test_process@temp
  1608  0009C0  0100               	movlb	0	; () banked
  1609  0009C2  C0D7  F0E2         	movff	?_check_UInfla+1,test_process@temp+1
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;test.c: 231: if (temp > 85) {Test.Step = 0x0D;}
  1613  0009C6  0E56               	movlw	86
  1614  0009C8  0100               	movlb	0	; () banked
  1615  0009CA  0100               	movlb	0	; () banked
  1616  0009CC  5DE1               	subwf	test_process@temp& (0+255),w,b
  1617  0009CE  0E00               	movlw	0
  1618  0009D0  0100               	movlb	0	; () banked
  1619  0009D2  59E2               	subwfb	(test_process@temp+1)& (0+255),w,b
  1620  0009D4  A0D8               	btfss	status,0,c
  1621  0009D6  D004               	goto	l6524
  1622                           
  1623                           ; BSR set to: 0
  1624  0009D8  0100               	movlb	0	; () banked
  1625  0009DA  6FDE               	movwf	??_test_process& (0+255),b
  1626  0009DC  0E0D               	movlw	13
  1627  0009DE  D003               	goto	L15
  1628  0009E0                     l6524:
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;test.c: 232: else {Test.Step = 0x0C;}
  1632  0009E0  0100               	movlb	0	; () banked
  1633  0009E2  6FDE               	movwf	??_test_process& (0+255),b
  1634  0009E4  0E0C               	movlw	12
  1635  0009E6                     L15:
  1636  0009E6  6E2E               	movwf	_Test,c
  1637  0009E8  0100               	movlb	0	; () banked
  1638  0009EA  51DE               	movf	??_test_process& (0+255),w,b
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;test.c: 235: ecran_print_num((unsigned char) (Test.Cpt + 1));
  1642                           
  1643                           ; BSR set to: 0
  1644  0009EC  282F               	incf	_Test+1,w,c
  1645  0009EE  EC02  F015         	call	_ecran_print_num
  1646                           
  1647                           ;test.c: 236: register_write(0);
  1648  0009F2  0E00               	movlw	0
  1649  0009F4  EC80  F019         	call	_register_write
  1650  0009F8  D7A2               	goto	L12
  1651  0009FA                     l6532:
  1652                           
  1653                           ;test.c: 242: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1654  0009FA  EE20  F030         	lfsr	2,_Test+2
  1655  0009FE  CFDE F0DE          	movff	postinc2,??_test_process
  1656  000A02  CFDD F0DF          	movff	postdec2,??_test_process+1
  1657  000A06  0100               	movlb	0	; () banked
  1658  000A08  1FDE               	comf	??_test_process& (0+255),f,b
  1659  000A0A  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1660  000A0C  4BDE               	infsnz	??_test_process& (0+255),f,b
  1661  000A0E  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1662  000A10  504F               	movf	_Cptms,w,c	;volatile
  1663  000A12  0100               	movlb	0	; () banked
  1664  000A14  27DE               	addwf	??_test_process& (0+255),f,b
  1665  000A16  5050               	movf	_Cptms+1,w,c	;volatile
  1666  000A18  0100               	movlb	0	; () banked
  1667  000A1A  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1668  000A1C  0E15               	movlw	21
  1669  000A1E  0100               	movlb	0	; () banked
  1670  000A20  5DDE               	subwf	??_test_process& (0+255),w,b
  1671  000A22  0E00               	movlw	0
  1672  000A24  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1673  000A26  A0D8               	btfss	status,0,c
  1674  000A28  D0D8               	goto	l616
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;test.c: 243: {
  1678                           ;test.c: 244: if (++Test.Cpt > 31) {Test.Step = 0x0E;}
  1679  000A2A  EE20  F02F         	lfsr	2,_Test+1
  1680  000A2E  2ADF               	incf	indf2,f,c
  1681  000A30  0E1F               	movlw	31
  1682  000A32  64DF               	cpfsgt	indf2,c
  1683  000A34  D004               	goto	l6538
  1684                           
  1685                           ; BSR set to: 0
  1686  000A36  0100               	movlb	0	; () banked
  1687  000A38  6FDE               	movwf	??_test_process& (0+255),b
  1688  000A3A  0E0E               	movlw	14
  1689  000A3C  D003               	goto	L16
  1690  000A3E                     l6538:
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;test.c: 245: else {Test.Step = 0x0A;}
  1694  000A3E  0100               	movlb	0	; () banked
  1695  000A40  6FDE               	movwf	??_test_process& (0+255),b
  1696  000A42  0E0A               	movlw	10
  1697  000A44                     L16:
  1698  000A44  6E2E               	movwf	_Test,c
  1699  000A46  0100               	movlb	0	; () banked
  1700  000A48  51DE               	movf	??_test_process& (0+255),w,b
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;test.c: 246: check_comutest(0);
  1704                           
  1705                           ; BSR set to: 0
  1706  000A4A  0E00               	movlw	0
  1707  000A4C  ECDE  F018         	call	_check_comutest
  1708  000A50  D776               	goto	L12
  1709  000A52                     l603:
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;test.c: 251: if ( (Bouton[Bp_IdTest].State == 0)
  1713                           ;test.c: 252: && ((((unsigned short) (Cptms - Test.Time) > 500) ? 1 : 0)))
  1714  000A52  0100               	movlb	0	; () banked
  1715  000A54  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  1716  000A56  D0C1               	goto	l616
  1717                           
  1718                           ; BSR set to: 0
  1719  000A58  EE20  F030         	lfsr	2,_Test+2
  1720  000A5C  CFDE F0DE          	movff	postinc2,??_test_process
  1721  000A60  CFDD F0DF          	movff	postdec2,??_test_process+1
  1722  000A64  0100               	movlb	0	; () banked
  1723  000A66  1FDE               	comf	??_test_process& (0+255),f,b
  1724  000A68  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1725  000A6A  4BDE               	infsnz	??_test_process& (0+255),f,b
  1726  000A6C  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1727  000A6E  504F               	movf	_Cptms,w,c	;volatile
  1728  000A70  0100               	movlb	0	; () banked
  1729  000A72  27DE               	addwf	??_test_process& (0+255),f,b
  1730  000A74  5050               	movf	_Cptms+1,w,c	;volatile
  1731  000A76  0100               	movlb	0	; () banked
  1732  000A78  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1733  000A7A  0EF5               	movlw	245
  1734  000A7C  0100               	movlb	0	; () banked
  1735  000A7E  5DDE               	subwf	??_test_process& (0+255),w,b
  1736  000A80  0E01               	movlw	1
  1737  000A82  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1738  000A84  A0D8               	btfss	status,0,c
  1739  000A86  D0A9               	goto	l616
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;test.c: 253: {
  1743                           ;test.c: 254: if (++Test.Cpt > 31) {Test.Step = 0x0E;}
  1744  000A88  EE20  F02F         	lfsr	2,_Test+1
  1745  000A8C  2ADF               	incf	indf2,f,c
  1746  000A8E  0E1F               	movlw	31
  1747  000A90  64DF               	cpfsgt	indf2,c
  1748  000A92  D004               	goto	l6550
  1749                           
  1750                           ; BSR set to: 0
  1751  000A94  0100               	movlb	0	; () banked
  1752  000A96  6FDE               	movwf	??_test_process& (0+255),b
  1753  000A98  0E0E               	movlw	14
  1754  000A9A  D003               	goto	L17
  1755  000A9C                     l6550:
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;test.c: 255: else {Test.Step = 0x0A;}
  1759  000A9C  0100               	movlb	0	; () banked
  1760  000A9E  6FDE               	movwf	??_test_process& (0+255),b
  1761  000AA0  0E0A               	movlw	10
  1762  000AA2                     L17:
  1763  000AA2  6E2E               	movwf	_Test,c
  1764  000AA4  0100               	movlb	0	; () banked
  1765  000AA6  51DE               	movf	??_test_process& (0+255),w,b
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;test.c: 256: check_comutest(0);
  1769                           
  1770                           ; BSR set to: 0
  1771  000AA8  0E00               	movlw	0
  1772  000AAA  ECDE  F018         	call	_check_comutest
  1773  000AAE  D747               	goto	L12
  1774  000AB0                     l6556:
  1775                           
  1776                           ;test.c: 261: if (Test.Cpt != 0)
  1777  000AB0  502F               	movf	_Test+1,w,c
  1778  000AB2  B4D8               	btfsc	status,2,c
  1779  000AB4  D004               	goto	l6560
  1780                           
  1781                           ;test.c: 262: {
  1782                           ;test.c: 263: ecran_print_num(Test.Cpt);
  1783  000AB6  502F               	movf	_Test+1,w,c
  1784  000AB8  EC02  F015         	call	_ecran_print_num
  1785                           
  1786                           ;test.c: 264: }
  1787  000ABC  D010               	goto	l609
  1788  000ABE                     l6560:
  1789                           
  1790                           ;test.c: 265: else
  1791                           ;test.c: 266: {
  1792                           ;test.c: 267: Ecran.Digit[2] = 0;
  1793  000ABE  0100               	movlb	0	; () banked
  1794  000AC0  6FDE               	movwf	??_test_process& (0+255),b
  1795  000AC2  0E00               	movlw	0
  1796  000AC4  0100               	movlb	0	; () banked
  1797  000AC6  0100               	movlb	0	; () banked
  1798  000AC8  6FAC               	movwf	(_Ecran+2)& (0+255),b
  1799  000ACA  0100               	movlb	0	; () banked
  1800  000ACC  51DE               	movf	??_test_process& (0+255),w,b
  1801                           
  1802                           ;test.c: 268: Ecran.Digit[3] = 0;
  1803  000ACE  0100               	movlb	0	; () banked
  1804  000AD0  6FDE               	movwf	??_test_process& (0+255),b
  1805  000AD2  0E00               	movlw	0
  1806  000AD4  0100               	movlb	0	; () banked
  1807  000AD6  0100               	movlb	0	; () banked
  1808  000AD8  6FAD               	movwf	(_Ecran+3)& (0+255),b
  1809  000ADA  0100               	movlb	0	; () banked
  1810  000ADC  51DE               	movf	??_test_process& (0+255),w,b
  1811  000ADE                     l609:
  1812                           
  1813                           ;test.c: 269: }
  1814                           ;test.c: 271: Ecran.Digit[0] = '-';
  1815  000ADE  0100               	movlb	0	; () banked
  1816  000AE0  6FDE               	movwf	??_test_process& (0+255),b
  1817  000AE2  0E2D               	movlw	45
  1818  000AE4  0100               	movlb	0	; () banked
  1819  000AE6  0100               	movlb	0	; () banked
  1820  000AE8  6FAA               	movwf	_Ecran& (0+255),b
  1821  000AEA  0100               	movlb	0	; () banked
  1822  000AEC  51DE               	movf	??_test_process& (0+255),w,b
  1823                           
  1824                           ;test.c: 272: Ecran.Digit[1] = '-';
  1825  000AEE  0100               	movlb	0	; () banked
  1826  000AF0  6FDE               	movwf	??_test_process& (0+255),b
  1827  000AF2  0E2D               	movlw	45
  1828  000AF4  0100               	movlb	0	; () banked
  1829  000AF6  0100               	movlb	0	; () banked
  1830  000AF8  6FAB               	movwf	(_Ecran+1)& (0+255),b
  1831  000AFA  0100               	movlb	0	; () banked
  1832  000AFC  51DE               	movf	??_test_process& (0+255),w,b
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;test.c: 274: Ecran.Digits = Ecran.Digit;
  1836  000AFE  0100               	movlb	0	; () banked
  1837  000B00  0E00               	movlw	high _Ecran
  1838  000B02  0100               	movlb	0	; () banked
  1839  000B04  0100               	movlb	0	; () banked
  1840  000B06  6FAF               	movwf	(_Ecran+5)& (0+255),b
  1841  000B08  0100               	movlb	0	; () banked
  1842  000B0A  0EAA               	movlw	low _Ecran
  1843  000B0C  0100               	movlb	0	; () banked
  1844  000B0E  0100               	movlb	0	; () banked
  1845  000B10  6FAE               	movwf	(_Ecran+4)& (0+255),b
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;test.c: 275: Test.Step = 0x0F;
  1849  000B12  0100               	movlb	0	; () banked
  1850  000B14  6FDE               	movwf	??_test_process& (0+255),b
  1851  000B16  0E0F               	movlw	15
  1852  000B18                     L13:
  1853  000B18  6E2E               	movwf	_Test,c
  1854  000B1A  D028               	goto	L18
  1855  000B1C                     l6570:
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;test.c: 286: if ((((unsigned short) (Cptms - Test.Time) > 1000) ? 1 : 0))
  1859  000B1C  EE20  F030         	lfsr	2,_Test+2
  1860  000B20  CFDE F0DE          	movff	postinc2,??_test_process
  1861  000B24  CFDD F0DF          	movff	postdec2,??_test_process+1
  1862  000B28  0100               	movlb	0	; () banked
  1863  000B2A  1FDE               	comf	??_test_process& (0+255),f,b
  1864  000B2C  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1865  000B2E  4BDE               	infsnz	??_test_process& (0+255),f,b
  1866  000B30  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1867  000B32  504F               	movf	_Cptms,w,c	;volatile
  1868  000B34  0100               	movlb	0	; () banked
  1869  000B36  27DE               	addwf	??_test_process& (0+255),f,b
  1870  000B38  5050               	movf	_Cptms+1,w,c	;volatile
  1871  000B3A  0100               	movlb	0	; () banked
  1872  000B3C  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1873  000B3E  0EE9               	movlw	233
  1874  000B40  0100               	movlb	0	; () banked
  1875  000B42  5DDE               	subwf	??_test_process& (0+255),w,b
  1876  000B44  0E03               	movlw	3
  1877  000B46  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1878  000B48  A0D8               	btfss	status,0,c
  1879  000B4A  D047               	goto	l616
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;test.c: 287: {
  1883                           ;test.c: 288: Test.Step = 0x11;
  1884  000B4C  0100               	movlb	0	; () banked
  1885  000B4E  6FDE               	movwf	??_test_process& (0+255),b
  1886  000B50  0E11               	movlw	17
  1887  000B52  6E2E               	movwf	_Test,c
  1888  000B54  0100               	movlb	0	; () banked
  1889  000B56  51DE               	movf	??_test_process& (0+255),w,b
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;test.c: 290: ecran_wait();
  1893  000B58  ECDC  F01A         	call	_ecran_wait	;wreg free
  1894  000B5C  D03E               	goto	l616
  1895  000B5E                     l614:
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;test.c: 294: if (Bouton[Bp_IdTest].State == 1)
  1899  000B5E  0100               	movlb	0	; () banked
  1900  000B60  A393               	btfss	(_Bouton+5)& (0+255),1,b
  1901  000B62  D03B               	goto	l616
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;test.c: 295: {
  1905                           ;test.c: 296: Micro.Phase = 0x00;
  1906  000B64  0100               	movlb	0	; () banked
  1907  000B66  6FDE               	movwf	??_test_process& (0+255),b
  1908  000B68  0E00               	movlw	0
  1909  000B6A  6E54               	movwf	_Micro+2,c
  1910  000B6C                     L18:
  1911  000B6C  0100               	movlb	0	; () banked
  1912  000B6E  51DE               	movf	??_test_process& (0+255),w,b
  1913  000B70  D034               	goto	l616
  1914  000B72                     l6580:
  1915                           
  1916                           ; BSR set to: 0
  1917  000B72  502E               	movf	_Test,w,c
  1918                           
  1919                           ; Switch size 1, requested type "space"
  1920                           ; Number of cases is 17, Range of values is 1 to 17
  1921                           ; switch strategies available:
  1922                           ; Name         Instructions Cycles
  1923                           ; simple_byte           52    27 (average)
  1924                           ;	Chosen strategy is simple_byte
  1925  000B74  0A01               	xorlw	1	; case 1
  1926  000B76  B4D8               	btfsc	status,2,c
  1927  000B78  D558               	goto	l564
  1928  000B7A  0A03               	xorlw	3	; case 2
  1929  000B7C  B4D8               	btfsc	status,2,c
  1930  000B7E  D55C               	goto	l6410
  1931  000B80  0A01               	xorlw	1	; case 3
  1932  000B82  B4D8               	btfsc	status,2,c
  1933  000B84  D5AD               	goto	l568
  1934  000B86  0A07               	xorlw	7	; case 4
  1935  000B88  B4D8               	btfsc	status,2,c
  1936  000B8A  D5BF               	goto	l6442
  1937  000B8C  0A01               	xorlw	1	; case 5
  1938  000B8E  B4D8               	btfsc	status,2,c
  1939  000B90  D5F9               	goto	l6454
  1940  000B92  0A03               	xorlw	3	; case 6
  1941  000B94  B4D8               	btfsc	status,2,c
  1942  000B96  D63A               	goto	l6470
  1943  000B98  0A01               	xorlw	1	; case 7
  1944  000B9A  B4D8               	btfsc	status,2,c
  1945  000B9C  D663               	goto	l584
  1946  000B9E  0A0F               	xorlw	15	; case 8
  1947  000BA0  B4D8               	btfsc	status,2,c
  1948  000BA2  D68F               	goto	l6494
  1949  000BA4  0A01               	xorlw	1	; case 9
  1950  000BA6  B4D8               	btfsc	status,2,c
  1951  000BA8  D6C3               	goto	l591
  1952  000BAA  0A03               	xorlw	3	; case 10
  1953  000BAC  B4D8               	btfsc	status,2,c
  1954  000BAE  D6CC               	goto	l6508
  1955  000BB0  0A01               	xorlw	1	; case 11
  1956  000BB2  B4D8               	btfsc	status,2,c
  1957  000BB4  D6E8               	goto	l6516
  1958  000BB6  0A07               	xorlw	7	; case 12
  1959  000BB8  B4D8               	btfsc	status,2,c
  1960  000BBA  D71F               	goto	l6532
  1961  000BBC  0A01               	xorlw	1	; case 13
  1962  000BBE  B4D8               	btfsc	status,2,c
  1963  000BC0  D748               	goto	l603
  1964  000BC2  0A03               	xorlw	3	; case 14
  1965  000BC4  B4D8               	btfsc	status,2,c
  1966  000BC6  D774               	goto	l6556
  1967  000BC8  0A01               	xorlw	1	; case 15
  1968  000BCA  B4D8               	btfsc	status,2,c
  1969  000BCC  D6B1               	goto	l591
  1970  000BCE  0A1F               	xorlw	31	; case 16
  1971  000BD0  B4D8               	btfsc	status,2,c
  1972  000BD2  D7A4               	goto	l6570
  1973  000BD4  0A01               	xorlw	1	; case 17
  1974  000BD6  B4D8               	btfsc	status,2,c
  1975  000BD8  D7C2               	goto	l614
  1976  000BDA                     l616:
  1977  000BDA  0012               	return	
  1978  000BDC  FFFF               	dw	65535	; errata NOP
  1979  000BDE                     __end_of_test_process:
  1980                           	opt stack 0
  1981                           tblptru	equ	0xFF8
  1982                           tblptrh	equ	0xFF7
  1983                           tblptrl	equ	0xFF6
  1984                           tablat	equ	0xFF5
  1985                           prodh	equ	0xFF4
  1986                           prodl	equ	0xFF3
  1987                           postinc0	equ	0xFEE
  1988                           wreg	equ	0xFE8
  1989                           postdec1	equ	0xFE5
  1990                           fsr1l	equ	0xFE1
  1991                           indf2	equ	0xFDF
  1992                           postinc2	equ	0xFDE
  1993                           postdec2	equ	0xFDD
  1994                           fsr2h	equ	0xFDA
  1995                           fsr2l	equ	0xFD9
  1996                           status	equ	0xFD8
  1997                           
  1998 ;; *************** function _check_UInfla *****************
  1999 ;; Defined at:
  2000 ;;		line 80 in file "test.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;  temp            2   34[BANK0 ] unsigned short 
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  2   28[BANK0 ] unsigned short 
  2007 ;; Registers used:
  2008 ;;		wreg, status,2, status,0, cstack
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2014 ;;      Params:         0       2       0       0       0       0       0
  2015 ;;      Locals:         0       2       0       0       0       0       0
  2016 ;;      Temps:          0       4       0       0       0       0       0
  2017 ;;      Totals:         0       8       0       0       0       0       0
  2018 ;;Total ram usage:        8 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; Hardware stack levels required when called:    5
  2021 ;; This function calls:
  2022 ;;		___ftmul
  2023 ;;		___fttol
  2024 ;;		___lwtoft
  2025 ;;		_ana_read
  2026 ;; This function is called by:
  2027 ;;		_test_process
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           	psect	text2
  2032  00270A                     __ptext2:
  2033                           	opt stack 0
  2034  00270A                     _check_UInfla:
  2035                           	opt stack 24
  2036                           
  2037                           ;incstack = 0
  2038  00270A  FFFF               	dw	65535
  2039                           
  2040                           ;test.c: 82: unsigned short temp = 0;
  2041  00270C  0E00               	movlw	0
  2042  00270E  0100               	movlb	0	; () banked
  2043  002710  0100               	movlb	0	; () banked
  2044  002712  6FDD               	movwf	(check_UInfla@temp+1)& (0+255),b
  2045  002714  0E00               	movlw	0
  2046  002716  0100               	movlb	0	; () banked
  2047  002718  6FDC               	movwf	check_UInfla@temp& (0+255),b
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;test.c: 84: if (PORTCbits.RC5 == 1)
  2051  00271A  AA82               	btfss	3970,5,c	;volatile
  2052  00271C  D002               	goto	l6092
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;test.c: 85: {
  2056                           ;test.c: 86: PORTBbits.RB1 = 1;
  2057  00271E  8281               	bsf	3969,1,c	;volatile
  2058                           
  2059                           ;test.c: 87: PORTAbits.RA5 = 1;
  2060  002720  8A80               	bsf	3968,5,c	;volatile
  2061  002722                     l6092:
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;test.c: 88: }
  2065                           ;test.c: 90: temp = ana_read(1);
  2066  002722  0E01               	movlw	1
  2067  002724  ECBC  F017         	call	_ana_read
  2068  002728  0100               	movlb	0	; () banked
  2069  00272A  C0C0  F0DC         	movff	?_ana_read,check_UInfla@temp
  2070  00272E  0100               	movlb	0	; () banked
  2071  002730  C0C1  F0DD         	movff	?_ana_read+1,check_UInfla@temp+1
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;test.c: 92: PORTBbits.RB1 = 0;
  2075  002734  9281               	bcf	3969,1,c	;volatile
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;test.c: 93: PORTAbits.RA5 = 0;
  2079  002736  9A80               	bcf	3968,5,c	;volatile
  2080                           
  2081                           ;test.c: 95: Test.U_Infla = (float) temp * 0.0049f;
  2082  002738  C0DC  F0C2         	movff	check_UInfla@temp,___lwtoft@c
  2083  00273C  C0DD  F0C3         	movff	check_UInfla@temp+1,___lwtoft@c+1
  2084  002740  ECCE  F019         	call	___lwtoft	;wreg free
  2085  002744  C0C2  F0C7         	movff	?___lwtoft,___ftmul@f1
  2086  002748  C0C3  F0C8         	movff	?___lwtoft+1,___ftmul@f1+1
  2087  00274C  C0C4  F0C9         	movff	?___lwtoft+2,___ftmul@f1+2
  2088  002750  0E90               	movlw	144
  2089  002752  0100               	movlb	0	; () banked
  2090  002754  0100               	movlb	0	; () banked
  2091  002756  6FCA               	movwf	___ftmul@f2& (0+255),b
  2092  002758  0EA0               	movlw	160
  2093  00275A  0100               	movlb	0	; () banked
  2094  00275C  0100               	movlb	0	; () banked
  2095  00275E  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2096  002760  0E3B               	movlw	59
  2097  002762  0100               	movlb	0	; () banked
  2098  002764  0100               	movlb	0	; () banked
  2099  002766  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2100  002768  ECDE  F009         	call	___ftmul	;wreg free
  2101  00276C  C0C7  F035         	movff	?___ftmul,_Test+7
  2102  002770  C0C8  F036         	movff	?___ftmul+1,_Test+8
  2103  002774  C0C9  F037         	movff	?___ftmul+2,_Test+9
  2104                           
  2105                           ;test.c: 96: Test.U_Infla = Test.U_Infla * 11.62f;
  2106  002778  C035  F0C7         	movff	_Test+7,___ftmul@f1
  2107  00277C  C036  F0C8         	movff	_Test+8,___ftmul@f1+1
  2108  002780  C037  F0C9         	movff	_Test+9,___ftmul@f1+2
  2109  002784  0EEC               	movlw	236
  2110  002786  0100               	movlb	0	; () banked
  2111  002788  0100               	movlb	0	; () banked
  2112  00278A  6FCA               	movwf	___ftmul@f2& (0+255),b
  2113  00278C  0E39               	movlw	57
  2114  00278E  0100               	movlb	0	; () banked
  2115  002790  0100               	movlb	0	; () banked
  2116  002792  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2117  002794  0E41               	movlw	65
  2118  002796  0100               	movlb	0	; () banked
  2119  002798  0100               	movlb	0	; () banked
  2120  00279A  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2121  00279C  ECDE  F009         	call	___ftmul	;wreg free
  2122  0027A0  C0C7  F035         	movff	?___ftmul,_Test+7
  2123  0027A4  C0C8  F036         	movff	?___ftmul+1,_Test+8
  2124  0027A8  C0C9  F037         	movff	?___ftmul+2,_Test+9
  2125                           
  2126                           ;test.c: 97: Test.U_Infla = Test.U_Infla * 100.0f;
  2127  0027AC  C035  F0C7         	movff	_Test+7,___ftmul@f1
  2128  0027B0  C036  F0C8         	movff	_Test+8,___ftmul@f1+1
  2129  0027B4  C037  F0C9         	movff	_Test+9,___ftmul@f1+2
  2130  0027B8  0E00               	movlw	0
  2131  0027BA  0100               	movlb	0	; () banked
  2132  0027BC  0100               	movlb	0	; () banked
  2133  0027BE  6FCA               	movwf	___ftmul@f2& (0+255),b
  2134  0027C0  0EC8               	movlw	200
  2135  0027C2  0100               	movlb	0	; () banked
  2136  0027C4  0100               	movlb	0	; () banked
  2137  0027C6  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2138  0027C8  0E42               	movlw	66
  2139  0027CA  0100               	movlb	0	; () banked
  2140  0027CC  0100               	movlb	0	; () banked
  2141  0027CE  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2142  0027D0  ECDE  F009         	call	___ftmul	;wreg free
  2143  0027D4  C0C7  F035         	movff	?___ftmul,_Test+7
  2144  0027D8  C0C8  F036         	movff	?___ftmul+1,_Test+8
  2145  0027DC  C0C9  F037         	movff	?___ftmul+2,_Test+9
  2146                           
  2147                           ;test.c: 99: return (unsigned short) Test.U_Infla;
  2148  0027E0  C035  F0BA         	movff	_Test+7,___fttol@f1
  2149  0027E4  C036  F0BB         	movff	_Test+8,___fttol@f1+1
  2150  0027E8  C037  F0BC         	movff	_Test+9,___fttol@f1+2
  2151  0027EC  ECFA  F00D         	call	___fttol	;wreg free
  2152  0027F0  C0BA  F0D8         	movff	?___fttol,??_check_UInfla
  2153  0027F4  C0BB  F0D9         	movff	?___fttol+1,??_check_UInfla+1
  2154  0027F8  C0BC  F0DA         	movff	?___fttol+2,??_check_UInfla+2
  2155  0027FC  C0BD  F0DB         	movff	?___fttol+3,??_check_UInfla+3
  2156  002800  C0D8  F0D6         	movff	??_check_UInfla,?_check_UInfla
  2157  002804  C0D9  F0D7         	movff	??_check_UInfla+1,?_check_UInfla+1
  2158  002808  0012               	return	
  2159  00280A  FFFF               	dw	65535	; errata NOP
  2160  00280C                     __end_of_check_UInfla:
  2161                           	opt stack 0
  2162                           tblptru	equ	0xFF8
  2163                           tblptrh	equ	0xFF7
  2164                           tblptrl	equ	0xFF6
  2165                           tablat	equ	0xFF5
  2166                           prodh	equ	0xFF4
  2167                           prodl	equ	0xFF3
  2168                           postinc0	equ	0xFEE
  2169                           wreg	equ	0xFE8
  2170                           postdec1	equ	0xFE5
  2171                           fsr1l	equ	0xFE1
  2172                           indf2	equ	0xFDF
  2173                           postinc2	equ	0xFDE
  2174                           postdec2	equ	0xFDD
  2175                           fsr2h	equ	0xFDA
  2176                           fsr2l	equ	0xFD9
  2177                           status	equ	0xFD8
  2178                           
  2179 ;; *************** function _check_UAlim *****************
  2180 ;; Defined at:
  2181 ;;		line 64 in file "test.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  temp            2   34[BANK0 ] unsigned short 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  2   28[BANK0 ] unsigned short 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2, status,0, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2195 ;;      Params:         0       2       0       0       0       0       0
  2196 ;;      Locals:         0       2       0       0       0       0       0
  2197 ;;      Temps:          0       4       0       0       0       0       0
  2198 ;;      Totals:         0       8       0       0       0       0       0
  2199 ;;Total ram usage:        8 bytes
  2200 ;; Hardware stack levels used:    1
  2201 ;; Hardware stack levels required when called:    5
  2202 ;; This function calls:
  2203 ;;		___ftmul
  2204 ;;		___fttol
  2205 ;;		___lwtoft
  2206 ;;		_ana_read
  2207 ;; This function is called by:
  2208 ;;		_test_process
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text3
  2213  00290A                     __ptext3:
  2214                           	opt stack 0
  2215  00290A                     _check_UAlim:
  2216                           	opt stack 24
  2217                           
  2218                           ;incstack = 0
  2219  00290A  FFFF               	dw	65535
  2220                           
  2221                           ;test.c: 66: unsigned short temp = 0;
  2222  00290C  0E00               	movlw	0
  2223  00290E  0100               	movlb	0	; () banked
  2224  002910  0100               	movlb	0	; () banked
  2225  002912  6FDD               	movwf	(check_UAlim@temp+1)& (0+255),b
  2226  002914  0E00               	movlw	0
  2227  002916  0100               	movlb	0	; () banked
  2228  002918  6FDC               	movwf	check_UAlim@temp& (0+255),b
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;test.c: 68: PORTBbits.RB1 = 0;
  2232  00291A  9281               	bcf	3969,1,c	;volatile
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;test.c: 69: PORTAbits.RA5 = 0;
  2236  00291C  9A80               	bcf	3968,5,c	;volatile
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;test.c: 71: temp = ana_read(0);
  2240  00291E  0E00               	movlw	0
  2241  002920  ECBC  F017         	call	_ana_read
  2242  002924  0100               	movlb	0	; () banked
  2243  002926  C0C0  F0DC         	movff	?_ana_read,check_UAlim@temp
  2244  00292A  0100               	movlb	0	; () banked
  2245  00292C  C0C1  F0DD         	movff	?_ana_read+1,check_UAlim@temp+1
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;test.c: 73: Test.U_Alim = (float) temp * 0.0049f;
  2249  002930  C0DC  F0C2         	movff	check_UAlim@temp,___lwtoft@c
  2250  002934  C0DD  F0C3         	movff	check_UAlim@temp+1,___lwtoft@c+1
  2251  002938  ECCE  F019         	call	___lwtoft	;wreg free
  2252  00293C  C0C2  F0C7         	movff	?___lwtoft,___ftmul@f1
  2253  002940  C0C3  F0C8         	movff	?___lwtoft+1,___ftmul@f1+1
  2254  002944  C0C4  F0C9         	movff	?___lwtoft+2,___ftmul@f1+2
  2255  002948  0E90               	movlw	144
  2256  00294A  0100               	movlb	0	; () banked
  2257  00294C  0100               	movlb	0	; () banked
  2258  00294E  6FCA               	movwf	___ftmul@f2& (0+255),b
  2259  002950  0EA0               	movlw	160
  2260  002952  0100               	movlb	0	; () banked
  2261  002954  0100               	movlb	0	; () banked
  2262  002956  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2263  002958  0E3B               	movlw	59
  2264  00295A  0100               	movlb	0	; () banked
  2265  00295C  0100               	movlb	0	; () banked
  2266  00295E  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2267  002960  ECDE  F009         	call	___ftmul	;wreg free
  2268  002964  C0C7  F032         	movff	?___ftmul,_Test+4
  2269  002968  C0C8  F033         	movff	?___ftmul+1,_Test+5
  2270  00296C  C0C9  F034         	movff	?___ftmul+2,_Test+6
  2271                           
  2272                           ;test.c: 74: Test.U_Alim = Test.U_Alim * 11.62f;
  2273  002970  C032  F0C7         	movff	_Test+4,___ftmul@f1
  2274  002974  C033  F0C8         	movff	_Test+5,___ftmul@f1+1
  2275  002978  C034  F0C9         	movff	_Test+6,___ftmul@f1+2
  2276  00297C  0EEC               	movlw	236
  2277  00297E  0100               	movlb	0	; () banked
  2278  002980  0100               	movlb	0	; () banked
  2279  002982  6FCA               	movwf	___ftmul@f2& (0+255),b
  2280  002984  0E39               	movlw	57
  2281  002986  0100               	movlb	0	; () banked
  2282  002988  0100               	movlb	0	; () banked
  2283  00298A  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2284  00298C  0E41               	movlw	65
  2285  00298E  0100               	movlb	0	; () banked
  2286  002990  0100               	movlb	0	; () banked
  2287  002992  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2288  002994  ECDE  F009         	call	___ftmul	;wreg free
  2289  002998  C0C7  F032         	movff	?___ftmul,_Test+4
  2290  00299C  C0C8  F033         	movff	?___ftmul+1,_Test+5
  2291  0029A0  C0C9  F034         	movff	?___ftmul+2,_Test+6
  2292                           
  2293                           ;test.c: 75: Test.U_Alim = Test.U_Alim * 100.0f;
  2294  0029A4  C032  F0C7         	movff	_Test+4,___ftmul@f1
  2295  0029A8  C033  F0C8         	movff	_Test+5,___ftmul@f1+1
  2296  0029AC  C034  F0C9         	movff	_Test+6,___ftmul@f1+2
  2297  0029B0  0E00               	movlw	0
  2298  0029B2  0100               	movlb	0	; () banked
  2299  0029B4  0100               	movlb	0	; () banked
  2300  0029B6  6FCA               	movwf	___ftmul@f2& (0+255),b
  2301  0029B8  0EC8               	movlw	200
  2302  0029BA  0100               	movlb	0	; () banked
  2303  0029BC  0100               	movlb	0	; () banked
  2304  0029BE  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2305  0029C0  0E42               	movlw	66
  2306  0029C2  0100               	movlb	0	; () banked
  2307  0029C4  0100               	movlb	0	; () banked
  2308  0029C6  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2309  0029C8  ECDE  F009         	call	___ftmul	;wreg free
  2310  0029CC  C0C7  F032         	movff	?___ftmul,_Test+4
  2311  0029D0  C0C8  F033         	movff	?___ftmul+1,_Test+5
  2312  0029D4  C0C9  F034         	movff	?___ftmul+2,_Test+6
  2313                           
  2314                           ;test.c: 77: return (unsigned short) Test.U_Alim;
  2315  0029D8  C032  F0BA         	movff	_Test+4,___fttol@f1
  2316  0029DC  C033  F0BB         	movff	_Test+5,___fttol@f1+1
  2317  0029E0  C034  F0BC         	movff	_Test+6,___fttol@f1+2
  2318  0029E4  ECFA  F00D         	call	___fttol	;wreg free
  2319  0029E8  C0BA  F0D8         	movff	?___fttol,??_check_UAlim
  2320  0029EC  C0BB  F0D9         	movff	?___fttol+1,??_check_UAlim+1
  2321  0029F0  C0BC  F0DA         	movff	?___fttol+2,??_check_UAlim+2
  2322  0029F4  C0BD  F0DB         	movff	?___fttol+3,??_check_UAlim+3
  2323  0029F8  C0D8  F0D6         	movff	??_check_UAlim,?_check_UAlim
  2324  0029FC  C0D9  F0D7         	movff	??_check_UAlim+1,?_check_UAlim+1
  2325  002A00  0012               	return	
  2326  002A02  FFFF               	dw	65535	; errata NOP
  2327  002A04                     __end_of_check_UAlim:
  2328                           	opt stack 0
  2329                           tblptru	equ	0xFF8
  2330                           tblptrh	equ	0xFF7
  2331                           tblptrl	equ	0xFF6
  2332                           tablat	equ	0xFF5
  2333                           prodh	equ	0xFF4
  2334                           prodl	equ	0xFF3
  2335                           postinc0	equ	0xFEE
  2336                           wreg	equ	0xFE8
  2337                           postdec1	equ	0xFE5
  2338                           fsr1l	equ	0xFE1
  2339                           indf2	equ	0xFDF
  2340                           postinc2	equ	0xFDE
  2341                           postdec2	equ	0xFDD
  2342                           fsr2h	equ	0xFDA
  2343                           fsr2l	equ	0xFD9
  2344                           status	equ	0xFD8
  2345                           
  2346 ;; *************** function _micro_wait *****************
  2347 ;; Defined at:
  2348 ;;		line 91 in file "micro.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  tempTime        2    9[BANK0 ] unsigned short 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;		None               void
  2355 ;; Registers used:
  2356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2362 ;;      Params:         0       0       0       0       0       0       0
  2363 ;;      Locals:         0       4       0       0       0       0       0
  2364 ;;      Temps:          0       2       0       0       0       0       0
  2365 ;;      Totals:         0       6       0       0       0       0       0
  2366 ;;Total ram usage:        6 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    7
  2369 ;; This function calls:
  2370 ;;		_check_comutest
  2371 ;;		_ecran_blank
  2372 ;;		_ecran_print_one_char
  2373 ;;		_ecran_wait
  2374 ;; This function is called by:
  2375 ;;		_main
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text4
  2380  002020                     __ptext4:
  2381                           	opt stack 0
  2382  002020                     _micro_wait:
  2383                           	opt stack 23
  2384                           
  2385                           ;incstack = 0
  2386  002020  FFFF               	dw	65535
  2387                           
  2388                           ;micro.c: 93: switch (Micro.Step)
  2389  002022  D096               	goto	l6404
  2390  002024                     l815:
  2391                           
  2392                           ;micro.c: 96: if (Bouton[Bp_IdTest].State == 0)
  2393  002024  0100               	movlb	0	; () banked
  2394  002026  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  2395  002028  D09D               	goto	l833
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;micro.c: 97: {
  2399                           ;micro.c: 98: Micro.Step = 0x01;
  2400  00202A  0100               	movlb	0	; () banked
  2401  00202C  6FC1               	movwf	??_micro_wait& (0+255),b
  2402  00202E  0E01               	movlw	1
  2403  002030  6E55               	movwf	_Micro+3,c
  2404  002032  0100               	movlb	0	; () banked
  2405  002034  51C1               	movf	??_micro_wait& (0+255),w,b
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;micro.c: 99: ecran_wait();
  2409  002036  ECDC  F01A         	call	_ecran_wait	;wreg free
  2410  00203A  D094               	goto	l833
  2411  00203C                     l818:
  2412                           
  2413                           ;micro.c: 103: if (Bouton[Bp_IdTest].State == 1)
  2414  00203C  0100               	movlb	0	; () banked
  2415  00203E  A393               	btfss	(_Bouton+5)& (0+255),1,b
  2416  002040  D091               	goto	l833
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;micro.c: 104: {
  2420                           ;micro.c: 105: Micro.Step = 0x03;
  2421  002042  0100               	movlb	0	; () banked
  2422  002044  6FC1               	movwf	??_micro_wait& (0+255),b
  2423  002046  0E03               	movlw	3
  2424  002048  6E55               	movwf	_Micro+3,c
  2425  00204A  0100               	movlb	0	; () banked
  2426  00204C  51C1               	movf	??_micro_wait& (0+255),w,b
  2427  00204E  D08A               	goto	l833
  2428  002050                     l820:
  2429                           
  2430                           ;micro.c: 109: if (Bouton[Bp_IdTest].State == 0)
  2431  002050  0100               	movlb	0	; () banked
  2432  002052  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  2433  002054  D012               	goto	l821
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;micro.c: 110: {
  2437                           ;micro.c: 111: Micro.Phase = 0x01;
  2438  002056  0100               	movlb	0	; () banked
  2439  002058  6FC1               	movwf	??_micro_wait& (0+255),b
  2440  00205A  0E01               	movlw	1
  2441  00205C  6E54               	movwf	_Micro+2,c
  2442  00205E  0100               	movlb	0	; () banked
  2443  002060  51C1               	movf	??_micro_wait& (0+255),w,b
  2444                           
  2445                           ;micro.c: 112: Test.Step = 0x01;
  2446  002062  0100               	movlb	0	; () banked
  2447  002064  6FC1               	movwf	??_micro_wait& (0+255),b
  2448  002066  0E01               	movlw	1
  2449  002068  6E2E               	movwf	_Test,c
  2450  00206A  0100               	movlb	0	; () banked
  2451  00206C  51C1               	movf	??_micro_wait& (0+255),w,b
  2452                           
  2453                           ; BSR set to: 0
  2454                           ;micro.c: 113: check_comutest(0);
  2455  00206E  0E00               	movlw	0
  2456  002070  ECDE  F018         	call	_check_comutest
  2457                           
  2458                           ;micro.c: 114: ecran_blank();
  2459  002074  EC23  F018         	call	_ecran_blank	;wreg free
  2460                           
  2461                           ;micro.c: 115: }
  2462  002078  D016               	goto	l6376
  2463  00207A                     l821:
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;micro.c: 116: else if (Bouton[Bp_On].State == 0)
  2467  00207A  0100               	movlb	0	; () banked
  2468  00207C  B390               	btfsc	(_Bouton+2)& (0+255),1,b
  2469  00207E  D013               	goto	l6376
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;micro.c: 117: {
  2473                           ;micro.c: 118: Micro.Phase = 0x02;
  2474  002080  0100               	movlb	0	; () banked
  2475  002082  6FC1               	movwf	??_micro_wait& (0+255),b
  2476  002084  0E02               	movlw	2
  2477  002086  6E54               	movwf	_Micro+2,c
  2478  002088  0100               	movlb	0	; () banked
  2479  00208A  51C1               	movf	??_micro_wait& (0+255),w,b
  2480                           
  2481                           ;micro.c: 119: Arm.Step = 0x01;
  2482  00208C  0100               	movlb	0	; () banked
  2483  00208E  6FC1               	movwf	??_micro_wait& (0+255),b
  2484  002090  0E01               	movlw	1
  2485  002092  0100               	movlb	0	; () banked
  2486  002094  0100               	movlb	0	; () banked
  2487  002096  6F9A               	movwf	_Arm& (0+255),b
  2488  002098  0100               	movlb	0	; () banked
  2489  00209A  51C1               	movf	??_micro_wait& (0+255),w,b
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;micro.c: 120: check_comutest(1);
  2493  00209C  0E01               	movlw	1
  2494  00209E  ECDE  F018         	call	_check_comutest
  2495                           
  2496                           ;micro.c: 121: ecran_blank();
  2497  0020A2  EC23  F018         	call	_ecran_blank	;wreg free
  2498  0020A6                     l6376:
  2499                           
  2500                           ;micro.c: 122: }
  2501                           ;micro.c: 124: if (Bouton[Bp_Start].State == 0)
  2502  0020A6  0100               	movlb	0	; () banked
  2503  0020A8  B399               	btfsc	(_Bouton+11)& (0+255),1,b
  2504  0020AA  D05C               	goto	l833
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;micro.c: 125: {
  2508                           ;micro.c: 126: unsigned short tempTime = Cptms;
  2509  0020AC  C04F  F0C3         	movff	_Cptms,micro_wait@tempTime	;volatile
  2510  0020B0  C050  F0C4         	movff	_Cptms+1,micro_wait@tempTime+1	;volatile
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;micro.c: 128: ecran_blank();
  2514  0020B4  EC23  F018         	call	_ecran_blank	;wreg free
  2515                           
  2516                           ;micro.c: 130: ecran_print_one_char(0, 'S');
  2517  0020B8  0100               	movlb	0	; () banked
  2518  0020BA  6FC1               	movwf	??_micro_wait& (0+255),b
  2519  0020BC  0E53               	movlw	83
  2520  0020BE  0100               	movlb	0	; () banked
  2521  0020C0  0100               	movlb	0	; () banked
  2522  0020C2  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  2523  0020C4  0100               	movlb	0	; () banked
  2524  0020C6  51C1               	movf	??_micro_wait& (0+255),w,b
  2525  0020C8  0E00               	movlw	0
  2526  0020CA  EC19  F01A         	call	_ecran_print_one_char
  2527                           
  2528                           ;micro.c: 132: Micro.State = 0x08;
  2529  0020CE  0100               	movlb	0	; () banked
  2530  0020D0  6FC1               	movwf	??_micro_wait& (0+255),b
  2531  0020D2  0E08               	movlw	8
  2532  0020D4  6E56               	movwf	_Micro+4,c
  2533  0020D6  0100               	movlb	0	; () banked
  2534  0020D8  51C1               	movf	??_micro_wait& (0+255),w,b
  2535                           
  2536                           ;micro.c: 134: while (PORTBbits.RB0 == 0)
  2537  0020DA  D02F               	goto	l6396
  2538  0020DC                     l6384:
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;micro.c: 135: {
  2542                           ;micro.c: 136: if ((((unsigned short) (Cptms - tempTime) > 1000) ? 1 : 0))
  2543  0020DC  0100               	movlb	0	; () banked
  2544  0020DE  C0C3  F0C1         	movff	micro_wait@tempTime,??_micro_wait
  2545  0020E2  0100               	movlb	0	; () banked
  2546  0020E4  C0C4  F0C2         	movff	micro_wait@tempTime+1,??_micro_wait+1
  2547  0020E8  0100               	movlb	0	; () banked
  2548  0020EA  1FC1               	comf	??_micro_wait& (0+255),f,b
  2549  0020EC  1FC2               	comf	(??_micro_wait+1)& (0+255),f,b
  2550  0020EE  4BC1               	infsnz	??_micro_wait& (0+255),f,b
  2551  0020F0  2BC2               	incf	(??_micro_wait+1)& (0+255),f,b
  2552  0020F2  504F               	movf	_Cptms,w,c	;volatile
  2553  0020F4  0100               	movlb	0	; () banked
  2554  0020F6  27C1               	addwf	??_micro_wait& (0+255),f,b
  2555  0020F8  5050               	movf	_Cptms+1,w,c	;volatile
  2556  0020FA  0100               	movlb	0	; () banked
  2557  0020FC  23C2               	addwfc	(??_micro_wait+1)& (0+255),f,b
  2558  0020FE  0EE9               	movlw	233
  2559  002100  0100               	movlb	0	; () banked
  2560  002102  5DC1               	subwf	??_micro_wait& (0+255),w,b
  2561  002104  0E03               	movlw	3
  2562  002106  59C2               	subwfb	(??_micro_wait+1)& (0+255),w,b
  2563  002108  A0D8               	btfss	status,0,c
  2564  00210A  D017               	goto	l6396
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;micro.c: 137: {
  2568                           ;micro.c: 138: tempTime = Cptms;
  2569  00210C  C04F  F0C3         	movff	_Cptms,micro_wait@tempTime	;volatile
  2570  002110  C050  F0C4         	movff	_Cptms+1,micro_wait@tempTime+1	;volatile
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;micro.c: 139: Micro.State = ((Micro.State == 0x08) ? 0x00 : 0x08);
  2574  002114  5056               	movf	_Micro+4,w,c
  2575  002116  0A08               	xorlw	8
  2576  002118  B4D8               	btfsc	status,2,c
  2577  00211A  D006               	goto	l6392
  2578                           
  2579                           ; BSR set to: 0
  2580  00211C  0E00               	movlw	0
  2581  00211E  0100               	movlb	0	; () banked
  2582  002120  0100               	movlb	0	; () banked
  2583  002122  6FC6               	movwf	(_micro_wait$2387+1)& (0+255),b
  2584  002124  0E08               	movlw	8
  2585  002126  D005               	goto	L21
  2586  002128                     l6392:
  2587                           
  2588                           ; BSR set to: 0
  2589  002128  0E00               	movlw	0
  2590  00212A  0100               	movlb	0	; () banked
  2591  00212C  0100               	movlb	0	; () banked
  2592  00212E  6FC6               	movwf	(_micro_wait$2387+1)& (0+255),b
  2593  002130  0E00               	movlw	0
  2594  002132                     L21:
  2595  002132  0100               	movlb	0	; () banked
  2596  002134  6FC5               	movwf	_micro_wait$2387& (0+255),b
  2597                           
  2598                           ; BSR set to: 0
  2599                           
  2600                           ; BSR set to: 0
  2601  002136  C0C5  F056         	movff	_micro_wait$2387,_Micro+4
  2602  00213A                     l6396:
  2603                           
  2604                           ; BSR set to: 0
  2605  00213A  A081               	btfss	3969,0,c	;volatile
  2606  00213C  D7CF               	goto	l6384
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;micro.c: 140: }
  2610                           ;micro.c: 141: };
  2611                           ;micro.c: 143: Micro.State = 0x00;
  2612                           
  2613                           ; BSR set to: 0
  2614  00213E  0100               	movlb	0	; () banked
  2615  002140  6FC1               	movwf	??_micro_wait& (0+255),b
  2616  002142  0E00               	movlw	0
  2617  002144  6E56               	movwf	_Micro+4,c
  2618  002146  0100               	movlb	0	; () banked
  2619  002148  51C1               	movf	??_micro_wait& (0+255),w,b
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;micro.c: 145: ecran_wait();
  2623  00214A  ECDC  F01A         	call	_ecran_wait	;wreg free
  2624  00214E  D00A               	goto	l833
  2625  002150                     l6404:
  2626  002150  5055               	movf	_Micro+3,w,c
  2627                           
  2628                           ; Switch size 1, requested type "space"
  2629                           ; Number of cases is 3, Range of values is 0 to 3
  2630                           ; switch strategies available:
  2631                           ; Name         Instructions Cycles
  2632                           ; simple_byte           10     6 (average)
  2633                           ;	Chosen strategy is simple_byte
  2634  002152  0A00               	xorlw	0	; case 0
  2635  002154  B4D8               	btfsc	status,2,c
  2636  002156  D766               	goto	l815
  2637  002158  0A01               	xorlw	1	; case 1
  2638  00215A  B4D8               	btfsc	status,2,c
  2639  00215C  D76F               	goto	l818
  2640  00215E  0A02               	xorlw	2	; case 3
  2641  002160  B4D8               	btfsc	status,2,c
  2642  002162  D776               	goto	l820
  2643  002164                     l833:
  2644  002164  0012               	return	
  2645  002166  FFFF               	dw	65535	; errata NOP
  2646  002168                     __end_of_micro_wait:
  2647                           	opt stack 0
  2648                           tblptru	equ	0xFF8
  2649                           tblptrh	equ	0xFF7
  2650                           tblptrl	equ	0xFF6
  2651                           tablat	equ	0xFF5
  2652                           prodh	equ	0xFF4
  2653                           prodl	equ	0xFF3
  2654                           postinc0	equ	0xFEE
  2655                           wreg	equ	0xFE8
  2656                           postdec1	equ	0xFE5
  2657                           fsr1l	equ	0xFE1
  2658                           indf2	equ	0xFDF
  2659                           postinc2	equ	0xFDE
  2660                           postdec2	equ	0xFDD
  2661                           fsr2h	equ	0xFDA
  2662                           fsr2l	equ	0xFD9
  2663                           status	equ	0xFD8
  2664                           
  2665 ;; *************** function _micro_config *****************
  2666 ;; Defined at:
  2667 ;;		line 39 in file "micro.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;		None               void
  2674 ;; Registers used:
  2675 ;;		wreg, status,2
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2681 ;;      Params:         0       0       0       0       0       0       0
  2682 ;;      Locals:         0       0       0       0       0       0       0
  2683 ;;      Temps:          0       0       0       0       0       0       0
  2684 ;;      Totals:         0       0       0       0       0       0       0
  2685 ;;Total ram usage:        0 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    3
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_main
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text5
  2696  003530                     __ptext5:
  2697                           	opt stack 0
  2698  003530                     _micro_config:
  2699                           	opt stack 27
  2700                           
  2701                           ;incstack = 0
  2702  003530  FFFF               	dw	65535
  2703                           
  2704                           ;micro.c: 43: T0CON = 0x88;
  2705  003532  0E88               	movlw	136
  2706  003534  6ED5               	movwf	4053,c	;volatile
  2707                           
  2708                           ;micro.c: 64: TMR0H = 0xF0;
  2709  003536  0EF0               	movlw	240
  2710  003538  6ED7               	movwf	4055,c	;volatile
  2711                           
  2712                           ;micro.c: 65: TMR0L = 0x8C;
  2713  00353A  0E8C               	movlw	140
  2714  00353C  6ED6               	movwf	4054,c	;volatile
  2715                           
  2716                           ;micro.c: 69: ADCON0 = 0x80;
  2717  00353E  0E80               	movlw	128
  2718  003540  6EC2               	movwf	4034,c	;volatile
  2719                           
  2720                           ;micro.c: 75: ADCON1 = 0xC4;
  2721  003542  0EC4               	movlw	196
  2722  003544  6EC1               	movwf	4033,c	;volatile
  2723                           
  2724                           ;micro.c: 82: TMR0IP = 1;
  2725  003546  84F1               	bsf	intcon2,2,c	;volatile
  2726                           
  2727                           ;micro.c: 83: TMR0IE = 1;
  2728  003548  8AF2               	bsf	intcon,5,c	;volatile
  2729                           
  2730                           ;micro.c: 84: IPEN = 1;
  2731  00354A  8ED0               	bsf	4048,7,c	;volatile
  2732                           
  2733                           ;micro.c: 85: GIE = 1;
  2734  00354C  8EF2               	bsf	intcon,7,c	;volatile
  2735                           
  2736                           ;micro.c: 87: Micro.Time = Cptms;
  2737  00354E  C04F  F052         	movff	_Cptms,_Micro	;volatile
  2738  003552  C050  F053         	movff	_Cptms+1,_Micro+1	;volatile
  2739                           
  2740                           ;micro.c: 88: Ecran.tRate = 255;
  2741  003556  0100               	movlb	0	; () banked
  2742  003558  0100               	movlb	0	; () banked
  2743  00355A  69B6               	setf	(_Ecran+12)& (0+255),b
  2744                           
  2745                           ; BSR set to: 0
  2746  00355C  0012               	return	
  2747  00355E  FFFF               	dw	65535	; errata NOP
  2748  003560                     __end_of_micro_config:
  2749                           	opt stack 0
  2750                           tblptru	equ	0xFF8
  2751                           tblptrh	equ	0xFF7
  2752                           tblptrl	equ	0xFF6
  2753                           tablat	equ	0xFF5
  2754                           prodh	equ	0xFF4
  2755                           prodl	equ	0xFF3
  2756                           intcon	equ	0xFF2
  2757                           intcon2	equ	0xFF1
  2758                           postinc0	equ	0xFEE
  2759                           wreg	equ	0xFE8
  2760                           postdec1	equ	0xFE5
  2761                           fsr1l	equ	0xFE1
  2762                           indf2	equ	0xFDF
  2763                           postinc2	equ	0xFDE
  2764                           postdec2	equ	0xFDD
  2765                           fsr2h	equ	0xFDA
  2766                           fsr2l	equ	0xFD9
  2767                           status	equ	0xFD8
  2768                           
  2769 ;; *************** function _hw_config *****************
  2770 ;; Defined at:
  2771 ;;		line 3 in file "hardware.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;		None               void
  2778 ;; Registers used:
  2779 ;;		wreg, status,2
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2785 ;;      Params:         0       0       0       0       0       0       0
  2786 ;;      Locals:         0       0       0       0       0       0       0
  2787 ;;      Temps:          0       0       0       0       0       0       0
  2788 ;;      Totals:         0       0       0       0       0       0       0
  2789 ;;Total ram usage:        0 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    3
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_main
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           	psect	text6
  2800  0030AC                     __ptext6:
  2801                           	opt stack 0
  2802  0030AC                     _hw_config:
  2803                           	opt stack 27
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;incstack = 0
  2807  0030AC  FFFF               	dw	65535
  2808                           
  2809                           ;hardware.c: 6: ADCON1 = 0x07;
  2810  0030AE  0E07               	movlw	7
  2811  0030B0  6EC1               	movwf	4033,c	;volatile
  2812                           
  2813                           ;hardware.c: 10: PORTA = 0;
  2814  0030B2  0E00               	movlw	0
  2815  0030B4  6E80               	movwf	3968,c	;volatile
  2816                           
  2817                           ;hardware.c: 12: TRISAbits.TRISA0 = 1;
  2818  0030B6  8092               	bsf	3986,0,c	;volatile
  2819                           
  2820                           ;hardware.c: 13: TRISAbits.TRISA1 = 1;
  2821  0030B8  8292               	bsf	3986,1,c	;volatile
  2822                           
  2823                           ;hardware.c: 14: TRISAbits.TRISA2 = 0;
  2824  0030BA  9492               	bcf	3986,2,c	;volatile
  2825                           
  2826                           ;hardware.c: 15: TRISAbits.TRISA3 = 1;
  2827  0030BC  8692               	bsf	3986,3,c	;volatile
  2828                           
  2829                           ;hardware.c: 16: TRISAbits.TRISA4 = 1;
  2830  0030BE  8892               	bsf	3986,4,c	;volatile
  2831                           
  2832                           ;hardware.c: 17: TRISAbits.TRISA5 = 0;
  2833  0030C0  9A92               	bcf	3986,5,c	;volatile
  2834                           
  2835                           ;hardware.c: 20: PORTB = 0;
  2836  0030C2  0E00               	movlw	0
  2837  0030C4  6E81               	movwf	3969,c	;volatile
  2838                           
  2839                           ;hardware.c: 22: TRISBbits.TRISB0 = 1;
  2840  0030C6  8093               	bsf	3987,0,c	;volatile
  2841                           
  2842                           ;hardware.c: 23: TRISBbits.TRISB1 = 0;
  2843  0030C8  9293               	bcf	3987,1,c	;volatile
  2844                           
  2845                           ;hardware.c: 24: TRISBbits.TRISB2 = 0;
  2846  0030CA  9493               	bcf	3987,2,c	;volatile
  2847                           
  2848                           ;hardware.c: 25: TRISBbits.TRISB3 = 0;
  2849  0030CC  9693               	bcf	3987,3,c	;volatile
  2850                           
  2851                           ;hardware.c: 26: TRISBbits.TRISB4 = 0;
  2852  0030CE  9893               	bcf	3987,4,c	;volatile
  2853                           
  2854                           ;hardware.c: 27: TRISBbits.TRISB5 = 0;
  2855  0030D0  9A93               	bcf	3987,5,c	;volatile
  2856                           
  2857                           ;hardware.c: 28: TRISBbits.TRISB6 = 1;
  2858  0030D2  8C93               	bsf	3987,6,c	;volatile
  2859                           
  2860                           ;hardware.c: 29: TRISBbits.TRISB7 = 1;
  2861  0030D4  8E93               	bsf	3987,7,c	;volatile
  2862                           
  2863                           ;hardware.c: 32: PORTC = 0;
  2864  0030D6  0E00               	movlw	0
  2865  0030D8  6E82               	movwf	3970,c	;volatile
  2866                           
  2867                           ;hardware.c: 34: TRISCbits.TRISC0 = 0;
  2868  0030DA  9094               	bcf	3988,0,c	;volatile
  2869                           
  2870                           ;hardware.c: 35: TRISCbits.TRISC1 = 0;
  2871  0030DC  9294               	bcf	3988,1,c	;volatile
  2872                           
  2873                           ;hardware.c: 36: TRISCbits.TRISC2 = 0;
  2874  0030DE  9494               	bcf	3988,2,c	;volatile
  2875                           
  2876                           ;hardware.c: 37: TRISCbits.TRISC3 = 0;
  2877  0030E0  9694               	bcf	3988,3,c	;volatile
  2878                           
  2879                           ;hardware.c: 38: TRISCbits.TRISC4 = 0;
  2880  0030E2  9894               	bcf	3988,4,c	;volatile
  2881                           
  2882                           ;hardware.c: 39: TRISCbits.TRISC5 = 1;
  2883  0030E4  8A94               	bsf	3988,5,c	;volatile
  2884                           
  2885                           ;hardware.c: 40: TRISCbits.TRISC6 = 0;
  2886  0030E6  9C94               	bcf	3988,6,c	;volatile
  2887                           
  2888                           ;hardware.c: 41: TRISCbits.TRISC7 = 1;
  2889  0030E8  8E94               	bsf	3988,7,c	;volatile
  2890                           
  2891                           ;hardware.c: 44: PORTD = 0;
  2892  0030EA  0E00               	movlw	0
  2893  0030EC  6E83               	movwf	3971,c	;volatile
  2894                           
  2895                           ;hardware.c: 46: TRISDbits.TRISD0 = 0;
  2896  0030EE  9095               	bcf	3989,0,c	;volatile
  2897                           
  2898                           ;hardware.c: 47: TRISDbits.TRISD1 = 0;
  2899  0030F0  9295               	bcf	3989,1,c	;volatile
  2900                           
  2901                           ;hardware.c: 48: TRISDbits.TRISD2 = 0;
  2902  0030F2  9495               	bcf	3989,2,c	;volatile
  2903                           
  2904                           ;hardware.c: 49: TRISDbits.TRISD3 = 0;
  2905  0030F4  9695               	bcf	3989,3,c	;volatile
  2906                           
  2907                           ;hardware.c: 50: TRISDbits.TRISD4 = 0;
  2908  0030F6  9895               	bcf	3989,4,c	;volatile
  2909                           
  2910                           ;hardware.c: 51: TRISDbits.TRISD5 = 0;
  2911  0030F8  9A95               	bcf	3989,5,c	;volatile
  2912                           
  2913                           ;hardware.c: 52: TRISDbits.TRISD6 = 0;
  2914  0030FA  9C95               	bcf	3989,6,c	;volatile
  2915                           
  2916                           ;hardware.c: 53: TRISDbits.TRISD7 = 0;
  2917  0030FC  9E95               	bcf	3989,7,c	;volatile
  2918                           
  2919                           ;hardware.c: 56: PORTE = 0;
  2920  0030FE  0E00               	movlw	0
  2921  003100  6E84               	movwf	3972,c	;volatile
  2922                           
  2923                           ;hardware.c: 58: TRISEbits.TRISE0 = 1;
  2924  003102  8096               	bsf	3990,0,c	;volatile
  2925                           
  2926                           ;hardware.c: 59: TRISEbits.TRISE1 = 1;
  2927  003104  8296               	bsf	3990,1,c	;volatile
  2928                           
  2929                           ;hardware.c: 60: TRISEbits.TRISE2 = 0;
  2930  003106  9496               	bcf	3990,2,c	;volatile
  2931  003108  0012               	return	
  2932  00310A  FFFF               	dw	65535	; errata NOP
  2933  00310C                     __end_of_hw_config:
  2934                           	opt stack 0
  2935                           tblptru	equ	0xFF8
  2936                           tblptrh	equ	0xFF7
  2937                           tblptrl	equ	0xFF6
  2938                           tablat	equ	0xFF5
  2939                           prodh	equ	0xFF4
  2940                           prodl	equ	0xFF3
  2941                           intcon	equ	0xFF2
  2942                           intcon2	equ	0xFF1
  2943                           postinc0	equ	0xFEE
  2944                           wreg	equ	0xFE8
  2945                           postdec1	equ	0xFE5
  2946                           fsr1l	equ	0xFE1
  2947                           indf2	equ	0xFDF
  2948                           postinc2	equ	0xFDE
  2949                           postdec2	equ	0xFDD
  2950                           fsr2h	equ	0xFDA
  2951                           fsr2l	equ	0xFD9
  2952                           status	equ	0xFD8
  2953                           
  2954 ;; *************** function _feu_process *****************
  2955 ;; Defined at:
  2956 ;;		line 89 in file "feu.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;		None               void
  2963 ;; Registers used:
  2964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2970 ;;      Params:         0       0       0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0
  2972 ;;      Temps:          0       2       0       0       0       0       0
  2973 ;;      Totals:         0       2       0       0       0       0       0
  2974 ;;Total ram usage:        2 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    5
  2977 ;; This function calls:
  2978 ;;		_delay_ms
  2979 ;;		_feu_check_end
  2980 ;;		_feu_tir
  2981 ;; This function is called by:
  2982 ;;		_main
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text7
  2987  000F1E                     __ptext7:
  2988                           	opt stack 0
  2989  000F1E                     _feu_process:
  2990                           	opt stack 25
  2991                           
  2992                           ;incstack = 0
  2993  000F1E  FFFF               	dw	65535
  2994                           
  2995                           ;feu.c: 91: switch (Feu.Step)
  2996  000F20  D113               	goto	l6690
  2997  000F22                     l1131:
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;feu.c: 95: if (Bouton[Bp_Start].State == 0)
  3001  000F22  0100               	movlb	0	; () banked
  3002  000F24  B399               	btfsc	(_Bouton+11)& (0+255),1,b
  3003  000F26  D12E               	goto	l1156
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;feu.c: 96: {
  3007                           ;feu.c: 97: if (Micro.Mods == 0) {Feu.Step = 0x01;}
  3008  000F28  6657               	tstfsz	_Micro+5,c
  3009  000F2A  D004               	goto	l6634
  3010                           
  3011                           ; BSR set to: 0
  3012  000F2C  0100               	movlb	0	; () banked
  3013  000F2E  6FC1               	movwf	??_feu_process& (0+255),b
  3014  000F30  0E01               	movlw	1
  3015  000F32  D003               	goto	L22
  3016  000F34                     l6634:
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;feu.c: 98: else {Feu.Step = 0x03;}
  3020  000F34  0100               	movlb	0	; () banked
  3021  000F36  6FC1               	movwf	??_feu_process& (0+255),b
  3022  000F38  0E03               	movlw	3
  3023  000F3A                     L22:
  3024  000F3A  0100               	movlb	0	; () banked
  3025  000F3C  0100               	movlb	0	; () banked
  3026  000F3E  6F80               	movwf	_Feu& (0+255),b
  3027  000F40  0100               	movlb	0	; () banked
  3028  000F42  51C1               	movf	??_feu_process& (0+255),w,b
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;feu.c: 100: Micro.State = 0x02;
  3032  000F44  0100               	movlb	0	; () banked
  3033  000F46  6FC1               	movwf	??_feu_process& (0+255),b
  3034  000F48  0E02               	movlw	2
  3035  000F4A  6E56               	movwf	_Micro+4,c
  3036  000F4C  0100               	movlb	0	; () banked
  3037  000F4E  51C1               	movf	??_feu_process& (0+255),w,b
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;feu.c: 102: Decompte = 50;
  3041  000F50  0E32               	movlw	50
  3042  000F52  6E51               	movwf	_Decompte,c	;volatile
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;feu.c: 103: Cpt1Sur20s = 0;
  3046  000F54  0E00               	movlw	0
  3047  000F56  6E4E               	movwf	_Cpt1Sur20s+1,c	;volatile
  3048  000F58  0E00               	movlw	0
  3049  000F5A  6E4D               	movwf	_Cpt1Sur20s,c	;volatile
  3050                           
  3051                           ;feu.c: 105: Feu.LastOutput = 0;
  3052  000F5C  0100               	movlb	0	; () banked
  3053  000F5E  6FC1               	movwf	??_feu_process& (0+255),b
  3054  000F60  0E00               	movlw	0
  3055  000F62  0100               	movlb	0	; () banked
  3056  000F64  0100               	movlb	0	; () banked
  3057  000F66  6F8B               	movwf	(_Feu+11)& (0+255),b
  3058  000F68  0100               	movlb	0	; () banked
  3059  000F6A  51C1               	movf	??_feu_process& (0+255),w,b
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;feu.c: 107: Feu.CanStopStart = 0;
  3063  000F6C  0100               	movlb	0	; () banked
  3064  000F6E  0100               	movlb	0	; () banked
  3065  000F70  918D               	bcf	(_Feu+13)& (0+255),0,b
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;feu.c: 108: Feu.TimeStart = Cptms;
  3069  000F72  C04F  F089         	movff	_Cptms,_Feu+9	;volatile
  3070  000F76  C050  F08A         	movff	_Cptms+1,_Feu+10	;volatile
  3071  000F7A  D104               	goto	l1156
  3072  000F7C                     l6644:
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;feu.c: 113: Feu.NextOutput = Cf.Data[Feu.Cpt*3];
  3076  000F7C  0100               	movlb	0	; () banked
  3077  000F7E  0100               	movlb	0	; () banked
  3078  000F80  5181               	movf	(_Feu+1)& (0+255),w,b
  3079  000F82  0D03               	mullw	3
  3080  000F84  0101               	movlb	1	; () banked
  3081  000F86  0E00               	movlw	low _Cf	;volatile
  3082  000F88  24F3               	addwf	prodl,w,c
  3083  000F8A  6ED9               	movwf	fsr2l,c
  3084  000F8C  0101               	movlb	1	; () banked
  3085  000F8E  0E01               	movlw	high _Cf	;volatile
  3086  000F90  20F4               	addwfc	prodh,w,c
  3087  000F92  6EDA               	movwf	fsr2h,c
  3088  000F94  50DF               	movf	indf2,w,c
  3089  000F96  0100               	movlb	0	; () banked
  3090  000F98  0100               	movlb	0	; () banked
  3091  000F9A  6F8C               	movwf	(_Feu+12)& (0+255),b
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;feu.c: 115: if (feu_check_end() == 1) {Feu.Step = 0x08;}
  3095  000F9C  ECED  F01A         	call	_feu_check_end	;wreg free
  3096  000FA0  0100               	movlb	0	; () banked
  3097  000FA2  6FC1               	movwf	??_feu_process& (0+255),b
  3098  000FA4  0100               	movlb	0	; () banked
  3099  000FA6  05C1               	decf	??_feu_process& (0+255),w,b
  3100  000FA8  A4D8               	btfss	status,2,c
  3101  000FAA  D004               	goto	l6650
  3102  000FAC                     
  3103                           ; BSR set to: 0
  3104  000FAC  0100               	movlb	0	; () banked
  3105  000FAE  6FC1               	movwf	??_feu_process& (0+255),b
  3106  000FB0  0E08               	movlw	8
  3107  000FB2  D0BF               	goto	L29
  3108  000FB4                     l6650:
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;feu.c: 116: else
  3112                           ;feu.c: 117: {
  3113                           ;feu.c: 119: Feu.TimeToFire = Cf.Data[(Feu.Cpt*3) + 1] << 8;
  3114  000FB4  0100               	movlb	0	; () banked
  3115  000FB6  0100               	movlb	0	; () banked
  3116  000FB8  5181               	movf	(_Feu+1)& (0+255),w,b
  3117  000FBA  0D03               	mullw	3
  3118  000FBC  0E01               	movlw	1
  3119  000FBE  26F3               	addwf	prodl,f,c
  3120  000FC0  0E00               	movlw	0
  3121  000FC2  22F4               	addwfc	prodh,f,c
  3122  000FC4  0101               	movlb	1	; () banked
  3123  000FC6  0E00               	movlw	low _Cf	;volatile
  3124  000FC8  24F3               	addwf	prodl,w,c
  3125  000FCA  6ED9               	movwf	fsr2l,c
  3126  000FCC  0101               	movlb	1	; () banked
  3127  000FCE  0E01               	movlw	high _Cf	;volatile
  3128  000FD0  20F4               	addwfc	prodh,w,c
  3129  000FD2  6EDA               	movwf	fsr2h,c
  3130  000FD4  50DF               	movf	indf2,w,c
  3131  000FD6  0100               	movlb	0	; () banked
  3132  000FD8  0100               	movlb	0	; () banked
  3133  000FDA  6F86               	movwf	(_Feu+6)& (0+255),b
  3134  000FDC  0100               	movlb	0	; () banked
  3135  000FDE  6B85               	clrf	(_Feu+5)& (0+255),b
  3136                           
  3137                           ;feu.c: 120: Feu.TimeToFire |= Cf.Data[(Feu.Cpt*3) + 2];
  3138  000FE0  0100               	movlb	0	; () banked
  3139  000FE2  0100               	movlb	0	; () banked
  3140  000FE4  5181               	movf	(_Feu+1)& (0+255),w,b
  3141  000FE6  0D03               	mullw	3
  3142  000FE8  0E02               	movlw	2
  3143  000FEA  26F3               	addwf	prodl,f,c
  3144  000FEC  0E00               	movlw	0
  3145  000FEE  22F4               	addwfc	prodh,f,c
  3146  000FF0  0101               	movlb	1	; () banked
  3147  000FF2  0E00               	movlw	low _Cf	;volatile
  3148  000FF4  24F3               	addwf	prodl,w,c
  3149  000FF6  6ED9               	movwf	fsr2l,c
  3150  000FF8  0101               	movlb	1	; () banked
  3151  000FFA  0E01               	movlw	high _Cf	;volatile
  3152  000FFC  20F4               	addwfc	prodh,w,c
  3153  000FFE  6EDA               	movwf	fsr2h,c
  3154  001000  50DF               	movf	indf2,w,c
  3155  001002  0100               	movlb	0	; () banked
  3156  001004  6FC1               	movwf	??_feu_process& (0+255),b
  3157  001006  0100               	movlb	0	; () banked
  3158  001008  51C1               	movf	??_feu_process& (0+255),w,b
  3159  00100A  0100               	movlb	0	; () banked
  3160  00100C  0100               	movlb	0	; () banked
  3161  00100E  1385               	iorwf	(_Feu+5)& (0+255),f,b
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;feu.c: 122: Feu.Step = 0x02;
  3165  001010  0100               	movlb	0	; () banked
  3166  001012  6FC1               	movwf	??_feu_process& (0+255),b
  3167  001014  0E02               	movlw	2
  3168  001016  D08D               	goto	L29
  3169  001018                     l6654:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;feu.c: 126: if (Cpt1Sur20s == Feu.TimeToFire)
  3173  001018  0100               	movlb	0	; () banked
  3174  00101A  EE20  F085         	lfsr	2,_Feu+5
  3175  00101E  52DE               	movf	postinc2,f,c
  3176  001020  504E               	movf	_Cpt1Sur20s+1,w,c	;volatile
  3177  001022  18DD               	xorwf	postdec2,w,c
  3178  001024  C04D  FFE8         	movff	_Cpt1Sur20s,wreg	;volatile
  3179  001028  B4D8               	btfsc	status,2,c
  3180  00102A  18DF               	xorwf	indf2,w,c
  3181  00102C  A4D8               	btfss	status,2,c
  3182  00102E  D0AA               	goto	l1156
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;feu.c: 127: {
  3186                           ;feu.c: 128: feu_tir(Feu.NextOutput);
  3187  001030  0100               	movlb	0	; () banked
  3188  001032  0100               	movlb	0	; () banked
  3189  001034  518C               	movf	(_Feu+12)& (0+255),w,b
  3190  001036  EC5F  F01A         	call	_feu_tir
  3191  00103A  D078               	goto	L31
  3192  00103C                     l1141:
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;feu.c: 134: if (Micro.Mod.P_0 == 1) {Feu.NextOutput = Feu.Cpt+1;}
  3196  00103C  A057               	btfss	_Micro+5,0,c
  3197  00103E  D004               	goto	l1142
  3198                           
  3199                           ; BSR set to: 0
  3200  001040  0100               	movlb	0	; () banked
  3201  001042  0100               	movlb	0	; () banked
  3202  001044  2981               	incf	(_Feu+1)& (0+255),w,b
  3203  001046  D00F               	goto	L26
  3204  001048                     l1142:
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;feu.c: 135: else if (Micro.Mod.P_00 == 1) {Feu.NextOutput = Cf.Data[Feu.Cpt*3];}
  3208  001048  A257               	btfss	_Micro+5,1,c
  3209  00104A  D010               	goto	l6664
  3210                           
  3211                           ; BSR set to: 0
  3212  00104C  0100               	movlb	0	; () banked
  3213  00104E  0100               	movlb	0	; () banked
  3214  001050  5181               	movf	(_Feu+1)& (0+255),w,b
  3215  001052  0D03               	mullw	3
  3216  001054  0101               	movlb	1	; () banked
  3217  001056  0E00               	movlw	low _Cf	;volatile
  3218  001058  24F3               	addwf	prodl,w,c
  3219  00105A  6ED9               	movwf	fsr2l,c
  3220  00105C  0101               	movlb	1	; () banked
  3221  00105E  0E01               	movlw	high _Cf	;volatile
  3222  001060  20F4               	addwfc	prodh,w,c
  3223  001062  6EDA               	movwf	fsr2h,c
  3224  001064  50DF               	movf	indf2,w,c
  3225  001066                     L26:
  3226  001066  0100               	movlb	0	; () banked
  3227  001068  0100               	movlb	0	; () banked
  3228  00106A  6F8C               	movwf	(_Feu+12)& (0+255),b
  3229  00106C                     l6664:
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;feu.c: 137: if (feu_check_end() == 1) {Feu.Step = 0x08;}
  3233  00106C  ECED  F01A         	call	_feu_check_end	;wreg free
  3234  001070  0100               	movlb	0	; () banked
  3235  001072  6FC1               	movwf	??_feu_process& (0+255),b
  3236  001074  0100               	movlb	0	; () banked
  3237  001076  05C1               	decf	??_feu_process& (0+255),w,b
  3238  001078  B4D8               	btfsc	status,2,c
  3239  00107A  D798               	goto	L32
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;feu.c: 138: else {Feu.Step = 0x04;}
  3243                           
  3244                           ; BSR set to: 0
  3245                           
  3246                           ; BSR set to: 0
  3247  00107C  0100               	movlb	0	; () banked
  3248  00107E  6FC1               	movwf	??_feu_process& (0+255),b
  3249  001080  0E04               	movlw	4
  3250  001082  D057               	goto	L29
  3251  001084                     l1147:
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;feu.c: 141: if (Bouton[Bp_Start].State == 0)
  3255  001084  0100               	movlb	0	; () banked
  3256  001086  B399               	btfsc	(_Bouton+11)& (0+255),1,b
  3257  001088  D07D               	goto	l1156
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;feu.c: 142: {
  3261                           ;feu.c: 143: delay_ms(15);
  3262  00108A  0E00               	movlw	0
  3263  00108C  0100               	movlb	0	; () banked
  3264  00108E  0100               	movlb	0	; () banked
  3265  001090  6FBB               	movwf	(delay_ms@TimeToWait+1)& (0+255),b
  3266  001092  0E0F               	movlw	15
  3267  001094  0100               	movlb	0	; () banked
  3268  001096  6FBA               	movwf	delay_ms@TimeToWait& (0+255),b
  3269  001098  ECF4  F019         	call	_delay_ms	;wreg free
  3270                           
  3271                           ;feu.c: 145: feu_tir(Feu.NextOutput);
  3272  00109C  0100               	movlb	0	; () banked
  3273  00109E  0100               	movlb	0	; () banked
  3274  0010A0  518C               	movf	(_Feu+12)& (0+255),w,b
  3275  0010A2  EC5F  F01A         	call	_feu_tir
  3276                           
  3277                           ;feu.c: 147: Feu.Step = 0x05;
  3278  0010A6  0100               	movlb	0	; () banked
  3279  0010A8  6FC1               	movwf	??_feu_process& (0+255),b
  3280  0010AA  0E05               	movlw	5
  3281  0010AC  0100               	movlb	0	; () banked
  3282  0010AE  0100               	movlb	0	; () banked
  3283  0010B0  6F80               	movwf	_Feu& (0+255),b
  3284  0010B2  0100               	movlb	0	; () banked
  3285  0010B4  51C1               	movf	??_feu_process& (0+255),w,b
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;feu.c: 148: Feu.Time = Cptms;
  3289  0010B6  C04F  F087         	movff	_Cptms,_Feu+7	;volatile
  3290  0010BA  C050  F088         	movff	_Cptms+1,_Feu+8	;volatile
  3291  0010BE  D062               	goto	l1156
  3292  0010C0                     l6676:
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;feu.c: 152: if ((((unsigned short) (Cptms - Feu.Time) > 200) ? 1 : 0))
  3296  0010C0  0100               	movlb	0	; () banked
  3297  0010C2  EE20  F087         	lfsr	2,_Feu+7
  3298  0010C6  CFDE F0C1          	movff	postinc2,??_feu_process
  3299  0010CA  CFDD F0C2          	movff	postdec2,??_feu_process+1
  3300  0010CE  0100               	movlb	0	; () banked
  3301  0010D0  1FC1               	comf	??_feu_process& (0+255),f,b
  3302  0010D2  1FC2               	comf	(??_feu_process+1)& (0+255),f,b
  3303  0010D4  4BC1               	infsnz	??_feu_process& (0+255),f,b
  3304  0010D6  2BC2               	incf	(??_feu_process+1)& (0+255),f,b
  3305  0010D8  504F               	movf	_Cptms,w,c	;volatile
  3306  0010DA  0100               	movlb	0	; () banked
  3307  0010DC  27C1               	addwf	??_feu_process& (0+255),f,b
  3308  0010DE  5050               	movf	_Cptms+1,w,c	;volatile
  3309  0010E0  0100               	movlb	0	; () banked
  3310  0010E2  23C2               	addwfc	(??_feu_process+1)& (0+255),f,b
  3311  0010E4  0EC9               	movlw	201
  3312  0010E6  0100               	movlb	0	; () banked
  3313  0010E8  5DC1               	subwf	??_feu_process& (0+255),w,b
  3314  0010EA  0E00               	movlw	0
  3315  0010EC  59C2               	subwfb	(??_feu_process+1)& (0+255),w,b
  3316  0010EE  A0D8               	btfss	status,0,c
  3317  0010F0  D049               	goto	l1156
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;feu.c: 153: {
  3321                           ;feu.c: 154: if (Bouton[Bp_Start].State == 1) {Feu.Step = 0x03;}
  3322  0010F2  0100               	movlb	0	; () banked
  3323  0010F4  A399               	btfss	(_Bouton+11)& (0+255),1,b
  3324  0010F6  D046               	goto	l1156
  3325                           
  3326                           ; BSR set to: 0
  3327  0010F8  0100               	movlb	0	; () banked
  3328  0010FA  6FC1               	movwf	??_feu_process& (0+255),b
  3329  0010FC  0E03               	movlw	3
  3330  0010FE  D019               	goto	L29
  3331  001100                     l1152:
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;feu.c: 158: if (Feu.SaveTime == 0)
  3335  001100  0100               	movlb	0	; () banked
  3336  001102  B38D               	btfsc	(_Feu+13)& (0+255),1,b
  3337  001104  D03F               	goto	l1156
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;feu.c: 159: {
  3341                           ;feu.c: 160: Feu.Decompte = Decompte;
  3342  001106  C051  F082         	movff	_Decompte,_Feu+2	;volatile
  3343                           
  3344                           ;feu.c: 161: Feu.SavedTime = Cpt1Sur20s;
  3345  00110A  C04D  F083         	movff	_Cpt1Sur20s,_Feu+3	;volatile
  3346  00110E  C04E  F084         	movff	_Cpt1Sur20s+1,_Feu+4	;volatile
  3347                           
  3348                           ;feu.c: 163: Feu.SaveTime = 1;
  3349  001112  0100               	movlb	0	; () banked
  3350  001114  0100               	movlb	0	; () banked
  3351  001116  838D               	bsf	(_Feu+13)& (0+255),1,b
  3352  001118  D035               	goto	l1156
  3353  00111A                     l1154:
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;feu.c: 167: Decompte = Feu.Decompte;
  3357  00111A  C082  F051         	movff	_Feu+2,_Decompte	;volatile
  3358                           
  3359                           ;feu.c: 168: Cpt1Sur20s = Feu.SavedTime;
  3360  00111E  C083  F04D         	movff	_Feu+3,_Cpt1Sur20s	;volatile
  3361  001122  C084  F04E         	movff	_Feu+4,_Cpt1Sur20s+1	;volatile
  3362                           
  3363                           ;feu.c: 170: Feu.SaveTime = 0;
  3364  001126  0100               	movlb	0	; () banked
  3365  001128  0100               	movlb	0	; () banked
  3366  00112A  938D               	bcf	(_Feu+13)& (0+255),1,b
  3367  00112C                     L31:
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;feu.c: 172: Feu.Step = 0x01;
  3371  00112C  0100               	movlb	0	; () banked
  3372  00112E  6FC1               	movwf	??_feu_process& (0+255),b
  3373  001130  0E01               	movlw	1
  3374  001132                     L29:
  3375  001132  0100               	movlb	0	; () banked
  3376  001134  0100               	movlb	0	; () banked
  3377  001136  6F80               	movwf	_Feu& (0+255),b
  3378  001138  D004               	goto	L30
  3379  00113A                     l6686:
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;feu.c: 175: Micro.State = 0x08;
  3383  00113A  0100               	movlb	0	; () banked
  3384  00113C  6FC1               	movwf	??_feu_process& (0+255),b
  3385  00113E  0E08               	movlw	8
  3386  001140  6E56               	movwf	_Micro+4,c
  3387  001142                     L30:
  3388  001142  0100               	movlb	0	; () banked
  3389  001144  51C1               	movf	??_feu_process& (0+255),w,b
  3390                           
  3391                           ;feu.c: 176: break;
  3392  001146  D01E               	goto	l1156
  3393  001148                     l6690:
  3394  001148  0100               	movlb	0	; () banked
  3395  00114A  0100               	movlb	0	; () banked
  3396  00114C  5180               	movf	_Feu& (0+255),w,b
  3397                           
  3398                           ; Switch size 1, requested type "space"
  3399                           ; Number of cases is 9, Range of values is 0 to 8
  3400                           ; switch strategies available:
  3401                           ; Name         Instructions Cycles
  3402                           ; simple_byte           28    15 (average)
  3403                           ;	Chosen strategy is simple_byte
  3404  00114E  0A00               	xorlw	0	; case 0
  3405  001150  B4D8               	btfsc	status,2,c
  3406  001152  D6E7               	goto	l1131
  3407  001154  0A01               	xorlw	1	; case 1
  3408  001156  B4D8               	btfsc	status,2,c
  3409  001158  D711               	goto	l6644
  3410  00115A  0A03               	xorlw	3	; case 2
  3411  00115C  B4D8               	btfsc	status,2,c
  3412  00115E  D75C               	goto	l6654
  3413  001160  0A01               	xorlw	1	; case 3
  3414  001162  B4D8               	btfsc	status,2,c
  3415  001164  D76B               	goto	l1141
  3416  001166  0A07               	xorlw	7	; case 4
  3417  001168  B4D8               	btfsc	status,2,c
  3418  00116A  D78C               	goto	l1147
  3419  00116C  0A01               	xorlw	1	; case 5
  3420  00116E  B4D8               	btfsc	status,2,c
  3421  001170  D7A7               	goto	l6676
  3422  001172  0A03               	xorlw	3	; case 6
  3423  001174  B4D8               	btfsc	status,2,c
  3424  001176  D7C4               	goto	l1152
  3425  001178  0A01               	xorlw	1	; case 7
  3426  00117A  B4D8               	btfsc	status,2,c
  3427  00117C  D7CE               	goto	l1154
  3428  00117E  0A0F               	xorlw	15	; case 8
  3429  001180  B4D8               	btfsc	status,2,c
  3430  001182  D7DB               	goto	l6686
  3431  001184                     l1156:
  3432                           
  3433                           ; BSR set to: 0
  3434  001184  0012               	return	
  3435  001186  FFFF               	dw	65535	; errata NOP
  3436  001188                     __end_of_feu_process:
  3437                           	opt stack 0
  3438                           tblptru	equ	0xFF8
  3439                           tblptrh	equ	0xFF7
  3440                           tblptrl	equ	0xFF6
  3441                           tablat	equ	0xFF5
  3442                           prodh	equ	0xFF4
  3443                           prodl	equ	0xFF3
  3444                           intcon	equ	0xFF2
  3445                           intcon2	equ	0xFF1
  3446                           postinc0	equ	0xFEE
  3447                           wreg	equ	0xFE8
  3448                           postdec1	equ	0xFE5
  3449                           fsr1l	equ	0xFE1
  3450                           indf2	equ	0xFDF
  3451                           postinc2	equ	0xFDE
  3452                           postdec2	equ	0xFDD
  3453                           fsr2h	equ	0xFDA
  3454                           fsr2l	equ	0xFD9
  3455                           status	equ	0xFD8
  3456                           
  3457 ;; *************** function _feu_tir *****************
  3458 ;; Defined at:
  3459 ;;		line 9 in file "feu.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  Output          1    wreg     unsigned char 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  Output          1    6[BANK0 ] unsigned char 
  3464 ;; Return value:  Size  Location     Type
  3465 ;;		None               void
  3466 ;; Registers used:
  3467 ;;		wreg, status,2, status,0, cstack
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3473 ;;      Params:         0       0       0       0       0       0       0
  3474 ;;      Locals:         0       1       0       0       0       0       0
  3475 ;;      Temps:          0       0       0       0       0       0       0
  3476 ;;      Totals:         0       1       0       0       0       0       0
  3477 ;;Total ram usage:        1 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:    4
  3480 ;; This function calls:
  3481 ;;		_delay_ms
  3482 ;;		_register_write
  3483 ;; This function is called by:
  3484 ;;		_feu_process
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text8
  3489  0034BE                     __ptext8:
  3490                           	opt stack 0
  3491  0034BE                     _feu_tir:
  3492                           	opt stack 25
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;incstack = 0
  3496  0034BE  FFFF               	dw	65535
  3497                           
  3498                           ;feu_tir@Output stored from wreg
  3499  0034C0  CFE8 F0C0          	movff	wreg,feu_tir@Output
  3500                           
  3501                           ;feu.c: 11: PORTAbits.RA5 = 1;
  3502  0034C4  8A80               	bsf	3968,5,c	;volatile
  3503                           
  3504                           ;feu.c: 12: PORTBbits.RB1 = 1;
  3505  0034C6  8281               	bsf	3969,1,c	;volatile
  3506                           
  3507                           ;feu.c: 14: register_write(Output);
  3508  0034C8  0100               	movlb	0	; () banked
  3509  0034CA  0100               	movlb	0	; () banked
  3510  0034CC  51C0               	movf	feu_tir@Output& (0+255),w,b
  3511  0034CE  EC80  F019         	call	_register_write
  3512                           
  3513                           ;feu.c: 15: delay_ms(40);
  3514  0034D2  0E00               	movlw	0
  3515  0034D4  0100               	movlb	0	; () banked
  3516  0034D6  0100               	movlb	0	; () banked
  3517  0034D8  6FBB               	movwf	(delay_ms@TimeToWait+1)& (0+255),b
  3518  0034DA  0E28               	movlw	40
  3519  0034DC  0100               	movlb	0	; () banked
  3520  0034DE  6FBA               	movwf	delay_ms@TimeToWait& (0+255),b
  3521  0034E0  ECF4  F019         	call	_delay_ms	;wreg free
  3522                           
  3523                           ;feu.c: 16: register_write(0);
  3524  0034E4  0E00               	movlw	0
  3525  0034E6  EC80  F019         	call	_register_write
  3526                           
  3527                           ;feu.c: 18: PORTBbits.RB1 = 0;
  3528  0034EA  9281               	bcf	3969,1,c	;volatile
  3529                           
  3530                           ;feu.c: 19: PORTAbits.RA5 = 0;
  3531  0034EC  9A80               	bcf	3968,5,c	;volatile
  3532                           
  3533                           ;feu.c: 22: Feu.LastOutput = Feu.NextOutput;
  3534  0034EE  C08C  F08B         	movff	_Feu+12,_Feu+11
  3535                           
  3536                           ;feu.c: 23: Feu.Cpt ++;
  3537  0034F2  0100               	movlb	0	; () banked
  3538  0034F4  0100               	movlb	0	; () banked
  3539  0034F6  2B81               	incf	(_Feu+1)& (0+255),f,b
  3540                           
  3541                           ; BSR set to: 0
  3542  0034F8  0012               	return	
  3543  0034FA  FFFF               	dw	65535	; errata NOP
  3544  0034FC                     __end_of_feu_tir:
  3545                           	opt stack 0
  3546                           tblptru	equ	0xFF8
  3547                           tblptrh	equ	0xFF7
  3548                           tblptrl	equ	0xFF6
  3549                           tablat	equ	0xFF5
  3550                           prodh	equ	0xFF4
  3551                           prodl	equ	0xFF3
  3552                           intcon	equ	0xFF2
  3553                           intcon2	equ	0xFF1
  3554                           postinc0	equ	0xFEE
  3555                           wreg	equ	0xFE8
  3556                           postdec1	equ	0xFE5
  3557                           fsr1l	equ	0xFE1
  3558                           indf2	equ	0xFDF
  3559                           postinc2	equ	0xFDE
  3560                           postdec2	equ	0xFDD
  3561                           fsr2h	equ	0xFDA
  3562                           fsr2l	equ	0xFD9
  3563                           status	equ	0xFD8
  3564                           
  3565 ;; *************** function _register_write *****************
  3566 ;; Defined at:
  3567 ;;		line 3 in file "register.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  Output          1    wreg     unsigned char 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  Output          1    1[BANK0 ] unsigned char 
  3572 ;;  i               1    2[BANK0 ] unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;		None               void
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3582 ;;      Params:         0       0       0       0       0       0       0
  3583 ;;      Locals:         0       2       0       0       0       0       0
  3584 ;;      Temps:          0       1       0       0       0       0       0
  3585 ;;      Totals:         0       3       0       0       0       0       0
  3586 ;;Total ram usage:        3 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    3
  3589 ;; This function calls:
  3590 ;;		Nothing
  3591 ;; This function is called by:
  3592 ;;		_test_process
  3593 ;;		_feu_tir
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text9
  3598  003300                     __ptext9:
  3599                           	opt stack 0
  3600  003300                     _register_write:
  3601                           	opt stack 26
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;incstack = 0
  3605  003300  FFFF               	dw	65535
  3606                           
  3607                           ;register_write@Output stored from wreg
  3608  003302  CFE8 F0BB          	movff	wreg,register_write@Output
  3609                           
  3610                           ;register.c: 5: unsigned char i;
  3611                           ;register.c: 8: PORTAbits.RA2 = 0;
  3612  003306  9480               	bcf	3968,2,c	;volatile
  3613                           
  3614                           ;register.c: 11: PORTBbits.RB2 = 0;
  3615  003308  9481               	bcf	3969,2,c	;volatile
  3616                           
  3617                           ;register.c: 12: PORTBbits.RB2 = 1;
  3618  00330A  8481               	bsf	3969,2,c	;volatile
  3619                           
  3620                           ;register.c: 14: PORTBbits.RB3 = 0;
  3621  00330C  9681               	bcf	3969,3,c	;volatile
  3622                           
  3623                           ;register.c: 16: for (i = 32; i > 0; i --)
  3624  00330E  0100               	movlb	0	; () banked
  3625  003310  6FBA               	movwf	??_register_write& (0+255),b
  3626  003312  0E20               	movlw	32
  3627  003314  0100               	movlb	0	; () banked
  3628  003316  0100               	movlb	0	; () banked
  3629  003318  6FBC               	movwf	register_write@i& (0+255),b
  3630  00331A  0100               	movlb	0	; () banked
  3631  00331C  51BA               	movf	??_register_write& (0+255),w,b
  3632  00331E  D00F               	goto	L33
  3633  003320                     l920:
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;register.c: 17: {
  3637                           ;register.c: 18: PORTBbits.RB4 = 0;
  3638  003320  9881               	bcf	3969,4,c	;volatile
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;register.c: 20: if (Output == i) {PORTBbits.RB5 = 1;}
  3642  003322  0100               	movlb	0	; () banked
  3643  003324  0100               	movlb	0	; () banked
  3644  003326  51BC               	movf	register_write@i& (0+255),w,b
  3645  003328  0100               	movlb	0	; () banked
  3646  00332A  0100               	movlb	0	; () banked
  3647  00332C  63BB               	cpfseq	register_write@Output& (0+255),b
  3648  00332E  D002               	goto	l922
  3649                           
  3650                           ; BSR set to: 0
  3651  003330  8A81               	bsf	3969,5,c	;volatile
  3652  003332  D001               	goto	l923
  3653  003334                     l922:
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;register.c: 21: else {PORTBbits.RB5 = 0;}
  3657  003334  9A81               	bcf	3969,5,c	;volatile
  3658  003336                     l923:
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;register.c: 23: PORTBbits.RB4 = 1;
  3662  003336  8881               	bsf	3969,4,c	;volatile
  3663                           
  3664                           ; BSR set to: 0
  3665  003338  0100               	movlb	0	; () banked
  3666  00333A  0100               	movlb	0	; () banked
  3667  00333C  07BC               	decf	register_write@i& (0+255),f,b
  3668  00333E                     L33:
  3669                           
  3670                           ; BSR set to: 0
  3671  00333E  0100               	movlb	0	; () banked
  3672  003340  0100               	movlb	0	; () banked
  3673  003342  67BC               	tstfsz	register_write@i& (0+255),b
  3674  003344  D7ED               	goto	l920
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;register.c: 24: }
  3678                           ;register.c: 26: PORTBbits.RB3 = 1;
  3679  003346  8681               	bsf	3969,3,c	;volatile
  3680                           
  3681                           ;register.c: 29: PORTAbits.RA2 = 1;
  3682  003348  8480               	bsf	3968,2,c	;volatile
  3683                           
  3684                           ; BSR set to: 0
  3685  00334A  0012               	return	
  3686  00334C  FFFF               	dw	65535	; errata NOP
  3687  00334E                     __end_of_register_write:
  3688                           	opt stack 0
  3689                           tblptru	equ	0xFF8
  3690                           tblptrh	equ	0xFF7
  3691                           tblptrl	equ	0xFF6
  3692                           tablat	equ	0xFF5
  3693                           prodh	equ	0xFF4
  3694                           prodl	equ	0xFF3
  3695                           intcon	equ	0xFF2
  3696                           intcon2	equ	0xFF1
  3697                           postinc0	equ	0xFEE
  3698                           wreg	equ	0xFE8
  3699                           postdec1	equ	0xFE5
  3700                           fsr1l	equ	0xFE1
  3701                           indf2	equ	0xFDF
  3702                           postinc2	equ	0xFDE
  3703                           postdec2	equ	0xFDD
  3704                           fsr2h	equ	0xFDA
  3705                           fsr2l	equ	0xFD9
  3706                           status	equ	0xFD8
  3707                           
  3708 ;; *************** function _feu_check_end *****************
  3709 ;; Defined at:
  3710 ;;		line 3 in file "feu.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      unsigned char 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3724 ;;      Params:         0       0       0       0       0       0       0
  3725 ;;      Locals:         0       0       0       0       0       0       0
  3726 ;;      Temps:          0       0       0       0       0       0       0
  3727 ;;      Totals:         0       0       0       0       0       0       0
  3728 ;;Total ram usage:        0 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; Hardware stack levels required when called:    3
  3731 ;; This function calls:
  3732 ;;		Nothing
  3733 ;; This function is called by:
  3734 ;;		_feu_process
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text10
  3739  0035DA                     __ptext10:
  3740                           	opt stack 0
  3741  0035DA                     _feu_check_end:
  3742                           	opt stack 26
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;incstack = 0
  3746  0035DA  FFFF               	dw	65535
  3747                           
  3748                           ;feu.c: 5: if ((Feu.Cpt >= 32) || (Feu.NextOutput == 0)) {return 1;}
  3749  0035DC  0E20               	movlw	32
  3750  0035DE  0100               	movlb	0	; () banked
  3751  0035E0  0100               	movlb	0	; () banked
  3752  0035E2  5D81               	subwf	(_Feu+1)& (0+255),w,b
  3753  0035E4  B0D8               	btfsc	status,0,c
  3754  0035E6  D004               	goto	l6142
  3755                           
  3756                           ; BSR set to: 0
  3757  0035E8  0100               	movlb	0	; () banked
  3758  0035EA  0100               	movlb	0	; () banked
  3759  0035EC  678C               	tstfsz	(_Feu+12)& (0+255),b
  3760  0035EE  D002               	goto	l6148
  3761  0035F0                     l6142:
  3762                           
  3763                           ; BSR set to: 0
  3764  0035F0  0E01               	movlw	1
  3765  0035F2  D001               	goto	l1098
  3766  0035F4                     l6148:
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;feu.c: 6: else {return 0;}
  3770  0035F4  0E00               	movlw	0
  3771  0035F6                     l1098:
  3772                           
  3773                           ; BSR set to: 0
  3774  0035F6  0012               	return	
  3775  0035F8  FFFF               	dw	65535	; errata NOP
  3776  0035FA                     __end_of_feu_check_end:
  3777                           	opt stack 0
  3778                           tblptru	equ	0xFF8
  3779                           tblptrh	equ	0xFF7
  3780                           tblptrl	equ	0xFF6
  3781                           tablat	equ	0xFF5
  3782                           prodh	equ	0xFF4
  3783                           prodl	equ	0xFF3
  3784                           intcon	equ	0xFF2
  3785                           intcon2	equ	0xFF1
  3786                           postinc0	equ	0xFEE
  3787                           wreg	equ	0xFE8
  3788                           postdec1	equ	0xFE5
  3789                           fsr1l	equ	0xFE1
  3790                           indf2	equ	0xFDF
  3791                           postinc2	equ	0xFDE
  3792                           postdec2	equ	0xFDD
  3793                           fsr2h	equ	0xFDA
  3794                           fsr2l	equ	0xFD9
  3795                           status	equ	0xFD8
  3796                           
  3797 ;; *************** function _feu_check_bp *****************
  3798 ;; Defined at:
  3799 ;;		line 26 in file "feu.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;		None
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;		None
  3804 ;; Return value:  Size  Location     Type
  3805 ;;		None               void
  3806 ;; Registers used:
  3807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3813 ;;      Params:         0       0       0       0       0       0       0
  3814 ;;      Locals:         0       0       0       0       0       0       0
  3815 ;;      Temps:          0       2       0       0       0       0       0
  3816 ;;      Totals:         0       2       0       0       0       0       0
  3817 ;;Total ram usage:        2 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    6
  3820 ;; This function calls:
  3821 ;;		_ecran_print_num
  3822 ;;		_ecran_print_one_char
  3823 ;; This function is called by:
  3824 ;;		_main
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text11
  3829  001740                     __ptext11:
  3830                           	opt stack 0
  3831  001740                     _feu_check_bp:
  3832                           	opt stack 24
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;incstack = 0
  3836  001740  FFFF               	dw	65535
  3837                           
  3838                           ;feu.c: 28: if ( (Micro.Stat.End == 1)
  3839                           ;feu.c: 29: && (Bouton[Bp_On].State == 0))
  3840  001742  A656               	btfss	_Micro+4,3,c
  3841  001744  D009               	goto	l1105
  3842  001746  0100               	movlb	0	; () banked
  3843  001748  B390               	btfsc	(_Bouton+2)& (0+255),1,b
  3844  00174A  D006               	goto	l1105
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;feu.c: 30: {
  3848                           ;feu.c: 31: Ecran.Digits = (char *) Version;
  3849  00174C  0E06               	movlw	high _Version
  3850  00174E  0100               	movlb	0	; () banked
  3851  001750  0100               	movlb	0	; () banked
  3852  001752  6FAF               	movwf	(_Ecran+5)& (0+255),b
  3853  001754  0E10               	movlw	low _Version
  3854  001756  D07E               	goto	L36
  3855  001758                     l1105:
  3856                           
  3857                           ;feu.c: 34: else if ( (Bouton[Bp_Start].State == 1)
  3858                           ;feu.c: 35: && (Feu.CanStopStart == 0))
  3859  001758  0100               	movlb	0	; () banked
  3860  00175A  A399               	btfss	(_Bouton+11)& (0+255),1,b
  3861  00175C  D020               	goto	l1107
  3862                           
  3863                           ; BSR set to: 0
  3864  00175E  0100               	movlb	0	; () banked
  3865  001760  B18D               	btfsc	(_Feu+13)& (0+255),0,b
  3866  001762  D01D               	goto	l1107
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;feu.c: 36: {
  3870                           ;feu.c: 37: if ((((unsigned short) (Cptms - Feu.TimeStart) > 5000) ? 1 : 0))
  3871  001764  0100               	movlb	0	; () banked
  3872  001766  EE20  F089         	lfsr	2,_Feu+9
  3873  00176A  CFDE F0CF          	movff	postinc2,??_feu_check_bp
  3874  00176E  CFDD F0D0          	movff	postdec2,??_feu_check_bp+1
  3875  001772  0100               	movlb	0	; () banked
  3876  001774  1FCF               	comf	??_feu_check_bp& (0+255),f,b
  3877  001776  1FD0               	comf	(??_feu_check_bp+1)& (0+255),f,b
  3878  001778  4BCF               	infsnz	??_feu_check_bp& (0+255),f,b
  3879  00177A  2BD0               	incf	(??_feu_check_bp+1)& (0+255),f,b
  3880  00177C  504F               	movf	_Cptms,w,c	;volatile
  3881  00177E  0100               	movlb	0	; () banked
  3882  001780  27CF               	addwf	??_feu_check_bp& (0+255),f,b
  3883  001782  5050               	movf	_Cptms+1,w,c	;volatile
  3884  001784  0100               	movlb	0	; () banked
  3885  001786  23D0               	addwfc	(??_feu_check_bp+1)& (0+255),f,b
  3886  001788  0E89               	movlw	137
  3887  00178A  0100               	movlb	0	; () banked
  3888  00178C  5DCF               	subwf	??_feu_check_bp& (0+255),w,b
  3889  00178E  0E13               	movlw	19
  3890  001790  59D0               	subwfb	(??_feu_check_bp+1)& (0+255),w,b
  3891  001792  A0D8               	btfss	status,0,c
  3892  001794  D0A5               	goto	l1127
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;feu.c: 38: {
  3896                           ;feu.c: 39: Feu.CanStopStart = 1;
  3897  001796  0100               	movlb	0	; () banked
  3898  001798  0100               	movlb	0	; () banked
  3899  00179A  818D               	bsf	(_Feu+13)& (0+255),0,b
  3900  00179C  D0A1               	goto	l1127
  3901  00179E                     l1107:
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;feu.c: 42: else if ( (Micro.Mods == 0)
  3905                           ;feu.c: 43: && (Feu.CanStopStart == 1)
  3906                           ;feu.c: 44: && (Bouton[Bp_Start].State == 0))
  3907  00179E  6657               	tstfsz	_Micro+5,c
  3908  0017A0  D02F               	goto	l1110
  3909                           
  3910                           ; BSR set to: 0
  3911  0017A2  0100               	movlb	0	; () banked
  3912  0017A4  A18D               	btfss	(_Feu+13)& (0+255),0,b
  3913  0017A6  D02C               	goto	l1110
  3914                           
  3915                           ; BSR set to: 0
  3916  0017A8  0100               	movlb	0	; () banked
  3917  0017AA  B399               	btfsc	(_Bouton+11)& (0+255),1,b
  3918  0017AC  D029               	goto	l1110
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;feu.c: 45: {
  3922                           ;feu.c: 46: if (Micro.Stat.Go == 1)
  3923  0017AE  A256               	btfss	_Micro+4,1,c
  3924  0017B0  D00F               	goto	l1111
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;feu.c: 47: {
  3928                           ;feu.c: 48: Feu.Step = 0x06;
  3929  0017B2  0100               	movlb	0	; () banked
  3930  0017B4  6FCF               	movwf	??_feu_check_bp& (0+255),b
  3931  0017B6  0E06               	movlw	6
  3932  0017B8  0100               	movlb	0	; () banked
  3933  0017BA  0100               	movlb	0	; () banked
  3934  0017BC  6F80               	movwf	_Feu& (0+255),b
  3935  0017BE  0100               	movlb	0	; () banked
  3936  0017C0  51CF               	movf	??_feu_check_bp& (0+255),w,b
  3937                           
  3938                           ;feu.c: 49: Micro.State = 0x04;
  3939  0017C2  0100               	movlb	0	; () banked
  3940  0017C4  6FCF               	movwf	??_feu_check_bp& (0+255),b
  3941  0017C6  0E04               	movlw	4
  3942  0017C8  6E56               	movwf	_Micro+4,c
  3943  0017CA  0100               	movlb	0	; () banked
  3944  0017CC  51CF               	movf	??_feu_check_bp& (0+255),w,b
  3945                           
  3946                           ;feu.c: 50: }
  3947  0017CE  D014               	goto	l6718
  3948  0017D0                     l1111:
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;feu.c: 51: else if (Micro.Stat.Stop == 1)
  3952  0017D0  A456               	btfss	_Micro+4,2,c
  3953  0017D2  D012               	goto	l6718
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;feu.c: 52: {
  3957                           ;feu.c: 53: Feu.Step = 0x07;
  3958  0017D4  0100               	movlb	0	; () banked
  3959  0017D6  6FCF               	movwf	??_feu_check_bp& (0+255),b
  3960  0017D8  0E07               	movlw	7
  3961  0017DA  0100               	movlb	0	; () banked
  3962  0017DC  0100               	movlb	0	; () banked
  3963  0017DE  6F80               	movwf	_Feu& (0+255),b
  3964  0017E0  0100               	movlb	0	; () banked
  3965  0017E2  51CF               	movf	??_feu_check_bp& (0+255),w,b
  3966                           
  3967                           ;feu.c: 54: Micro.State = 0x02;
  3968  0017E4  0100               	movlb	0	; () banked
  3969  0017E6  6FCF               	movwf	??_feu_check_bp& (0+255),b
  3970  0017E8  0E02               	movlw	2
  3971  0017EA  6E56               	movwf	_Micro+4,c
  3972  0017EC  0100               	movlb	0	; () banked
  3973  0017EE  51CF               	movf	??_feu_check_bp& (0+255),w,b
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;feu.c: 55: Feu.TimeStart = Cptms;
  3977  0017F0  C04F  F089         	movff	_Cptms,_Feu+9	;volatile
  3978  0017F4  C050  F08A         	movff	_Cptms+1,_Feu+10	;volatile
  3979  0017F8                     l6718:
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;feu.c: 56: }
  3983                           ;feu.c: 58: Feu.CanStopStart = 0;
  3984  0017F8  0100               	movlb	0	; () banked
  3985  0017FA  0100               	movlb	0	; () banked
  3986  0017FC  918D               	bcf	(_Feu+13)& (0+255),0,b
  3987                           
  3988                           ;feu.c: 59: }
  3989  0017FE  D070               	goto	l1127
  3990  001800                     l1110:
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;feu.c: 60: else if (Bouton[Comu_Test].State == 1)
  3994  001800  0100               	movlb	0	; () banked
  3995  001802  A396               	btfss	(_Bouton+8)& (0+255),1,b
  3996  001804  D006               	goto	l1115
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;feu.c: 61: {
  4000                           ;feu.c: 62: Ecran.Digits = (char *) ErreurTir;
  4001  001806  0E06               	movlw	high _ErreurTir
  4002  001808  0100               	movlb	0	; () banked
  4003  00180A  0100               	movlb	0	; () banked
  4004  00180C  6FAF               	movwf	(_Ecran+5)& (0+255),b
  4005  00180E  0E0B               	movlw	low _ErreurTir
  4006  001810  D021               	goto	L36
  4007  001812                     l1115:
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;feu.c: 65: else if (Bouton[Bp_IdTest].State == 0)
  4011  001812  0100               	movlb	0	; () banked
  4012  001814  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  4013  001816  D025               	goto	l1117
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;feu.c: 66: {
  4017                           ;feu.c: 67: ecran_print_num(Feu.LastOutput);
  4018  001818  0100               	movlb	0	; () banked
  4019  00181A  0100               	movlb	0	; () banked
  4020  00181C  518B               	movf	(_Feu+11)& (0+255),w,b
  4021  00181E  EC02  F015         	call	_ecran_print_num
  4022                           
  4023                           ;feu.c: 69: if (Micro.Stat.Stop == 1)
  4024  001822  A456               	btfss	_Micro+4,2,c
  4025  001824  D01A               	goto	l6732
  4026                           
  4027                           ;feu.c: 70: {
  4028                           ;feu.c: 71: Ecran.Digit[0] = '-';
  4029  001826  0100               	movlb	0	; () banked
  4030  001828  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4031  00182A  0E2D               	movlw	45
  4032  00182C  0100               	movlb	0	; () banked
  4033  00182E  0100               	movlb	0	; () banked
  4034  001830  6FAA               	movwf	_Ecran& (0+255),b
  4035  001832  0100               	movlb	0	; () banked
  4036  001834  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4037                           
  4038                           ;feu.c: 72: Ecran.Digit[1] = '-';
  4039  001836  0100               	movlb	0	; () banked
  4040  001838  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4041  00183A  0E2D               	movlw	45
  4042  00183C  0100               	movlb	0	; () banked
  4043  00183E  0100               	movlb	0	; () banked
  4044  001840  6FAB               	movwf	(_Ecran+1)& (0+255),b
  4045  001842  0100               	movlb	0	; () banked
  4046  001844  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;feu.c: 74: Ecran.Digits = Ecran.Digit;
  4050  001846  0100               	movlb	0	; () banked
  4051  001848  0E00               	movlw	high _Ecran
  4052  00184A  0100               	movlb	0	; () banked
  4053  00184C  0100               	movlb	0	; () banked
  4054  00184E  6FAF               	movwf	(_Ecran+5)& (0+255),b
  4055  001850  0100               	movlb	0	; () banked
  4056  001852  0EAA               	movlw	low _Ecran
  4057  001854                     L36:
  4058  001854  0100               	movlb	0	; () banked
  4059  001856  0100               	movlb	0	; () banked
  4060  001858  6FAE               	movwf	(_Ecran+4)& (0+255),b
  4061  00185A                     l6732:
  4062                           
  4063                           ;feu.c: 75: }
  4064                           ;feu.c: 76: Ecran.Solid = 0;
  4065  00185A  0100               	movlb	0	; () banked
  4066  00185C  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4067  00185E  0E00               	movlw	0
  4068  001860  D03A               	goto	L35
  4069  001862                     l1117:
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;feu.c: 78: else
  4073                           ;feu.c: 79: {
  4074                           ;feu.c: 80: if (Micro.Stat.Armed == 1) {ecran_print_one_char(0,'-');}
  4075  001862  A056               	btfss	_Micro+4,0,c
  4076  001864  D00C               	goto	l1120
  4077                           
  4078                           ; BSR set to: 0
  4079  001866  0100               	movlb	0	; () banked
  4080  001868  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4081  00186A  0E2D               	movlw	45
  4082  00186C  0100               	movlb	0	; () banked
  4083  00186E  0100               	movlb	0	; () banked
  4084  001870  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  4085  001872  0100               	movlb	0	; () banked
  4086  001874  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4087  001876  0E00               	movlw	0
  4088  001878  EC19  F01A         	call	_ecran_print_one_char
  4089  00187C  D029               	goto	l6742
  4090  00187E                     l1120:
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;feu.c: 81: else if (Micro.Stat.Go == 1) {ecran_print_one_char(1,'-');}
  4094  00187E  A256               	btfss	_Micro+4,1,c
  4095  001880  D00C               	goto	l1122
  4096                           
  4097                           ; BSR set to: 0
  4098  001882  0100               	movlb	0	; () banked
  4099  001884  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4100  001886  0E2D               	movlw	45
  4101  001888  0100               	movlb	0	; () banked
  4102  00188A  0100               	movlb	0	; () banked
  4103  00188C  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  4104  00188E  0100               	movlb	0	; () banked
  4105  001890  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4106  001892  0E01               	movlw	1
  4107  001894  EC19  F01A         	call	_ecran_print_one_char
  4108  001898  D01B               	goto	l6742
  4109  00189A                     l1122:
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;feu.c: 82: else if (Micro.Stat.Stop == 1) {ecran_print_one_char(2,'-');}
  4113  00189A  A456               	btfss	_Micro+4,2,c
  4114  00189C  D00C               	goto	l1124
  4115                           
  4116                           ; BSR set to: 0
  4117  00189E  0100               	movlb	0	; () banked
  4118  0018A0  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4119  0018A2  0E2D               	movlw	45
  4120  0018A4  0100               	movlb	0	; () banked
  4121  0018A6  0100               	movlb	0	; () banked
  4122  0018A8  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  4123  0018AA  0100               	movlb	0	; () banked
  4124  0018AC  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4125  0018AE  0E02               	movlw	2
  4126  0018B0  EC19  F01A         	call	_ecran_print_one_char
  4127  0018B4  D00D               	goto	l6742
  4128  0018B6                     l1124:
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;feu.c: 83: else if (Micro.Stat.End == 1) {ecran_print_one_char(3,'-');}
  4132  0018B6  A656               	btfss	_Micro+4,3,c
  4133  0018B8  D00B               	goto	l6742
  4134                           
  4135                           ; BSR set to: 0
  4136  0018BA  0100               	movlb	0	; () banked
  4137  0018BC  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4138  0018BE  0E2D               	movlw	45
  4139  0018C0  0100               	movlb	0	; () banked
  4140  0018C2  0100               	movlb	0	; () banked
  4141  0018C4  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  4142  0018C6  0100               	movlb	0	; () banked
  4143  0018C8  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4144  0018CA  0E03               	movlw	3
  4145  0018CC  EC19  F01A         	call	_ecran_print_one_char
  4146  0018D0                     l6742:
  4147                           
  4148                           ;feu.c: 85: Ecran.Solid = 1;
  4149  0018D0  0100               	movlb	0	; () banked
  4150  0018D2  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4151  0018D4  0E01               	movlw	1
  4152  0018D6                     L35:
  4153  0018D6  0100               	movlb	0	; () banked
  4154  0018D8  0100               	movlb	0	; () banked
  4155  0018DA  6FB9               	movwf	(_Ecran+15)& (0+255),b
  4156  0018DC  0100               	movlb	0	; () banked
  4157  0018DE  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4158  0018E0                     l1127:
  4159                           
  4160                           ; BSR set to: 0
  4161  0018E0  0012               	return	
  4162  0018E2  FFFF               	dw	65535	; errata NOP
  4163  0018E4                     __end_of_feu_check_bp:
  4164                           	opt stack 0
  4165                           tblptru	equ	0xFF8
  4166                           tblptrh	equ	0xFF7
  4167                           tblptrl	equ	0xFF6
  4168                           tablat	equ	0xFF5
  4169                           prodh	equ	0xFF4
  4170                           prodl	equ	0xFF3
  4171                           intcon	equ	0xFF2
  4172                           intcon2	equ	0xFF1
  4173                           postinc0	equ	0xFEE
  4174                           wreg	equ	0xFE8
  4175                           postdec1	equ	0xFE5
  4176                           fsr1l	equ	0xFE1
  4177                           indf2	equ	0xFDF
  4178                           postinc2	equ	0xFDE
  4179                           postdec2	equ	0xFDD
  4180                           fsr2h	equ	0xFDA
  4181                           fsr2l	equ	0xFD9
  4182                           status	equ	0xFD8
  4183                           
  4184 ;; *************** function _ecran_print_num *****************
  4185 ;; Defined at:
  4186 ;;		line 66 in file "ecran.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  Num             1    wreg     unsigned char 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  Num             1   18[BANK0 ] unsigned char 
  4191 ;;  tempStr         2   19[BANK0 ] PTR unsigned char 
  4192 ;;		 -> PrintTest(5), 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;		None               void
  4195 ;; Registers used:
  4196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4202 ;;      Params:         0       0       0       0       0       0       0
  4203 ;;      Locals:         0       3       0       0       0       0       0
  4204 ;;      Temps:          0       1       0       0       0       0       0
  4205 ;;      Totals:         0       4       0       0       0       0       0
  4206 ;;Total ram usage:        4 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:    5
  4209 ;; This function calls:
  4210 ;;		_DecToStr
  4211 ;; This function is called by:
  4212 ;;		_test_process
  4213 ;;		_feu_check_bp
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           	psect	text12
  4218  002A04                     __ptext12:
  4219                           	opt stack 0
  4220  002A04                     _ecran_print_num:
  4221                           	opt stack 24
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;incstack = 0
  4225  002A04  FFFF               	dw	65535
  4226                           
  4227                           ;ecran_print_num@Num stored from wreg
  4228  002A06  CFE8 F0CC          	movff	wreg,ecran_print_num@Num
  4229                           
  4230                           ;ecran.c: 68: char * tempStr;
  4231                           ;ecran.c: 70: tempStr = PrintTest;
  4232  002A0A  0100               	movlb	0	; () banked
  4233  002A0C  0E00               	movlw	high _PrintTest
  4234  002A0E  0100               	movlb	0	; () banked
  4235  002A10  0100               	movlb	0	; () banked
  4236  002A12  6FCE               	movwf	(ecran_print_num@tempStr+1)& (0+255),b
  4237  002A14  0100               	movlb	0	; () banked
  4238  002A16  0EE5               	movlw	low _PrintTest
  4239  002A18  0100               	movlb	0	; () banked
  4240  002A1A  0100               	movlb	0	; () banked
  4241  002A1C  6FCD               	movwf	ecran_print_num@tempStr& (0+255),b
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;ecran.c: 72: tempStr = DecToStr(Num, tempStr);
  4245  002A1E  0100               	movlb	0	; () banked
  4246  002A20  0100               	movlb	0	; () banked
  4247  002A22  C0CE  F0C2         	movff	ecran_print_num@tempStr+1,DecToStr@result+1
  4248  002A26  0100               	movlb	0	; () banked
  4249  002A28  0100               	movlb	0	; () banked
  4250  002A2A  C0CD  F0C1         	movff	ecran_print_num@tempStr,DecToStr@result
  4251  002A2E  0100               	movlb	0	; () banked
  4252  002A30  0100               	movlb	0	; () banked
  4253  002A32  51CC               	movf	ecran_print_num@Num& (0+255),w,b
  4254  002A34  EC63  F00F         	call	_DecToStr
  4255  002A38  0100               	movlb	0	; () banked
  4256  002A3A  C0C1  F0CD         	movff	?_DecToStr,ecran_print_num@tempStr
  4257  002A3E  0100               	movlb	0	; () banked
  4258  002A40  C0C2  F0CE         	movff	?_DecToStr+1,ecran_print_num@tempStr+1
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;ecran.c: 74: Ecran.Digit[0] = ' ';
  4262  002A44  0100               	movlb	0	; () banked
  4263  002A46  6FCB               	movwf	??_ecran_print_num& (0+255),b
  4264  002A48  0E20               	movlw	32
  4265  002A4A  0100               	movlb	0	; () banked
  4266  002A4C  0100               	movlb	0	; () banked
  4267  002A4E  6FAA               	movwf	_Ecran& (0+255),b
  4268  002A50  0100               	movlb	0	; () banked
  4269  002A52  51CB               	movf	??_ecran_print_num& (0+255),w,b
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;ecran.c: 75: Ecran.Digit[1] = ' ';
  4273  002A54  0100               	movlb	0	; () banked
  4274  002A56  6FCB               	movwf	??_ecran_print_num& (0+255),b
  4275  002A58  0E20               	movlw	32
  4276  002A5A  0100               	movlb	0	; () banked
  4277  002A5C  0100               	movlb	0	; () banked
  4278  002A5E  6FAB               	movwf	(_Ecran+1)& (0+255),b
  4279  002A60  0100               	movlb	0	; () banked
  4280  002A62  51CB               	movf	??_ecran_print_num& (0+255),w,b
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;ecran.c: 77: if (Num < 10)
  4284  002A64  0E0A               	movlw	10
  4285  002A66  0100               	movlb	0	; () banked
  4286  002A68  0100               	movlb	0	; () banked
  4287  002A6A  5DCC               	subwf	ecran_print_num@Num& (0+255),w,b
  4288  002A6C  B0D8               	btfsc	status,0,c
  4289  002A6E  D011               	goto	l5986
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;ecran.c: 78: {
  4293                           ;ecran.c: 79: Ecran.Digit[3] = tempStr[0];
  4294  002A70  C0CD  FFD9         	movff	ecran_print_num@tempStr,fsr2l
  4295  002A74  C0CE  FFDA         	movff	ecran_print_num@tempStr+1,fsr2h
  4296  002A78  50DF               	movf	indf2,w,c
  4297  002A7A  0100               	movlb	0	; () banked
  4298  002A7C  0100               	movlb	0	; () banked
  4299  002A7E  6FAD               	movwf	(_Ecran+3)& (0+255),b
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;ecran.c: 80: Ecran.Digit[2] = '0';
  4303  002A80  0100               	movlb	0	; () banked
  4304  002A82  6FCB               	movwf	??_ecran_print_num& (0+255),b
  4305  002A84  0E30               	movlw	48
  4306  002A86  0100               	movlb	0	; () banked
  4307  002A88  0100               	movlb	0	; () banked
  4308  002A8A  6FAC               	movwf	(_Ecran+2)& (0+255),b
  4309  002A8C  0100               	movlb	0	; () banked
  4310  002A8E  51CB               	movf	??_ecran_print_num& (0+255),w,b
  4311                           
  4312                           ;ecran.c: 81: }
  4313  002A90  D015               	goto	l5990
  4314  002A92                     l5986:
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;ecran.c: 82: else
  4318                           ;ecran.c: 83: {
  4319                           ;ecran.c: 84: Ecran.Digit[3] = tempStr[1];
  4320  002A92  0100               	movlb	0	; () banked
  4321  002A94  EE20 F001          	lfsr	2,1
  4322  002A98  0100               	movlb	0	; () banked
  4323  002A9A  51CD               	movf	ecran_print_num@tempStr& (0+255),w,b
  4324  002A9C  26D9               	addwf	fsr2l,f,c
  4325  002A9E  0100               	movlb	0	; () banked
  4326  002AA0  51CE               	movf	(ecran_print_num@tempStr+1)& (0+255),w,b
  4327  002AA2  22DA               	addwfc	fsr2h,f,c
  4328  002AA4  50DF               	movf	indf2,w,c
  4329  002AA6  0100               	movlb	0	; () banked
  4330  002AA8  0100               	movlb	0	; () banked
  4331  002AAA  6FAD               	movwf	(_Ecran+3)& (0+255),b
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;ecran.c: 85: Ecran.Digit[2] = tempStr[0];
  4335  002AAC  C0CD  FFD9         	movff	ecran_print_num@tempStr,fsr2l
  4336  002AB0  C0CE  FFDA         	movff	ecran_print_num@tempStr+1,fsr2h
  4337  002AB4  50DF               	movf	indf2,w,c
  4338  002AB6  0100               	movlb	0	; () banked
  4339  002AB8  0100               	movlb	0	; () banked
  4340  002ABA  6FAC               	movwf	(_Ecran+2)& (0+255),b
  4341  002ABC                     l5990:
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;ecran.c: 86: }
  4345                           ;ecran.c: 88: Ecran.Digits = Ecran.Digit;
  4346  002ABC  0100               	movlb	0	; () banked
  4347  002ABE  0E00               	movlw	high _Ecran
  4348  002AC0  0100               	movlb	0	; () banked
  4349  002AC2  0100               	movlb	0	; () banked
  4350  002AC4  6FAF               	movwf	(_Ecran+5)& (0+255),b
  4351  002AC6  0100               	movlb	0	; () banked
  4352  002AC8  0EAA               	movlw	low _Ecran
  4353  002ACA  0100               	movlb	0	; () banked
  4354  002ACC  0100               	movlb	0	; () banked
  4355  002ACE  6FAE               	movwf	(_Ecran+4)& (0+255),b
  4356                           
  4357                           ; BSR set to: 0
  4358  002AD0  0012               	return	
  4359  002AD2  FFFF               	dw	65535	; errata NOP
  4360  002AD4                     __end_of_ecran_print_num:
  4361                           	opt stack 0
  4362                           tblptru	equ	0xFF8
  4363                           tblptrh	equ	0xFF7
  4364                           tblptrl	equ	0xFF6
  4365                           tablat	equ	0xFF5
  4366                           prodh	equ	0xFF4
  4367                           prodl	equ	0xFF3
  4368                           intcon	equ	0xFF2
  4369                           intcon2	equ	0xFF1
  4370                           postinc0	equ	0xFEE
  4371                           wreg	equ	0xFE8
  4372                           postdec1	equ	0xFE5
  4373                           fsr1l	equ	0xFE1
  4374                           indf2	equ	0xFDF
  4375                           postinc2	equ	0xFDE
  4376                           postdec2	equ	0xFDD
  4377                           fsr2h	equ	0xFDA
  4378                           fsr2l	equ	0xFD9
  4379                           status	equ	0xFD8
  4380                           
  4381 ;; *************** function _DecToStr *****************
  4382 ;; Defined at:
  4383 ;;		line 3 in file "utils.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;  value           1    wreg     unsigned char 
  4386 ;;  result          2    7[BANK0 ] PTR unsigned char 
  4387 ;;		 -> PrintTest(5), 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  value           1   15[BANK0 ] unsigned char 
  4390 ;;  compareValue    2   13[BANK0 ] unsigned short 
  4391 ;;  power10         1   16[BANK0 ] unsigned char 
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  2    7[BANK0 ] PTR unsigned char 
  4394 ;; Registers used:
  4395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4401 ;;      Params:         0       2       0       0       0       0       0
  4402 ;;      Locals:         0       4       0       0       0       0       0
  4403 ;;      Temps:          0       4       0       0       0       0       0
  4404 ;;      Totals:         0      10       0       0       0       0       0
  4405 ;;Total ram usage:       10 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    4
  4408 ;; This function calls:
  4409 ;;		___awmod
  4410 ;;		___lbdiv
  4411 ;;		___wmul
  4412 ;; This function is called by:
  4413 ;;		_ecran_print_num
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text13
  4418  001EC6                     __ptext13:
  4419                           	opt stack 0
  4420  001EC6                     _DecToStr:
  4421                           	opt stack 24
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;incstack = 0
  4425  001EC6  FFFF               	dw	65535
  4426                           
  4427                           ;DecToStr@value stored from wreg
  4428  001EC8  CFE8 F0C9          	movff	wreg,DecToStr@value
  4429                           
  4430                           ;utils.c: 5: unsigned char power10;
  4431                           ;utils.c: 6: unsigned short compareValue;
  4432                           ;utils.c: 8: compareValue = 1;
  4433  001ECC  0E00               	movlw	0
  4434  001ECE  0100               	movlb	0	; () banked
  4435  001ED0  0100               	movlb	0	; () banked
  4436  001ED2  6FC8               	movwf	(DecToStr@compareValue+1)& (0+255),b
  4437  001ED4  0E01               	movlw	1
  4438  001ED6  0100               	movlb	0	; () banked
  4439  001ED8  6FC7               	movwf	DecToStr@compareValue& (0+255),b
  4440                           
  4441                           ;utils.c: 10: for (power10 = 0; compareValue <= value; power10 ++)
  4442  001EDA  0100               	movlb	0	; () banked
  4443  001EDC  6FC3               	movwf	??_DecToStr& (0+255),b
  4444  001EDE  0E00               	movlw	0
  4445  001EE0  0100               	movlb	0	; () banked
  4446  001EE2  0100               	movlb	0	; () banked
  4447  001EE4  6FCA               	movwf	DecToStr@power10& (0+255),b
  4448  001EE6  0100               	movlb	0	; () banked
  4449  001EE8  51C3               	movf	??_DecToStr& (0+255),w,b
  4450  001EEA  D016               	goto	l5720
  4451  001EEC                     l5716:
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;utils.c: 11: {
  4455                           ;utils.c: 12: compareValue *= 10;
  4456  001EEC  C0C7  F0BA         	movff	DecToStr@compareValue,___wmul@multiplier
  4457  001EF0  C0C8  F0BB         	movff	DecToStr@compareValue+1,___wmul@multiplier+1
  4458  001EF4  0E00               	movlw	0
  4459  001EF6  0100               	movlb	0	; () banked
  4460  001EF8  0100               	movlb	0	; () banked
  4461  001EFA  6FBD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4462  001EFC  0E0A               	movlw	10
  4463  001EFE  0100               	movlb	0	; () banked
  4464  001F00  6FBC               	movwf	___wmul@multiplicand& (0+255),b
  4465  001F02  ECF0  F017         	call	___wmul	;wreg free
  4466  001F06  0100               	movlb	0	; () banked
  4467  001F08  C0BA  F0C7         	movff	?___wmul,DecToStr@compareValue
  4468  001F0C  0100               	movlb	0	; () banked
  4469  001F0E  C0BB  F0C8         	movff	?___wmul+1,DecToStr@compareValue+1
  4470                           
  4471                           ; BSR set to: 0
  4472  001F12  0100               	movlb	0	; () banked
  4473  001F14  0100               	movlb	0	; () banked
  4474  001F16  2BCA               	incf	DecToStr@power10& (0+255),f,b
  4475  001F18                     l5720:
  4476                           
  4477                           ; BSR set to: 0
  4478  001F18  0100               	movlb	0	; () banked
  4479  001F1A  0100               	movlb	0	; () banked
  4480  001F1C  51C9               	movf	DecToStr@value& (0+255),w,b
  4481  001F1E  0100               	movlb	0	; () banked
  4482  001F20  6FC3               	movwf	??_DecToStr& (0+255),b
  4483  001F22  6BC4               	clrf	(??_DecToStr+1)& (0+255),b
  4484  001F24  0100               	movlb	0	; () banked
  4485  001F26  0100               	movlb	0	; () banked
  4486  001F28  51C7               	movf	DecToStr@compareValue& (0+255),w,b
  4487  001F2A  0100               	movlb	0	; () banked
  4488  001F2C  5DC3               	subwf	??_DecToStr& (0+255),w,b
  4489  001F2E  0100               	movlb	0	; () banked
  4490  001F30  0100               	movlb	0	; () banked
  4491  001F32  51C8               	movf	(DecToStr@compareValue+1)& (0+255),w,b
  4492  001F34  0100               	movlb	0	; () banked
  4493  001F36  59C4               	subwfb	(??_DecToStr+1)& (0+255),w,b
  4494  001F38  B0D8               	btfsc	status,0,c
  4495  001F3A  D7D8               	goto	l5716
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;utils.c: 13: }
  4499                           ;utils.c: 15: if (value == 0) {power10 = 1;}
  4500  001F3C  0100               	movlb	0	; () banked
  4501  001F3E  0100               	movlb	0	; () banked
  4502  001F40  67C9               	tstfsz	DecToStr@value& (0+255),b
  4503  001F42  D008               	goto	l5724
  4504                           
  4505                           ; BSR set to: 0
  4506  001F44  0100               	movlb	0	; () banked
  4507  001F46  6FC3               	movwf	??_DecToStr& (0+255),b
  4508  001F48  0E01               	movlw	1
  4509  001F4A  0100               	movlb	0	; () banked
  4510  001F4C  0100               	movlb	0	; () banked
  4511  001F4E  6FCA               	movwf	DecToStr@power10& (0+255),b
  4512  001F50  0100               	movlb	0	; () banked
  4513  001F52  51C3               	movf	??_DecToStr& (0+255),w,b
  4514  001F54                     l5724:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;utils.c: 17: result[power10] = '\0';
  4518  001F54  0100               	movlb	0	; () banked
  4519  001F56  0100               	movlb	0	; () banked
  4520  001F58  51CA               	movf	DecToStr@power10& (0+255),w,b
  4521  001F5A  0D01               	mullw	1
  4522  001F5C  50F3               	movf	prodl,w,c
  4523  001F5E  0100               	movlb	0	; () banked
  4524  001F60  0100               	movlb	0	; () banked
  4525  001F62  25C1               	addwf	DecToStr@result& (0+255),w,b
  4526  001F64  6ED9               	movwf	fsr2l,c
  4527  001F66  50F4               	movf	prodh,w,c
  4528  001F68  0100               	movlb	0	; () banked
  4529  001F6A  0100               	movlb	0	; () banked
  4530  001F6C  21C2               	addwfc	(DecToStr@result+1)& (0+255),w,b
  4531  001F6E  6EDA               	movwf	fsr2h,c
  4532  001F70  0E00               	movlw	0
  4533  001F72  6EDF               	movwf	indf2,c
  4534  001F74  D047               	goto	L37
  4535  001F76                     l5730:
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;utils.c: 20: {
  4539                           ;utils.c: 21: result[power10 - 1] = (value % 10) + '0';
  4540  001F76  0EFF               	movlw	255
  4541  001F78  0100               	movlb	0	; () banked
  4542  001F7A  6FC3               	movwf	??_DecToStr& (0+255),b
  4543  001F7C  0EFF               	movlw	255
  4544  001F7E  6FC4               	movwf	(??_DecToStr+1)& (0+255),b
  4545  001F80  0100               	movlb	0	; () banked
  4546  001F82  0100               	movlb	0	; () banked
  4547  001F84  51CA               	movf	DecToStr@power10& (0+255),w,b
  4548  001F86  0100               	movlb	0	; () banked
  4549  001F88  6FC5               	movwf	(??_DecToStr+2)& (0+255),b
  4550  001F8A  6BC6               	clrf	(??_DecToStr+3)& (0+255),b
  4551  001F8C  0100               	movlb	0	; () banked
  4552  001F8E  51C3               	movf	??_DecToStr& (0+255),w,b
  4553  001F90  0100               	movlb	0	; () banked
  4554  001F92  27C5               	addwf	(??_DecToStr+2)& (0+255),f,b
  4555  001F94  0100               	movlb	0	; () banked
  4556  001F96  51C4               	movf	(??_DecToStr+1)& (0+255),w,b
  4557  001F98  0100               	movlb	0	; () banked
  4558  001F9A  23C6               	addwfc	(??_DecToStr+3)& (0+255),f,b
  4559  001F9C  0100               	movlb	0	; () banked
  4560  001F9E  51C5               	movf	(??_DecToStr+2)& (0+255),w,b
  4561  001FA0  0100               	movlb	0	; () banked
  4562  001FA2  0100               	movlb	0	; () banked
  4563  001FA4  25C1               	addwf	DecToStr@result& (0+255),w,b
  4564  001FA6  6ED9               	movwf	fsr2l,c
  4565  001FA8  0100               	movlb	0	; () banked
  4566  001FAA  51C6               	movf	(??_DecToStr+3)& (0+255),w,b
  4567  001FAC  0100               	movlb	0	; () banked
  4568  001FAE  0100               	movlb	0	; () banked
  4569  001FB0  21C2               	addwfc	(DecToStr@result+1)& (0+255),w,b
  4570  001FB2  6EDA               	movwf	fsr2h,c
  4571  001FB4  0100               	movlb	0	; () banked
  4572  001FB6  0100               	movlb	0	; () banked
  4573  001FB8  C0C9  F0BA         	movff	DecToStr@value,___awmod@dividend
  4574  001FBC  0100               	movlb	0	; () banked
  4575  001FBE  0100               	movlb	0	; () banked
  4576  001FC0  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
  4577  001FC2  0E00               	movlw	0
  4578  001FC4  0100               	movlb	0	; () banked
  4579  001FC6  0100               	movlb	0	; () banked
  4580  001FC8  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  4581  001FCA  0E0A               	movlw	10
  4582  001FCC  0100               	movlb	0	; () banked
  4583  001FCE  6FBC               	movwf	___awmod@divisor& (0+255),b
  4584  001FD0  EC74  F012         	call	___awmod	;wreg free
  4585  001FD4  0100               	movlb	0	; () banked
  4586  001FD6  0100               	movlb	0	; () banked
  4587  001FD8  51BA               	movf	?___awmod& (0+255),w,b
  4588  001FDA  0F30               	addlw	48
  4589  001FDC  6EDF               	movwf	indf2,c
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;utils.c: 22: value /= 10;
  4593  001FDE  0100               	movlb	0	; () banked
  4594  001FE0  6FC3               	movwf	??_DecToStr& (0+255),b
  4595  001FE2  0E0A               	movlw	10
  4596  001FE4  0100               	movlb	0	; () banked
  4597  001FE6  0100               	movlb	0	; () banked
  4598  001FE8  6FBA               	movwf	___lbdiv@divisor& (0+255),b
  4599  001FEA  0100               	movlb	0	; () banked
  4600  001FEC  51C3               	movf	??_DecToStr& (0+255),w,b
  4601  001FEE  0100               	movlb	0	; () banked
  4602  001FF0  0100               	movlb	0	; () banked
  4603  001FF2  51C9               	movf	DecToStr@value& (0+255),w,b
  4604  001FF4  EC03  F017         	call	___lbdiv
  4605  001FF8  0100               	movlb	0	; () banked
  4606  001FFA  0100               	movlb	0	; () banked
  4607  001FFC  6FC9               	movwf	DecToStr@value& (0+255),b
  4608                           
  4609                           ; BSR set to: 0
  4610  001FFE  0100               	movlb	0	; () banked
  4611  002000  0100               	movlb	0	; () banked
  4612  002002  07CA               	decf	DecToStr@power10& (0+255),f,b
  4613  002004                     L37:
  4614                           
  4615                           ; BSR set to: 0
  4616  002004  0100               	movlb	0	; () banked
  4617  002006  0100               	movlb	0	; () banked
  4618  002008  67CA               	tstfsz	DecToStr@power10& (0+255),b
  4619  00200A  D7B5               	goto	l5730
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;utils.c: 23: }
  4623                           ;utils.c: 25: return result;
  4624                           
  4625                           ; BSR set to: 0
  4626  00200C  0100               	movlb	0	; () banked
  4627  00200E  0100               	movlb	0	; () banked
  4628  002010  C0C2  F0C2         	movff	DecToStr@result+1,?_DecToStr+1
  4629  002014  0100               	movlb	0	; () banked
  4630  002016  0100               	movlb	0	; () banked
  4631  002018  C0C1  F0C1         	movff	DecToStr@result,?_DecToStr
  4632                           
  4633                           ; BSR set to: 0
  4634                           
  4635                           ; BSR set to: 0
  4636  00201C  0012               	return	
  4637  00201E  FFFF               	dw	65535	; errata NOP
  4638  002020                     __end_of_DecToStr:
  4639                           	opt stack 0
  4640                           tblptru	equ	0xFF8
  4641                           tblptrh	equ	0xFF7
  4642                           tblptrl	equ	0xFF6
  4643                           tablat	equ	0xFF5
  4644                           prodh	equ	0xFF4
  4645                           prodl	equ	0xFF3
  4646                           intcon	equ	0xFF2
  4647                           intcon2	equ	0xFF1
  4648                           postinc0	equ	0xFEE
  4649                           wreg	equ	0xFE8
  4650                           postdec1	equ	0xFE5
  4651                           fsr1l	equ	0xFE1
  4652                           indf2	equ	0xFDF
  4653                           postinc2	equ	0xFDE
  4654                           postdec2	equ	0xFDD
  4655                           fsr2h	equ	0xFDA
  4656                           fsr2l	equ	0xFD9
  4657                           status	equ	0xFD8
  4658                           
  4659 ;; *************** function ___lbdiv *****************
  4660 ;; Defined at:
  4661 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lbdiv.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  dividend        1    wreg     unsigned char 
  4664 ;;  divisor         1    0[BANK0 ] unsigned char 
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  dividend        1    2[BANK0 ] unsigned char 
  4667 ;;  quotient        1    4[BANK0 ] unsigned char 
  4668 ;;  counter         1    3[BANK0 ] unsigned char 
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      unsigned char 
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4678 ;;      Params:         0       1       0       0       0       0       0
  4679 ;;      Locals:         0       3       0       0       0       0       0
  4680 ;;      Temps:          0       1       0       0       0       0       0
  4681 ;;      Totals:         0       5       0       0       0       0       0
  4682 ;;Total ram usage:        5 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; Hardware stack levels required when called:    3
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_DecToStr
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text14
  4693  002E06                     __ptext14:
  4694                           	opt stack 0
  4695  002E06                     ___lbdiv:
  4696                           	opt stack 24
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;incstack = 0
  4700  002E06  FFFF               	dw	65535
  4701                           
  4702                           ;___lbdiv@dividend stored from wreg
  4703  002E08  CFE8 F0BC          	movff	wreg,___lbdiv@dividend
  4704  002E0C  0100               	movlb	0	; () banked
  4705  002E0E  6FBB               	movwf	??___lbdiv& (0+255),b
  4706  002E10  0E00               	movlw	0
  4707  002E12  0100               	movlb	0	; () banked
  4708  002E14  0100               	movlb	0	; () banked
  4709  002E16  6FBE               	movwf	___lbdiv@quotient& (0+255),b
  4710  002E18  0100               	movlb	0	; () banked
  4711  002E1A  51BB               	movf	??___lbdiv& (0+255),w,b
  4712  002E1C  0100               	movlb	0	; () banked
  4713  002E1E  0100               	movlb	0	; () banked
  4714  002E20  51BA               	movf	___lbdiv@divisor& (0+255),w,b
  4715  002E22  B4D8               	btfsc	status,2,c
  4716  002E24  D02E               	goto	l5660
  4717                           
  4718                           ; BSR set to: 0
  4719  002E26  0100               	movlb	0	; () banked
  4720  002E28  6FBB               	movwf	??___lbdiv& (0+255),b
  4721  002E2A  0E01               	movlw	1
  4722  002E2C  0100               	movlb	0	; () banked
  4723  002E2E  0100               	movlb	0	; () banked
  4724  002E30  6FBD               	movwf	___lbdiv@counter& (0+255),b
  4725  002E32  0100               	movlb	0	; () banked
  4726  002E34  51BB               	movf	??___lbdiv& (0+255),w,b
  4727  002E36  D006               	goto	l5648
  4728  002E38                     l5644:
  4729                           
  4730                           ; BSR set to: 0
  4731  002E38  0100               	movlb	0	; () banked
  4732  002E3A  90D8               	bcf	status,0,c
  4733  002E3C  37BA               	rlcf	___lbdiv@divisor& (0+255),f,b
  4734                           
  4735                           ; BSR set to: 0
  4736  002E3E  0100               	movlb	0	; () banked
  4737  002E40  0100               	movlb	0	; () banked
  4738  002E42  2BBD               	incf	___lbdiv@counter& (0+255),f,b
  4739  002E44                     l5648:
  4740                           
  4741                           ; BSR set to: 0
  4742  002E44  0100               	movlb	0	; () banked
  4743  002E46  0100               	movlb	0	; () banked
  4744  002E48  AFBA               	btfss	___lbdiv@divisor& (0+255),7,b
  4745  002E4A  D7F6               	goto	l5644
  4746  002E4C                     l5650:
  4747                           
  4748                           ; BSR set to: 0
  4749  002E4C  0100               	movlb	0	; () banked
  4750  002E4E  90D8               	bcf	status,0,c
  4751  002E50  37BE               	rlcf	___lbdiv@quotient& (0+255),f,b
  4752  002E52  0100               	movlb	0	; () banked
  4753  002E54  0100               	movlb	0	; () banked
  4754  002E56  51BA               	movf	___lbdiv@divisor& (0+255),w,b
  4755  002E58  0100               	movlb	0	; () banked
  4756  002E5A  0100               	movlb	0	; () banked
  4757  002E5C  5DBC               	subwf	___lbdiv@dividend& (0+255),w,b
  4758  002E5E  A0D8               	btfss	status,0,c
  4759  002E60  D009               	goto	l5656
  4760                           
  4761                           ; BSR set to: 0
  4762  002E62  0100               	movlb	0	; () banked
  4763  002E64  0100               	movlb	0	; () banked
  4764  002E66  51BA               	movf	___lbdiv@divisor& (0+255),w,b
  4765  002E68  0100               	movlb	0	; () banked
  4766  002E6A  0100               	movlb	0	; () banked
  4767  002E6C  5FBC               	subwf	___lbdiv@dividend& (0+255),f,b
  4768                           
  4769                           ; BSR set to: 0
  4770  002E6E  0100               	movlb	0	; () banked
  4771  002E70  0100               	movlb	0	; () banked
  4772  002E72  81BE               	bsf	___lbdiv@quotient& (0+255),0,b
  4773  002E74                     l5656:
  4774                           
  4775                           ; BSR set to: 0
  4776  002E74  0100               	movlb	0	; () banked
  4777  002E76  90D8               	bcf	status,0,c
  4778  002E78  33BA               	rrcf	___lbdiv@divisor& (0+255),f,b
  4779                           
  4780                           ; BSR set to: 0
  4781  002E7A  0100               	movlb	0	; () banked
  4782  002E7C  0100               	movlb	0	; () banked
  4783  002E7E  2FBD               	decfsz	___lbdiv@counter& (0+255),f,b
  4784  002E80  D7E5               	goto	l5650
  4785  002E82                     l5660:
  4786                           
  4787                           ; BSR set to: 0
  4788  002E82  0100               	movlb	0	; () banked
  4789  002E84  0100               	movlb	0	; () banked
  4790  002E86  51BE               	movf	___lbdiv@quotient& (0+255),w,b
  4791                           
  4792                           ; BSR set to: 0
  4793                           
  4794                           ; BSR set to: 0
  4795  002E88  0012               	return	
  4796  002E8A  FFFF               	dw	65535	; errata NOP
  4797  002E8C                     __end_of___lbdiv:
  4798                           	opt stack 0
  4799                           tblptru	equ	0xFF8
  4800                           tblptrh	equ	0xFF7
  4801                           tblptrl	equ	0xFF6
  4802                           tablat	equ	0xFF5
  4803                           prodh	equ	0xFF4
  4804                           prodl	equ	0xFF3
  4805                           intcon	equ	0xFF2
  4806                           intcon2	equ	0xFF1
  4807                           postinc0	equ	0xFEE
  4808                           wreg	equ	0xFE8
  4809                           postdec1	equ	0xFE5
  4810                           fsr1l	equ	0xFE1
  4811                           indf2	equ	0xFDF
  4812                           postinc2	equ	0xFDE
  4813                           postdec2	equ	0xFDD
  4814                           fsr2h	equ	0xFDA
  4815                           fsr2l	equ	0xFD9
  4816                           status	equ	0xFD8
  4817                           
  4818 ;; *************** function ___awmod *****************
  4819 ;; Defined at:
  4820 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awmod.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  dividend        2    0[BANK0 ] int 
  4823 ;;  divisor         2    2[BANK0 ] int 
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;  sign            1    6[BANK0 ] unsigned char 
  4826 ;;  counter         1    5[BANK0 ] unsigned char 
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  2    0[BANK0 ] int 
  4829 ;; Registers used:
  4830 ;;		wreg, status,2, status,0, prodl
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4836 ;;      Params:         0       4       0       0       0       0       0
  4837 ;;      Locals:         0       2       0       0       0       0       0
  4838 ;;      Temps:          0       1       0       0       0       0       0
  4839 ;;      Totals:         0       7       0       0       0       0       0
  4840 ;;Total ram usage:        7 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:    3
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_DecToStr
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text15
  4851  0024E8                     __ptext15:
  4852                           	opt stack 0
  4853  0024E8                     ___awmod:
  4854                           	opt stack 24
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;incstack = 0
  4858  0024E8  FFFF               	dw	65535
  4859  0024EA  0100               	movlb	0	; () banked
  4860  0024EC  6FBE               	movwf	??___awmod& (0+255),b
  4861  0024EE  0E00               	movlw	0
  4862  0024F0  0100               	movlb	0	; () banked
  4863  0024F2  0100               	movlb	0	; () banked
  4864  0024F4  6FC0               	movwf	___awmod@sign& (0+255),b
  4865  0024F6  0100               	movlb	0	; () banked
  4866  0024F8  51BE               	movf	??___awmod& (0+255),w,b
  4867                           
  4868                           ; BSR set to: 0
  4869  0024FA  0100               	movlb	0	; () banked
  4870  0024FC  0100               	movlb	0	; () banked
  4871  0024FE  51BB               	movf	(___awmod@dividend+1)& (0+255),w,b
  4872  002500  0A80               	xorlw	128
  4873  002502  6EF3               	movwf	prodl,c
  4874  002504  0E80               	movlw	128
  4875  002506  5CF3               	subwf	prodl,w,c
  4876  002508  0E00               	movlw	0
  4877  00250A  B4D8               	btfsc	status,2,c
  4878  00250C  5DBA               	subwf	___awmod@dividend& (0+255),w,b
  4879  00250E  B0D8               	btfsc	status,0,c
  4880  002510  D00F               	goto	l5612
  4881                           
  4882                           ; BSR set to: 0
  4883  002512  0100               	movlb	0	; () banked
  4884  002514  0100               	movlb	0	; () banked
  4885  002516  6DBA               	negf	___awmod@dividend& (0+255),b
  4886  002518  0100               	movlb	0	; () banked
  4887  00251A  1FBB               	comf	(___awmod@dividend+1)& (0+255),f,b
  4888  00251C  B0D8               	btfsc	status,0,c
  4889  00251E  2BBB               	incf	(___awmod@dividend+1)& (0+255),f,b
  4890                           
  4891                           ; BSR set to: 0
  4892  002520  0100               	movlb	0	; () banked
  4893  002522  6FBE               	movwf	??___awmod& (0+255),b
  4894  002524  0E01               	movlw	1
  4895  002526  0100               	movlb	0	; () banked
  4896  002528  0100               	movlb	0	; () banked
  4897  00252A  6FC0               	movwf	___awmod@sign& (0+255),b
  4898  00252C  0100               	movlb	0	; () banked
  4899  00252E  51BE               	movf	??___awmod& (0+255),w,b
  4900  002530                     l5612:
  4901                           
  4902                           ; BSR set to: 0
  4903  002530  0100               	movlb	0	; () banked
  4904  002532  0100               	movlb	0	; () banked
  4905  002534  51BD               	movf	(___awmod@divisor+1)& (0+255),w,b
  4906  002536  0A80               	xorlw	128
  4907  002538  6EF3               	movwf	prodl,c
  4908  00253A  0E80               	movlw	128
  4909  00253C  5CF3               	subwf	prodl,w,c
  4910  00253E  0E00               	movlw	0
  4911  002540  B4D8               	btfsc	status,2,c
  4912  002542  5DBC               	subwf	___awmod@divisor& (0+255),w,b
  4913  002544  B0D8               	btfsc	status,0,c
  4914  002546  D007               	goto	l5616
  4915                           
  4916                           ; BSR set to: 0
  4917  002548  0100               	movlb	0	; () banked
  4918  00254A  0100               	movlb	0	; () banked
  4919  00254C  6DBC               	negf	___awmod@divisor& (0+255),b
  4920  00254E  0100               	movlb	0	; () banked
  4921  002550  1FBD               	comf	(___awmod@divisor+1)& (0+255),f,b
  4922  002552  B0D8               	btfsc	status,0,c
  4923  002554  2BBD               	incf	(___awmod@divisor+1)& (0+255),f,b
  4924  002556                     l5616:
  4925                           
  4926                           ; BSR set to: 0
  4927  002556  0100               	movlb	0	; () banked
  4928  002558  0100               	movlb	0	; () banked
  4929  00255A  51BD               	movf	(___awmod@divisor+1)& (0+255),w,b
  4930  00255C  11BC               	iorwf	___awmod@divisor& (0+255),w,b
  4931  00255E  B4D8               	btfsc	status,2,c
  4932  002560  D03A               	goto	l5632
  4933                           
  4934                           ; BSR set to: 0
  4935  002562  0100               	movlb	0	; () banked
  4936  002564  6FBE               	movwf	??___awmod& (0+255),b
  4937  002566  0E01               	movlw	1
  4938  002568  0100               	movlb	0	; () banked
  4939  00256A  0100               	movlb	0	; () banked
  4940  00256C  6FBF               	movwf	___awmod@counter& (0+255),b
  4941  00256E  0100               	movlb	0	; () banked
  4942  002570  51BE               	movf	??___awmod& (0+255),w,b
  4943  002572  D009               	goto	l5622
  4944  002574                     l5620:
  4945                           
  4946                           ; BSR set to: 0
  4947  002574  0100               	movlb	0	; () banked
  4948  002576  0100               	movlb	0	; () banked
  4949  002578  0100               	movlb	0	; () banked
  4950  00257A  90D8               	bcf	status,0,c
  4951  00257C  37BC               	rlcf	___awmod@divisor& (0+255),f,b
  4952  00257E  37BD               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4953  002580  0100               	movlb	0	; () banked
  4954  002582  0100               	movlb	0	; () banked
  4955  002584  2BBF               	incf	___awmod@counter& (0+255),f,b
  4956  002586                     l5622:
  4957                           
  4958                           ; BSR set to: 0
  4959  002586  0100               	movlb	0	; () banked
  4960  002588  0100               	movlb	0	; () banked
  4961  00258A  AFBD               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4962  00258C  D7F3               	goto	l5620
  4963  00258E                     l5624:
  4964                           
  4965                           ; BSR set to: 0
  4966  00258E  0100               	movlb	0	; () banked
  4967  002590  0100               	movlb	0	; () banked
  4968  002592  51BC               	movf	___awmod@divisor& (0+255),w,b
  4969  002594  0100               	movlb	0	; () banked
  4970  002596  0100               	movlb	0	; () banked
  4971  002598  5DBA               	subwf	___awmod@dividend& (0+255),w,b
  4972  00259A  0100               	movlb	0	; () banked
  4973  00259C  0100               	movlb	0	; () banked
  4974  00259E  51BD               	movf	(___awmod@divisor+1)& (0+255),w,b
  4975  0025A0  0100               	movlb	0	; () banked
  4976  0025A2  0100               	movlb	0	; () banked
  4977  0025A4  59BB               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4978  0025A6  A0D8               	btfss	status,0,c
  4979  0025A8  D00C               	goto	l5628
  4980                           
  4981                           ; BSR set to: 0
  4982  0025AA  0100               	movlb	0	; () banked
  4983  0025AC  0100               	movlb	0	; () banked
  4984  0025AE  51BC               	movf	___awmod@divisor& (0+255),w,b
  4985  0025B0  0100               	movlb	0	; () banked
  4986  0025B2  0100               	movlb	0	; () banked
  4987  0025B4  5FBA               	subwf	___awmod@dividend& (0+255),f,b
  4988  0025B6  0100               	movlb	0	; () banked
  4989  0025B8  0100               	movlb	0	; () banked
  4990  0025BA  51BD               	movf	(___awmod@divisor+1)& (0+255),w,b
  4991  0025BC  0100               	movlb	0	; () banked
  4992  0025BE  0100               	movlb	0	; () banked
  4993  0025C0  5BBB               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4994  0025C2                     l5628:
  4995                           
  4996                           ; BSR set to: 0
  4997  0025C2  0100               	movlb	0	; () banked
  4998  0025C4  0100               	movlb	0	; () banked
  4999  0025C6  0100               	movlb	0	; () banked
  5000  0025C8  90D8               	bcf	status,0,c
  5001  0025CA  33BD               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5002  0025CC  33BC               	rrcf	___awmod@divisor& (0+255),f,b
  5003                           
  5004                           ; BSR set to: 0
  5005  0025CE  0100               	movlb	0	; () banked
  5006  0025D0  0100               	movlb	0	; () banked
  5007  0025D2  2FBF               	decfsz	___awmod@counter& (0+255),f,b
  5008  0025D4  D7DC               	goto	l5624
  5009  0025D6                     l5632:
  5010                           
  5011                           ; BSR set to: 0
  5012  0025D6  0100               	movlb	0	; () banked
  5013  0025D8  0100               	movlb	0	; () banked
  5014  0025DA  51C0               	movf	___awmod@sign& (0+255),w,b
  5015  0025DC  B4D8               	btfsc	status,2,c
  5016  0025DE  D007               	goto	l5636
  5017                           
  5018                           ; BSR set to: 0
  5019  0025E0  0100               	movlb	0	; () banked
  5020  0025E2  0100               	movlb	0	; () banked
  5021  0025E4  6DBA               	negf	___awmod@dividend& (0+255),b
  5022  0025E6  0100               	movlb	0	; () banked
  5023  0025E8  1FBB               	comf	(___awmod@dividend+1)& (0+255),f,b
  5024  0025EA  B0D8               	btfsc	status,0,c
  5025  0025EC  2BBB               	incf	(___awmod@dividend+1)& (0+255),f,b
  5026  0025EE                     l5636:
  5027                           
  5028                           ; BSR set to: 0
  5029  0025EE  C0BA  F0BA         	movff	___awmod@dividend,?___awmod
  5030  0025F2  C0BB  F0BB         	movff	___awmod@dividend+1,?___awmod+1
  5031                           
  5032                           ; BSR set to: 0
  5033                           
  5034                           ; BSR set to: 0
  5035  0025F6  0012               	return	
  5036  0025F8  FFFF               	dw	65535	; errata NOP
  5037  0025FA                     __end_of___awmod:
  5038                           	opt stack 0
  5039                           tblptru	equ	0xFF8
  5040                           tblptrh	equ	0xFF7
  5041                           tblptrl	equ	0xFF6
  5042                           tablat	equ	0xFF5
  5043                           prodh	equ	0xFF4
  5044                           prodl	equ	0xFF3
  5045                           intcon	equ	0xFF2
  5046                           intcon2	equ	0xFF1
  5047                           postinc0	equ	0xFEE
  5048                           wreg	equ	0xFE8
  5049                           postdec1	equ	0xFE5
  5050                           fsr1l	equ	0xFE1
  5051                           indf2	equ	0xFDF
  5052                           postinc2	equ	0xFDE
  5053                           postdec2	equ	0xFDD
  5054                           fsr2h	equ	0xFDA
  5055                           fsr2l	equ	0xFD9
  5056                           status	equ	0xFD8
  5057                           
  5058 ;; *************** function _check_program_0 *****************
  5059 ;; Defined at:
  5060 ;;		line 19 in file "test.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;		None
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;  ret             1    6[BANK0 ] unsigned char 
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  1    wreg      unsigned char 
  5067 ;; Registers used:
  5068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5074 ;;      Params:         0       0       0       0       0       0       0
  5075 ;;      Locals:         0       1       0       0       0       0       0
  5076 ;;      Temps:          0       1       0       0       0       0       0
  5077 ;;      Totals:         0       2       0       0       0       0       0
  5078 ;;Total ram usage:        2 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; Hardware stack levels required when called:    6
  5081 ;; This function calls:
  5082 ;;		_ecran_blank
  5083 ;;		_ecran_refresh
  5084 ;;		_ecran_wait
  5085 ;; This function is called by:
  5086 ;;		_main
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text16
  5091  003168                     __ptext16:
  5092                           	opt stack 0
  5093  003168                     _check_program_0:
  5094                           	opt stack 24
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;incstack = 0
  5098  003168  FFFF               	dw	65535
  5099                           
  5100                           ;test.c: 21: unsigned char ret = 0;
  5101  00316A  0100               	movlb	0	; () banked
  5102  00316C  6FBF               	movwf	??_check_program_0& (0+255),b
  5103  00316E  0E00               	movlw	0
  5104  003170  0100               	movlb	0	; () banked
  5105  003172  0100               	movlb	0	; () banked
  5106  003174  6FC0               	movwf	check_program_0@ret& (0+255),b
  5107  003176  0100               	movlb	0	; () banked
  5108  003178  51BF               	movf	??_check_program_0& (0+255),w,b
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;test.c: 23: if ((PORTEbits.RE1 == 0) && (PORTEbits.RE0 == 0))
  5112  00317A  A284               	btfss	3972,1,c	;volatile
  5113                           
  5114                           ; BSR set to: 0
  5115  00317C  B084               	btfsc	3972,0,c	;volatile
  5116  00317E  D019               	goto	l6264
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;test.c: 24: {
  5120                           ;test.c: 25: ecran_blank();
  5121  003180  EC23  F018         	call	_ecran_blank	;wreg free
  5122                           
  5123                           ;test.c: 26: while ((PORTEbits.RE1 == 0) || (PORTEbits.RE0 == 0)) {ecran_refresh();}
  5124  003184  D002               	goto	l6256
  5125  003186                     l6254:
  5126  003186  ECC4  F015         	call	_ecran_refresh	;wreg free
  5127  00318A                     l6256:
  5128  00318A  B284               	btfsc	3972,1,c	;volatile
  5129  00318C  A084               	btfss	3972,0,c	;volatile
  5130  00318E  D7FB               	goto	l6254
  5131                           
  5132                           ;test.c: 28: Micro.Mod.P_0 = 1;
  5133  003190  8057               	bsf	_Micro+5,0,c
  5134                           
  5135                           ;test.c: 30: ret = 1;
  5136  003192  0100               	movlb	0	; () banked
  5137  003194  6FBF               	movwf	??_check_program_0& (0+255),b
  5138  003196  0E01               	movlw	1
  5139  003198  0100               	movlb	0	; () banked
  5140  00319A  0100               	movlb	0	; () banked
  5141  00319C  6FC0               	movwf	check_program_0@ret& (0+255),b
  5142  00319E  0100               	movlb	0	; () banked
  5143  0031A0  51BF               	movf	??_check_program_0& (0+255),w,b
  5144                           
  5145                           ;test.c: 32: Micro.Step = 0x03;
  5146  0031A2  0100               	movlb	0	; () banked
  5147  0031A4  6FBF               	movwf	??_check_program_0& (0+255),b
  5148  0031A6  0E03               	movlw	3
  5149  0031A8  6E55               	movwf	_Micro+3,c
  5150  0031AA  0100               	movlb	0	; () banked
  5151  0031AC  51BF               	movf	??_check_program_0& (0+255),w,b
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;test.c: 34: ecran_wait();
  5155  0031AE  ECDC  F01A         	call	_ecran_wait	;wreg free
  5156  0031B2                     l6264:
  5157                           
  5158                           ;test.c: 35: }
  5159                           ;test.c: 37: return ret;
  5160  0031B2  0100               	movlb	0	; () banked
  5161  0031B4  0100               	movlb	0	; () banked
  5162  0031B6  51C0               	movf	check_program_0@ret& (0+255),w,b
  5163                           
  5164                           ; BSR set to: 0
  5165                           
  5166                           ; BSR set to: 0
  5167  0031B8  0012               	return	
  5168  0031BA  FFFF               	dw	65535	; errata NOP
  5169  0031BC                     __end_of_check_program_0:
  5170                           	opt stack 0
  5171                           tblptru	equ	0xFF8
  5172                           tblptrh	equ	0xFF7
  5173                           tblptrl	equ	0xFF6
  5174                           tablat	equ	0xFF5
  5175                           prodh	equ	0xFF4
  5176                           prodl	equ	0xFF3
  5177                           intcon	equ	0xFF2
  5178                           intcon2	equ	0xFF1
  5179                           postinc0	equ	0xFEE
  5180                           wreg	equ	0xFE8
  5181                           postdec1	equ	0xFE5
  5182                           fsr1l	equ	0xFE1
  5183                           indf2	equ	0xFDF
  5184                           postinc2	equ	0xFDE
  5185                           postdec2	equ	0xFDD
  5186                           fsr2h	equ	0xFDA
  5187                           fsr2l	equ	0xFD9
  5188                           status	equ	0xFD8
  5189                           
  5190 ;; *************** function _check_idtest *****************
  5191 ;; Defined at:
  5192 ;;		line 41 in file "test.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;		None
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;		None               void
  5199 ;; Registers used:
  5200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5206 ;;      Params:         0       0       0       0       0       0       0
  5207 ;;      Locals:         0       0       0       0       0       0       0
  5208 ;;      Temps:          0       1       0       0       0       0       0
  5209 ;;      Totals:         0       1       0       0       0       0       0
  5210 ;;Total ram usage:        1 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:    7
  5213 ;; This function calls:
  5214 ;;		_cf_rcv
  5215 ;;		_ecran_print_one_char
  5216 ;;		_micro_config_rs
  5217 ;; This function is called by:
  5218 ;;		_main
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           	psect	text17
  5223  003560                     __ptext17:
  5224                           	opt stack 0
  5225  003560                     _check_idtest:
  5226                           	opt stack 23
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;incstack = 0
  5230  003560  FFFF               	dw	65535
  5231                           
  5232                           ;test.c: 43: if ((PORTEbits.RE1 == 0) && (PORTEbits.RE0 == 1))
  5233  003562  A284               	btfss	3972,1,c	;volatile
  5234  003564  A084               	btfss	3972,0,c	;volatile
  5235  003566  D010               	goto	l544
  5236                           
  5237                           ;test.c: 44: {
  5238                           ;test.c: 45: micro_config_rs();
  5239  003568  ECFD  F01A         	call	_micro_config_rs	;wreg free
  5240                           
  5241                           ;test.c: 46: ecran_print_one_char(3, 'P');
  5242  00356C  0100               	movlb	0	; () banked
  5243  00356E  6FD2               	movwf	??_check_idtest& (0+255),b
  5244  003570  0E50               	movlw	80
  5245  003572  0100               	movlb	0	; () banked
  5246  003574  0100               	movlb	0	; () banked
  5247  003576  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  5248  003578  0100               	movlb	0	; () banked
  5249  00357A  51D2               	movf	??_check_idtest& (0+255),w,b
  5250  00357C  0E03               	movlw	3
  5251  00357E  EC19  F01A         	call	_ecran_print_one_char
  5252  003582                     l6276:
  5253  003582  ECC0  F00A         	call	_cf_rcv	;wreg free
  5254  003586  D7FD               	goto	l6276
  5255  003588                     l544:
  5256  003588  0012               	return	
  5257  00358A  FFFF               	dw	65535	; errata NOP
  5258  00358C                     __end_of_check_idtest:
  5259                           	opt stack 0
  5260                           tblptru	equ	0xFF8
  5261                           tblptrh	equ	0xFF7
  5262                           tblptrl	equ	0xFF6
  5263                           tablat	equ	0xFF5
  5264                           prodh	equ	0xFF4
  5265                           prodl	equ	0xFF3
  5266                           intcon	equ	0xFF2
  5267                           intcon2	equ	0xFF1
  5268                           postinc0	equ	0xFEE
  5269                           wreg	equ	0xFE8
  5270                           postdec1	equ	0xFE5
  5271                           fsr1l	equ	0xFE1
  5272                           indf2	equ	0xFDF
  5273                           postinc2	equ	0xFDE
  5274                           postdec2	equ	0xFDD
  5275                           fsr2h	equ	0xFDA
  5276                           fsr2l	equ	0xFD9
  5277                           status	equ	0xFD8
  5278                           
  5279 ;; *************** function _micro_config_rs *****************
  5280 ;; Defined at:
  5281 ;;		line 3 in file "micro.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;		None
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;		None
  5286 ;; Return value:  Size  Location     Type
  5287 ;;		None               void
  5288 ;; Registers used:
  5289 ;;		wreg, status,2
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5295 ;;      Params:         0       0       0       0       0       0       0
  5296 ;;      Locals:         0       0       0       0       0       0       0
  5297 ;;      Temps:          0       0       0       0       0       0       0
  5298 ;;      Totals:         0       0       0       0       0       0       0
  5299 ;;Total ram usage:        0 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; Hardware stack levels required when called:    3
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		_check_idtest
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text18
  5310  0035FA                     __ptext18:
  5311                           	opt stack 0
  5312  0035FA                     _micro_config_rs:
  5313                           	opt stack 26
  5314                           
  5315                           ;incstack = 0
  5316  0035FA  FFFF               	dw	65535
  5317                           
  5318                           ;micro.c: 5: PORTEbits.RE2 = 0;
  5319  0035FC  9484               	bcf	3972,2,c	;volatile
  5320                           
  5321                           ;micro.c: 9: SPBRG = 207;
  5322  0035FE  0ECF               	movlw	207
  5323  003600  6EAF               	movwf	4015,c	;volatile
  5324                           
  5325                           ;micro.c: 14: TXSTA = 0x20;
  5326  003602  0E20               	movlw	32
  5327  003604  6EAC               	movwf	4012,c	;volatile
  5328                           
  5329                           ;micro.c: 22: RCSTA = 0x90;
  5330  003606  0E90               	movlw	144
  5331  003608  6EAB               	movwf	4011,c	;volatile
  5332                           
  5333                           ;micro.c: 34: RCIP = 0;
  5334  00360A  9A9F               	bcf	3999,5,c	;volatile
  5335                           
  5336                           ;micro.c: 35: RCIE = 1;
  5337  00360C  8A9D               	bsf	3997,5,c	;volatile
  5338                           
  5339                           ;micro.c: 36: PEIE = 1;
  5340  00360E  8CF2               	bsf	intcon,6,c	;volatile
  5341  003610  0012               	return	
  5342  003612  FFFF               	dw	65535	; errata NOP
  5343  003614                     __end_of_micro_config_rs:
  5344                           	opt stack 0
  5345                           tblptru	equ	0xFF8
  5346                           tblptrh	equ	0xFF7
  5347                           tblptrl	equ	0xFF6
  5348                           tablat	equ	0xFF5
  5349                           prodh	equ	0xFF4
  5350                           prodl	equ	0xFF3
  5351                           intcon	equ	0xFF2
  5352                           intcon2	equ	0xFF1
  5353                           postinc0	equ	0xFEE
  5354                           wreg	equ	0xFE8
  5355                           postdec1	equ	0xFE5
  5356                           fsr1l	equ	0xFE1
  5357                           indf2	equ	0xFDF
  5358                           postinc2	equ	0xFDE
  5359                           postdec2	equ	0xFDD
  5360                           fsr2h	equ	0xFDA
  5361                           fsr2l	equ	0xFD9
  5362                           status	equ	0xFD8
  5363                           
  5364 ;; *************** function _cf_rcv *****************
  5365 ;; Defined at:
  5366 ;;		line 132 in file "config.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  i               1   23[BANK0 ] unsigned char 
  5371 ;;  temp            1   22[BANK0 ] unsigned char 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;		None               void
  5374 ;; Registers used:
  5375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5381 ;;      Params:         0       0       0       0       0       0       0
  5382 ;;      Locals:         0       2       0       0       0       0       0
  5383 ;;      Temps:          0       2       0       0       0       0       0
  5384 ;;      Totals:         0       4       0       0       0       0       0
  5385 ;;Total ram usage:        4 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    6
  5388 ;; This function calls:
  5389 ;;		_cf_check
  5390 ;;		_ecran_print_one_char
  5391 ;;		_eeprom_read_array
  5392 ;;		_eeprom_write_array
  5393 ;; This function is called by:
  5394 ;;		_check_idtest
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           	psect	text19
  5399  001580                     __ptext19:
  5400                           	opt stack 0
  5401  001580                     _cf_rcv:
  5402                           	opt stack 23
  5403                           
  5404                           ;incstack = 0
  5405  001580  FFFF               	dw	65535
  5406                           
  5407                           ;config.c: 134: unsigned char i, temp = 0;
  5408  001582  0100               	movlb	0	; () banked
  5409  001584  6FCE               	movwf	??_cf_rcv& (0+255),b
  5410  001586  0E00               	movlw	0
  5411  001588  0100               	movlb	0	; () banked
  5412  00158A  0100               	movlb	0	; () banked
  5413  00158C  6FD0               	movwf	cf_rcv@temp& (0+255),b
  5414  00158E  0100               	movlb	0	; () banked
  5415  001590  51CE               	movf	??_cf_rcv& (0+255),w,b
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;config.c: 136: if ((((unsigned short) (Cptms - Cf.Time2) > 100) ? 1 : 0))
  5419  001592  0101               	movlb	1	; () banked
  5420  001594  EE21  F068         	lfsr	2,_Cf+104	;volatile
  5421  001598  CFDE F0CE          	movff	postinc2,??_cf_rcv
  5422  00159C  CFDD F0CF          	movff	postdec2,??_cf_rcv+1
  5423  0015A0  0100               	movlb	0	; () banked
  5424  0015A2  1FCE               	comf	??_cf_rcv& (0+255),f,b
  5425  0015A4  1FCF               	comf	(??_cf_rcv+1)& (0+255),f,b
  5426  0015A6  4BCE               	infsnz	??_cf_rcv& (0+255),f,b
  5427  0015A8  2BCF               	incf	(??_cf_rcv+1)& (0+255),f,b
  5428  0015AA  504F               	movf	_Cptms,w,c	;volatile
  5429  0015AC  0100               	movlb	0	; () banked
  5430  0015AE  27CE               	addwf	??_cf_rcv& (0+255),f,b
  5431  0015B0  5050               	movf	_Cptms+1,w,c	;volatile
  5432  0015B2  0100               	movlb	0	; () banked
  5433  0015B4  23CF               	addwfc	(??_cf_rcv+1)& (0+255),f,b
  5434  0015B6  0E65               	movlw	101
  5435  0015B8  0100               	movlb	0	; () banked
  5436  0015BA  5DCE               	subwf	??_cf_rcv& (0+255),w,b
  5437  0015BC  0E00               	movlw	0
  5438  0015BE  59CF               	subwfb	(??_cf_rcv+1)& (0+255),w,b
  5439  0015C0  A0D8               	btfss	status,0,c
  5440  0015C2  D024               	goto	l6020
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;config.c: 137: {
  5444                           ;config.c: 138: Cf.Time2 = Cptms;
  5445  0015C4  C04F  F168         	movff	_Cptms,_Cf+104	;volatile
  5446  0015C8  C050  F169         	movff	_Cptms+1,_Cf+105	;volatile
  5447                           
  5448                           ;config.c: 140: (INTCONbits.GIE = 0);
  5449  0015CC  9EF2               	bcf	intcon,7,c	;volatile
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;config.c: 141: if ((((unsigned short) (Cptms - Cf.Time1) > 100) ? 1 : 0)) {Cf.Index = 0
      +                          ;}
  5453  0015CE  0101               	movlb	1	; () banked
  5454  0015D0  EE21  F066         	lfsr	2,_Cf+102	;volatile
  5455  0015D4  CFDE F0CE          	movff	postinc2,??_cf_rcv
  5456  0015D8  CFDD F0CF          	movff	postdec2,??_cf_rcv+1
  5457  0015DC  0100               	movlb	0	; () banked
  5458  0015DE  1FCE               	comf	??_cf_rcv& (0+255),f,b
  5459  0015E0  1FCF               	comf	(??_cf_rcv+1)& (0+255),f,b
  5460  0015E2  4BCE               	infsnz	??_cf_rcv& (0+255),f,b
  5461  0015E4  2BCF               	incf	(??_cf_rcv+1)& (0+255),f,b
  5462  0015E6  504F               	movf	_Cptms,w,c	;volatile
  5463  0015E8  0100               	movlb	0	; () banked
  5464  0015EA  27CE               	addwf	??_cf_rcv& (0+255),f,b
  5465  0015EC  5050               	movf	_Cptms+1,w,c	;volatile
  5466  0015EE  0100               	movlb	0	; () banked
  5467  0015F0  23CF               	addwfc	(??_cf_rcv+1)& (0+255),f,b
  5468  0015F2  0E65               	movlw	101
  5469  0015F4  0100               	movlb	0	; () banked
  5470  0015F6  5DCE               	subwf	??_cf_rcv& (0+255),w,b
  5471  0015F8  0E00               	movlw	0
  5472  0015FA  59CF               	subwfb	(??_cf_rcv+1)& (0+255),w,b
  5473  0015FC  A0D8               	btfss	status,0,c
  5474  0015FE  D004               	goto	l6018
  5475                           
  5476                           ; BSR set to: 0
  5477  001600  0E00               	movlw	0
  5478  001602  0101               	movlb	1	; () banked
  5479  001604  0101               	movlb	1	; () banked
  5480  001606  6F65               	movwf	(_Cf+101)& (0+255),b	;volatile
  5481  001608                     l6018:
  5482                           
  5483                           ;config.c: 142: (INTCONbits.GIE = 1);
  5484  001608  8EF2               	bsf	intcon,7,c	;volatile
  5485                           
  5486                           ;config.c: 143: }
  5487  00160A  D098               	goto	l461
  5488  00160C                     l6020:
  5489                           
  5490                           ;config.c: 144: else if (Cf.Index == (32 * 3 + 5))
  5491  00160C  0101               	movlb	1	; () banked
  5492  00160E  0101               	movlb	1	; () banked
  5493  001610  5165               	movf	(_Cf+101)& (0+255),w,b	;volatile
  5494  001612  0A65               	xorlw	101
  5495  001614  A4D8               	btfss	status,2,c
  5496  001616  D092               	goto	l461
  5497                           
  5498                           ; BSR set to: 1
  5499                           ;config.c: 145: {
  5500                           ;config.c: 146: RCIE = 0;
  5501  001618  9A9D               	bcf	3997,5,c	;volatile
  5502                           
  5503                           ; BSR set to: 1
  5504                           ;config.c: 148: temp = cf_check();
  5505  00161A  EC3D  F01A         	call	_cf_check	;wreg free
  5506  00161E  0100               	movlb	0	; () banked
  5507  001620  0100               	movlb	0	; () banked
  5508  001622  6FD0               	movwf	cf_rcv@temp& (0+255),b
  5509                           
  5510                           ; BSR set to: 0
  5511                           ;config.c: 150: if (temp == 0)
  5512  001624  0100               	movlb	0	; () banked
  5513  001626  0100               	movlb	0	; () banked
  5514  001628  67D0               	tstfsz	cf_rcv@temp& (0+255),b
  5515  00162A  D00C               	goto	l6030
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;config.c: 151: {
  5519                           ;config.c: 152: ecran_print_one_char(3, 'E');
  5520  00162C  0100               	movlb	0	; () banked
  5521  00162E  6FCE               	movwf	??_cf_rcv& (0+255),b
  5522  001630  0E45               	movlw	69
  5523  001632  0100               	movlb	0	; () banked
  5524  001634  0100               	movlb	0	; () banked
  5525  001636  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  5526  001638  0100               	movlb	0	; () banked
  5527  00163A  51CE               	movf	??_cf_rcv& (0+255),w,b
  5528  00163C  0E03               	movlw	3
  5529  00163E  EC19  F01A         	call	_ecran_print_one_char
  5530                           
  5531                           ;config.c: 153: }
  5532  001642  D077               	goto	l6054
  5533  001644                     l6030:
  5534                           
  5535                           ;config.c: 154: else
  5536                           ;config.c: 155: {
  5537                           ;config.c: 157: eeprom_write_array(&Cf.Data[0], 0, (32 * 3 + 5));
  5538  001644  0101               	movlb	1	; () banked
  5539  001646  0E01               	movlw	high _Cf	;volatile
  5540  001648  0100               	movlb	0	; () banked
  5541  00164A  0100               	movlb	0	; () banked
  5542  00164C  6FBD               	movwf	(eeprom_write_array@pData+1)& (0+255),b
  5543  00164E  0101               	movlb	1	; () banked
  5544  001650  0E00               	movlw	low _Cf	;volatile
  5545  001652  0100               	movlb	0	; () banked
  5546  001654  0100               	movlb	0	; () banked
  5547  001656  6FBC               	movwf	eeprom_write_array@pData& (0+255),b
  5548  001658  0100               	movlb	0	; () banked
  5549  00165A  6FCE               	movwf	??_cf_rcv& (0+255),b
  5550  00165C  0E00               	movlw	0
  5551  00165E  0100               	movlb	0	; () banked
  5552  001660  0100               	movlb	0	; () banked
  5553  001662  6FBE               	movwf	eeprom_write_array@Address& (0+255),b
  5554  001664  0100               	movlb	0	; () banked
  5555  001666  51CE               	movf	??_cf_rcv& (0+255),w,b
  5556  001668  0100               	movlb	0	; () banked
  5557  00166A  6FCF               	movwf	(??_cf_rcv+1)& (0+255),b
  5558  00166C  0E65               	movlw	101
  5559  00166E  0100               	movlb	0	; () banked
  5560  001670  0100               	movlb	0	; () banked
  5561  001672  6FBF               	movwf	eeprom_write_array@NbData& (0+255),b
  5562  001674  0100               	movlb	0	; () banked
  5563  001676  51CF               	movf	(??_cf_rcv+1)& (0+255),w,b
  5564  001678  EC31  F019         	call	_eeprom_write_array	;wreg free
  5565                           
  5566                           ;config.c: 159: for (i = 0; i < (32 * 3 + 5); i ++)
  5567  00167C  0100               	movlb	0	; () banked
  5568  00167E  6FCE               	movwf	??_cf_rcv& (0+255),b
  5569  001680  0E00               	movlw	0
  5570  001682  0100               	movlb	0	; () banked
  5571  001684  0100               	movlb	0	; () banked
  5572  001686  6FD1               	movwf	cf_rcv@i& (0+255),b
  5573  001688  0100               	movlb	0	; () banked
  5574  00168A  51CE               	movf	??_cf_rcv& (0+255),w,b
  5575  00168C  D011               	goto	L38
  5576  00168E                     l6038:
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;config.c: 160: {
  5580                           ;config.c: 161: Cf.Data[i] = 0;
  5581  00168E  0100               	movlb	0	; () banked
  5582  001690  0100               	movlb	0	; () banked
  5583  001692  51D1               	movf	cf_rcv@i& (0+255),w,b
  5584  001694  0D01               	mullw	1
  5585  001696  0101               	movlb	1	; () banked
  5586  001698  0E00               	movlw	low _Cf	;volatile
  5587  00169A  24F3               	addwf	prodl,w,c
  5588  00169C  6ED9               	movwf	fsr2l,c
  5589  00169E  0101               	movlb	1	; () banked
  5590  0016A0  0E01               	movlw	high _Cf	;volatile
  5591  0016A2  20F4               	addwfc	prodh,w,c
  5592  0016A4  6EDA               	movwf	fsr2h,c
  5593  0016A6  0E00               	movlw	0
  5594  0016A8  6EDF               	movwf	indf2,c
  5595                           
  5596                           ; BSR set to: 1
  5597  0016AA  0100               	movlb	0	; () banked
  5598  0016AC  0100               	movlb	0	; () banked
  5599  0016AE  2BD1               	incf	cf_rcv@i& (0+255),f,b
  5600  0016B0                     L38:
  5601                           
  5602                           ; BSR set to: 0
  5603  0016B0  0E64               	movlw	100
  5604  0016B2  0100               	movlb	0	; () banked
  5605  0016B4  0100               	movlb	0	; () banked
  5606  0016B6  65D1               	cpfsgt	cf_rcv@i& (0+255),b
  5607  0016B8  D7EA               	goto	l6038
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;config.c: 162: }
  5611                           ;config.c: 164: eeprom_read_array(&Cf.Data[0], 0, (32 * 3 + 5));
  5612                           
  5613                           ; BSR set to: 0
  5614  0016BA  0101               	movlb	1	; () banked
  5615  0016BC  0E01               	movlw	high _Cf	;volatile
  5616  0016BE  0100               	movlb	0	; () banked
  5617  0016C0  0100               	movlb	0	; () banked
  5618  0016C2  6FBC               	movwf	(eeprom_read_array@pData+1)& (0+255),b
  5619  0016C4  0101               	movlb	1	; () banked
  5620  0016C6  0E00               	movlw	low _Cf	;volatile
  5621  0016C8  0100               	movlb	0	; () banked
  5622  0016CA  0100               	movlb	0	; () banked
  5623  0016CC  6FBB               	movwf	eeprom_read_array@pData& (0+255),b
  5624  0016CE  0100               	movlb	0	; () banked
  5625  0016D0  6FCE               	movwf	??_cf_rcv& (0+255),b
  5626  0016D2  0E00               	movlw	0
  5627  0016D4  0100               	movlb	0	; () banked
  5628  0016D6  0100               	movlb	0	; () banked
  5629  0016D8  6FBD               	movwf	eeprom_read_array@Address& (0+255),b
  5630  0016DA  0100               	movlb	0	; () banked
  5631  0016DC  51CE               	movf	??_cf_rcv& (0+255),w,b
  5632  0016DE  0100               	movlb	0	; () banked
  5633  0016E0  6FCF               	movwf	(??_cf_rcv+1)& (0+255),b
  5634  0016E2  0E65               	movlw	101
  5635  0016E4  0100               	movlb	0	; () banked
  5636  0016E6  0100               	movlb	0	; () banked
  5637  0016E8  6FBE               	movwf	eeprom_read_array@NbData& (0+255),b
  5638  0016EA  0100               	movlb	0	; () banked
  5639  0016EC  51CF               	movf	(??_cf_rcv+1)& (0+255),w,b
  5640  0016EE  EC08  F019         	call	_eeprom_read_array	;wreg free
  5641                           
  5642                           ;config.c: 166: temp = cf_check();
  5643  0016F2  EC3D  F01A         	call	_cf_check	;wreg free
  5644  0016F6  0100               	movlb	0	; () banked
  5645  0016F8  0100               	movlb	0	; () banked
  5646  0016FA  6FD0               	movwf	cf_rcv@temp& (0+255),b
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;config.c: 168: if (temp == 0)
  5650  0016FC  0100               	movlb	0	; () banked
  5651  0016FE  0100               	movlb	0	; () banked
  5652  001700  67D0               	tstfsz	cf_rcv@temp& (0+255),b
  5653  001702  D00C               	goto	l6052
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;config.c: 169: {
  5657                           ;config.c: 170: ecran_print_one_char(3, 'E');
  5658  001704  0100               	movlb	0	; () banked
  5659  001706  6FCE               	movwf	??_cf_rcv& (0+255),b
  5660  001708  0E45               	movlw	69
  5661  00170A  0100               	movlb	0	; () banked
  5662  00170C  0100               	movlb	0	; () banked
  5663  00170E  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  5664  001710  0100               	movlb	0	; () banked
  5665  001712  51CE               	movf	??_cf_rcv& (0+255),w,b
  5666  001714  0E03               	movlw	3
  5667  001716  EC19  F01A         	call	_ecran_print_one_char
  5668                           
  5669                           ;config.c: 171: }
  5670  00171A  D00B               	goto	l6054
  5671  00171C                     l6052:
  5672                           
  5673                           ;config.c: 172: else
  5674                           ;config.c: 173: {
  5675                           ;config.c: 174: ecran_print_one_char(3, 'P');
  5676  00171C  0100               	movlb	0	; () banked
  5677  00171E  6FCE               	movwf	??_cf_rcv& (0+255),b
  5678  001720  0E50               	movlw	80
  5679  001722  0100               	movlb	0	; () banked
  5680  001724  0100               	movlb	0	; () banked
  5681  001726  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  5682  001728  0100               	movlb	0	; () banked
  5683  00172A  51CE               	movf	??_cf_rcv& (0+255),w,b
  5684  00172C  0E03               	movlw	3
  5685  00172E  EC19  F01A         	call	_ecran_print_one_char
  5686  001732                     l6054:
  5687                           
  5688                           ;config.c: 175: }
  5689                           ;config.c: 176: }
  5690                           ;config.c: 178: Cf.Index = 0;
  5691  001732  0E00               	movlw	0
  5692  001734  0101               	movlb	1	; () banked
  5693  001736  0101               	movlb	1	; () banked
  5694  001738  6F65               	movwf	(_Cf+101)& (0+255),b	;volatile
  5695                           
  5696                           ; BSR set to: 1
  5697                           ;config.c: 180: RCIE = 1;
  5698  00173A  8A9D               	bsf	3997,5,c	;volatile
  5699  00173C                     l461:
  5700  00173C  0012               	return	
  5701  00173E  FFFF               	dw	65535	; errata NOP
  5702  001740                     __end_of_cf_rcv:
  5703                           	opt stack 0
  5704                           tblptru	equ	0xFF8
  5705                           tblptrh	equ	0xFF7
  5706                           tblptrl	equ	0xFF6
  5707                           tablat	equ	0xFF5
  5708                           prodh	equ	0xFF4
  5709                           prodl	equ	0xFF3
  5710                           intcon	equ	0xFF2
  5711                           intcon2	equ	0xFF1
  5712                           postinc0	equ	0xFEE
  5713                           wreg	equ	0xFE8
  5714                           postdec1	equ	0xFE5
  5715                           fsr1l	equ	0xFE1
  5716                           indf2	equ	0xFDF
  5717                           postinc2	equ	0xFDE
  5718                           postdec2	equ	0xFDD
  5719                           fsr2h	equ	0xFDA
  5720                           fsr2l	equ	0xFD9
  5721                           status	equ	0xFD8
  5722                           
  5723 ;; *************** function _eeprom_write_array *****************
  5724 ;; Defined at:
  5725 ;;		line 52 in file "eeprom.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  pData           2    2[BANK0 ] PTR unsigned char 
  5728 ;;		 -> Cf(107), 
  5729 ;;  Address         1    4[BANK0 ] unsigned char 
  5730 ;;  NbData          1    5[BANK0 ] unsigned char 
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;  i               1    7[BANK0 ] unsigned char 
  5733 ;; Return value:  Size  Location     Type
  5734 ;;		None               void
  5735 ;; Registers used:
  5736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5742 ;;      Params:         0       4       0       0       0       0       0
  5743 ;;      Locals:         0       1       0       0       0       0       0
  5744 ;;      Temps:          0       1       0       0       0       0       0
  5745 ;;      Totals:         0       6       0       0       0       0       0
  5746 ;;Total ram usage:        6 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; Hardware stack levels required when called:    4
  5749 ;; This function calls:
  5750 ;;		_eeprom_write
  5751 ;; This function is called by:
  5752 ;;		_cf_rcv
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           	psect	text20
  5757  003262                     __ptext20:
  5758                           	opt stack 0
  5759  003262                     _eeprom_write_array:
  5760                           	opt stack 24
  5761                           
  5762                           ;incstack = 0
  5763  003262  FFFF               	dw	65535
  5764                           
  5765                           ;eeprom.c: 54: unsigned char i;
  5766                           ;eeprom.c: 56: for (i = 0; i < NbData; i ++)
  5767  003264  0100               	movlb	0	; () banked
  5768  003266  6FC0               	movwf	??_eeprom_write_array& (0+255),b
  5769  003268  0E00               	movlw	0
  5770  00326A  0100               	movlb	0	; () banked
  5771  00326C  0100               	movlb	0	; () banked
  5772  00326E  6FC1               	movwf	eeprom_write_array@i& (0+255),b
  5773  003270  0100               	movlb	0	; () banked
  5774  003272  51C0               	movf	??_eeprom_write_array& (0+255),w,b
  5775  003274  D013               	goto	l5776
  5776  003276                     l5768:
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;eeprom.c: 57: {
  5780                           ;eeprom.c: 58: eeprom_write(*pData, Address);
  5781  003276  C0BE  F0BA         	movff	eeprom_write_array@Address,eeprom_write@Address
  5782  00327A  C0BC  FFD9         	movff	eeprom_write_array@pData,fsr2l
  5783  00327E  C0BD  FFDA         	movff	eeprom_write_array@pData+1,fsr2h
  5784  003282  50DF               	movf	indf2,w,c
  5785  003284  ECC6  F01A         	call	_eeprom_write
  5786                           
  5787                           ;eeprom.c: 59: pData ++;
  5788  003288  0100               	movlb	0	; () banked
  5789  00328A  0100               	movlb	0	; () banked
  5790  00328C  4BBC               	infsnz	eeprom_write_array@pData& (0+255),f,b
  5791  00328E  2BBD               	incf	(eeprom_write_array@pData+1)& (0+255),f,b
  5792                           
  5793                           ; BSR set to: 0
  5794                           ;eeprom.c: 60: Address ++;
  5795  003290  0100               	movlb	0	; () banked
  5796  003292  0100               	movlb	0	; () banked
  5797  003294  2BBE               	incf	eeprom_write_array@Address& (0+255),f,b
  5798                           
  5799                           ; BSR set to: 0
  5800  003296  0100               	movlb	0	; () banked
  5801  003298  0100               	movlb	0	; () banked
  5802  00329A  2BC1               	incf	eeprom_write_array@i& (0+255),f,b
  5803  00329C                     l5776:
  5804                           
  5805                           ; BSR set to: 0
  5806  00329C  0100               	movlb	0	; () banked
  5807  00329E  0100               	movlb	0	; () banked
  5808  0032A0  51BF               	movf	eeprom_write_array@NbData& (0+255),w,b
  5809  0032A2  0100               	movlb	0	; () banked
  5810  0032A4  0100               	movlb	0	; () banked
  5811  0032A6  5DC1               	subwf	eeprom_write_array@i& (0+255),w,b
  5812  0032A8  B0D8               	btfsc	status,0,c
  5813                           
  5814                           ; BSR set to: 0
  5815                           
  5816                           ; BSR set to: 0
  5817  0032AA  0012               	return	
  5818  0032AC  FFFF               	dw	65535	; assembler added errata NOP
  5819  0032AE  D7E3               	goto	l5768
  5820  0032B0  FFFF               	dw	65535	; errata NOP
  5821  0032B2                     __end_of_eeprom_write_array:
  5822                           	opt stack 0
  5823                           tblptru	equ	0xFF8
  5824                           tblptrh	equ	0xFF7
  5825                           tblptrl	equ	0xFF6
  5826                           tablat	equ	0xFF5
  5827                           prodh	equ	0xFF4
  5828                           prodl	equ	0xFF3
  5829                           intcon	equ	0xFF2
  5830                           intcon2	equ	0xFF1
  5831                           postinc0	equ	0xFEE
  5832                           wreg	equ	0xFE8
  5833                           postdec1	equ	0xFE5
  5834                           fsr1l	equ	0xFE1
  5835                           indf2	equ	0xFDF
  5836                           postinc2	equ	0xFDE
  5837                           postdec2	equ	0xFDD
  5838                           fsr2h	equ	0xFDA
  5839                           fsr2l	equ	0xFD9
  5840                           status	equ	0xFD8
  5841                           
  5842 ;; *************** function _eeprom_write *****************
  5843 ;; Defined at:
  5844 ;;		line 18 in file "eeprom.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;  Data            1    wreg     unsigned char 
  5847 ;;  Address         1    0[BANK0 ] unsigned char 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  Data            1    1[BANK0 ] unsigned char 
  5850 ;; Return value:  Size  Location     Type
  5851 ;;		None               void
  5852 ;; Registers used:
  5853 ;;		wreg, status,2
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5859 ;;      Params:         0       1       0       0       0       0       0
  5860 ;;      Locals:         0       1       0       0       0       0       0
  5861 ;;      Temps:          0       0       0       0       0       0       0
  5862 ;;      Totals:         0       2       0       0       0       0       0
  5863 ;;Total ram usage:        2 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; Hardware stack levels required when called:    3
  5866 ;; This function calls:
  5867 ;;		Nothing
  5868 ;; This function is called by:
  5869 ;;		_eeprom_write_array
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           	psect	text21
  5874  00358C                     __ptext21:
  5875                           	opt stack 0
  5876  00358C                     _eeprom_write:
  5877                           	opt stack 24
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;incstack = 0
  5881  00358C  FFFF               	dw	65535
  5882                           
  5883                           ;eeprom_write@Data stored from wreg
  5884  00358E  CFE8 F0BB          	movff	wreg,eeprom_write@Data
  5885                           
  5886                           ;eeprom.c: 20: EEADR = Address;
  5887  003592  C0BA  FFA9         	movff	eeprom_write@Address,4009	;volatile
  5888                           
  5889                           ;eeprom.c: 21: EEDATA = Data;
  5890  003596  C0BB  FFA8         	movff	eeprom_write@Data,4008	;volatile
  5891                           
  5892                           ;eeprom.c: 23: EEPGD = 0;
  5893  00359A  9EA6               	bcf	4006,7,c	;volatile
  5894                           
  5895                           ;eeprom.c: 24: CFGS = 0;
  5896  00359C  9CA6               	bcf	4006,6,c	;volatile
  5897                           
  5898                           ;eeprom.c: 25: WREN = 1;
  5899  00359E  84A6               	bsf	4006,2,c	;volatile
  5900                           
  5901                           ;eeprom.c: 27: (INTCONbits.GIE = 0);
  5902  0035A0  9EF2               	bcf	intcon,7,c	;volatile
  5903                           
  5904                           ;eeprom.c: 29: EECON2 = 0x55;
  5905  0035A2  0E55               	movlw	85
  5906  0035A4  6EA7               	movwf	4007,c	;volatile
  5907                           
  5908                           ;eeprom.c: 30: EECON2 = 0xAA;
  5909  0035A6  0EAA               	movlw	170
  5910  0035A8  6EA7               	movwf	4007,c	;volatile
  5911                           
  5912                           ;eeprom.c: 32: WR = 1;
  5913  0035AA  82A6               	bsf	4006,1,c	;volatile
  5914  0035AC                     l340:
  5915  0035AC  B2A6               	btfsc	4006,1,c	;volatile
  5916  0035AE  D7FE               	goto	l340
  5917                           
  5918                           ;eeprom.c: 35: (INTCONbits.GIE = 1);
  5919  0035B0  8EF2               	bsf	intcon,7,c	;volatile
  5920                           
  5921                           ;eeprom.c: 37: WREN = 0;
  5922  0035B2  94A6               	bcf	4006,2,c	;volatile
  5923  0035B4  0012               	return	
  5924  0035B6  FFFF               	dw	65535	; errata NOP
  5925  0035B8                     __end_of_eeprom_write:
  5926                           	opt stack 0
  5927                           tblptru	equ	0xFF8
  5928                           tblptrh	equ	0xFF7
  5929                           tblptrl	equ	0xFF6
  5930                           tablat	equ	0xFF5
  5931                           prodh	equ	0xFF4
  5932                           prodl	equ	0xFF3
  5933                           intcon	equ	0xFF2
  5934                           intcon2	equ	0xFF1
  5935                           postinc0	equ	0xFEE
  5936                           wreg	equ	0xFE8
  5937                           postdec1	equ	0xFE5
  5938                           fsr1l	equ	0xFE1
  5939                           indf2	equ	0xFDF
  5940                           postinc2	equ	0xFDE
  5941                           postdec2	equ	0xFDD
  5942                           fsr2h	equ	0xFDA
  5943                           fsr2l	equ	0xFD9
  5944                           status	equ	0xFD8
  5945                           
  5946 ;; *************** function _check_bpon *****************
  5947 ;; Defined at:
  5948 ;;		line 52 in file "test.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;		None
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;		None
  5953 ;; Return value:  Size  Location     Type
  5954 ;;		None               void
  5955 ;; Registers used:
  5956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5962 ;;      Params:         0       0       0       0       0       0       0
  5963 ;;      Locals:         0       0       0       0       0       0       0
  5964 ;;      Temps:          0       2       0       0       0       0       0
  5965 ;;      Totals:         0       2       0       0       0       0       0
  5966 ;;Total ram usage:        2 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; Hardware stack levels required when called:    5
  5969 ;; This function calls:
  5970 ;;		_ecran_print_one_char
  5971 ;; This function is called by:
  5972 ;;		_main
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text22
  5977  00310C                     __ptext22:
  5978                           	opt stack 0
  5979  00310C                     _check_bpon:
  5980                           	opt stack 25
  5981                           
  5982                           ;incstack = 0
  5983  00310C  FFFF               	dw	65535
  5984                           
  5985                           ;test.c: 54: Test.Time = Cptms;
  5986  00310E  C04F  F030         	movff	_Cptms,_Test+2	;volatile
  5987  003112  C050  F031         	movff	_Cptms+1,_Test+3	;volatile
  5988                           
  5989                           ;test.c: 56: if (PORTEbits.RE0 == 0)
  5990  003116  B084               	btfsc	3972,0,c	;volatile
  5991  003118  D025               	goto	l553
  5992                           
  5993                           ;test.c: 57: {
  5994                           ;test.c: 58: ecran_print_one_char(3, 'A');
  5995  00311A  0100               	movlb	0	; () banked
  5996  00311C  6FBD               	movwf	??_check_bpon& (0+255),b
  5997  00311E  0E41               	movlw	65
  5998  003120  0100               	movlb	0	; () banked
  5999  003122  0100               	movlb	0	; () banked
  6000  003124  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  6001  003126  0100               	movlb	0	; () banked
  6002  003128  51BD               	movf	??_check_bpon& (0+255),w,b
  6003  00312A  0E03               	movlw	3
  6004  00312C  EC19  F01A         	call	_ecran_print_one_char
  6005  003130                     l548:
  6006  003130  B084               	btfsc	3972,0,c	;volatile
  6007  003132  D018               	goto	l553
  6008  003134  EE20  F030         	lfsr	2,_Test+2
  6009  003138  CFDE F0BD          	movff	postinc2,??_check_bpon
  6010  00313C  CFDD F0BE          	movff	postdec2,??_check_bpon+1
  6011  003140  0100               	movlb	0	; () banked
  6012  003142  1FBD               	comf	??_check_bpon& (0+255),f,b
  6013  003144  1FBE               	comf	(??_check_bpon+1)& (0+255),f,b
  6014  003146  4BBD               	infsnz	??_check_bpon& (0+255),f,b
  6015  003148  2BBE               	incf	(??_check_bpon+1)& (0+255),f,b
  6016  00314A  504F               	movf	_Cptms,w,c	;volatile
  6017  00314C  0100               	movlb	0	; () banked
  6018  00314E  27BD               	addwf	??_check_bpon& (0+255),f,b
  6019  003150  5050               	movf	_Cptms+1,w,c	;volatile
  6020  003152  0100               	movlb	0	; () banked
  6021  003154  23BE               	addwfc	(??_check_bpon+1)& (0+255),f,b
  6022  003156  0EE8               	movlw	232
  6023  003158  0100               	movlb	0	; () banked
  6024  00315A  5DBD               	subwf	??_check_bpon& (0+255),w,b
  6025  00315C  0E03               	movlw	3
  6026  00315E  59BE               	subwfb	(??_check_bpon+1)& (0+255),w,b
  6027  003160  A0D8               	btfss	status,0,c
  6028  003162  D7E6               	goto	l548
  6029  003164                     l553:
  6030  003164  0012               	return	
  6031  003166  FFFF               	dw	65535	; errata NOP
  6032  003168                     __end_of_check_bpon:
  6033                           	opt stack 0
  6034                           tblptru	equ	0xFF8
  6035                           tblptrh	equ	0xFF7
  6036                           tblptrl	equ	0xFF6
  6037                           tablat	equ	0xFF5
  6038                           prodh	equ	0xFF4
  6039                           prodl	equ	0xFF3
  6040                           intcon	equ	0xFF2
  6041                           intcon2	equ	0xFF1
  6042                           postinc0	equ	0xFEE
  6043                           wreg	equ	0xFE8
  6044                           postdec1	equ	0xFE5
  6045                           fsr1l	equ	0xFE1
  6046                           indf2	equ	0xFDF
  6047                           postinc2	equ	0xFDE
  6048                           postdec2	equ	0xFDD
  6049                           fsr2h	equ	0xFDA
  6050                           fsr2l	equ	0xFD9
  6051                           status	equ	0xFD8
  6052                           
  6053 ;; *************** function _cf_check_and_display *****************
  6054 ;; Defined at:
  6055 ;;		line 92 in file "config.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;		None
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;  temp            2   22[BANK0 ] unsigned short 
  6060 ;;  configOk        1   24[BANK0 ] unsigned char 
  6061 ;; Return value:  Size  Location     Type
  6062 ;;		None               void
  6063 ;; Registers used:
  6064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6065 ;; Tracked objects:
  6066 ;;		On entry : 0/0
  6067 ;;		On exit  : 0/0
  6068 ;;		Unchanged: 0/0
  6069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6070 ;;      Params:         0       0       0       0       0       0       0
  6071 ;;      Locals:         0       3       0       0       0       0       0
  6072 ;;      Temps:          0       2       0       0       0       0       0
  6073 ;;      Totals:         0       5       0       0       0       0       0
  6074 ;;Total ram usage:        5 bytes
  6075 ;; Hardware stack levels used:    1
  6076 ;; Hardware stack levels required when called:    6
  6077 ;; This function calls:
  6078 ;;		_HexToAscii
  6079 ;;		_cf_check
  6080 ;;		_ecran_print_one_char
  6081 ;;		_ecran_refresh
  6082 ;;		_eeprom_read_array
  6083 ;; This function is called by:
  6084 ;;		_main
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text23
  6089  001A7A                     __ptext23:
  6090                           	opt stack 0
  6091  001A7A                     _cf_check_and_display:
  6092                           	opt stack 24
  6093                           
  6094                           ;incstack = 0
  6095  001A7A  FFFF               	dw	65535
  6096                           
  6097                           ;config.c: 94: unsigned char configOk = 0;
  6098  001A7C  0100               	movlb	0	; () banked
  6099  001A7E  6FCE               	movwf	??_cf_check_and_display& (0+255),b
  6100  001A80  0E00               	movlw	0
  6101  001A82  0100               	movlb	0	; () banked
  6102  001A84  0100               	movlb	0	; () banked
  6103  001A86  6FD2               	movwf	cf_check_and_display@configOk& (0+255),b
  6104  001A88  0100               	movlb	0	; () banked
  6105  001A8A  51CE               	movf	??_cf_check_and_display& (0+255),w,b
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;config.c: 95: unsigned short temp;
  6109                           ;config.c: 97: eeprom_read_array(&Cf.Data[0], 0, (32 * 3 + 5));
  6110  001A8C  0101               	movlb	1	; () banked
  6111  001A8E  0E01               	movlw	high _Cf	;volatile
  6112  001A90  0100               	movlb	0	; () banked
  6113  001A92  0100               	movlb	0	; () banked
  6114  001A94  6FBC               	movwf	(eeprom_read_array@pData+1)& (0+255),b
  6115  001A96  0101               	movlb	1	; () banked
  6116  001A98  0E00               	movlw	low _Cf	;volatile
  6117  001A9A  0100               	movlb	0	; () banked
  6118  001A9C  0100               	movlb	0	; () banked
  6119  001A9E  6FBB               	movwf	eeprom_read_array@pData& (0+255),b
  6120  001AA0  0100               	movlb	0	; () banked
  6121  001AA2  6FCE               	movwf	??_cf_check_and_display& (0+255),b
  6122  001AA4  0E00               	movlw	0
  6123  001AA6  0100               	movlb	0	; () banked
  6124  001AA8  0100               	movlb	0	; () banked
  6125  001AAA  6FBD               	movwf	eeprom_read_array@Address& (0+255),b
  6126  001AAC  0100               	movlb	0	; () banked
  6127  001AAE  51CE               	movf	??_cf_check_and_display& (0+255),w,b
  6128  001AB0  0100               	movlb	0	; () banked
  6129  001AB2  6FCF               	movwf	(??_cf_check_and_display+1)& (0+255),b
  6130  001AB4  0E65               	movlw	101
  6131  001AB6  0100               	movlb	0	; () banked
  6132  001AB8  0100               	movlb	0	; () banked
  6133  001ABA  6FBE               	movwf	eeprom_read_array@NbData& (0+255),b
  6134  001ABC  0100               	movlb	0	; () banked
  6135  001ABE  51CF               	movf	(??_cf_check_and_display+1)& (0+255),w,b
  6136  001AC0  EC08  F019         	call	_eeprom_read_array	;wreg free
  6137                           
  6138                           ;config.c: 99: configOk = cf_check();
  6139  001AC4  EC3D  F01A         	call	_cf_check	;wreg free
  6140  001AC8  0100               	movlb	0	; () banked
  6141  001ACA  0100               	movlb	0	; () banked
  6142  001ACC  6FD2               	movwf	cf_check_and_display@configOk& (0+255),b
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;config.c: 101: if (configOk == 1)
  6146  001ACE  0100               	movlb	0	; () banked
  6147  001AD0  0100               	movlb	0	; () banked
  6148  001AD2  05D2               	decf	cf_check_and_display@configOk& (0+255),w,b
  6149  001AD4  A4D8               	btfss	status,2,c
  6150  001AD6  D080               	goto	l6312
  6151                           
  6152                           ; BSR set to: 0
  6153                           ;config.c: 102: {
  6154                           ;config.c: 104: if (Cf.IsLong == 1)
  6155  001AD8  0101               	movlb	1	; () banked
  6156  001ADA  A16A               	btfss	(_Cf+106)& (0+255),0,b	;volatile
  6157  001ADC  D04C               	goto	l6308
  6158                           
  6159                           ; BSR set to: 1
  6160                           ;config.c: 105: {
  6161                           ;config.c: 106: Ecran.Digit[0] = ' ';
  6162  001ADE  0100               	movlb	0	; () banked
  6163  001AE0  6FCE               	movwf	??_cf_check_and_display& (0+255),b
  6164  001AE2  0E20               	movlw	32
  6165  001AE4  0100               	movlb	0	; () banked
  6166  001AE6  0100               	movlb	0	; () banked
  6167  001AE8  6FAA               	movwf	_Ecran& (0+255),b
  6168  001AEA  0100               	movlb	0	; () banked
  6169  001AEC  51CE               	movf	??_cf_check_and_display& (0+255),w,b
  6170                           
  6171                           ;config.c: 107: Ecran.Digit[1] = ' ';
  6172  001AEE  0100               	movlb	0	; () banked
  6173  001AF0  6FCE               	movwf	??_cf_check_and_display& (0+255),b
  6174  001AF2  0E20               	movlw	32
  6175  001AF4  0100               	movlb	0	; () banked
  6176  001AF6  0100               	movlb	0	; () banked
  6177  001AF8  6FAB               	movwf	(_Ecran+1)& (0+255),b
  6178  001AFA  0100               	movlb	0	; () banked
  6179  001AFC  51CE               	movf	??_cf_check_and_display& (0+255),w,b
  6180                           
  6181                           ; BSR set to: 0
  6182                           ;config.c: 108: Ecran.Digit[2] = HexToAscii(((unsigned char) ((unsigned char) ((Cf.Data[
      +                          98]) & 0xF0) >> 4)));
  6183  001AFE  0101               	movlb	1	; () banked
  6184  001B00  0101               	movlb	1	; () banked
  6185  001B02  3962               	swapf	(_Cf+98)& (0+255),w,b	;volatile
  6186  001B04  0B0F               	andlw	15
  6187  001B06  0B0F               	andlw	15
  6188  001B08  EC7E  F01A         	call	_HexToAscii
  6189  001B0C  0100               	movlb	0	; () banked
  6190  001B0E  0100               	movlb	0	; () banked
  6191  001B10  6FAC               	movwf	(_Ecran+2)& (0+255),b
  6192                           
  6193                           ; BSR set to: 0
  6194                           ;config.c: 109: Ecran.Digit[3] = HexToAscii(((unsigned char) ((Cf.Data[98]) & 0x0F)));
  6195  001B12  0101               	movlb	1	; () banked
  6196  001B14  0101               	movlb	1	; () banked
  6197  001B16  5162               	movf	(_Cf+98)& (0+255),w,b	;volatile
  6198  001B18  0B0F               	andlw	15
  6199  001B1A  EC7E  F01A         	call	_HexToAscii
  6200  001B1E  0100               	movlb	0	; () banked
  6201  001B20  0100               	movlb	0	; () banked
  6202  001B22  6FAD               	movwf	(_Ecran+3)& (0+255),b
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;config.c: 111: Ecran.Digits = Ecran.Digit;
  6206  001B24  0100               	movlb	0	; () banked
  6207  001B26  0E00               	movlw	high _Ecran
  6208  001B28  0100               	movlb	0	; () banked
  6209  001B2A  0100               	movlb	0	; () banked
  6210  001B2C  6FAF               	movwf	(_Ecran+5)& (0+255),b
  6211  001B2E  0100               	movlb	0	; () banked
  6212  001B30  0EAA               	movlw	low _Ecran
  6213  001B32  0100               	movlb	0	; () banked
  6214  001B34  0100               	movlb	0	; () banked
  6215  001B36  6FAE               	movwf	(_Ecran+4)& (0+255),b
  6216                           
  6217                           ; BSR set to: 0
  6218                           ;config.c: 113: temp = Cptms;
  6219  001B38  C04F  F0D0         	movff	_Cptms,cf_check_and_display@temp	;volatile
  6220  001B3C  C050  F0D1         	movff	_Cptms+1,cf_check_and_display@temp+1	;volatile
  6221                           
  6222                           ;config.c: 115: while((((unsigned short) (Cptms - temp) < 1000) ? 1 : 0)) {ecran_refresh
      +                          ();}
  6223  001B40  D002               	goto	l6306
  6224  001B42                     l6304:
  6225                           
  6226                           ; BSR set to: 0
  6227  001B42  ECC4  F015         	call	_ecran_refresh	;wreg free
  6228  001B46                     l6306:
  6229  001B46  0100               	movlb	0	; () banked
  6230  001B48  C0D0  F0CE         	movff	cf_check_and_display@temp,??_cf_check_and_display
  6231  001B4C  0100               	movlb	0	; () banked
  6232  001B4E  C0D1  F0CF         	movff	cf_check_and_display@temp+1,??_cf_check_and_display+1
  6233  001B52  0100               	movlb	0	; () banked
  6234  001B54  1FCE               	comf	??_cf_check_and_display& (0+255),f,b
  6235  001B56  1FCF               	comf	(??_cf_check_and_display+1)& (0+255),f,b
  6236  001B58  4BCE               	infsnz	??_cf_check_and_display& (0+255),f,b
  6237  001B5A  2BCF               	incf	(??_cf_check_and_display+1)& (0+255),f,b
  6238  001B5C  504F               	movf	_Cptms,w,c	;volatile
  6239  001B5E  0100               	movlb	0	; () banked
  6240  001B60  27CE               	addwf	??_cf_check_and_display& (0+255),f,b
  6241  001B62  5050               	movf	_Cptms+1,w,c	;volatile
  6242  001B64  0100               	movlb	0	; () banked
  6243  001B66  23CF               	addwfc	(??_cf_check_and_display+1)& (0+255),f,b
  6244  001B68  0EE8               	movlw	232
  6245  001B6A  0100               	movlb	0	; () banked
  6246  001B6C  5DCE               	subwf	??_cf_check_and_display& (0+255),w,b
  6247  001B6E  0E03               	movlw	3
  6248  001B70  59CF               	subwfb	(??_cf_check_and_display+1)& (0+255),w,b
  6249  001B72  A0D8               	btfss	status,0,c
  6250  001B74  D7E6               	goto	l6304
  6251  001B76                     l6308:
  6252                           
  6253                           ;config.c: 116: }
  6254                           ;config.c: 118: Ecran.Digit[0] = HexToAscii(((unsigned char) ((unsigned char) ((Cf.Data[
      +                          99]) & 0xF0) >> 4)));
  6255  001B76  0101               	movlb	1	; () banked
  6256  001B78  0101               	movlb	1	; () banked
  6257  001B7A  3963               	swapf	(_Cf+99)& (0+255),w,b	;volatile
  6258  001B7C  0B0F               	andlw	15
  6259  001B7E  0B0F               	andlw	15
  6260  001B80  EC7E  F01A         	call	_HexToAscii
  6261  001B84  0100               	movlb	0	; () banked
  6262  001B86  0100               	movlb	0	; () banked
  6263  001B88  6FAA               	movwf	_Ecran& (0+255),b
  6264                           
  6265                           ;config.c: 119: Ecran.Digit[1] = HexToAscii(((unsigned char) ((Cf.Data[99]) & 0x0F)));
  6266  001B8A  0101               	movlb	1	; () banked
  6267  001B8C  0101               	movlb	1	; () banked
  6268  001B8E  5163               	movf	(_Cf+99)& (0+255),w,b	;volatile
  6269  001B90  0B0F               	andlw	15
  6270  001B92  EC7E  F01A         	call	_HexToAscii
  6271  001B96  0100               	movlb	0	; () banked
  6272  001B98  0100               	movlb	0	; () banked
  6273  001B9A  6FAB               	movwf	(_Ecran+1)& (0+255),b
  6274                           
  6275                           ;config.c: 120: Ecran.Digit[2] = HexToAscii(((unsigned char) ((unsigned char) ((Cf.Data[
      +                          100]) & 0xF0) >> 4)));
  6276  001B9C  0101               	movlb	1	; () banked
  6277  001B9E  0101               	movlb	1	; () banked
  6278  001BA0  3964               	swapf	(_Cf+100)& (0+255),w,b	;volatile
  6279  001BA2  0B0F               	andlw	15
  6280  001BA4  0B0F               	andlw	15
  6281  001BA6  EC7E  F01A         	call	_HexToAscii
  6282  001BAA  0100               	movlb	0	; () banked
  6283  001BAC  0100               	movlb	0	; () banked
  6284  001BAE  6FAC               	movwf	(_Ecran+2)& (0+255),b
  6285                           
  6286                           ;config.c: 121: Ecran.Digit[3] = HexToAscii(((unsigned char) ((Cf.Data[100]) & 0x0F)));
  6287  001BB0  0101               	movlb	1	; () banked
  6288  001BB2  0101               	movlb	1	; () banked
  6289  001BB4  5164               	movf	(_Cf+100)& (0+255),w,b	;volatile
  6290  001BB6  0B0F               	andlw	15
  6291  001BB8  EC7E  F01A         	call	_HexToAscii
  6292  001BBC  0100               	movlb	0	; () banked
  6293  001BBE  0100               	movlb	0	; () banked
  6294  001BC0  6FAD               	movwf	(_Ecran+3)& (0+255),b
  6295                           
  6296                           ; BSR set to: 0
  6297                           ;config.c: 123: Ecran.Digits = Ecran.Digit;
  6298  001BC2  0100               	movlb	0	; () banked
  6299  001BC4  0E00               	movlw	high _Ecran
  6300  001BC6  0100               	movlb	0	; () banked
  6301  001BC8  0100               	movlb	0	; () banked
  6302  001BCA  6FAF               	movwf	(_Ecran+5)& (0+255),b
  6303  001BCC  0100               	movlb	0	; () banked
  6304  001BCE  0EAA               	movlw	low _Ecran
  6305  001BD0  0100               	movlb	0	; () banked
  6306  001BD2  0100               	movlb	0	; () banked
  6307  001BD4  6FAE               	movwf	(_Ecran+4)& (0+255),b
  6308                           
  6309                           ;config.c: 124: }
  6310  001BD6  D00C               	goto	l448
  6311  001BD8                     l6312:
  6312                           
  6313                           ; BSR set to: 0
  6314                           ;config.c: 125: else
  6315                           ;config.c: 126: {
  6316                           ;config.c: 127: ecran_print_one_char(3, 'E');
  6317  001BD8  0100               	movlb	0	; () banked
  6318  001BDA  6FCE               	movwf	??_cf_check_and_display& (0+255),b
  6319  001BDC  0E45               	movlw	69
  6320  001BDE  0100               	movlb	0	; () banked
  6321  001BE0  0100               	movlb	0	; () banked
  6322  001BE2  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  6323  001BE4  0100               	movlb	0	; () banked
  6324  001BE6  51CE               	movf	??_cf_check_and_display& (0+255),w,b
  6325  001BE8  0E03               	movlw	3
  6326  001BEA  EC19  F01A         	call	_ecran_print_one_char
  6327  001BEE                     l445:
  6328  001BEE  D7FF               	goto	l445
  6329  001BF0                     l448:
  6330  001BF0  0012               	return	
  6331  001BF2  FFFF               	dw	65535	; errata NOP
  6332  001BF4                     __end_of_cf_check_and_display:
  6333                           	opt stack 0
  6334                           tblptru	equ	0xFF8
  6335                           tblptrh	equ	0xFF7
  6336                           tblptrl	equ	0xFF6
  6337                           tablat	equ	0xFF5
  6338                           prodh	equ	0xFF4
  6339                           prodl	equ	0xFF3
  6340                           intcon	equ	0xFF2
  6341                           intcon2	equ	0xFF1
  6342                           postinc0	equ	0xFEE
  6343                           wreg	equ	0xFE8
  6344                           postdec1	equ	0xFE5
  6345                           fsr1l	equ	0xFE1
  6346                           indf2	equ	0xFDF
  6347                           postinc2	equ	0xFDE
  6348                           postdec2	equ	0xFDD
  6349                           fsr2h	equ	0xFDA
  6350                           fsr2l	equ	0xFD9
  6351                           status	equ	0xFD8
  6352                           
  6353 ;; *************** function _eeprom_read_array *****************
  6354 ;; Defined at:
  6355 ;;		line 40 in file "eeprom.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;  pData           2    1[BANK0 ] PTR unsigned char 
  6358 ;;		 -> Cf(107), 
  6359 ;;  Address         1    3[BANK0 ] unsigned char 
  6360 ;;  NbData          1    4[BANK0 ] unsigned char 
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;  i               1    6[BANK0 ] unsigned char 
  6363 ;; Return value:  Size  Location     Type
  6364 ;;		None               void
  6365 ;; Registers used:
  6366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6367 ;; Tracked objects:
  6368 ;;		On entry : 0/0
  6369 ;;		On exit  : 0/0
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6372 ;;      Params:         0       4       0       0       0       0       0
  6373 ;;      Locals:         0       1       0       0       0       0       0
  6374 ;;      Temps:          0       1       0       0       0       0       0
  6375 ;;      Totals:         0       6       0       0       0       0       0
  6376 ;;Total ram usage:        6 bytes
  6377 ;; Hardware stack levels used:    1
  6378 ;; Hardware stack levels required when called:    4
  6379 ;; This function calls:
  6380 ;;		_eeprom_read
  6381 ;; This function is called by:
  6382 ;;		_cf_check_and_display
  6383 ;;		_cf_rcv
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           
  6387                           	psect	text24
  6388  003210                     __ptext24:
  6389                           	opt stack 0
  6390  003210                     _eeprom_read_array:
  6391                           	opt stack 24
  6392                           
  6393                           ;incstack = 0
  6394  003210  FFFF               	dw	65535
  6395                           
  6396                           ;eeprom.c: 42: unsigned char i;
  6397                           ;eeprom.c: 44: for (i = 0; i < NbData; i ++)
  6398  003212  0100               	movlb	0	; () banked
  6399  003214  6FBF               	movwf	??_eeprom_read_array& (0+255),b
  6400  003216  0E00               	movlw	0
  6401  003218  0100               	movlb	0	; () banked
  6402  00321A  0100               	movlb	0	; () banked
  6403  00321C  6FC0               	movwf	eeprom_read_array@i& (0+255),b
  6404  00321E  0100               	movlb	0	; () banked
  6405  003220  51BF               	movf	??_eeprom_read_array& (0+255),w,b
  6406  003222  D014               	goto	l5764
  6407  003224                     l5756:
  6408                           
  6409                           ; BSR set to: 0
  6410                           ;eeprom.c: 45: {
  6411                           ;eeprom.c: 46: *pData = eeprom_read(Address);
  6412  003224  0100               	movlb	0	; () banked
  6413  003226  0100               	movlb	0	; () banked
  6414  003228  51BD               	movf	eeprom_read_array@Address& (0+255),w,b
  6415  00322A  EC0A  F01B         	call	_eeprom_read
  6416  00322E  C0BB  FFD9         	movff	eeprom_read_array@pData,fsr2l
  6417  003232  C0BC  FFDA         	movff	eeprom_read_array@pData+1,fsr2h
  6418  003236  6EDF               	movwf	indf2,c
  6419                           
  6420                           ;eeprom.c: 47: pData ++;
  6421  003238  0100               	movlb	0	; () banked
  6422  00323A  0100               	movlb	0	; () banked
  6423  00323C  4BBB               	infsnz	eeprom_read_array@pData& (0+255),f,b
  6424  00323E  2BBC               	incf	(eeprom_read_array@pData+1)& (0+255),f,b
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;eeprom.c: 48: Address ++;
  6428  003240  0100               	movlb	0	; () banked
  6429  003242  0100               	movlb	0	; () banked
  6430  003244  2BBD               	incf	eeprom_read_array@Address& (0+255),f,b
  6431                           
  6432                           ; BSR set to: 0
  6433  003246  0100               	movlb	0	; () banked
  6434  003248  0100               	movlb	0	; () banked
  6435  00324A  2BC0               	incf	eeprom_read_array@i& (0+255),f,b
  6436  00324C                     l5764:
  6437                           
  6438                           ; BSR set to: 0
  6439  00324C  0100               	movlb	0	; () banked
  6440  00324E  0100               	movlb	0	; () banked
  6441  003250  51BE               	movf	eeprom_read_array@NbData& (0+255),w,b
  6442  003252  0100               	movlb	0	; () banked
  6443  003254  0100               	movlb	0	; () banked
  6444  003256  5DC0               	subwf	eeprom_read_array@i& (0+255),w,b
  6445  003258  B0D8               	btfsc	status,0,c
  6446                           
  6447                           ; BSR set to: 0
  6448                           
  6449                           ; BSR set to: 0
  6450  00325A  0012               	return	
  6451  00325C  FFFF               	dw	65535	; assembler added errata NOP
  6452  00325E  D7E2               	goto	l5756
  6453  003260  FFFF               	dw	65535	; errata NOP
  6454  003262                     __end_of_eeprom_read_array:
  6455                           	opt stack 0
  6456                           tblptru	equ	0xFF8
  6457                           tblptrh	equ	0xFF7
  6458                           tblptrl	equ	0xFF6
  6459                           tablat	equ	0xFF5
  6460                           prodh	equ	0xFF4
  6461                           prodl	equ	0xFF3
  6462                           intcon	equ	0xFF2
  6463                           intcon2	equ	0xFF1
  6464                           postinc0	equ	0xFEE
  6465                           wreg	equ	0xFE8
  6466                           postdec1	equ	0xFE5
  6467                           fsr1l	equ	0xFE1
  6468                           indf2	equ	0xFDF
  6469                           postinc2	equ	0xFDE
  6470                           postdec2	equ	0xFDD
  6471                           fsr2h	equ	0xFDA
  6472                           fsr2l	equ	0xFD9
  6473                           status	equ	0xFD8
  6474                           
  6475 ;; *************** function _eeprom_read *****************
  6476 ;; Defined at:
  6477 ;;		line 3 in file "eeprom.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;  Address         1    wreg     unsigned char 
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;  Address         1    0[BANK0 ] unsigned char 
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  1    wreg      unsigned char 
  6484 ;; Registers used:
  6485 ;;		wreg, status,2
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6491 ;;      Params:         0       0       0       0       0       0       0
  6492 ;;      Locals:         0       1       0       0       0       0       0
  6493 ;;      Temps:          0       0       0       0       0       0       0
  6494 ;;      Totals:         0       1       0       0       0       0       0
  6495 ;;Total ram usage:        1 bytes
  6496 ;; Hardware stack levels used:    1
  6497 ;; Hardware stack levels required when called:    3
  6498 ;; This function calls:
  6499 ;;		Nothing
  6500 ;; This function is called by:
  6501 ;;		_eeprom_read_array
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           	psect	text25
  6506  003614                     __ptext25:
  6507                           	opt stack 0
  6508  003614                     _eeprom_read:
  6509                           	opt stack 24
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;incstack = 0
  6513  003614  FFFF               	dw	65535
  6514                           
  6515                           ;eeprom_read@Address stored from wreg
  6516  003616  CFE8 F0BA          	movff	wreg,eeprom_read@Address
  6517                           
  6518                           ;eeprom.c: 5: EEADR = Address;
  6519  00361A  C0BA  FFA9         	movff	eeprom_read@Address,4009	;volatile
  6520                           
  6521                           ;eeprom.c: 7: EEPGD = 0;
  6522  00361E  9EA6               	bcf	4006,7,c	;volatile
  6523                           
  6524                           ;eeprom.c: 8: CFGS = 0;
  6525  003620  9CA6               	bcf	4006,6,c	;volatile
  6526                           
  6527                           ;eeprom.c: 9: RD = 1;
  6528  003622  80A6               	bsf	4006,0,c	;volatile
  6529                           
  6530                           ;eeprom.c: 11: __nop();
  6531  003624  F000               	nop	
  6532                           
  6533                           ;eeprom.c: 12: __nop();
  6534  003626  F000               	nop	
  6535                           
  6536                           ;eeprom.c: 14: return EEDATA;
  6537  003628  50A8               	movf	4008,w,c	;volatile
  6538  00362A  0012               	return	
  6539  00362C  FFFF               	dw	65535	; errata NOP
  6540  00362E                     __end_of_eeprom_read:
  6541                           	opt stack 0
  6542                           tblptru	equ	0xFF8
  6543                           tblptrh	equ	0xFF7
  6544                           tblptrl	equ	0xFF6
  6545                           tablat	equ	0xFF5
  6546                           prodh	equ	0xFF4
  6547                           prodl	equ	0xFF3
  6548                           intcon	equ	0xFF2
  6549                           intcon2	equ	0xFF1
  6550                           postinc0	equ	0xFEE
  6551                           wreg	equ	0xFE8
  6552                           postdec1	equ	0xFE5
  6553                           fsr1l	equ	0xFE1
  6554                           indf2	equ	0xFDF
  6555                           postinc2	equ	0xFDE
  6556                           postdec2	equ	0xFDD
  6557                           fsr2h	equ	0xFDA
  6558                           fsr2l	equ	0xFD9
  6559                           status	equ	0xFD8
  6560                           
  6561 ;; *************** function _cf_check *****************
  6562 ;; Defined at:
  6563 ;;		line 79 in file "config.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;		None
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;  valid           1   19[BANK0 ] unsigned char 
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  1    wreg      unsigned char 
  6570 ;; Registers used:
  6571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6577 ;;      Params:         0       0       0       0       0       0       0
  6578 ;;      Locals:         0       1       0       0       0       0       0
  6579 ;;      Temps:          0       1       0       0       0       0       0
  6580 ;;      Totals:         0       2       0       0       0       0       0
  6581 ;;Total ram usage:        2 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; Hardware stack levels required when called:    5
  6584 ;; This function calls:
  6585 ;;		_cf_checkout
  6586 ;;		_cf_checkrange
  6587 ;;		_cf_checksum
  6588 ;; This function is called by:
  6589 ;;		_cf_check_and_display
  6590 ;;		_cf_rcv
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           	psect	text26
  6595  00347A                     __ptext26:
  6596                           	opt stack 0
  6597  00347A                     _cf_check:
  6598                           	opt stack 23
  6599                           
  6600                           ;incstack = 0
  6601  00347A  FFFF               	dw	65535
  6602                           
  6603                           ;config.c: 81: unsigned char valid = 0;
  6604  00347C  0100               	movlb	0	; () banked
  6605  00347E  6FCC               	movwf	??_cf_check& (0+255),b
  6606  003480  0E00               	movlw	0
  6607  003482  0100               	movlb	0	; () banked
  6608  003484  0100               	movlb	0	; () banked
  6609  003486  6FCD               	movwf	cf_check@valid& (0+255),b
  6610  003488  0100               	movlb	0	; () banked
  6611  00348A  51CC               	movf	??_cf_check& (0+255),w,b
  6612                           
  6613                           ; BSR set to: 0
  6614                           ;config.c: 83: if (cf_checksum() && cf_checkout() && cf_checkrange())
  6615  00348C  ECEF  F005         	call	_cf_checksum	;wreg free
  6616  003490  A0D8               	btfss	status,0,c
  6617  003492  D010               	goto	l5788
  6618  003494  EC53  F011         	call	_cf_checkout	;wreg free
  6619  003498  A0D8               	btfss	status,0,c
  6620  00349A  D00C               	goto	l5788
  6621  00349C  EC84  F017         	call	_cf_checkrange	;wreg free
  6622  0034A0  A0D8               	btfss	status,0,c
  6623  0034A2  D008               	goto	l5788
  6624                           
  6625                           ;config.c: 84: {
  6626                           ;config.c: 85: valid = 1;
  6627  0034A4  0100               	movlb	0	; () banked
  6628  0034A6  6FCC               	movwf	??_cf_check& (0+255),b
  6629  0034A8  0E01               	movlw	1
  6630  0034AA  0100               	movlb	0	; () banked
  6631  0034AC  0100               	movlb	0	; () banked
  6632  0034AE  6FCD               	movwf	cf_check@valid& (0+255),b
  6633  0034B0  0100               	movlb	0	; () banked
  6634  0034B2  51CC               	movf	??_cf_check& (0+255),w,b
  6635  0034B4                     l5788:
  6636                           
  6637                           ;config.c: 86: }
  6638                           ;config.c: 88: return valid;
  6639  0034B4  0100               	movlb	0	; () banked
  6640  0034B6  0100               	movlb	0	; () banked
  6641  0034B8  51CD               	movf	cf_check@valid& (0+255),w,b
  6642                           
  6643                           ; BSR set to: 0
  6644                           
  6645                           ; BSR set to: 0
  6646  0034BA  0012               	return	
  6647  0034BC  FFFF               	dw	65535	; errata NOP
  6648  0034BE                     __end_of_cf_check:
  6649                           	opt stack 0
  6650                           tblptru	equ	0xFF8
  6651                           tblptrh	equ	0xFF7
  6652                           tblptrl	equ	0xFF6
  6653                           tablat	equ	0xFF5
  6654                           prodh	equ	0xFF4
  6655                           prodl	equ	0xFF3
  6656                           intcon	equ	0xFF2
  6657                           intcon2	equ	0xFF1
  6658                           postinc0	equ	0xFEE
  6659                           wreg	equ	0xFE8
  6660                           postdec1	equ	0xFE5
  6661                           fsr1l	equ	0xFE1
  6662                           indf2	equ	0xFDF
  6663                           postinc2	equ	0xFDE
  6664                           postdec2	equ	0xFDD
  6665                           fsr2h	equ	0xFDA
  6666                           fsr2l	equ	0xFD9
  6667                           status	equ	0xFD8
  6668                           
  6669 ;; *************** function _cf_checksum *****************
  6670 ;; Defined at:
  6671 ;;		line 4 in file "config.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;		None
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  calcul          4   14[BANK0 ] unsigned long 
  6676 ;;  i               1   13[BANK0 ] unsigned char 
  6677 ;;  valid           1   12[BANK0 ] unsigned char 
  6678 ;; Return value:  Size  Location     Type
  6679 ;;		None               void
  6680 ;; Registers used:
  6681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6687 ;;      Params:         0       0       0       0       0       0       0
  6688 ;;      Locals:         0       6       0       0       0       0       0
  6689 ;;      Temps:          0      12       0       0       0       0       0
  6690 ;;      Totals:         0      18       0       0       0       0       0
  6691 ;;Total ram usage:       18 bytes
  6692 ;; Hardware stack levels used:    1
  6693 ;; Hardware stack levels required when called:    3
  6694 ;; This function calls:
  6695 ;;		Nothing
  6696 ;; This function is called by:
  6697 ;;		_cf_check
  6698 ;; This function uses a non-reentrant model
  6699 ;;
  6700                           
  6701                           	psect	text27
  6702  000BDE                     __ptext27:
  6703                           	opt stack 0
  6704  000BDE                     _cf_checksum:
  6705                           	opt stack 24
  6706                           
  6707                           ; BSR set to: 0
  6708                           ;incstack = 0
  6709  000BDE  FFFF               	dw	65535
  6710                           
  6711                           ;config.c: 6: unsigned long calcul;
  6712                           ;config.c: 7: unsigned char i, valid = 0;
  6713  000BE0  0100               	movlb	0	; () banked
  6714  000BE2  6FBA               	movwf	??_cf_checksum& (0+255),b
  6715  000BE4  0E00               	movlw	0
  6716  000BE6  0100               	movlb	0	; () banked
  6717  000BE8  0100               	movlb	0	; () banked
  6718  000BEA  6FC6               	movwf	cf_checksum@valid& (0+255),b
  6719  000BEC  0100               	movlb	0	; () banked
  6720  000BEE  51BA               	movf	??_cf_checksum& (0+255),w,b
  6721                           
  6722                           ;config.c: 9: for (i = 0, calcul = 0; i < 32; i ++)
  6723  000BF0  0100               	movlb	0	; () banked
  6724  000BF2  6FBA               	movwf	??_cf_checksum& (0+255),b
  6725  000BF4  0E00               	movlw	0
  6726  000BF6  0100               	movlb	0	; () banked
  6727  000BF8  0100               	movlb	0	; () banked
  6728  000BFA  6FC7               	movwf	cf_checksum@i& (0+255),b
  6729  000BFC  0100               	movlb	0	; () banked
  6730  000BFE  51BA               	movf	??_cf_checksum& (0+255),w,b
  6731                           
  6732                           ; BSR set to: 0
  6733  000C00  0E00               	movlw	0
  6734  000C02  0100               	movlb	0	; () banked
  6735  000C04  0100               	movlb	0	; () banked
  6736  000C06  6FC8               	movwf	cf_checksum@calcul& (0+255),b
  6737  000C08  0E00               	movlw	0
  6738  000C0A  0100               	movlb	0	; () banked
  6739  000C0C  6FC9               	movwf	(cf_checksum@calcul+1)& (0+255),b
  6740  000C0E  0E00               	movlw	0
  6741  000C10  0100               	movlb	0	; () banked
  6742  000C12  6FCA               	movwf	(cf_checksum@calcul+2)& (0+255),b
  6743  000C14  0E00               	movlw	0
  6744  000C16  0100               	movlb	0	; () banked
  6745  000C18  6FCB               	movwf	(cf_checksum@calcul+3)& (0+255),b
  6746  000C1A  D046               	goto	L39
  6747  000C1C                     l5472:
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;config.c: 10: {
  6751                           ;config.c: 11: calcul += (unsigned long) ((unsigned short) (Cf.Data[i*3+1] << 8) + Cf.Da
      +                          ta[i*3+2]);
  6752  000C1C  0100               	movlb	0	; () banked
  6753  000C1E  0100               	movlb	0	; () banked
  6754  000C20  51C7               	movf	cf_checksum@i& (0+255),w,b
  6755  000C22  0D03               	mullw	3
  6756  000C24  0E01               	movlw	1
  6757  000C26  26F3               	addwf	prodl,f,c
  6758  000C28  0E00               	movlw	0
  6759  000C2A  22F4               	addwfc	prodh,f,c
  6760  000C2C  0101               	movlb	1	; () banked
  6761  000C2E  0E00               	movlw	low _Cf	;volatile
  6762  000C30  24F3               	addwf	prodl,w,c
  6763  000C32  6ED9               	movwf	fsr2l,c
  6764  000C34  0101               	movlb	1	; () banked
  6765  000C36  0E01               	movlw	high _Cf	;volatile
  6766  000C38  20F4               	addwfc	prodh,w,c
  6767  000C3A  6EDA               	movwf	fsr2h,c
  6768  000C3C  50DF               	movf	indf2,w,c
  6769  000C3E  0100               	movlb	0	; () banked
  6770  000C40  6FBA               	movwf	??_cf_checksum& (0+255),b
  6771  000C42  0100               	movlb	0	; () banked
  6772  000C44  51BA               	movf	??_cf_checksum& (0+255),w,b
  6773  000C46  0100               	movlb	0	; () banked
  6774  000C48  6FBC               	movwf	(??_cf_checksum+2)& (0+255),b
  6775  000C4A  6BBB               	clrf	(??_cf_checksum+1)& (0+255),b
  6776  000C4C  0100               	movlb	0	; () banked
  6777  000C4E  0100               	movlb	0	; () banked
  6778  000C50  51C7               	movf	cf_checksum@i& (0+255),w,b
  6779  000C52  0D03               	mullw	3
  6780  000C54  0E02               	movlw	2
  6781  000C56  26F3               	addwf	prodl,f,c
  6782  000C58  0E00               	movlw	0
  6783  000C5A  22F4               	addwfc	prodh,f,c
  6784  000C5C  0101               	movlb	1	; () banked
  6785  000C5E  0E00               	movlw	low _Cf	;volatile
  6786  000C60  24F3               	addwf	prodl,w,c
  6787  000C62  6ED9               	movwf	fsr2l,c
  6788  000C64  0101               	movlb	1	; () banked
  6789  000C66  0E01               	movlw	high _Cf	;volatile
  6790  000C68  20F4               	addwfc	prodh,w,c
  6791  000C6A  6EDA               	movwf	fsr2h,c
  6792  000C6C  50DF               	movf	indf2,w,c
  6793  000C6E  0100               	movlb	0	; () banked
  6794  000C70  6FBD               	movwf	(??_cf_checksum+3)& (0+255),b
  6795  000C72  0100               	movlb	0	; () banked
  6796  000C74  51BD               	movf	(??_cf_checksum+3)& (0+255),w,b
  6797  000C76  0100               	movlb	0	; () banked
  6798  000C78  27BB               	addwf	(??_cf_checksum+1)& (0+255),f,b
  6799  000C7A  0E00               	movlw	0
  6800  000C7C  23BC               	addwfc	(??_cf_checksum+2)& (0+255),f,b
  6801  000C7E  0100               	movlb	0	; () banked
  6802  000C80  51BB               	movf	(??_cf_checksum+1)& (0+255),w,b
  6803  000C82  0100               	movlb	0	; () banked
  6804  000C84  0100               	movlb	0	; () banked
  6805  000C86  27C8               	addwf	cf_checksum@calcul& (0+255),f,b
  6806  000C88  0100               	movlb	0	; () banked
  6807  000C8A  51BC               	movf	(??_cf_checksum+2)& (0+255),w,b
  6808  000C8C  0100               	movlb	0	; () banked
  6809  000C8E  0100               	movlb	0	; () banked
  6810  000C90  23C9               	addwfc	(cf_checksum@calcul+1)& (0+255),f,b
  6811  000C92  0E00               	movlw	0
  6812  000C94  0100               	movlb	0	; () banked
  6813  000C96  0100               	movlb	0	; () banked
  6814  000C98  23CA               	addwfc	(cf_checksum@calcul+2)& (0+255),f,b
  6815  000C9A  0E00               	movlw	0
  6816  000C9C  0100               	movlb	0	; () banked
  6817  000C9E  0100               	movlb	0	; () banked
  6818  000CA0  23CB               	addwfc	(cf_checksum@calcul+3)& (0+255),f,b
  6819                           
  6820                           ; BSR set to: 0
  6821  000CA2  0100               	movlb	0	; () banked
  6822  000CA4  0100               	movlb	0	; () banked
  6823  000CA6  2BC7               	incf	cf_checksum@i& (0+255),f,b
  6824  000CA8                     L39:
  6825                           
  6826                           ; BSR set to: 0
  6827  000CA8  0E1F               	movlw	31
  6828  000CAA  0100               	movlb	0	; () banked
  6829  000CAC  0100               	movlb	0	; () banked
  6830  000CAE  65C7               	cpfsgt	cf_checksum@i& (0+255),b
  6831  000CB0  D7B5               	goto	l5472
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;config.c: 12: }
  6835                           ;config.c: 14: if ( (((calcul >> 24) & 0x000000FF) == Cf.Data[97])
  6836                           ;config.c: 15: && (((calcul >> 16) & 0x000000FF) == Cf.Data[98])
  6837                           ;config.c: 16: && (((calcul >> 8) & 0x000000FF) == Cf.Data[99])
  6838                           ;config.c: 17: && ((calcul & 0x000000FF) == Cf.Data[100]))
  6839                           
  6840                           ; BSR set to: 0
  6841  000CB2  0101               	movlb	1	; () banked
  6842  000CB4  C161  F0BA         	movff	_Cf+97,??_cf_checksum	;volatile
  6843  000CB8  0100               	movlb	0	; () banked
  6844  000CBA  6BBB               	clrf	(??_cf_checksum+1)& (0+255),b
  6845  000CBC  6BBC               	clrf	(??_cf_checksum+2)& (0+255),b
  6846  000CBE  6BBD               	clrf	(??_cf_checksum+3)& (0+255),b
  6847  000CC0  0100               	movlb	0	; () banked
  6848  000CC2  C0C8  F0BE         	movff	cf_checksum@calcul,??_cf_checksum+4
  6849  000CC6  0100               	movlb	0	; () banked
  6850  000CC8  C0C9  F0BF         	movff	cf_checksum@calcul+1,??_cf_checksum+5
  6851  000CCC  0100               	movlb	0	; () banked
  6852  000CCE  C0CA  F0C0         	movff	cf_checksum@calcul+2,??_cf_checksum+6
  6853  000CD2  0100               	movlb	0	; () banked
  6854  000CD4  C0CB  F0C1         	movff	cf_checksum@calcul+3,??_cf_checksum+7
  6855  000CD8  0E19               	movlw	25
  6856  000CDA  D006               	goto	u4430
  6857  000CDC                     u4435:
  6858  000CDC  0100               	movlb	0	; () banked
  6859  000CDE  90D8               	bcf	status,0,c
  6860  000CE0  33C1               	rrcf	(??_cf_checksum+7)& (0+255),f,b
  6861  000CE2  33C0               	rrcf	(??_cf_checksum+6)& (0+255),f,b
  6862  000CE4  33BF               	rrcf	(??_cf_checksum+5)& (0+255),f,b
  6863  000CE6  33BE               	rrcf	(??_cf_checksum+4)& (0+255),f,b
  6864  000CE8                     u4430:
  6865  000CE8  2EE8               	decfsz	wreg,f,c
  6866  000CEA  D7F8               	goto	u4435
  6867  000CEC  0EFF               	movlw	255
  6868  000CEE  0100               	movlb	0	; () banked
  6869  000CF0  15BE               	andwf	(??_cf_checksum+4)& (0+255),w,b
  6870  000CF2  0100               	movlb	0	; () banked
  6871  000CF4  6FC2               	movwf	(??_cf_checksum+8)& (0+255),b
  6872  000CF6  0E00               	movlw	0
  6873  000CF8  0100               	movlb	0	; () banked
  6874  000CFA  15BF               	andwf	(??_cf_checksum+5)& (0+255),w,b
  6875  000CFC  0100               	movlb	0	; () banked
  6876  000CFE  6FC3               	movwf	(??_cf_checksum+9)& (0+255),b
  6877  000D00  0E00               	movlw	0
  6878  000D02  0100               	movlb	0	; () banked
  6879  000D04  15C0               	andwf	(??_cf_checksum+6)& (0+255),w,b
  6880  000D06  0100               	movlb	0	; () banked
  6881  000D08  6FC4               	movwf	(??_cf_checksum+10)& (0+255),b
  6882  000D0A  0E00               	movlw	0
  6883  000D0C  0100               	movlb	0	; () banked
  6884  000D0E  15C1               	andwf	(??_cf_checksum+7)& (0+255),w,b
  6885  000D10  0100               	movlb	0	; () banked
  6886  000D12  6FC5               	movwf	(??_cf_checksum+11)& (0+255),b
  6887  000D14  0100               	movlb	0	; () banked
  6888  000D16  51BD               	movf	(??_cf_checksum+3)& (0+255),w,b
  6889  000D18  0100               	movlb	0	; () banked
  6890  000D1A  19C5               	xorwf	(??_cf_checksum+11)& (0+255),w,b
  6891  000D1C  E10E               	bnz	u4445
  6892  000D1E  0100               	movlb	0	; () banked
  6893  000D20  51BC               	movf	(??_cf_checksum+2)& (0+255),w,b
  6894  000D22  0100               	movlb	0	; () banked
  6895  000D24  19C4               	xorwf	(??_cf_checksum+10)& (0+255),w,b
  6896  000D26  E109               	bnz	u4445
  6897  000D28  0100               	movlb	0	; () banked
  6898  000D2A  51BB               	movf	(??_cf_checksum+1)& (0+255),w,b
  6899  000D2C  0100               	movlb	0	; () banked
  6900  000D2E  19C3               	xorwf	(??_cf_checksum+9)& (0+255),w,b
  6901  000D30  E104               	bnz	u4445
  6902  000D32  0100               	movlb	0	; () banked
  6903  000D34  51BA               	movf	??_cf_checksum& (0+255),w,b
  6904  000D36  0100               	movlb	0	; () banked
  6905  000D38  19C2               	xorwf	(??_cf_checksum+8)& (0+255),w,b
  6906  000D3A                     u4445:
  6907  000D3A  A4D8               	btfss	status,2,c
  6908  000D3C  D0C6               	goto	l5488
  6909                           
  6910                           ; BSR set to: 0
  6911  000D3E  0101               	movlb	1	; () banked
  6912  000D40  C162  F0BA         	movff	_Cf+98,??_cf_checksum	;volatile
  6913  000D44  0100               	movlb	0	; () banked
  6914  000D46  6BBB               	clrf	(??_cf_checksum+1)& (0+255),b
  6915  000D48  6BBC               	clrf	(??_cf_checksum+2)& (0+255),b
  6916  000D4A  6BBD               	clrf	(??_cf_checksum+3)& (0+255),b
  6917  000D4C  0100               	movlb	0	; () banked
  6918  000D4E  C0C8  F0BE         	movff	cf_checksum@calcul,??_cf_checksum+4
  6919  000D52  0100               	movlb	0	; () banked
  6920  000D54  C0C9  F0BF         	movff	cf_checksum@calcul+1,??_cf_checksum+5
  6921  000D58  0100               	movlb	0	; () banked
  6922  000D5A  C0CA  F0C0         	movff	cf_checksum@calcul+2,??_cf_checksum+6
  6923  000D5E  0100               	movlb	0	; () banked
  6924  000D60  C0CB  F0C1         	movff	cf_checksum@calcul+3,??_cf_checksum+7
  6925  000D64  0E11               	movlw	17
  6926  000D66  D006               	goto	u4450
  6927  000D68                     u4455:
  6928  000D68  0100               	movlb	0	; () banked
  6929  000D6A  90D8               	bcf	status,0,c
  6930  000D6C  33C1               	rrcf	(??_cf_checksum+7)& (0+255),f,b
  6931  000D6E  33C0               	rrcf	(??_cf_checksum+6)& (0+255),f,b
  6932  000D70  33BF               	rrcf	(??_cf_checksum+5)& (0+255),f,b
  6933  000D72  33BE               	rrcf	(??_cf_checksum+4)& (0+255),f,b
  6934  000D74                     u4450:
  6935  000D74  2EE8               	decfsz	wreg,f,c
  6936  000D76  D7F8               	goto	u4455
  6937  000D78  0EFF               	movlw	255
  6938  000D7A  0100               	movlb	0	; () banked
  6939  000D7C  15BE               	andwf	(??_cf_checksum+4)& (0+255),w,b
  6940  000D7E  0100               	movlb	0	; () banked
  6941  000D80  6FC2               	movwf	(??_cf_checksum+8)& (0+255),b
  6942  000D82  0E00               	movlw	0
  6943  000D84  0100               	movlb	0	; () banked
  6944  000D86  15BF               	andwf	(??_cf_checksum+5)& (0+255),w,b
  6945  000D88  0100               	movlb	0	; () banked
  6946  000D8A  6FC3               	movwf	(??_cf_checksum+9)& (0+255),b
  6947  000D8C  0E00               	movlw	0
  6948  000D8E  0100               	movlb	0	; () banked
  6949  000D90  15C0               	andwf	(??_cf_checksum+6)& (0+255),w,b
  6950  000D92  0100               	movlb	0	; () banked
  6951  000D94  6FC4               	movwf	(??_cf_checksum+10)& (0+255),b
  6952  000D96  0E00               	movlw	0
  6953  000D98  0100               	movlb	0	; () banked
  6954  000D9A  15C1               	andwf	(??_cf_checksum+7)& (0+255),w,b
  6955  000D9C  0100               	movlb	0	; () banked
  6956  000D9E  6FC5               	movwf	(??_cf_checksum+11)& (0+255),b
  6957  000DA0  0100               	movlb	0	; () banked
  6958  000DA2  51BD               	movf	(??_cf_checksum+3)& (0+255),w,b
  6959  000DA4  0100               	movlb	0	; () banked
  6960  000DA6  19C5               	xorwf	(??_cf_checksum+11)& (0+255),w,b
  6961  000DA8  E10E               	bnz	u4465
  6962  000DAA  0100               	movlb	0	; () banked
  6963  000DAC  51BC               	movf	(??_cf_checksum+2)& (0+255),w,b
  6964  000DAE  0100               	movlb	0	; () banked
  6965  000DB0  19C4               	xorwf	(??_cf_checksum+10)& (0+255),w,b
  6966  000DB2  E109               	bnz	u4465
  6967  000DB4  0100               	movlb	0	; () banked
  6968  000DB6  51BB               	movf	(??_cf_checksum+1)& (0+255),w,b
  6969  000DB8  0100               	movlb	0	; () banked
  6970  000DBA  19C3               	xorwf	(??_cf_checksum+9)& (0+255),w,b
  6971  000DBC  E104               	bnz	u4465
  6972  000DBE  0100               	movlb	0	; () banked
  6973  000DC0  51BA               	movf	??_cf_checksum& (0+255),w,b
  6974  000DC2  0100               	movlb	0	; () banked
  6975  000DC4  19C2               	xorwf	(??_cf_checksum+8)& (0+255),w,b
  6976  000DC6                     u4465:
  6977  000DC6  A4D8               	btfss	status,2,c
  6978  000DC8  D080               	goto	l5488
  6979                           
  6980                           ; BSR set to: 0
  6981  000DCA  0101               	movlb	1	; () banked
  6982  000DCC  C163  F0BA         	movff	_Cf+99,??_cf_checksum	;volatile
  6983  000DD0  0100               	movlb	0	; () banked
  6984  000DD2  6BBB               	clrf	(??_cf_checksum+1)& (0+255),b
  6985  000DD4  6BBC               	clrf	(??_cf_checksum+2)& (0+255),b
  6986  000DD6  6BBD               	clrf	(??_cf_checksum+3)& (0+255),b
  6987  000DD8  0EFF               	movlw	255
  6988  000DDA  0100               	movlb	0	; () banked
  6989  000DDC  C0C8  F0BE         	movff	cf_checksum@calcul,??_cf_checksum+4
  6990  000DE0  0100               	movlb	0	; () banked
  6991  000DE2  C0C9  F0BF         	movff	cf_checksum@calcul+1,??_cf_checksum+5
  6992  000DE6  0100               	movlb	0	; () banked
  6993  000DE8  C0CA  F0C0         	movff	cf_checksum@calcul+2,??_cf_checksum+6
  6994  000DEC  0100               	movlb	0	; () banked
  6995  000DEE  C0CB  F0C1         	movff	cf_checksum@calcul+3,??_cf_checksum+7
  6996  000DF2  C0BF  F0BE         	movff	??_cf_checksum+5,??_cf_checksum+4
  6997  000DF6  C0C0  F0BF         	movff	??_cf_checksum+6,??_cf_checksum+5
  6998  000DFA  C0C1  F0C0         	movff	??_cf_checksum+7,??_cf_checksum+6
  6999  000DFE  0100               	movlb	0	; () banked
  7000  000E00  6BC1               	clrf	(??_cf_checksum+7)& (0+255),b
  7001  000E02  0100               	movlb	0	; () banked
  7002  000E04  15BE               	andwf	(??_cf_checksum+4)& (0+255),w,b
  7003  000E06  0100               	movlb	0	; () banked
  7004  000E08  6FC2               	movwf	(??_cf_checksum+8)& (0+255),b
  7005  000E0A  0E00               	movlw	0
  7006  000E0C  0100               	movlb	0	; () banked
  7007  000E0E  15BF               	andwf	(??_cf_checksum+5)& (0+255),w,b
  7008  000E10  0100               	movlb	0	; () banked
  7009  000E12  6FC3               	movwf	(??_cf_checksum+9)& (0+255),b
  7010  000E14  0E00               	movlw	0
  7011  000E16  0100               	movlb	0	; () banked
  7012  000E18  15C0               	andwf	(??_cf_checksum+6)& (0+255),w,b
  7013  000E1A  0100               	movlb	0	; () banked
  7014  000E1C  6FC4               	movwf	(??_cf_checksum+10)& (0+255),b
  7015  000E1E  0E00               	movlw	0
  7016  000E20  0100               	movlb	0	; () banked
  7017  000E22  15C1               	andwf	(??_cf_checksum+7)& (0+255),w,b
  7018  000E24  0100               	movlb	0	; () banked
  7019  000E26  6FC5               	movwf	(??_cf_checksum+11)& (0+255),b
  7020  000E28  0100               	movlb	0	; () banked
  7021  000E2A  51BD               	movf	(??_cf_checksum+3)& (0+255),w,b
  7022  000E2C  0100               	movlb	0	; () banked
  7023  000E2E  19C5               	xorwf	(??_cf_checksum+11)& (0+255),w,b
  7024  000E30  E10E               	bnz	u4475
  7025  000E32  0100               	movlb	0	; () banked
  7026  000E34  51BC               	movf	(??_cf_checksum+2)& (0+255),w,b
  7027  000E36  0100               	movlb	0	; () banked
  7028  000E38  19C4               	xorwf	(??_cf_checksum+10)& (0+255),w,b
  7029  000E3A  E109               	bnz	u4475
  7030  000E3C  0100               	movlb	0	; () banked
  7031  000E3E  51BB               	movf	(??_cf_checksum+1)& (0+255),w,b
  7032  000E40  0100               	movlb	0	; () banked
  7033  000E42  19C3               	xorwf	(??_cf_checksum+9)& (0+255),w,b
  7034  000E44  E104               	bnz	u4475
  7035  000E46  0100               	movlb	0	; () banked
  7036  000E48  51BA               	movf	??_cf_checksum& (0+255),w,b
  7037  000E4A  0100               	movlb	0	; () banked
  7038  000E4C  19C2               	xorwf	(??_cf_checksum+8)& (0+255),w,b
  7039  000E4E                     u4475:
  7040  000E4E  A4D8               	btfss	status,2,c
  7041  000E50  D03C               	goto	l5488
  7042                           
  7043                           ; BSR set to: 0
  7044  000E52  0101               	movlb	1	; () banked
  7045  000E54  C164  F0BA         	movff	_Cf+100,??_cf_checksum	;volatile
  7046  000E58  0100               	movlb	0	; () banked
  7047  000E5A  6BBB               	clrf	(??_cf_checksum+1)& (0+255),b
  7048  000E5C  6BBC               	clrf	(??_cf_checksum+2)& (0+255),b
  7049  000E5E  6BBD               	clrf	(??_cf_checksum+3)& (0+255),b
  7050  000E60  0EFF               	movlw	255
  7051  000E62  0100               	movlb	0	; () banked
  7052  000E64  0100               	movlb	0	; () banked
  7053  000E66  15C8               	andwf	cf_checksum@calcul& (0+255),w,b
  7054  000E68  0100               	movlb	0	; () banked
  7055  000E6A  6FBE               	movwf	(??_cf_checksum+4)& (0+255),b
  7056  000E6C  0E00               	movlw	0
  7057  000E6E  0100               	movlb	0	; () banked
  7058  000E70  0100               	movlb	0	; () banked
  7059  000E72  15C9               	andwf	(cf_checksum@calcul+1)& (0+255),w,b
  7060  000E74  0100               	movlb	0	; () banked
  7061  000E76  6FBF               	movwf	(??_cf_checksum+5)& (0+255),b
  7062  000E78  0E00               	movlw	0
  7063  000E7A  0100               	movlb	0	; () banked
  7064  000E7C  0100               	movlb	0	; () banked
  7065  000E7E  15CA               	andwf	(cf_checksum@calcul+2)& (0+255),w,b
  7066  000E80  0100               	movlb	0	; () banked
  7067  000E82  6FC0               	movwf	(??_cf_checksum+6)& (0+255),b
  7068  000E84  0E00               	movlw	0
  7069  000E86  0100               	movlb	0	; () banked
  7070  000E88  0100               	movlb	0	; () banked
  7071  000E8A  15CB               	andwf	(cf_checksum@calcul+3)& (0+255),w,b
  7072  000E8C  0100               	movlb	0	; () banked
  7073  000E8E  6FC1               	movwf	(??_cf_checksum+7)& (0+255),b
  7074  000E90  0100               	movlb	0	; () banked
  7075  000E92  51BD               	movf	(??_cf_checksum+3)& (0+255),w,b
  7076  000E94  0100               	movlb	0	; () banked
  7077  000E96  19C1               	xorwf	(??_cf_checksum+7)& (0+255),w,b
  7078  000E98  E10E               	bnz	u4485
  7079  000E9A  0100               	movlb	0	; () banked
  7080  000E9C  51BC               	movf	(??_cf_checksum+2)& (0+255),w,b
  7081  000E9E  0100               	movlb	0	; () banked
  7082  000EA0  19C0               	xorwf	(??_cf_checksum+6)& (0+255),w,b
  7083  000EA2  E109               	bnz	u4485
  7084  000EA4  0100               	movlb	0	; () banked
  7085  000EA6  51BB               	movf	(??_cf_checksum+1)& (0+255),w,b
  7086  000EA8  0100               	movlb	0	; () banked
  7087  000EAA  19BF               	xorwf	(??_cf_checksum+5)& (0+255),w,b
  7088  000EAC  E104               	bnz	u4485
  7089  000EAE  0100               	movlb	0	; () banked
  7090  000EB0  51BA               	movf	??_cf_checksum& (0+255),w,b
  7091  000EB2  0100               	movlb	0	; () banked
  7092  000EB4  19BE               	xorwf	(??_cf_checksum+4)& (0+255),w,b
  7093  000EB6                     u4485:
  7094  000EB6  A4D8               	btfss	status,2,c
  7095  000EB8  D008               	goto	l5488
  7096                           
  7097                           ; BSR set to: 0
  7098                           ;config.c: 18: {
  7099                           ;config.c: 19: valid = 1;
  7100  000EBA  0100               	movlb	0	; () banked
  7101  000EBC  6FBA               	movwf	??_cf_checksum& (0+255),b
  7102  000EBE  0E01               	movlw	1
  7103  000EC0  0100               	movlb	0	; () banked
  7104  000EC2  0100               	movlb	0	; () banked
  7105  000EC4  6FC6               	movwf	cf_checksum@valid& (0+255),b
  7106  000EC6  0100               	movlb	0	; () banked
  7107  000EC8  51BA               	movf	??_cf_checksum& (0+255),w,b
  7108  000ECA                     l5488:
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;config.c: 20: }
  7112                           ;config.c: 22: if ((Cf.Data[97] == 0) && (Cf.Data[98] == 0) && (Cf.Data[99] == 0) && (Cf
      +                          .Data[100] == 0))
  7113  000ECA  0101               	movlb	1	; () banked
  7114  000ECC  0101               	movlb	1	; () banked
  7115  000ECE  6761               	tstfsz	(_Cf+97)& (0+255),b	;volatile
  7116  000ED0  D00D               	goto	l5498
  7117                           
  7118                           ; BSR set to: 1
  7119  000ED2  0101               	movlb	1	; () banked
  7120  000ED4  0101               	movlb	1	; () banked
  7121  000ED6  6762               	tstfsz	(_Cf+98)& (0+255),b	;volatile
  7122  000ED8  D009               	goto	l5498
  7123                           
  7124                           ; BSR set to: 1
  7125  000EDA  0101               	movlb	1	; () banked
  7126  000EDC  0101               	movlb	1	; () banked
  7127  000EDE  6763               	tstfsz	(_Cf+99)& (0+255),b	;volatile
  7128  000EE0  D005               	goto	l5498
  7129                           
  7130                           ; BSR set to: 1
  7131  000EE2  0101               	movlb	1	; () banked
  7132  000EE4  0101               	movlb	1	; () banked
  7133  000EE6  6764               	tstfsz	(_Cf+100)& (0+255),b	;volatile
  7134  000EE8  D001               	goto	l5498
  7135                           
  7136                           ; BSR set to: 1
  7137                           ;config.c: 23: {
  7138                           ;config.c: 24: Micro.Mod.P_00 = 1;
  7139  000EEA  8257               	bsf	_Micro+5,1,c
  7140  000EEC                     l5498:
  7141                           
  7142                           ; BSR set to: 1
  7143                           ;config.c: 25: }
  7144                           ;config.c: 27: if (calcul > 0x0000FFFF) {Cf.IsLong = 1;}
  7145  000EEC  0E00               	movlw	0
  7146  000EEE  0100               	movlb	0	; () banked
  7147  000EF0  0100               	movlb	0	; () banked
  7148  000EF2  5DC8               	subwf	cf_checksum@calcul& (0+255),w,b
  7149  000EF4  0E00               	movlw	0
  7150  000EF6  0100               	movlb	0	; () banked
  7151  000EF8  59C9               	subwfb	(cf_checksum@calcul+1)& (0+255),w,b
  7152  000EFA  0E01               	movlw	1
  7153  000EFC  0100               	movlb	0	; () banked
  7154  000EFE  59CA               	subwfb	(cf_checksum@calcul+2)& (0+255),w,b
  7155  000F00  0E00               	movlw	0
  7156  000F02  0100               	movlb	0	; () banked
  7157  000F04  0100               	movlb	0	; () banked
  7158  000F06  59CB               	subwfb	(cf_checksum@calcul+3)& (0+255),w,b
  7159  000F08  A0D8               	btfss	status,0,c
  7160  000F0A  D003               	goto	l5502
  7161                           
  7162                           ; BSR set to: 0
  7163  000F0C  0101               	movlb	1	; () banked
  7164  000F0E  0101               	movlb	1	; () banked
  7165  000F10  816A               	bsf	(_Cf+106)& (0+255),0,b	;volatile
  7166  000F12                     l5502:
  7167                           
  7168                           ;config.c: 29: return valid;
  7169  000F12  C0C6  F0BA         	movff	cf_checksum@valid,??_cf_checksum
  7170  000F16  0100               	movlb	0	; () banked
  7171  000F18  31BA               	rrcf	??_cf_checksum& (0+255),w,b
  7172                           
  7173                           ; BSR set to: 0
  7174                           
  7175                           ; BSR set to: 0
  7176  000F1A  0012               	return	
  7177  000F1C  FFFF               	dw	65535	; errata NOP
  7178  000F1E                     __end_of_cf_checksum:
  7179                           	opt stack 0
  7180                           tblptru	equ	0xFF8
  7181                           tblptrh	equ	0xFF7
  7182                           tblptrl	equ	0xFF6
  7183                           tablat	equ	0xFF5
  7184                           prodh	equ	0xFF4
  7185                           prodl	equ	0xFF3
  7186                           intcon	equ	0xFF2
  7187                           intcon2	equ	0xFF1
  7188                           postinc0	equ	0xFEE
  7189                           wreg	equ	0xFE8
  7190                           postdec1	equ	0xFE5
  7191                           fsr1l	equ	0xFE1
  7192                           indf2	equ	0xFDF
  7193                           postinc2	equ	0xFDE
  7194                           postdec2	equ	0xFDD
  7195                           fsr2h	equ	0xFDA
  7196                           fsr2l	equ	0xFD9
  7197                           status	equ	0xFD8
  7198                           
  7199 ;; *************** function _cf_checkrange *****************
  7200 ;; Defined at:
  7201 ;;		line 65 in file "config.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;		None
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;  i               1    2[BANK0 ] unsigned char 
  7206 ;;  valid           1    1[BANK0 ] unsigned char 
  7207 ;; Return value:  Size  Location     Type
  7208 ;;		None               void
  7209 ;; Registers used:
  7210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7216 ;;      Params:         0       0       0       0       0       0       0
  7217 ;;      Locals:         0       2       0       0       0       0       0
  7218 ;;      Temps:          0       1       0       0       0       0       0
  7219 ;;      Totals:         0       3       0       0       0       0       0
  7220 ;;Total ram usage:        3 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; Hardware stack levels required when called:    3
  7223 ;; This function calls:
  7224 ;;		Nothing
  7225 ;; This function is called by:
  7226 ;;		_cf_check
  7227 ;; This function uses a non-reentrant model
  7228 ;;
  7229                           
  7230                           	psect	text28
  7231  002F08                     __ptext28:
  7232                           	opt stack 0
  7233  002F08                     _cf_checkrange:
  7234                           	opt stack 24
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;incstack = 0
  7238  002F08  FFFF               	dw	65535
  7239                           
  7240                           ;config.c: 67: unsigned char i, valid = 0;
  7241  002F0A  0100               	movlb	0	; () banked
  7242  002F0C  6FBA               	movwf	??_cf_checkrange& (0+255),b
  7243  002F0E  0E00               	movlw	0
  7244  002F10  0100               	movlb	0	; () banked
  7245  002F12  0100               	movlb	0	; () banked
  7246  002F14  6FBB               	movwf	cf_checkrange@valid& (0+255),b
  7247  002F16  0100               	movlb	0	; () banked
  7248  002F18  51BA               	movf	??_cf_checkrange& (0+255),w,b
  7249                           
  7250                           ;config.c: 69: for (i = 0; i < 32; i ++)
  7251  002F1A  0100               	movlb	0	; () banked
  7252  002F1C  6FBA               	movwf	??_cf_checkrange& (0+255),b
  7253  002F1E  0E00               	movlw	0
  7254  002F20  0100               	movlb	0	; () banked
  7255  002F22  0100               	movlb	0	; () banked
  7256  002F24  6FBC               	movwf	cf_checkrange@i& (0+255),b
  7257  002F26  0100               	movlb	0	; () banked
  7258  002F28  51BA               	movf	??_cf_checkrange& (0+255),w,b
  7259  002F2A  D013               	goto	L41
  7260  002F2C                     l5550:
  7261                           
  7262                           ; BSR set to: 0
  7263                           ;config.c: 70: {
  7264                           ;config.c: 71: if (Cf.Data[i*3] > 32) {return valid;}
  7265  002F2C  0100               	movlb	0	; () banked
  7266  002F2E  0100               	movlb	0	; () banked
  7267  002F30  51BC               	movf	cf_checkrange@i& (0+255),w,b
  7268  002F32  0D03               	mullw	3
  7269  002F34  0101               	movlb	1	; () banked
  7270  002F36  0E00               	movlw	low _Cf	;volatile
  7271  002F38  24F3               	addwf	prodl,w,c
  7272  002F3A  6ED9               	movwf	fsr2l,c
  7273  002F3C  0101               	movlb	1	; () banked
  7274  002F3E  0E01               	movlw	high _Cf	;volatile
  7275  002F40  20F4               	addwfc	prodh,w,c
  7276  002F42  6EDA               	movwf	fsr2h,c
  7277  002F44  0E20               	movlw	32
  7278  002F46  64DF               	cpfsgt	indf2,c
  7279  002F48  D001               	goto	l5556
  7280  002F4A  D010               	goto	L40
  7281  002F4C                     l5556:
  7282  002F4C  0100               	movlb	0	; () banked
  7283  002F4E  0100               	movlb	0	; () banked
  7284  002F50  2BBC               	incf	cf_checkrange@i& (0+255),f,b
  7285  002F52                     L41:
  7286                           
  7287                           ; BSR set to: 0
  7288  002F52  0E1F               	movlw	31
  7289  002F54  0100               	movlb	0	; () banked
  7290  002F56  0100               	movlb	0	; () banked
  7291  002F58  65BC               	cpfsgt	cf_checkrange@i& (0+255),b
  7292  002F5A  D7E8               	goto	l5550
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;config.c: 72: }
  7296                           ;config.c: 74: valid = 1;
  7297                           
  7298                           ; BSR set to: 0
  7299  002F5C  0100               	movlb	0	; () banked
  7300  002F5E  6FBA               	movwf	??_cf_checkrange& (0+255),b
  7301  002F60  0E01               	movlw	1
  7302  002F62  0100               	movlb	0	; () banked
  7303  002F64  0100               	movlb	0	; () banked
  7304  002F66  6FBB               	movwf	cf_checkrange@valid& (0+255),b
  7305  002F68  0100               	movlb	0	; () banked
  7306  002F6A  51BA               	movf	??_cf_checkrange& (0+255),w,b
  7307  002F6C                     L40:
  7308                           
  7309                           ; BSR set to: 0
  7310                           ;config.c: 76: return valid;
  7311  002F6C  C0BB  F0BA         	movff	cf_checkrange@valid,??_cf_checkrange
  7312  002F70  0100               	movlb	0	; () banked
  7313  002F72  31BA               	rrcf	??_cf_checkrange& (0+255),w,b
  7314                           
  7315                           ; BSR set to: 0
  7316                           
  7317                           ; BSR set to: 0
  7318  002F74  0012               	return	
  7319  002F76  FFFF               	dw	65535	; errata NOP
  7320  002F78                     __end_of_cf_checkrange:
  7321                           	opt stack 0
  7322                           tblptru	equ	0xFF8
  7323                           tblptrh	equ	0xFF7
  7324                           tblptrl	equ	0xFF6
  7325                           tablat	equ	0xFF5
  7326                           prodh	equ	0xFF4
  7327                           prodl	equ	0xFF3
  7328                           intcon	equ	0xFF2
  7329                           intcon2	equ	0xFF1
  7330                           postinc0	equ	0xFEE
  7331                           wreg	equ	0xFE8
  7332                           postdec1	equ	0xFE5
  7333                           fsr1l	equ	0xFE1
  7334                           indf2	equ	0xFDF
  7335                           postinc2	equ	0xFDE
  7336                           postdec2	equ	0xFDD
  7337                           fsr2h	equ	0xFDA
  7338                           fsr2l	equ	0xFD9
  7339                           status	equ	0xFD8
  7340                           
  7341 ;; *************** function _cf_checkout *****************
  7342 ;; Defined at:
  7343 ;;		line 33 in file "config.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;		None
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;  i               1    9[BANK0 ] unsigned char 
  7348 ;;  last_out        1    8[BANK0 ] unsigned char 
  7349 ;;  valid           1    7[BANK0 ] unsigned char 
  7350 ;; Return value:  Size  Location     Type
  7351 ;;		None               void
  7352 ;; Registers used:
  7353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7359 ;;      Params:         0       0       0       0       0       0       0
  7360 ;;      Locals:         0       3       0       0       0       0       0
  7361 ;;      Temps:          0       1       0       0       0       0       0
  7362 ;;      Totals:         0       4       0       0       0       0       0
  7363 ;;Total ram usage:        4 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; Hardware stack levels required when called:    4
  7366 ;; This function calls:
  7367 ;;		___wmul
  7368 ;; This function is called by:
  7369 ;;		_cf_check
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           	psect	text29
  7374  0022A6                     __ptext29:
  7375                           	opt stack 0
  7376  0022A6                     _cf_checkout:
  7377                           	opt stack 23
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;incstack = 0
  7381  0022A6  FFFF               	dw	65535
  7382                           
  7383                           ;config.c: 35: unsigned char i, valid = 0;
  7384  0022A8  0100               	movlb	0	; () banked
  7385  0022AA  6FC0               	movwf	??_cf_checkout& (0+255),b
  7386  0022AC  0E00               	movlw	0
  7387  0022AE  0100               	movlb	0	; () banked
  7388  0022B0  0100               	movlb	0	; () banked
  7389  0022B2  6FC1               	movwf	cf_checkout@valid& (0+255),b
  7390  0022B4  0100               	movlb	0	; () banked
  7391  0022B6  51C0               	movf	??_cf_checkout& (0+255),w,b
  7392                           
  7393                           ;config.c: 36: unsigned char last_out = 0;
  7394  0022B8  0100               	movlb	0	; () banked
  7395  0022BA  6FC0               	movwf	??_cf_checkout& (0+255),b
  7396  0022BC  0E00               	movlw	0
  7397  0022BE  0100               	movlb	0	; () banked
  7398  0022C0  0100               	movlb	0	; () banked
  7399  0022C2  6FC2               	movwf	cf_checkout@last_out& (0+255),b
  7400  0022C4  0100               	movlb	0	; () banked
  7401  0022C6  51C0               	movf	??_cf_checkout& (0+255),w,b
  7402                           
  7403                           ;config.c: 38: for (i = 0; i < 32; i ++)
  7404  0022C8  0100               	movlb	0	; () banked
  7405  0022CA  6FC0               	movwf	??_cf_checkout& (0+255),b
  7406  0022CC  0E00               	movlw	0
  7407  0022CE  0100               	movlb	0	; () banked
  7408  0022D0  0100               	movlb	0	; () banked
  7409  0022D2  6FC3               	movwf	cf_checkout@i& (0+255),b
  7410  0022D4  0100               	movlb	0	; () banked
  7411  0022D6  51C0               	movf	??_cf_checkout& (0+255),w,b
  7412  0022D8  D046               	goto	L42
  7413  0022DA                     l5512:
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;config.c: 39: {
  7417                           ;config.c: 40: if (Cf.Data[i*3] == 0)
  7418  0022DA  0100               	movlb	0	; () banked
  7419  0022DC  0100               	movlb	0	; () banked
  7420  0022DE  51C3               	movf	cf_checkout@i& (0+255),w,b
  7421  0022E0  0D03               	mullw	3
  7422  0022E2  0101               	movlb	1	; () banked
  7423  0022E4  0E00               	movlw	low _Cf	;volatile
  7424  0022E6  24F3               	addwf	prodl,w,c
  7425  0022E8  6ED9               	movwf	fsr2l,c
  7426  0022EA  0101               	movlb	1	; () banked
  7427  0022EC  0E01               	movlw	high _Cf	;volatile
  7428  0022EE  20F4               	addwfc	prodh,w,c
  7429  0022F0  6EDA               	movwf	fsr2h,c
  7430  0022F2  50DF               	movf	indf2,w,c
  7431  0022F4  A4D8               	btfss	status,2,c
  7432  0022F6  D02F               	goto	l5522
  7433                           
  7434                           ; BSR set to: 1
  7435                           ;config.c: 41: {
  7436                           ;config.c: 42: if (i == 0) {return valid;}
  7437  0022F8  0100               	movlb	0	; () banked
  7438  0022FA  0100               	movlb	0	; () banked
  7439  0022FC  67C3               	tstfsz	cf_checkout@i& (0+255),b
  7440  0022FE  D001               	goto	l417
  7441  002300  D061               	goto	l5540
  7442  002302                     l417:
  7443                           
  7444                           ; BSR set to: 0
  7445                           ;config.c: 44: if (last_out == 0)
  7446  002302  0100               	movlb	0	; () banked
  7447  002304  0100               	movlb	0	; () banked
  7448  002306  67C2               	tstfsz	cf_checkout@last_out& (0+255),b
  7449  002308  D02B               	goto	l5528
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;config.c: 45: {
  7453                           ;config.c: 46: last_out = Cf.Data[(i - 1) * 3];
  7454  00230A  0EFF               	movlw	255
  7455  00230C  0100               	movlb	0	; () banked
  7456  00230E  0100               	movlb	0	; () banked
  7457  002310  25C3               	addwf	cf_checkout@i& (0+255),w,b
  7458  002312  0100               	movlb	0	; () banked
  7459  002314  0100               	movlb	0	; () banked
  7460  002316  6FBA               	movwf	___wmul@multiplier& (0+255),b
  7461  002318  0100               	movlb	0	; () banked
  7462  00231A  0100               	movlb	0	; () banked
  7463  00231C  6BBB               	clrf	(___wmul@multiplier+1)& (0+255),b
  7464  00231E  0EFF               	movlw	255
  7465  002320  23BB               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  7466  002322  0E00               	movlw	0
  7467  002324  0100               	movlb	0	; () banked
  7468  002326  0100               	movlb	0	; () banked
  7469  002328  6FBD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7470  00232A  0E03               	movlw	3
  7471  00232C  0100               	movlb	0	; () banked
  7472  00232E  6FBC               	movwf	___wmul@multiplicand& (0+255),b
  7473  002330  ECF0  F017         	call	___wmul	;wreg free
  7474  002334  0101               	movlb	1	; () banked
  7475  002336  0E00               	movlw	low _Cf	;volatile
  7476  002338  0100               	movlb	0	; () banked
  7477  00233A  0100               	movlb	0	; () banked
  7478  00233C  25BA               	addwf	?___wmul& (0+255),w,b
  7479  00233E  6ED9               	movwf	fsr2l,c
  7480  002340  0101               	movlb	1	; () banked
  7481  002342  0E01               	movlw	high _Cf	;volatile
  7482  002344  0100               	movlb	0	; () banked
  7483  002346  0100               	movlb	0	; () banked
  7484  002348  21BB               	addwfc	(?___wmul+1)& (0+255),w,b
  7485  00234A  6EDA               	movwf	fsr2h,c
  7486  00234C  50DF               	movf	indf2,w,c
  7487  00234E  0100               	movlb	0	; () banked
  7488  002350  0100               	movlb	0	; () banked
  7489  002352  6FC2               	movwf	cf_checkout@last_out& (0+255),b
  7490  002354  D005               	goto	l5528
  7491  002356                     l5522:
  7492                           
  7493                           ;config.c: 49: else
  7494                           ;config.c: 50: {
  7495                           ;config.c: 51: if (last_out != 0) {return valid;}
  7496  002356  0100               	movlb	0	; () banked
  7497  002358  0100               	movlb	0	; () banked
  7498  00235A  51C2               	movf	cf_checkout@last_out& (0+255),w,b
  7499  00235C  A4D8               	btfss	status,2,c
  7500  00235E  D032               	goto	l5540
  7501  002360                     l5528:
  7502                           
  7503                           ; BSR set to: 0
  7504  002360  0100               	movlb	0	; () banked
  7505  002362  0100               	movlb	0	; () banked
  7506  002364  2BC3               	incf	cf_checkout@i& (0+255),f,b
  7507  002366                     L42:
  7508                           
  7509                           ; BSR set to: 0
  7510  002366  0E1F               	movlw	31
  7511  002368  0100               	movlb	0	; () banked
  7512  00236A  0100               	movlb	0	; () banked
  7513  00236C  65C3               	cpfsgt	cf_checkout@i& (0+255),b
  7514  00236E  D7B5               	goto	l5512
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;config.c: 52: }
  7518                           ;config.c: 53: }
  7519                           ;config.c: 55: if ( ((last_out != 0) && (last_out == Cf.Data[96]))
  7520                           ;config.c: 56: || ((last_out == 0) && (Cf.Data[i*3] == Cf.Data[96])))
  7521                           
  7522                           ; BSR set to: 0
  7523  002370  0100               	movlb	0	; () banked
  7524  002372  0100               	movlb	0	; () banked
  7525  002374  51C2               	movf	cf_checkout@last_out& (0+255),w,b
  7526  002376  B4D8               	btfsc	status,2,c
  7527  002378  D008               	goto	l426
  7528                           
  7529                           ; BSR set to: 0
  7530  00237A  0101               	movlb	1	; () banked
  7531  00237C  0101               	movlb	1	; () banked
  7532  00237E  5160               	movf	(_Cf+96)& (0+255),w,b	;volatile
  7533  002380  0100               	movlb	0	; () banked
  7534  002382  0100               	movlb	0	; () banked
  7535  002384  19C2               	xorwf	cf_checkout@last_out& (0+255),w,b
  7536  002386  B4D8               	btfsc	status,2,c
  7537  002388  D015               	goto	l5538
  7538  00238A                     l426:
  7539                           
  7540                           ; BSR set to: 0
  7541  00238A  0100               	movlb	0	; () banked
  7542  00238C  0100               	movlb	0	; () banked
  7543  00238E  67C2               	tstfsz	cf_checkout@last_out& (0+255),b
  7544  002390  D019               	goto	l5540
  7545                           
  7546                           ; BSR set to: 0
  7547  002392  0100               	movlb	0	; () banked
  7548  002394  0100               	movlb	0	; () banked
  7549  002396  51C3               	movf	cf_checkout@i& (0+255),w,b
  7550  002398  0D03               	mullw	3
  7551  00239A  0101               	movlb	1	; () banked
  7552  00239C  0E00               	movlw	low _Cf	;volatile
  7553  00239E  24F3               	addwf	prodl,w,c
  7554  0023A0  6ED9               	movwf	fsr2l,c
  7555  0023A2  0101               	movlb	1	; () banked
  7556  0023A4  0E01               	movlw	high _Cf	;volatile
  7557  0023A6  20F4               	addwfc	prodh,w,c
  7558  0023A8  6EDA               	movwf	fsr2h,c
  7559  0023AA  0101               	movlb	1	; () banked
  7560  0023AC  0101               	movlb	1	; () banked
  7561  0023AE  5160               	movf	(_Cf+96)& (0+255),w,b	;volatile
  7562  0023B0  62DF               	cpfseq	indf2,c
  7563  0023B2  D008               	goto	l5540
  7564  0023B4                     l5538:
  7565                           
  7566                           ;config.c: 57: {
  7567                           ;config.c: 58: valid = 1;
  7568  0023B4  0100               	movlb	0	; () banked
  7569  0023B6  6FC0               	movwf	??_cf_checkout& (0+255),b
  7570  0023B8  0E01               	movlw	1
  7571  0023BA  0100               	movlb	0	; () banked
  7572  0023BC  0100               	movlb	0	; () banked
  7573  0023BE  6FC1               	movwf	cf_checkout@valid& (0+255),b
  7574  0023C0  0100               	movlb	0	; () banked
  7575  0023C2  51C0               	movf	??_cf_checkout& (0+255),w,b
  7576  0023C4                     l5540:
  7577                           
  7578                           ;config.c: 59: }
  7579                           ;config.c: 61: return valid;
  7580  0023C4  C0C1  F0C0         	movff	cf_checkout@valid,??_cf_checkout
  7581  0023C8  0100               	movlb	0	; () banked
  7582  0023CA  31C0               	rrcf	??_cf_checkout& (0+255),w,b
  7583                           
  7584                           ; BSR set to: 0
  7585                           
  7586                           ; BSR set to: 0
  7587  0023CC  0012               	return	
  7588  0023CE  FFFF               	dw	65535	; errata NOP
  7589  0023D0                     __end_of_cf_checkout:
  7590                           	opt stack 0
  7591                           tblptru	equ	0xFF8
  7592                           tblptrh	equ	0xFF7
  7593                           tblptrl	equ	0xFF6
  7594                           tablat	equ	0xFF5
  7595                           prodh	equ	0xFF4
  7596                           prodl	equ	0xFF3
  7597                           intcon	equ	0xFF2
  7598                           intcon2	equ	0xFF1
  7599                           postinc0	equ	0xFEE
  7600                           wreg	equ	0xFE8
  7601                           postdec1	equ	0xFE5
  7602                           fsr1l	equ	0xFE1
  7603                           indf2	equ	0xFDF
  7604                           postinc2	equ	0xFDE
  7605                           postdec2	equ	0xFDD
  7606                           fsr2h	equ	0xFDA
  7607                           fsr2l	equ	0xFD9
  7608                           status	equ	0xFD8
  7609                           
  7610 ;; *************** function ___wmul *****************
  7611 ;; Defined at:
  7612 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\wmul.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7615 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7616 ;; Auto vars:     Size  Location     Type
  7617 ;;  product         2    4[BANK0 ] unsigned int 
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  2    0[BANK0 ] unsigned int 
  7620 ;; Registers used:
  7621 ;;		wreg, status,2, status,0, prodl, prodh
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/0
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7627 ;;      Params:         0       4       0       0       0       0       0
  7628 ;;      Locals:         0       2       0       0       0       0       0
  7629 ;;      Temps:          0       0       0       0       0       0       0
  7630 ;;      Totals:         0       6       0       0       0       0       0
  7631 ;;Total ram usage:        6 bytes
  7632 ;; Hardware stack levels used:    1
  7633 ;; Hardware stack levels required when called:    3
  7634 ;; This function calls:
  7635 ;;		Nothing
  7636 ;; This function is called by:
  7637 ;;		_cf_checkout
  7638 ;;		_DecToStr
  7639 ;;		_delay_s
  7640 ;; This function uses a non-reentrant model
  7641 ;;
  7642                           
  7643                           	psect	text30
  7644  002FE0                     __ptext30:
  7645                           	opt stack 0
  7646  002FE0                     ___wmul:
  7647                           	opt stack 24
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;incstack = 0
  7651  002FE0  FFFF               	dw	65535
  7652  002FE2  0100               	movlb	0	; () banked
  7653  002FE4  0100               	movlb	0	; () banked
  7654  002FE6  51BA               	movf	___wmul@multiplier& (0+255),w,b
  7655  002FE8  0100               	movlb	0	; () banked
  7656  002FEA  0100               	movlb	0	; () banked
  7657  002FEC  03BC               	mulwf	___wmul@multiplicand& (0+255),b
  7658  002FEE  CFF3 F0BE          	movff	prodl,___wmul@product
  7659  002FF2  CFF4 F0BF          	movff	prodh,___wmul@product+1
  7660  002FF6  0100               	movlb	0	; () banked
  7661  002FF8  0100               	movlb	0	; () banked
  7662  002FFA  51BA               	movf	___wmul@multiplier& (0+255),w,b
  7663  002FFC  0100               	movlb	0	; () banked
  7664  002FFE  0100               	movlb	0	; () banked
  7665  003000  03BD               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7666  003002  CFF3 FFF4          	movff	prodl,prodh
  7667  003006  6AF3               	clrf	prodl,c
  7668  003008  50F3               	movf	prodl,w,c
  7669  00300A  0100               	movlb	0	; () banked
  7670  00300C  0100               	movlb	0	; () banked
  7671  00300E  27BE               	addwf	___wmul@product& (0+255),f,b
  7672  003010  50F4               	movf	prodh,w,c
  7673  003012  0100               	movlb	0	; () banked
  7674  003014  0100               	movlb	0	; () banked
  7675  003016  23BF               	addwfc	(___wmul@product+1)& (0+255),f,b
  7676  003018  0100               	movlb	0	; () banked
  7677  00301A  0100               	movlb	0	; () banked
  7678  00301C  51BB               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7679  00301E  0100               	movlb	0	; () banked
  7680  003020  0100               	movlb	0	; () banked
  7681  003022  03BC               	mulwf	___wmul@multiplicand& (0+255),b
  7682  003024  CFF3 FFF4          	movff	prodl,prodh
  7683  003028  6AF3               	clrf	prodl,c
  7684  00302A  50F3               	movf	prodl,w,c
  7685  00302C  0100               	movlb	0	; () banked
  7686  00302E  0100               	movlb	0	; () banked
  7687  003030  27BE               	addwf	___wmul@product& (0+255),f,b
  7688  003032  50F4               	movf	prodh,w,c
  7689  003034  0100               	movlb	0	; () banked
  7690  003036  0100               	movlb	0	; () banked
  7691  003038  23BF               	addwfc	(___wmul@product+1)& (0+255),f,b
  7692                           
  7693                           ; BSR set to: 0
  7694  00303A  C0BE  F0BA         	movff	___wmul@product,?___wmul
  7695  00303E  C0BF  F0BB         	movff	___wmul@product+1,?___wmul+1
  7696                           
  7697                           ; BSR set to: 0
  7698                           
  7699                           ; BSR set to: 0
  7700  003042  0012               	return	
  7701  003044  FFFF               	dw	65535	; errata NOP
  7702  003046                     __end_of___wmul:
  7703                           	opt stack 0
  7704                           tblptru	equ	0xFF8
  7705                           tblptrh	equ	0xFF7
  7706                           tblptrl	equ	0xFF6
  7707                           tablat	equ	0xFF5
  7708                           prodh	equ	0xFF4
  7709                           prodl	equ	0xFF3
  7710                           intcon	equ	0xFF2
  7711                           intcon2	equ	0xFF1
  7712                           postinc0	equ	0xFEE
  7713                           wreg	equ	0xFE8
  7714                           postdec1	equ	0xFE5
  7715                           fsr1l	equ	0xFE1
  7716                           indf2	equ	0xFDF
  7717                           postinc2	equ	0xFDE
  7718                           postdec2	equ	0xFDD
  7719                           fsr2h	equ	0xFDA
  7720                           fsr2l	equ	0xFD9
  7721                           status	equ	0xFD8
  7722                           
  7723 ;; *************** function _HexToAscii *****************
  7724 ;; Defined at:
  7725 ;;		line 28 in file "utils.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;  Value           1    wreg     unsigned char 
  7728 ;; Auto vars:     Size  Location     Type
  7729 ;;  Value           1    1[BANK0 ] unsigned char 
  7730 ;;  character       1    0[BANK0 ] unsigned char 
  7731 ;; Return value:  Size  Location     Type
  7732 ;;                  1    wreg      unsigned char 
  7733 ;; Registers used:
  7734 ;;		wreg, status,2, status,0
  7735 ;; Tracked objects:
  7736 ;;		On entry : 0/0
  7737 ;;		On exit  : 0/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7740 ;;      Params:         0       0       0       0       0       0       0
  7741 ;;      Locals:         0       2       0       0       0       0       0
  7742 ;;      Temps:          0       0       0       0       0       0       0
  7743 ;;      Totals:         0       2       0       0       0       0       0
  7744 ;;Total ram usage:        2 bytes
  7745 ;; Hardware stack levels used:    1
  7746 ;; Hardware stack levels required when called:    3
  7747 ;; This function calls:
  7748 ;;		Nothing
  7749 ;; This function is called by:
  7750 ;;		_cf_check_and_display
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text31
  7755  0034FC                     __ptext31:
  7756                           	opt stack 0
  7757  0034FC                     _HexToAscii:
  7758                           	opt stack 26
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;incstack = 0
  7762  0034FC  FFFF               	dw	65535
  7763                           
  7764                           ;HexToAscii@Value stored from wreg
  7765  0034FE  CFE8 F0BB          	movff	wreg,HexToAscii@Value
  7766                           
  7767                           ;utils.c: 30: char character;
  7768                           ;utils.c: 32: if (Value < 10)
  7769  003502  0E0A               	movlw	10
  7770  003504  0100               	movlb	0	; () banked
  7771  003506  0100               	movlb	0	; () banked
  7772  003508  5DBB               	subwf	HexToAscii@Value& (0+255),w,b
  7773  00350A  B0D8               	btfsc	status,0,c
  7774  00350C  D005               	goto	l6002
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;utils.c: 33: {
  7778                           ;utils.c: 34: character = Value + 0x30;
  7779  00350E  0100               	movlb	0	; () banked
  7780  003510  0100               	movlb	0	; () banked
  7781  003512  51BB               	movf	HexToAscii@Value& (0+255),w,b
  7782  003514  0F30               	addlw	48
  7783  003516  D004               	goto	L43
  7784  003518                     l6002:
  7785                           
  7786                           ; BSR set to: 0
  7787                           ;utils.c: 36: else
  7788                           ;utils.c: 37: {
  7789                           ;utils.c: 38: character = Value - 9 + 0x40;
  7790  003518  0100               	movlb	0	; () banked
  7791  00351A  0100               	movlb	0	; () banked
  7792  00351C  51BB               	movf	HexToAscii@Value& (0+255),w,b
  7793  00351E  0F37               	addlw	55
  7794  003520                     L43:
  7795  003520  0100               	movlb	0	; () banked
  7796  003522  0100               	movlb	0	; () banked
  7797  003524  6FBA               	movwf	HexToAscii@character& (0+255),b
  7798                           
  7799                           ; BSR set to: 0
  7800                           ;utils.c: 39: }
  7801                           ;utils.c: 41: return character;
  7802                           
  7803                           ; BSR set to: 0
  7804  003526  0100               	movlb	0	; () banked
  7805  003528  0100               	movlb	0	; () banked
  7806  00352A  51BA               	movf	HexToAscii@character& (0+255),w,b
  7807                           
  7808                           ; BSR set to: 0
  7809                           
  7810                           ; BSR set to: 0
  7811  00352C  0012               	return	
  7812  00352E  FFFF               	dw	65535	; errata NOP
  7813  003530                     __end_of_HexToAscii:
  7814                           	opt stack 0
  7815                           tblptru	equ	0xFF8
  7816                           tblptrh	equ	0xFF7
  7817                           tblptrl	equ	0xFF6
  7818                           tablat	equ	0xFF5
  7819                           prodh	equ	0xFF4
  7820                           prodl	equ	0xFF3
  7821                           intcon	equ	0xFF2
  7822                           intcon2	equ	0xFF1
  7823                           postinc0	equ	0xFEE
  7824                           wreg	equ	0xFE8
  7825                           postdec1	equ	0xFE5
  7826                           fsr1l	equ	0xFE1
  7827                           indf2	equ	0xFDF
  7828                           postinc2	equ	0xFDE
  7829                           postdec2	equ	0xFDD
  7830                           fsr2h	equ	0xFDA
  7831                           fsr2l	equ	0xFD9
  7832                           status	equ	0xFD8
  7833                           
  7834 ;; *************** function _bouton_refresh *****************
  7835 ;; Defined at:
  7836 ;;		line 11 in file "bouton.c"
  7837 ;; Parameters:    Size  Location     Type
  7838 ;;		None
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;  temp            1    4[BANK0 ] unsigned char 
  7841 ;;  i               1    5[BANK0 ] unsigned char 
  7842 ;; Return value:  Size  Location     Type
  7843 ;;		None               void
  7844 ;; Registers used:
  7845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7851 ;;      Params:         0       0       0       0       0       0       0
  7852 ;;      Locals:         0       4       0       0       0       0       0
  7853 ;;      Temps:          0       2       0       0       0       0       0
  7854 ;;      Totals:         0       6       0       0       0       0       0
  7855 ;;Total ram usage:        6 bytes
  7856 ;; Hardware stack levels used:    1
  7857 ;; Hardware stack levels required when called:    3
  7858 ;; This function calls:
  7859 ;;		Nothing
  7860 ;; This function is called by:
  7861 ;;		_main
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           	psect	text32
  7866  001188                     __ptext32:
  7867                           	opt stack 0
  7868  001188                     _bouton_refresh:
  7869                           	opt stack 27
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;incstack = 0
  7873  001188  FFFF               	dw	65535
  7874                           
  7875                           ;bouton.c: 13: unsigned char i;
  7876                           ;bouton.c: 15: for (i = 0; i < Bp_Max; i++)
  7877  00118A  0100               	movlb	0	; () banked
  7878  00118C  6FBA               	movwf	??_bouton_refresh& (0+255),b
  7879  00118E  0E00               	movlw	0
  7880  001190  0100               	movlb	0	; () banked
  7881  001192  0100               	movlb	0	; () banked
  7882  001194  6FBF               	movwf	bouton_refresh@i& (0+255),b
  7883  001196  0100               	movlb	0	; () banked
  7884  001198  51BA               	movf	??_bouton_refresh& (0+255),w,b
  7885  00119A  D109               	goto	L45
  7886  00119C                     l6322:
  7887                           
  7888                           ; BSR set to: 0
  7889  00119C  0E00               	movlw	0
  7890  00119E  B084               	btfsc	3972,0,c	;volatile
  7891  0011A0  0E01               	movlw	1
  7892  0011A2  0100               	movlb	0	; () banked
  7893  0011A4  0100               	movlb	0	; () banked
  7894  0011A6  6FBE               	movwf	bouton_refresh@temp& (0+255),b
  7895  0011A8  D024               	goto	l6334
  7896  0011AA                     l6324:
  7897                           
  7898                           ; BSR set to: 0
  7899  0011AA  0E00               	movlw	0
  7900  0011AC  B284               	btfsc	3972,1,c	;volatile
  7901  0011AE  0E01               	movlw	1
  7902  0011B0  0100               	movlb	0	; () banked
  7903  0011B2  0100               	movlb	0	; () banked
  7904  0011B4  6FBE               	movwf	bouton_refresh@temp& (0+255),b
  7905  0011B6  D01D               	goto	l6334
  7906  0011B8                     l6326:
  7907                           
  7908                           ; BSR set to: 0
  7909  0011B8  0E00               	movlw	0
  7910  0011BA  BA82               	btfsc	3970,5,c	;volatile
  7911  0011BC  0E01               	movlw	1
  7912  0011BE  0100               	movlb	0	; () banked
  7913  0011C0  0100               	movlb	0	; () banked
  7914  0011C2  6FBE               	movwf	bouton_refresh@temp& (0+255),b
  7915  0011C4  D016               	goto	l6334
  7916  0011C6                     l6328:
  7917                           
  7918                           ; BSR set to: 0
  7919  0011C6  0E00               	movlw	0
  7920  0011C8  B081               	btfsc	3969,0,c	;volatile
  7921  0011CA  0E01               	movlw	1
  7922  0011CC  0100               	movlb	0	; () banked
  7923  0011CE  0100               	movlb	0	; () banked
  7924  0011D0  6FBE               	movwf	bouton_refresh@temp& (0+255),b
  7925  0011D2  D00F               	goto	l6334
  7926  0011D4                     l6332:
  7927                           
  7928                           ; BSR set to: 0
  7929  0011D4  0100               	movlb	0	; () banked
  7930  0011D6  0100               	movlb	0	; () banked
  7931  0011D8  51BF               	movf	bouton_refresh@i& (0+255),w,b
  7932                           
  7933                           ; Switch size 1, requested type "space"
  7934                           ; Number of cases is 4, Range of values is 0 to 3
  7935                           ; switch strategies available:
  7936                           ; Name         Instructions Cycles
  7937                           ; simple_byte           13     7 (average)
  7938                           ;	Chosen strategy is simple_byte
  7939  0011DA  0A00               	xorlw	0	; case 0
  7940  0011DC  B4D8               	btfsc	status,2,c
  7941  0011DE  D7DE               	goto	l6322
  7942  0011E0  0A01               	xorlw	1	; case 1
  7943  0011E2  B4D8               	btfsc	status,2,c
  7944  0011E4  D7E2               	goto	l6324
  7945  0011E6  0A03               	xorlw	3	; case 2
  7946  0011E8  B4D8               	btfsc	status,2,c
  7947  0011EA  D7E6               	goto	l6326
  7948  0011EC  0A01               	xorlw	1	; case 3
  7949  0011EE  B4D8               	btfsc	status,2,c
  7950  0011F0  D7EA               	goto	l6328
  7951  0011F2                     l6334:
  7952                           
  7953                           ; BSR set to: 0
  7954                           ;bouton.c: 28: if (temp == Bouton[i].Memo)
  7955  0011F2  0100               	movlb	0	; () banked
  7956  0011F4  0100               	movlb	0	; () banked
  7957  0011F6  51BF               	movf	bouton_refresh@i& (0+255),w,b
  7958  0011F8  0D03               	mullw	3
  7959  0011FA  0E02               	movlw	2
  7960  0011FC  26F3               	addwf	prodl,f,c
  7961  0011FE  0E00               	movlw	0
  7962  001200  22F4               	addwfc	prodh,f,c
  7963  001202  0100               	movlb	0	; () banked
  7964  001204  0E8E               	movlw	low _Bouton
  7965  001206  24F3               	addwf	prodl,w,c
  7966  001208  6ED9               	movwf	fsr2l,c
  7967  00120A  0100               	movlb	0	; () banked
  7968  00120C  0E00               	movlw	high _Bouton
  7969  00120E  20F4               	addwfc	prodh,w,c
  7970  001210  6EDA               	movwf	fsr2h,c
  7971  001212  A0DF               	btfss	indf2,0,c
  7972  001214  D002               	goto	u5610
  7973  001216  0E01               	movlw	1
  7974  001218  D001               	goto	u5616
  7975  00121A                     u5610:
  7976  00121A  0E00               	movlw	0
  7977  00121C                     u5616:
  7978  00121C  0100               	movlb	0	; () banked
  7979  00121E  0100               	movlb	0	; () banked
  7980  001220  19BE               	xorwf	bouton_refresh@temp& (0+255),w,b
  7981  001222  A4D8               	btfss	status,2,c
  7982  001224  D098               	goto	l6350
  7983                           
  7984                           ; BSR set to: 0
  7985                           ;bouton.c: 29: {
  7986                           ;bouton.c: 30: if (Bouton[i].State != Bouton[i].Memo)
  7987  001226  0100               	movlb	0	; () banked
  7988  001228  0100               	movlb	0	; () banked
  7989  00122A  51BF               	movf	bouton_refresh@i& (0+255),w,b
  7990  00122C  0D03               	mullw	3
  7991  00122E  0E02               	movlw	2
  7992  001230  26F3               	addwf	prodl,f,c
  7993  001232  0E00               	movlw	0
  7994  001234  22F4               	addwfc	prodh,f,c
  7995  001236  0100               	movlb	0	; () banked
  7996  001238  0E8E               	movlw	low _Bouton
  7997  00123A  24F3               	addwf	prodl,w,c
  7998  00123C  6ED9               	movwf	fsr2l,c
  7999  00123E  0100               	movlb	0	; () banked
  8000  001240  0E00               	movlw	high _Bouton
  8001  001242  20F4               	addwfc	prodh,w,c
  8002  001244  6EDA               	movwf	fsr2h,c
  8003  001246  A0DF               	btfss	indf2,0,c
  8004  001248  D002               	goto	u5630
  8005  00124A  0E01               	movlw	1
  8006  00124C  D001               	goto	u5632
  8007  00124E                     u5630:
  8008  00124E  0E00               	movlw	0
  8009  001250                     u5632:
  8010  001250  0100               	movlb	0	; () banked
  8011  001252  6FBA               	movwf	??_bouton_refresh& (0+255),b
  8012  001254  0100               	movlb	0	; () banked
  8013  001256  0100               	movlb	0	; () banked
  8014  001258  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8015  00125A  0D03               	mullw	3
  8016  00125C  0E02               	movlw	2
  8017  00125E  26F3               	addwf	prodl,f,c
  8018  001260  0E00               	movlw	0
  8019  001262  22F4               	addwfc	prodh,f,c
  8020  001264  0100               	movlb	0	; () banked
  8021  001266  0E8E               	movlw	low _Bouton
  8022  001268  24F3               	addwf	prodl,w,c
  8023  00126A  6ED9               	movwf	fsr2l,c
  8024  00126C  0100               	movlb	0	; () banked
  8025  00126E  0E00               	movlw	high _Bouton
  8026  001270  20F4               	addwfc	prodh,w,c
  8027  001272  6EDA               	movwf	fsr2h,c
  8028  001274  A2DF               	btfss	indf2,1,c
  8029  001276  D002               	goto	u5640
  8030  001278  0E01               	movlw	1
  8031  00127A  D001               	goto	u5642
  8032  00127C                     u5640:
  8033  00127C  0E00               	movlw	0
  8034  00127E                     u5642:
  8035  00127E  0100               	movlb	0	; () banked
  8036  001280  1BBA               	xorwf	??_bouton_refresh& (0+255),f,b
  8037  001282  B4D8               	btfsc	status,2,c
  8038  001284  D091               	goto	l6352
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;bouton.c: 31: {
  8042                           ;bouton.c: 32: if ((((unsigned short) (Cptms - Bouton[i].Time) > (((i == Bp_Start) && (M
      +                          icro.Mods == 1)) ? 5 : 100)) ? 1 : 0))
  8043  001286  0100               	movlb	0	; () banked
  8044  001288  0100               	movlb	0	; () banked
  8045  00128A  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8046  00128C  0A03               	xorlw	3
  8047  00128E  A4D8               	btfss	status,2,c
  8048  001290  D003               	goto	l6342
  8049                           
  8050                           ; BSR set to: 0
  8051  001292  0457               	decf	_Micro+5,w,c
  8052  001294  B4D8               	btfsc	status,2,c
  8053  001296  D006               	goto	l6344
  8054  001298                     l6342:
  8055                           
  8056                           ; BSR set to: 0
  8057  001298  0E00               	movlw	0
  8058  00129A  0100               	movlb	0	; () banked
  8059  00129C  0100               	movlb	0	; () banked
  8060  00129E  6FBD               	movwf	(_bouton_refresh$2134+1)& (0+255),b
  8061  0012A0  0E64               	movlw	100
  8062  0012A2  D005               	goto	L44
  8063  0012A4                     l6344:
  8064                           
  8065                           ; BSR set to: 0
  8066  0012A4  0E00               	movlw	0
  8067  0012A6  0100               	movlb	0	; () banked
  8068  0012A8  0100               	movlb	0	; () banked
  8069  0012AA  6FBD               	movwf	(_bouton_refresh$2134+1)& (0+255),b
  8070  0012AC  0E05               	movlw	5
  8071  0012AE                     L44:
  8072  0012AE  0100               	movlb	0	; () banked
  8073  0012B0  6FBC               	movwf	_bouton_refresh$2134& (0+255),b
  8074                           
  8075                           ; BSR set to: 0
  8076                           
  8077                           ; BSR set to: 0
  8078  0012B2  0100               	movlb	0	; () banked
  8079  0012B4  0100               	movlb	0	; () banked
  8080  0012B6  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8081  0012B8  0D03               	mullw	3
  8082  0012BA  0100               	movlb	0	; () banked
  8083  0012BC  0E8E               	movlw	low _Bouton
  8084  0012BE  24F3               	addwf	prodl,w,c
  8085  0012C0  6ED9               	movwf	fsr2l,c
  8086  0012C2  0100               	movlb	0	; () banked
  8087  0012C4  0E00               	movlw	high _Bouton
  8088  0012C6  20F4               	addwfc	prodh,w,c
  8089  0012C8  6EDA               	movwf	fsr2h,c
  8090  0012CA  CFDE F0BA          	movff	postinc2,??_bouton_refresh
  8091  0012CE  CFDD F0BB          	movff	postdec2,??_bouton_refresh+1
  8092  0012D2  0100               	movlb	0	; () banked
  8093  0012D4  1FBA               	comf	??_bouton_refresh& (0+255),f,b
  8094  0012D6  1FBB               	comf	(??_bouton_refresh+1)& (0+255),f,b
  8095  0012D8  4BBA               	infsnz	??_bouton_refresh& (0+255),f,b
  8096  0012DA  2BBB               	incf	(??_bouton_refresh+1)& (0+255),f,b
  8097  0012DC  504F               	movf	_Cptms,w,c	;volatile
  8098  0012DE  0100               	movlb	0	; () banked
  8099  0012E0  27BA               	addwf	??_bouton_refresh& (0+255),f,b
  8100  0012E2  5050               	movf	_Cptms+1,w,c	;volatile
  8101  0012E4  0100               	movlb	0	; () banked
  8102  0012E6  23BB               	addwfc	(??_bouton_refresh+1)& (0+255),f,b
  8103  0012E8  0100               	movlb	0	; () banked
  8104  0012EA  51BA               	movf	??_bouton_refresh& (0+255),w,b
  8105  0012EC  0100               	movlb	0	; () banked
  8106  0012EE  0100               	movlb	0	; () banked
  8107  0012F0  5DBC               	subwf	_bouton_refresh$2134& (0+255),w,b
  8108  0012F2  0100               	movlb	0	; () banked
  8109  0012F4  51BB               	movf	(??_bouton_refresh+1)& (0+255),w,b
  8110  0012F6  0100               	movlb	0	; () banked
  8111  0012F8  0100               	movlb	0	; () banked
  8112  0012FA  59BD               	subwfb	(_bouton_refresh$2134+1)& (0+255),w,b
  8113  0012FC  B0D8               	btfsc	status,0,c
  8114  0012FE  D054               	goto	l6352
  8115                           
  8116                           ; BSR set to: 0
  8117                           ;bouton.c: 33: {
  8118                           ;bouton.c: 34: Bouton[i].State = Bouton[i].Memo;
  8119  001300  0100               	movlb	0	; () banked
  8120  001302  0100               	movlb	0	; () banked
  8121  001304  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8122  001306  0D03               	mullw	3
  8123  001308  0E02               	movlw	2
  8124  00130A  26F3               	addwf	prodl,f,c
  8125  00130C  0E00               	movlw	0
  8126  00130E  22F4               	addwfc	prodh,f,c
  8127  001310  0100               	movlb	0	; () banked
  8128  001312  0E8E               	movlw	low _Bouton
  8129  001314  24F3               	addwf	prodl,w,c
  8130  001316  6ED9               	movwf	fsr2l,c
  8131  001318  0100               	movlb	0	; () banked
  8132  00131A  0E00               	movlw	high _Bouton
  8133  00131C  20F4               	addwfc	prodh,w,c
  8134  00131E  6EDA               	movwf	fsr2h,c
  8135  001320  0100               	movlb	0	; () banked
  8136  001322  0100               	movlb	0	; () banked
  8137  001324  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8138  001326  0D03               	mullw	3
  8139  001328  0E02               	movlw	2
  8140  00132A  26F3               	addwf	prodl,f,c
  8141  00132C  0E00               	movlw	0
  8142  00132E  22F4               	addwfc	prodh,f,c
  8143  001330  0100               	movlb	0	; () banked
  8144  001332  0E8E               	movlw	low _Bouton
  8145  001334  24F3               	addwf	prodl,w,c
  8146  001336  6EE1               	movwf	fsr1l,c
  8147  001338  0100               	movlb	0	; () banked
  8148  00133A  0E00               	movlw	high _Bouton
  8149  00133C  20F4               	addwfc	prodh,w,c
  8150  00133E  6EE2               	movwf	fsr1h,c
  8151  001340  0100               	movlb	0	; () banked
  8152  001342  A0DF               	btfss	indf2,0,c
  8153  001344  D002               	bra	u5695
  8154  001346  0100               	movlb	0	; () banked
  8155  001348  82E7               	bsf	indf1,1,c
  8156  00134A                     u5695:
  8157  00134A  0100               	movlb	0	; () banked
  8158  00134C  B0DF               	btfsc	indf2,0,c
  8159  00134E  D002               	bra	u5696
  8160  001350  0100               	movlb	0	; () banked
  8161  001352  92E7               	bcf	indf1,1,c
  8162  001354                     u5696:
  8163  001354  D029               	goto	l6352
  8164  001356                     l6350:
  8165                           
  8166                           ; BSR set to: 0
  8167                           ;bouton.c: 38: else
  8168                           ;bouton.c: 39: {
  8169                           ;bouton.c: 40: Bouton[i].Memo = temp;
  8170  001356  0100               	movlb	0	; () banked
  8171  001358  0100               	movlb	0	; () banked
  8172  00135A  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8173  00135C  0D03               	mullw	3
  8174  00135E  0E02               	movlw	2
  8175  001360  26F3               	addwf	prodl,f,c
  8176  001362  0E00               	movlw	0
  8177  001364  22F4               	addwfc	prodh,f,c
  8178  001366  0100               	movlb	0	; () banked
  8179  001368  0E8E               	movlw	low _Bouton
  8180  00136A  24F3               	addwf	prodl,w,c
  8181  00136C  6ED9               	movwf	fsr2l,c
  8182  00136E  0100               	movlb	0	; () banked
  8183  001370  0E00               	movlw	high _Bouton
  8184  001372  20F4               	addwfc	prodh,w,c
  8185  001374  6EDA               	movwf	fsr2h,c
  8186  001376  0100               	movlb	0	; () banked
  8187  001378  0100               	movlb	0	; () banked
  8188  00137A  B1BE               	btfsc	bouton_refresh@temp& (0+255),0,b
  8189  00137C  D003               	bra	u5705
  8190  00137E  0100               	movlb	0	; () banked
  8191  001380  90DF               	bcf	indf2,0,c
  8192  001382  D002               	bra	u5706
  8193  001384                     u5705:
  8194  001384  0100               	movlb	0	; () banked
  8195  001386  80DF               	bsf	indf2,0,c
  8196  001388                     u5706:
  8197                           
  8198                           ;bouton.c: 41: Bouton[i].Time = Cptms;
  8199  001388  0100               	movlb	0	; () banked
  8200  00138A  0100               	movlb	0	; () banked
  8201  00138C  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8202  00138E  0D03               	mullw	3
  8203  001390  0100               	movlb	0	; () banked
  8204  001392  0E8E               	movlw	low _Bouton
  8205  001394  24F3               	addwf	prodl,w,c
  8206  001396  6ED9               	movwf	fsr2l,c
  8207  001398  0100               	movlb	0	; () banked
  8208  00139A  0E00               	movlw	high _Bouton
  8209  00139C  20F4               	addwfc	prodh,w,c
  8210  00139E  6EDA               	movwf	fsr2h,c
  8211  0013A0  C04F  FFDE         	movff	_Cptms,postinc2	;volatile
  8212  0013A4  C050  FFDD         	movff	_Cptms+1,postdec2	;volatile
  8213  0013A8                     l6352:
  8214                           
  8215                           ; BSR set to: 0
  8216  0013A8  0100               	movlb	0	; () banked
  8217  0013AA  0100               	movlb	0	; () banked
  8218  0013AC  2BBF               	incf	bouton_refresh@i& (0+255),f,b
  8219  0013AE                     L45:
  8220                           
  8221                           ; BSR set to: 0
  8222  0013AE  0E03               	movlw	3
  8223  0013B0  0100               	movlb	0	; () banked
  8224  0013B2  0100               	movlb	0	; () banked
  8225  0013B4  65BF               	cpfsgt	bouton_refresh@i& (0+255),b
  8226  0013B6  D70E               	goto	l6332
  8227                           
  8228                           ; BSR set to: 0
  8229                           
  8230                           ; BSR set to: 0
  8231  0013B8  0012               	return	
  8232  0013BA  FFFF               	dw	65535	; errata NOP
  8233  0013BC                     __end_of_bouton_refresh:
  8234                           	opt stack 0
  8235                           tblptru	equ	0xFF8
  8236                           tblptrh	equ	0xFF7
  8237                           tblptrl	equ	0xFF6
  8238                           tablat	equ	0xFF5
  8239                           prodh	equ	0xFF4
  8240                           prodl	equ	0xFF3
  8241                           intcon	equ	0xFF2
  8242                           intcon2	equ	0xFF1
  8243                           postinc0	equ	0xFEE
  8244                           wreg	equ	0xFE8
  8245                           indf1	equ	0xFE7
  8246                           postdec1	equ	0xFE5
  8247                           fsr1h	equ	0xFE2
  8248                           fsr1l	equ	0xFE1
  8249                           indf2	equ	0xFDF
  8250                           postinc2	equ	0xFDE
  8251                           postdec2	equ	0xFDD
  8252                           fsr2h	equ	0xFDA
  8253                           fsr2l	equ	0xFD9
  8254                           status	equ	0xFD8
  8255                           
  8256 ;; *************** function _bouton_init *****************
  8257 ;; Defined at:
  8258 ;;		line 3 in file "bouton.c"
  8259 ;; Parameters:    Size  Location     Type
  8260 ;;		None
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;		None
  8263 ;; Return value:  Size  Location     Type
  8264 ;;		None               void
  8265 ;; Registers used:
  8266 ;;		None
  8267 ;; Tracked objects:
  8268 ;;		On entry : 0/0
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8272 ;;      Params:         0       0       0       0       0       0       0
  8273 ;;      Locals:         0       0       0       0       0       0       0
  8274 ;;      Temps:          0       0       0       0       0       0       0
  8275 ;;      Totals:         0       0       0       0       0       0       0
  8276 ;;Total ram usage:        0 bytes
  8277 ;; Hardware stack levels used:    1
  8278 ;; Hardware stack levels required when called:    3
  8279 ;; This function calls:
  8280 ;;		Nothing
  8281 ;; This function is called by:
  8282 ;;		_main
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286                           	psect	text33
  8287  00334E                     __ptext33:
  8288                           	opt stack 0
  8289  00334E                     _bouton_init:
  8290                           	opt stack 27
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;incstack = 0
  8294  00334E  FFFF               	dw	65535
  8295                           
  8296                           ;bouton.c: 5: Bouton[Bp_On].State = PORTEbits.RE0;
  8297  003350  A084               	btfss	3972,0,c	;volatile
  8298  003352  D004               	bra	u5565
  8299  003354  0100               	movlb	0	; () banked
  8300  003356  0100               	movlb	0	; () banked
  8301  003358  8390               	bsf	(_Bouton+2)& (0+255),1,b
  8302  00335A  D003               	bra	u5567
  8303  00335C                     u5565:
  8304  00335C  0100               	movlb	0	; () banked
  8305  00335E  0100               	movlb	0	; () banked
  8306  003360  9390               	bcf	(_Bouton+2)& (0+255),1,b
  8307  003362                     u5567:
  8308                           
  8309                           ;bouton.c: 6: Bouton[Bp_IdTest].State = PORTEbits.RE1;
  8310  003362  A284               	btfss	3972,1,c	;volatile
  8311  003364  D004               	bra	u5575
  8312  003366  0100               	movlb	0	; () banked
  8313  003368  0100               	movlb	0	; () banked
  8314  00336A  8393               	bsf	(_Bouton+5)& (0+255),1,b
  8315  00336C  D003               	bra	u5577
  8316  00336E                     u5575:
  8317  00336E  0100               	movlb	0	; () banked
  8318  003370  0100               	movlb	0	; () banked
  8319  003372  9393               	bcf	(_Bouton+5)& (0+255),1,b
  8320  003374                     u5577:
  8321                           
  8322                           ;bouton.c: 7: Bouton[Comu_Test].State = PORTCbits.RC5;
  8323  003374  AA82               	btfss	3970,5,c	;volatile
  8324  003376  D004               	bra	u5585
  8325  003378  0100               	movlb	0	; () banked
  8326  00337A  0100               	movlb	0	; () banked
  8327  00337C  8396               	bsf	(_Bouton+8)& (0+255),1,b
  8328  00337E  D003               	bra	u5587
  8329  003380                     u5585:
  8330  003380  0100               	movlb	0	; () banked
  8331  003382  0100               	movlb	0	; () banked
  8332  003384  9396               	bcf	(_Bouton+8)& (0+255),1,b
  8333  003386                     u5587:
  8334                           
  8335                           ;bouton.c: 8: Bouton[Bp_Start].State = PORTBbits.RB0;
  8336  003386  A081               	btfss	3969,0,c	;volatile
  8337  003388  D004               	bra	u5595
  8338  00338A  0100               	movlb	0	; () banked
  8339  00338C  0100               	movlb	0	; () banked
  8340  00338E  8399               	bsf	(_Bouton+11)& (0+255),1,b
  8341  003390  D003               	bra	u5597
  8342  003392                     u5595:
  8343  003392  0100               	movlb	0	; () banked
  8344  003394  0100               	movlb	0	; () banked
  8345  003396  9399               	bcf	(_Bouton+11)& (0+255),1,b
  8346  003398                     u5597:
  8347                           
  8348                           ; BSR set to: 0
  8349  003398  0012               	return	
  8350  00339A  FFFF               	dw	65535	; errata NOP
  8351  00339C                     __end_of_bouton_init:
  8352                           	opt stack 0
  8353                           tblptru	equ	0xFF8
  8354                           tblptrh	equ	0xFF7
  8355                           tblptrl	equ	0xFF6
  8356                           tablat	equ	0xFF5
  8357                           prodh	equ	0xFF4
  8358                           prodl	equ	0xFF3
  8359                           intcon	equ	0xFF2
  8360                           intcon2	equ	0xFF1
  8361                           postinc0	equ	0xFEE
  8362                           wreg	equ	0xFE8
  8363                           indf1	equ	0xFE7
  8364                           postdec1	equ	0xFE5
  8365                           fsr1h	equ	0xFE2
  8366                           fsr1l	equ	0xFE1
  8367                           indf2	equ	0xFDF
  8368                           postinc2	equ	0xFDE
  8369                           postdec2	equ	0xFDD
  8370                           fsr2h	equ	0xFDA
  8371                           fsr2l	equ	0xFD9
  8372                           status	equ	0xFD8
  8373                           
  8374 ;; *************** function _armement_process *****************
  8375 ;; Defined at:
  8376 ;;		line 24 in file "armement.c"
  8377 ;; Parameters:    Size  Location     Type
  8378 ;;		None
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;  temp            2   38[BANK0 ] unsigned short 
  8381 ;; Return value:  Size  Location     Type
  8382 ;;		None               void
  8383 ;; Registers used:
  8384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8390 ;;      Params:         0       0       0       0       0       0       0
  8391 ;;      Locals:         0       2       0       0       0       0       0
  8392 ;;      Temps:          0       2       0       0       0       0       0
  8393 ;;      Totals:         0       4       0       0       0       0       0
  8394 ;;Total ram usage:        4 bytes
  8395 ;; Hardware stack levels used:    1
  8396 ;; Hardware stack levels required when called:    7
  8397 ;; This function calls:
  8398 ;;		_arm_UAlim_1A
  8399 ;;		_check_comutest
  8400 ;;		_ecran_blank
  8401 ;;		_ecran_wait
  8402 ;;		_itoa
  8403 ;; This function is called by:
  8404 ;;		_main
  8405 ;; This function uses a non-reentrant model
  8406 ;;
  8407                           
  8408                           	psect	text34
  8409  0018E4                     __ptext34:
  8410                           	opt stack 0
  8411  0018E4                     _armement_process:
  8412                           	opt stack 23
  8413                           
  8414                           ; BSR set to: 0
  8415                           ;incstack = 0
  8416  0018E4  FFFF               	dw	65535
  8417                           
  8418                           ;armement.c: 26: unsigned short temp;
  8419                           ;armement.c: 28: switch(Arm.Step)
  8420  0018E6  D0B8               	goto	l6626
  8421  0018E8                     l1032:
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;armement.c: 31: if (Bouton[Bp_On].State == 1)
  8425  0018E8  0100               	movlb	0	; () banked
  8426  0018EA  A390               	btfss	(_Bouton+2)& (0+255),1,b
  8427  0018EC  D0C4               	goto	l1046
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;armement.c: 32: {
  8431                           ;armement.c: 33: Arm.Step = 0x00;
  8432  0018EE  0100               	movlb	0	; () banked
  8433  0018F0  6FDE               	movwf	??_armement_process& (0+255),b
  8434  0018F2  0E00               	movlw	0
  8435  0018F4  D04D               	goto	L46
  8436  0018F6                     l6586:
  8437                           
  8438                           ; BSR set to: 0
  8439                           ;armement.c: 37: check_comutest(1);
  8440  0018F6  0E01               	movlw	1
  8441  0018F8  ECDE  F018         	call	_check_comutest
  8442                           
  8443                           ;armement.c: 39: temp = arm_UAlim_1A();
  8444  0018FC  ECFD  F012         	call	_arm_UAlim_1A	;wreg free
  8445  001900  0100               	movlb	0	; () banked
  8446  001902  C0D6  F0E0         	movff	?_arm_UAlim_1A,armement_process@temp
  8447  001906  0100               	movlb	0	; () banked
  8448  001908  C0D7  F0E1         	movff	?_arm_UAlim_1A+1,armement_process@temp+1
  8449                           
  8450                           ; BSR set to: 0
  8451                           ;armement.c: 41: Ecran.Digits = PrintTest;
  8452  00190C  0100               	movlb	0	; () banked
  8453  00190E  0E00               	movlw	high _PrintTest
  8454  001910  0100               	movlb	0	; () banked
  8455  001912  0100               	movlb	0	; () banked
  8456  001914  6FAF               	movwf	(_Ecran+5)& (0+255),b
  8457  001916  0100               	movlb	0	; () banked
  8458  001918  0EE5               	movlw	low _PrintTest
  8459  00191A  0100               	movlb	0	; () banked
  8460  00191C  0100               	movlb	0	; () banked
  8461  00191E  6FAE               	movwf	(_Ecran+4)& (0+255),b
  8462                           
  8463                           ; BSR set to: 0
  8464                           ;armement.c: 43: itoa(Ecran.Digits,temp,10);
  8465  001920  0100               	movlb	0	; () banked
  8466  001922  0100               	movlb	0	; () banked
  8467  001924  C0AF  F0CC         	movff	_Ecran+5,itoa@buf+1
  8468  001928  0100               	movlb	0	; () banked
  8469  00192A  0100               	movlb	0	; () banked
  8470  00192C  C0AE  F0CB         	movff	_Ecran+4,itoa@buf
  8471  001930  C0E0  F0CD         	movff	armement_process@temp,itoa@val
  8472  001934  C0E1  F0CE         	movff	armement_process@temp+1,itoa@val+1
  8473  001938  0E00               	movlw	0
  8474  00193A  0100               	movlb	0	; () banked
  8475  00193C  0100               	movlb	0	; () banked
  8476  00193E  6FD0               	movwf	(itoa@base+1)& (0+255),b
  8477  001940  0E0A               	movlw	10
  8478  001942  0100               	movlb	0	; () banked
  8479  001944  6FCF               	movwf	itoa@base& (0+255),b
  8480  001946  EC74  F016         	call	_itoa	;wreg free
  8481                           
  8482                           ;armement.c: 45: Ecran.Dot[0] = 0;
  8483  00194A  0100               	movlb	0	; () banked
  8484  00194C  6FDE               	movwf	??_armement_process& (0+255),b
  8485  00194E  0E00               	movlw	0
  8486  001950  0100               	movlb	0	; () banked
  8487  001952  0100               	movlb	0	; () banked
  8488  001954  6FB0               	movwf	(_Ecran+6)& (0+255),b
  8489  001956  0100               	movlb	0	; () banked
  8490  001958  51DE               	movf	??_armement_process& (0+255),w,b
  8491                           
  8492                           ; BSR set to: 0
  8493                           ;armement.c: 46: Ecran.Dot[1] = 1;
  8494  00195A  0100               	movlb	0	; () banked
  8495  00195C  6FDE               	movwf	??_armement_process& (0+255),b
  8496  00195E  0E01               	movlw	1
  8497  001960  0100               	movlb	0	; () banked
  8498  001962  0100               	movlb	0	; () banked
  8499  001964  6FB1               	movwf	(_Ecran+7)& (0+255),b
  8500  001966  0100               	movlb	0	; () banked
  8501  001968  51DE               	movf	??_armement_process& (0+255),w,b
  8502                           
  8503                           ; BSR set to: 0
  8504                           ;armement.c: 47: Ecran.Dot[2] = 0;
  8505  00196A  0100               	movlb	0	; () banked
  8506  00196C  6FDE               	movwf	??_armement_process& (0+255),b
  8507  00196E  0E00               	movlw	0
  8508  001970  0100               	movlb	0	; () banked
  8509  001972  0100               	movlb	0	; () banked
  8510  001974  6FB2               	movwf	(_Ecran+8)& (0+255),b
  8511  001976  0100               	movlb	0	; () banked
  8512  001978  51DE               	movf	??_armement_process& (0+255),w,b
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;armement.c: 48: Ecran.Dot[3] = 0;
  8516  00197A  0100               	movlb	0	; () banked
  8517  00197C  6FDE               	movwf	??_armement_process& (0+255),b
  8518  00197E  0E00               	movlw	0
  8519  001980  0100               	movlb	0	; () banked
  8520  001982  0100               	movlb	0	; () banked
  8521  001984  6FB3               	movwf	(_Ecran+9)& (0+255),b
  8522  001986  0100               	movlb	0	; () banked
  8523  001988  51DE               	movf	??_armement_process& (0+255),w,b
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;armement.c: 50: Arm.Step = 0x02;
  8527  00198A  0100               	movlb	0	; () banked
  8528  00198C  6FDE               	movwf	??_armement_process& (0+255),b
  8529  00198E  0E02               	movlw	2
  8530  001990                     L46:
  8531  001990  0100               	movlb	0	; () banked
  8532  001992  0100               	movlb	0	; () banked
  8533  001994  6F9A               	movwf	_Arm& (0+255),b
  8534  001996  D05D               	goto	L47
  8535  001998                     l1036:
  8536                           
  8537                           ; BSR set to: 0
  8538                           ;armement.c: 53: if (Bouton[Bp_On].State == 0)
  8539  001998  0100               	movlb	0	; () banked
  8540  00199A  B390               	btfsc	(_Bouton+2)& (0+255),1,b
  8541  00199C  D06C               	goto	l1046
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;armement.c: 54: {
  8545                           ;armement.c: 55: Arm.Time = Cptms;
  8546  00199E  C04F  F09C         	movff	_Cptms,_Arm+2	;volatile
  8547  0019A2  C050  F09D         	movff	_Cptms+1,_Arm+3	;volatile
  8548                           
  8549                           ; BSR set to: 0
  8550                           ;armement.c: 56: Arm.Step = 0x03;
  8551  0019A6  0100               	movlb	0	; () banked
  8552  0019A8  6FDE               	movwf	??_armement_process& (0+255),b
  8553  0019AA  0E03               	movlw	3
  8554  0019AC  0100               	movlb	0	; () banked
  8555  0019AE  0100               	movlb	0	; () banked
  8556  0019B0  6F9A               	movwf	_Arm& (0+255),b
  8557  0019B2  0100               	movlb	0	; () banked
  8558  0019B4  51DE               	movf	??_armement_process& (0+255),w,b
  8559                           
  8560                           ; BSR set to: 0
  8561                           ;armement.c: 58: ecran_blank();
  8562  0019B6  EC23  F018         	call	_ecran_blank	;wreg free
  8563  0019BA  D05D               	goto	l1046
  8564  0019BC                     l1038:
  8565                           
  8566                           ; BSR set to: 0
  8567                           ;armement.c: 62: if (Bouton[Bp_On].State == 1)
  8568  0019BC  0100               	movlb	0	; () banked
  8569  0019BE  A390               	btfss	(_Bouton+2)& (0+255),1,b
  8570  0019C0  D009               	goto	l1039
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;armement.c: 63: {
  8574                           ;armement.c: 64: Micro.Phase = 0x00;
  8575  0019C2  0100               	movlb	0	; () banked
  8576  0019C4  6FDE               	movwf	??_armement_process& (0+255),b
  8577  0019C6  0E00               	movlw	0
  8578  0019C8  6E54               	movwf	_Micro+2,c
  8579  0019CA  0100               	movlb	0	; () banked
  8580  0019CC  51DE               	movf	??_armement_process& (0+255),w,b
  8581                           
  8582                           ; BSR set to: 0
  8583                           ;armement.c: 66: ecran_wait();
  8584  0019CE  ECDC  F01A         	call	_ecran_wait	;wreg free
  8585                           
  8586                           ;armement.c: 67: }
  8587  0019D2  D051               	goto	l1046
  8588  0019D4                     l1039:
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;armement.c: 68: else if (Bouton[Bp_Start].State == 0)
  8592  0019D4  0100               	movlb	0	; () banked
  8593  0019D6  A399               	btfss	(_Bouton+11)& (0+255),1,b
  8594  0019D8  D04E               	goto	l1046
  8595                           
  8596                           ; BSR set to: 0
  8597                           ;armement.c: 72: else if ((((unsigned short) (Cptms - Arm.Time) > 4000) ? 1 : 0))
  8598                           
  8599                           ; BSR set to: 0
  8600                           
  8601                           ; BSR set to: 0
  8602                           ;armement.c: 69: {
  8603                           ;armement.c: 71: }
  8604  0019DA  0100               	movlb	0	; () banked
  8605  0019DC  EE20  F09C         	lfsr	2,_Arm+2
  8606  0019E0  CFDE F0DE          	movff	postinc2,??_armement_process
  8607  0019E4  CFDD F0DF          	movff	postdec2,??_armement_process+1
  8608  0019E8  0100               	movlb	0	; () banked
  8609  0019EA  1FDE               	comf	??_armement_process& (0+255),f,b
  8610  0019EC  1FDF               	comf	(??_armement_process+1)& (0+255),f,b
  8611  0019EE  4BDE               	infsnz	??_armement_process& (0+255),f,b
  8612  0019F0  2BDF               	incf	(??_armement_process+1)& (0+255),f,b
  8613  0019F2  504F               	movf	_Cptms,w,c	;volatile
  8614  0019F4  0100               	movlb	0	; () banked
  8615  0019F6  27DE               	addwf	??_armement_process& (0+255),f,b
  8616  0019F8  5050               	movf	_Cptms+1,w,c	;volatile
  8617  0019FA  0100               	movlb	0	; () banked
  8618  0019FC  23DF               	addwfc	(??_armement_process+1)& (0+255),f,b
  8619  0019FE  0EA1               	movlw	161
  8620  001A00  0100               	movlb	0	; () banked
  8621  001A02  5DDE               	subwf	??_armement_process& (0+255),w,b
  8622  001A04  0E0F               	movlw	15
  8623  001A06  59DF               	subwfb	(??_armement_process+1)& (0+255),w,b
  8624  001A08  B0D8               	btfsc	status,0,c
  8625  001A0A  D035               	goto	l1046
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;armement.c: 76: else if ((((unsigned short) (Cptms - Arm.Time) > 3000) ? 1 : 0))
  8629                           
  8630                           ; BSR set to: 0
  8631                           
  8632                           ; BSR set to: 0
  8633                           ;armement.c: 73: {
  8634                           ;armement.c: 75: }
  8635  001A0C  0100               	movlb	0	; () banked
  8636  001A0E  EE20  F09C         	lfsr	2,_Arm+2
  8637  001A12  CFDE F0DE          	movff	postinc2,??_armement_process
  8638  001A16  CFDD F0DF          	movff	postdec2,??_armement_process+1
  8639  001A1A  0100               	movlb	0	; () banked
  8640  001A1C  1FDE               	comf	??_armement_process& (0+255),f,b
  8641  001A1E  1FDF               	comf	(??_armement_process+1)& (0+255),f,b
  8642  001A20  4BDE               	infsnz	??_armement_process& (0+255),f,b
  8643  001A22  2BDF               	incf	(??_armement_process+1)& (0+255),f,b
  8644  001A24  504F               	movf	_Cptms,w,c	;volatile
  8645  001A26  0100               	movlb	0	; () banked
  8646  001A28  27DE               	addwf	??_armement_process& (0+255),f,b
  8647  001A2A  5050               	movf	_Cptms+1,w,c	;volatile
  8648  001A2C  0100               	movlb	0	; () banked
  8649  001A2E  23DF               	addwfc	(??_armement_process+1)& (0+255),f,b
  8650  001A30  0EB9               	movlw	185
  8651  001A32  0100               	movlb	0	; () banked
  8652  001A34  5DDE               	subwf	??_armement_process& (0+255),w,b
  8653  001A36  0E0B               	movlw	11
  8654  001A38  59DF               	subwfb	(??_armement_process+1)& (0+255),w,b
  8655  001A3A  A0D8               	btfss	status,0,c
  8656  001A3C  D01C               	goto	l1046
  8657                           
  8658                           ; BSR set to: 0
  8659                           ;armement.c: 77: {
  8660                           ;armement.c: 78: Micro.Phase = 0x03;
  8661  001A3E  0100               	movlb	0	; () banked
  8662  001A40  6FDE               	movwf	??_armement_process& (0+255),b
  8663  001A42  0E03               	movlw	3
  8664  001A44  6E54               	movwf	_Micro+2,c
  8665  001A46  0100               	movlb	0	; () banked
  8666  001A48  51DE               	movf	??_armement_process& (0+255),w,b
  8667                           
  8668                           ;armement.c: 79: Micro.State = 0x01;
  8669  001A4A  0100               	movlb	0	; () banked
  8670  001A4C  6FDE               	movwf	??_armement_process& (0+255),b
  8671  001A4E  0E01               	movlw	1
  8672  001A50  6E56               	movwf	_Micro+4,c
  8673  001A52                     L47:
  8674  001A52  0100               	movlb	0	; () banked
  8675  001A54  51DE               	movf	??_armement_process& (0+255),w,b
  8676  001A56  D00F               	goto	l1046
  8677  001A58                     l6626:
  8678  001A58  0100               	movlb	0	; () banked
  8679  001A5A  0100               	movlb	0	; () banked
  8680  001A5C  519A               	movf	_Arm& (0+255),w,b
  8681                           
  8682                           ; Switch size 1, requested type "space"
  8683                           ; Number of cases is 4, Range of values is 0 to 3
  8684                           ; switch strategies available:
  8685                           ; Name         Instructions Cycles
  8686                           ; simple_byte           13     7 (average)
  8687                           ;	Chosen strategy is simple_byte
  8688  001A5E  0A00               	xorlw	0	; case 0
  8689  001A60  B4D8               	btfsc	status,2,c
  8690  001A62  D749               	goto	l6586
  8691  001A64  0A01               	xorlw	1	; case 1
  8692  001A66  B4D8               	btfsc	status,2,c
  8693  001A68  D73F               	goto	l1032
  8694  001A6A  0A03               	xorlw	3	; case 2
  8695  001A6C  B4D8               	btfsc	status,2,c
  8696  001A6E  D794               	goto	l1036
  8697  001A70  0A01               	xorlw	1	; case 3
  8698  001A72  B4D8               	btfsc	status,2,c
  8699  001A74  D7A3               	goto	l1038
  8700  001A76                     l1046:
  8701  001A76  0012               	return	
  8702  001A78  FFFF               	dw	65535	; errata NOP
  8703  001A7A                     __end_of_armement_process:
  8704                           	opt stack 0
  8705                           tblptru	equ	0xFF8
  8706                           tblptrh	equ	0xFF7
  8707                           tblptrl	equ	0xFF6
  8708                           tablat	equ	0xFF5
  8709                           prodh	equ	0xFF4
  8710                           prodl	equ	0xFF3
  8711                           intcon	equ	0xFF2
  8712                           intcon2	equ	0xFF1
  8713                           postinc0	equ	0xFEE
  8714                           wreg	equ	0xFE8
  8715                           indf1	equ	0xFE7
  8716                           postdec1	equ	0xFE5
  8717                           fsr1h	equ	0xFE2
  8718                           fsr1l	equ	0xFE1
  8719                           indf2	equ	0xFDF
  8720                           postinc2	equ	0xFDE
  8721                           postdec2	equ	0xFDD
  8722                           fsr2h	equ	0xFDA
  8723                           fsr2l	equ	0xFD9
  8724                           status	equ	0xFD8
  8725                           
  8726 ;; *************** function _itoa *****************
  8727 ;; Defined at:
  8728 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\itoa.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  buf             2   17[BANK0 ] PTR unsigned char 
  8731 ;;		 -> Version(5), ErreurTir(5), Blank(5), Ecran.Digit(4), 
  8732 ;;		 -> Ecran(16), PrintTest(5), 
  8733 ;;  val             2   19[BANK0 ] int 
  8734 ;;  base            2   21[BANK0 ] int 
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;  cp              2   23[BANK0 ] PTR unsigned char 
  8737 ;;		 -> Version(5), ErreurTir(5), Blank(5), Ecran.Digit(4), 
  8738 ;;		 -> Ecran(16), PrintTest(5), 
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  2   17[BANK0 ] PTR unsigned char 
  8741 ;; Registers used:
  8742 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8748 ;;      Params:         0       6       0       0       0       0       0
  8749 ;;      Locals:         0       2       0       0       0       0       0
  8750 ;;      Temps:          0       0       0       0       0       0       0
  8751 ;;      Totals:         0       8       0       0       0       0       0
  8752 ;;Total ram usage:        8 bytes
  8753 ;; Hardware stack levels used:    1
  8754 ;; Hardware stack levels required when called:    5
  8755 ;; This function calls:
  8756 ;;		_utoa
  8757 ;; This function is called by:
  8758 ;;		_test_process
  8759 ;;		_armement_process
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           	psect	text35
  8764  002CE8                     __ptext35:
  8765                           	opt stack 0
  8766  002CE8                     _itoa:
  8767                           	opt stack 24
  8768                           
  8769                           ;incstack = 0
  8770  002CE8  FFFF               	dw	65535
  8771  002CEA  0100               	movlb	0	; () banked
  8772  002CEC  0100               	movlb	0	; () banked
  8773  002CEE  C0CC  F0D2         	movff	itoa@buf+1,itoa@cp+1
  8774  002CF2  0100               	movlb	0	; () banked
  8775  002CF4  0100               	movlb	0	; () banked
  8776  002CF6  C0CB  F0D1         	movff	itoa@buf,itoa@cp
  8777                           
  8778                           ; BSR set to: 0
  8779  002CFA  0100               	movlb	0	; () banked
  8780  002CFC  0100               	movlb	0	; () banked
  8781  002CFE  51CE               	movf	(itoa@val+1)& (0+255),w,b
  8782  002D00  0A80               	xorlw	128
  8783  002D02  6EF3               	movwf	prodl,c
  8784  002D04  0E80               	movlw	128
  8785  002D06  5CF3               	subwf	prodl,w,c
  8786  002D08  0E00               	movlw	0
  8787  002D0A  B4D8               	btfsc	status,2,c
  8788  002D0C  5DCD               	subwf	itoa@val& (0+255),w,b
  8789  002D0E  B0D8               	btfsc	status,0,c
  8790  002D10  D01F               	goto	l6110
  8791                           
  8792                           ; BSR set to: 0
  8793  002D12  0100               	movlb	0	; () banked
  8794  002D14  C0CB  FFF6         	movff	itoa@buf,tblptrl
  8795  002D18  0100               	movlb	0	; () banked
  8796  002D1A  C0CC  FFF7         	movff	itoa@buf+1,tblptrh
  8797  002D1E  6AF8               	clrf	tblptru,c
  8798  002D20  0E05               	movlw	(high __ramtop+-1)
  8799  002D22  64F7               	cpfsgt	tblptrh,c
  8800  002D24  D004               	bra	u5417
  8801  002D26  0E2D               	movlw	45
  8802  002D28  6EF5               	movwf	tablat,c
  8803  002D2A  000C               	tblwt		*
  8804  002D2C  D006               	bra	u5410
  8805  002D2E                     u5417:
  8806  002D2E  CFF6 FFE1          	movff	tblptrl,fsr1l
  8807  002D32  CFF7 FFE2          	movff	tblptrh,fsr1h
  8808  002D36  0E2D               	movlw	45
  8809  002D38  6EE7               	movwf	indf1,c
  8810  002D3A                     u5410:
  8811  002D3A  0100               	movlb	0	; () banked
  8812  002D3C  0100               	movlb	0	; () banked
  8813  002D3E  4BCB               	infsnz	itoa@buf& (0+255),f,b
  8814  002D40  2BCC               	incf	(itoa@buf+1)& (0+255),f,b
  8815                           
  8816                           ; BSR set to: 0
  8817  002D42  0100               	movlb	0	; () banked
  8818  002D44  0100               	movlb	0	; () banked
  8819  002D46  6DCD               	negf	itoa@val& (0+255),b
  8820  002D48  0100               	movlb	0	; () banked
  8821  002D4A  1FCE               	comf	(itoa@val+1)& (0+255),f,b
  8822  002D4C  B0D8               	btfsc	status,0,c
  8823  002D4E  2BCE               	incf	(itoa@val+1)& (0+255),f,b
  8824  002D50                     l6110:
  8825                           
  8826                           ; BSR set to: 0
  8827  002D50  0100               	movlb	0	; () banked
  8828  002D52  0100               	movlb	0	; () banked
  8829  002D54  C0CC  F0C3         	movff	itoa@buf+1,utoa@buf+1
  8830  002D58  0100               	movlb	0	; () banked
  8831  002D5A  0100               	movlb	0	; () banked
  8832  002D5C  C0CB  F0C2         	movff	itoa@buf,utoa@buf
  8833  002D60  C0CD  F0C4         	movff	itoa@val,utoa@val
  8834  002D64  C0CE  F0C5         	movff	itoa@val+1,utoa@val+1
  8835  002D68  C0CF  F0C6         	movff	itoa@base,utoa@base
  8836  002D6C  C0D0  F0C7         	movff	itoa@base+1,utoa@base+1
  8837  002D70  ECE8  F011         	call	_utoa	;wreg free
  8838                           
  8839                           ;	Return value of _itoa is never used
  8840  002D74  0012               	return	
  8841  002D76  FFFF               	dw	65535	; errata NOP
  8842  002D78                     __end_of_itoa:
  8843                           	opt stack 0
  8844                           tblptru	equ	0xFF8
  8845                           tblptrh	equ	0xFF7
  8846                           tblptrl	equ	0xFF6
  8847                           tablat	equ	0xFF5
  8848                           prodh	equ	0xFF4
  8849                           prodl	equ	0xFF3
  8850                           intcon	equ	0xFF2
  8851                           intcon2	equ	0xFF1
  8852                           postinc0	equ	0xFEE
  8853                           wreg	equ	0xFE8
  8854                           indf1	equ	0xFE7
  8855                           postdec1	equ	0xFE5
  8856                           fsr1h	equ	0xFE2
  8857                           fsr1l	equ	0xFE1
  8858                           indf2	equ	0xFDF
  8859                           postinc2	equ	0xFDE
  8860                           postdec2	equ	0xFDD
  8861                           fsr2h	equ	0xFDA
  8862                           fsr2l	equ	0xFD9
  8863                           status	equ	0xFD8
  8864                           
  8865 ;; *************** function _utoa *****************
  8866 ;; Defined at:
  8867 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\itoa.c"
  8868 ;; Parameters:    Size  Location     Type
  8869 ;;  buf             2    8[BANK0 ] PTR unsigned char 
  8870 ;;		 -> Version(5), ErreurTir(5), Blank(5), Ecran.Digit(4), 
  8871 ;;		 -> Ecran(16), PrintTest(5), 
  8872 ;;  val             2   10[BANK0 ] unsigned int 
  8873 ;;  base            2   12[BANK0 ] int 
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;  v               2   14[BANK0 ] unsigned int 
  8876 ;;  c               1   16[BANK0 ] unsigned char 
  8877 ;; Return value:  Size  Location     Type
  8878 ;;                  2    8[BANK0 ] PTR unsigned char 
  8879 ;; Registers used:
  8880 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8881 ;; Tracked objects:
  8882 ;;		On entry : 0/0
  8883 ;;		On exit  : 0/0
  8884 ;;		Unchanged: 0/0
  8885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8886 ;;      Params:         0       6       0       0       0       0       0
  8887 ;;      Locals:         0       3       0       0       0       0       0
  8888 ;;      Temps:          0       0       0       0       0       0       0
  8889 ;;      Totals:         0       9       0       0       0       0       0
  8890 ;;Total ram usage:        9 bytes
  8891 ;; Hardware stack levels used:    1
  8892 ;; Hardware stack levels required when called:    4
  8893 ;; This function calls:
  8894 ;;		___lwdiv
  8895 ;;		___lwmod
  8896 ;; This function is called by:
  8897 ;;		_itoa
  8898 ;; This function uses a non-reentrant model
  8899 ;;
  8900                           
  8901                           	psect	text36
  8902  0023D0                     __ptext36:
  8903                           	opt stack 0
  8904  0023D0                     _utoa:
  8905                           	opt stack 24
  8906                           
  8907                           ;incstack = 0
  8908  0023D0  FFFF               	dw	65535
  8909  0023D2  C0C4  F0C8         	movff	utoa@val,utoa@v
  8910  0023D6  C0C5  F0C9         	movff	utoa@val+1,utoa@v+1
  8911  0023DA                     l5924:
  8912  0023DA  C0C8  F0BA         	movff	utoa@v,___lwdiv@dividend
  8913  0023DE  C0C9  F0BB         	movff	utoa@v+1,___lwdiv@dividend+1
  8914  0023E2  C0C6  F0BC         	movff	utoa@base,___lwdiv@divisor
  8915  0023E6  C0C7  F0BD         	movff	utoa@base+1,___lwdiv@divisor+1
  8916  0023EA  EC1D  F016         	call	___lwdiv	;wreg free
  8917  0023EE  0100               	movlb	0	; () banked
  8918  0023F0  C0BA  F0C8         	movff	?___lwdiv,utoa@v
  8919  0023F4  0100               	movlb	0	; () banked
  8920  0023F6  C0BB  F0C9         	movff	?___lwdiv+1,utoa@v+1
  8921                           
  8922                           ; BSR set to: 0
  8923  0023FA  0100               	movlb	0	; () banked
  8924  0023FC  0100               	movlb	0	; () banked
  8925  0023FE  4BC2               	infsnz	utoa@buf& (0+255),f,b
  8926  002400  2BC3               	incf	(utoa@buf+1)& (0+255),f,b
  8927                           
  8928                           ; BSR set to: 0
  8929  002402  0100               	movlb	0	; () banked
  8930  002404  0100               	movlb	0	; () banked
  8931  002406  51C9               	movf	(utoa@v+1)& (0+255),w,b
  8932  002408  11C8               	iorwf	utoa@v& (0+255),w,b
  8933  00240A  A4D8               	btfss	status,2,c
  8934  00240C  D7E6               	goto	l5924
  8935                           
  8936                           ; BSR set to: 0
  8937                           
  8938                           ; BSR set to: 0
  8939  00240E  0100               	movlb	0	; () banked
  8940  002410  C0C2  FFF6         	movff	utoa@buf,tblptrl
  8941  002414  0100               	movlb	0	; () banked
  8942  002416  C0C3  FFF7         	movff	utoa@buf+1,tblptrh
  8943  00241A  6AF8               	clrf	tblptru,c
  8944  00241C  0E05               	movlw	(high __ramtop+-1)
  8945  00241E  64F7               	cpfsgt	tblptrh,c
  8946  002420  D004               	bra	u5227
  8947  002422  0E00               	movlw	0
  8948  002424  6EF5               	movwf	tablat,c
  8949  002426  000C               	tblwt		*
  8950  002428  D006               	bra	u5220
  8951  00242A                     u5227:
  8952  00242A  CFF6 FFE1          	movff	tblptrl,fsr1l
  8953  00242E  CFF7 FFE2          	movff	tblptrh,fsr1h
  8954  002432  0E00               	movlw	0
  8955  002434  6EE7               	movwf	indf1,c
  8956  002436                     u5220:
  8957  002436  0100               	movlb	0	; () banked
  8958  002438  0100               	movlb	0	; () banked
  8959  00243A  07C2               	decf	utoa@buf& (0+255),f,b
  8960  00243C  A0D8               	btfss	status,0,c
  8961  00243E  07C3               	decf	(utoa@buf+1)& (0+255),f,b
  8962  002440                     l5934:
  8963                           
  8964                           ; BSR set to: 0
  8965  002440  C0C4  F0BA         	movff	utoa@val,___lwmod@dividend
  8966  002444  C0C5  F0BB         	movff	utoa@val+1,___lwmod@dividend+1
  8967  002448  C0C6  F0BC         	movff	utoa@base,___lwmod@divisor
  8968  00244C  C0C7  F0BD         	movff	utoa@base+1,___lwmod@divisor+1
  8969  002450  ECBC  F016         	call	___lwmod	;wreg free
  8970  002454  0100               	movlb	0	; () banked
  8971  002456  0100               	movlb	0	; () banked
  8972  002458  51BA               	movf	?___lwmod& (0+255),w,b
  8973  00245A  0100               	movlb	0	; () banked
  8974  00245C  0100               	movlb	0	; () banked
  8975  00245E  6FCA               	movwf	utoa@c& (0+255),b
  8976                           
  8977                           ; BSR set to: 0
  8978  002460  C0C4  F0BA         	movff	utoa@val,___lwdiv@dividend
  8979  002464  C0C5  F0BB         	movff	utoa@val+1,___lwdiv@dividend+1
  8980  002468  C0C6  F0BC         	movff	utoa@base,___lwdiv@divisor
  8981  00246C  C0C7  F0BD         	movff	utoa@base+1,___lwdiv@divisor+1
  8982  002470  EC1D  F016         	call	___lwdiv	;wreg free
  8983  002474  0100               	movlb	0	; () banked
  8984  002476  C0BA  F0C4         	movff	?___lwdiv,utoa@val
  8985  00247A  0100               	movlb	0	; () banked
  8986  00247C  C0BB  F0C5         	movff	?___lwdiv+1,utoa@val+1
  8987                           
  8988                           ; BSR set to: 0
  8989  002480  0E09               	movlw	9
  8990  002482  0100               	movlb	0	; () banked
  8991  002484  0100               	movlb	0	; () banked
  8992  002486  65CA               	cpfsgt	utoa@c& (0+255),b
  8993  002488  D004               	goto	l1576
  8994                           
  8995                           ; BSR set to: 0
  8996  00248A  0E07               	movlw	7
  8997  00248C  0100               	movlb	0	; () banked
  8998  00248E  0100               	movlb	0	; () banked
  8999  002490  27CA               	addwf	utoa@c& (0+255),f,b
  9000  002492                     l1576:
  9001                           
  9002                           ; BSR set to: 0
  9003  002492  0E30               	movlw	48
  9004  002494  0100               	movlb	0	; () banked
  9005  002496  0100               	movlb	0	; () banked
  9006  002498  27CA               	addwf	utoa@c& (0+255),f,b
  9007                           
  9008                           ; BSR set to: 0
  9009  00249A  0100               	movlb	0	; () banked
  9010  00249C  C0C2  FFF6         	movff	utoa@buf,tblptrl
  9011  0024A0  0100               	movlb	0	; () banked
  9012  0024A2  C0C3  FFF7         	movff	utoa@buf+1,tblptrh
  9013  0024A6  6AF8               	clrf	tblptru,c
  9014  0024A8  0E05               	movlw	(high __ramtop+-1)
  9015  0024AA  64F7               	cpfsgt	tblptrh,c
  9016  0024AC  D005               	bra	u5247
  9017  0024AE  0100               	movlb	0	; () banked
  9018  0024B0  C0CA  FFF5         	movff	utoa@c,tablat
  9019  0024B4  000C               	tblwt		*
  9020  0024B6  D007               	bra	u5240
  9021  0024B8                     u5247:
  9022  0024B8  CFF6 FFE1          	movff	tblptrl,fsr1l
  9023  0024BC  CFF7 FFE2          	movff	tblptrh,fsr1h
  9024  0024C0  0100               	movlb	0	; () banked
  9025  0024C2  C0CA  FFE7         	movff	utoa@c,indf1
  9026  0024C6                     u5240:
  9027  0024C6  0100               	movlb	0	; () banked
  9028  0024C8  0100               	movlb	0	; () banked
  9029  0024CA  07C2               	decf	utoa@buf& (0+255),f,b
  9030  0024CC  A0D8               	btfss	status,0,c
  9031  0024CE  07C3               	decf	(utoa@buf+1)& (0+255),f,b
  9032                           
  9033                           ; BSR set to: 0
  9034  0024D0  0100               	movlb	0	; () banked
  9035  0024D2  0100               	movlb	0	; () banked
  9036  0024D4  51C5               	movf	(utoa@val+1)& (0+255),w,b
  9037  0024D6  11C4               	iorwf	utoa@val& (0+255),w,b
  9038  0024D8  A4D8               	btfss	status,2,c
  9039  0024DA  D7B2               	goto	l5934
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;	Return value of _utoa is never used
  9043                           
  9044                           ; BSR set to: 0
  9045  0024DC  0100               	movlb	0	; () banked
  9046  0024DE  0100               	movlb	0	; () banked
  9047  0024E0  4BC2               	infsnz	utoa@buf& (0+255),f,b
  9048  0024E2  2BC3               	incf	(utoa@buf+1)& (0+255),f,b
  9049                           
  9050                           ; BSR set to: 0
  9051                           
  9052                           ; BSR set to: 0
  9053  0024E4  0012               	return	
  9054  0024E6  FFFF               	dw	65535	; errata NOP
  9055  0024E8                     __end_of_utoa:
  9056                           	opt stack 0
  9057                           tblptru	equ	0xFF8
  9058                           tblptrh	equ	0xFF7
  9059                           tblptrl	equ	0xFF6
  9060                           tablat	equ	0xFF5
  9061                           prodh	equ	0xFF4
  9062                           prodl	equ	0xFF3
  9063                           intcon	equ	0xFF2
  9064                           intcon2	equ	0xFF1
  9065                           postinc0	equ	0xFEE
  9066                           wreg	equ	0xFE8
  9067                           indf1	equ	0xFE7
  9068                           postdec1	equ	0xFE5
  9069                           fsr1h	equ	0xFE2
  9070                           fsr1l	equ	0xFE1
  9071                           indf2	equ	0xFDF
  9072                           postinc2	equ	0xFDE
  9073                           postdec2	equ	0xFDD
  9074                           fsr2h	equ	0xFDA
  9075                           fsr2l	equ	0xFD9
  9076                           status	equ	0xFD8
  9077                           
  9078 ;; *************** function ___lwmod *****************
  9079 ;; Defined at:
  9080 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwmod.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  dividend        2    0[BANK0 ] unsigned int 
  9083 ;;  divisor         2    2[BANK0 ] unsigned int 
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;  counter         1    5[BANK0 ] unsigned char 
  9086 ;; Return value:  Size  Location     Type
  9087 ;;                  2    0[BANK0 ] unsigned int 
  9088 ;; Registers used:
  9089 ;;		wreg, status,2, status,0
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9095 ;;      Params:         0       4       0       0       0       0       0
  9096 ;;      Locals:         0       1       0       0       0       0       0
  9097 ;;      Temps:          0       1       0       0       0       0       0
  9098 ;;      Totals:         0       6       0       0       0       0       0
  9099 ;;Total ram usage:        6 bytes
  9100 ;; Hardware stack levels used:    1
  9101 ;; Hardware stack levels required when called:    3
  9102 ;; This function calls:
  9103 ;;		Nothing
  9104 ;; This function is called by:
  9105 ;;		_utoa
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109                           	psect	text37
  9110  002D78                     __ptext37:
  9111                           	opt stack 0
  9112  002D78                     ___lwmod:
  9113                           	opt stack 24
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;incstack = 0
  9117  002D78  FFFF               	dw	65535
  9118  002D7A  0100               	movlb	0	; () banked
  9119  002D7C  0100               	movlb	0	; () banked
  9120  002D7E  51BD               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9121  002D80  11BC               	iorwf	___lwmod@divisor& (0+255),w,b
  9122  002D82  B4D8               	btfsc	status,2,c
  9123  002D84  D03A               	goto	l1686
  9124                           
  9125                           ; BSR set to: 0
  9126  002D86  0100               	movlb	0	; () banked
  9127  002D88  6FBE               	movwf	??___lwmod& (0+255),b
  9128  002D8A  0E01               	movlw	1
  9129  002D8C  0100               	movlb	0	; () banked
  9130  002D8E  0100               	movlb	0	; () banked
  9131  002D90  6FBF               	movwf	___lwmod@counter& (0+255),b
  9132  002D92  0100               	movlb	0	; () banked
  9133  002D94  51BE               	movf	??___lwmod& (0+255),w,b
  9134  002D96  D009               	goto	l5692
  9135  002D98                     l5690:
  9136                           
  9137                           ; BSR set to: 0
  9138  002D98  0100               	movlb	0	; () banked
  9139  002D9A  0100               	movlb	0	; () banked
  9140  002D9C  0100               	movlb	0	; () banked
  9141  002D9E  90D8               	bcf	status,0,c
  9142  002DA0  37BC               	rlcf	___lwmod@divisor& (0+255),f,b
  9143  002DA2  37BD               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  9144  002DA4  0100               	movlb	0	; () banked
  9145  002DA6  0100               	movlb	0	; () banked
  9146  002DA8  2BBF               	incf	___lwmod@counter& (0+255),f,b
  9147  002DAA                     l5692:
  9148                           
  9149                           ; BSR set to: 0
  9150  002DAA  0100               	movlb	0	; () banked
  9151  002DAC  0100               	movlb	0	; () banked
  9152  002DAE  AFBD               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  9153  002DB0  D7F3               	goto	l5690
  9154  002DB2                     l5694:
  9155                           
  9156                           ; BSR set to: 0
  9157  002DB2  0100               	movlb	0	; () banked
  9158  002DB4  0100               	movlb	0	; () banked
  9159  002DB6  51BC               	movf	___lwmod@divisor& (0+255),w,b
  9160  002DB8  0100               	movlb	0	; () banked
  9161  002DBA  0100               	movlb	0	; () banked
  9162  002DBC  5DBA               	subwf	___lwmod@dividend& (0+255),w,b
  9163  002DBE  0100               	movlb	0	; () banked
  9164  002DC0  0100               	movlb	0	; () banked
  9165  002DC2  51BD               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9166  002DC4  0100               	movlb	0	; () banked
  9167  002DC6  0100               	movlb	0	; () banked
  9168  002DC8  59BB               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  9169  002DCA  A0D8               	btfss	status,0,c
  9170  002DCC  D00C               	goto	l5698
  9171                           
  9172                           ; BSR set to: 0
  9173  002DCE  0100               	movlb	0	; () banked
  9174  002DD0  0100               	movlb	0	; () banked
  9175  002DD2  51BC               	movf	___lwmod@divisor& (0+255),w,b
  9176  002DD4  0100               	movlb	0	; () banked
  9177  002DD6  0100               	movlb	0	; () banked
  9178  002DD8  5FBA               	subwf	___lwmod@dividend& (0+255),f,b
  9179  002DDA  0100               	movlb	0	; () banked
  9180  002DDC  0100               	movlb	0	; () banked
  9181  002DDE  51BD               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9182  002DE0  0100               	movlb	0	; () banked
  9183  002DE2  0100               	movlb	0	; () banked
  9184  002DE4  5BBB               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  9185  002DE6                     l5698:
  9186                           
  9187                           ; BSR set to: 0
  9188  002DE6  0100               	movlb	0	; () banked
  9189  002DE8  0100               	movlb	0	; () banked
  9190  002DEA  0100               	movlb	0	; () banked
  9191  002DEC  90D8               	bcf	status,0,c
  9192  002DEE  33BD               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  9193  002DF0  33BC               	rrcf	___lwmod@divisor& (0+255),f,b
  9194                           
  9195                           ; BSR set to: 0
  9196  002DF2  0100               	movlb	0	; () banked
  9197  002DF4  0100               	movlb	0	; () banked
  9198  002DF6  2FBF               	decfsz	___lwmod@counter& (0+255),f,b
  9199  002DF8  D7DC               	goto	l5694
  9200  002DFA                     l1686:
  9201                           
  9202                           ; BSR set to: 0
  9203  002DFA  C0BA  F0BA         	movff	___lwmod@dividend,?___lwmod
  9204  002DFE  C0BB  F0BB         	movff	___lwmod@dividend+1,?___lwmod+1
  9205                           
  9206                           ; BSR set to: 0
  9207  002E02  0012               	return	
  9208  002E04  FFFF               	dw	65535	; errata NOP
  9209  002E06                     __end_of___lwmod:
  9210                           	opt stack 0
  9211                           tblptru	equ	0xFF8
  9212                           tblptrh	equ	0xFF7
  9213                           tblptrl	equ	0xFF6
  9214                           tablat	equ	0xFF5
  9215                           prodh	equ	0xFF4
  9216                           prodl	equ	0xFF3
  9217                           intcon	equ	0xFF2
  9218                           intcon2	equ	0xFF1
  9219                           postinc0	equ	0xFEE
  9220                           wreg	equ	0xFE8
  9221                           indf1	equ	0xFE7
  9222                           postdec1	equ	0xFE5
  9223                           fsr1h	equ	0xFE2
  9224                           fsr1l	equ	0xFE1
  9225                           indf2	equ	0xFDF
  9226                           postinc2	equ	0xFDE
  9227                           postdec2	equ	0xFDD
  9228                           fsr2h	equ	0xFDA
  9229                           fsr2l	equ	0xFD9
  9230                           status	equ	0xFD8
  9231                           
  9232 ;; *************** function ___lwdiv *****************
  9233 ;; Defined at:
  9234 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwdiv.c"
  9235 ;; Parameters:    Size  Location     Type
  9236 ;;  dividend        2    0[BANK0 ] unsigned int 
  9237 ;;  divisor         2    2[BANK0 ] unsigned int 
  9238 ;; Auto vars:     Size  Location     Type
  9239 ;;  quotient        2    6[BANK0 ] unsigned int 
  9240 ;;  counter         1    5[BANK0 ] unsigned char 
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  2    0[BANK0 ] unsigned int 
  9243 ;; Registers used:
  9244 ;;		wreg, status,2, status,0
  9245 ;; Tracked objects:
  9246 ;;		On entry : 0/0
  9247 ;;		On exit  : 0/0
  9248 ;;		Unchanged: 0/0
  9249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9250 ;;      Params:         0       4       0       0       0       0       0
  9251 ;;      Locals:         0       3       0       0       0       0       0
  9252 ;;      Temps:          0       1       0       0       0       0       0
  9253 ;;      Totals:         0       8       0       0       0       0       0
  9254 ;;Total ram usage:        8 bytes
  9255 ;; Hardware stack levels used:    1
  9256 ;; Hardware stack levels required when called:    3
  9257 ;; This function calls:
  9258 ;;		Nothing
  9259 ;; This function is called by:
  9260 ;;		_utoa
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264                           	psect	text38
  9265  002C3A                     __ptext38:
  9266                           	opt stack 0
  9267  002C3A                     ___lwdiv:
  9268                           	opt stack 24
  9269                           
  9270                           ; BSR set to: 0
  9271                           ;incstack = 0
  9272  002C3A  FFFF               	dw	65535
  9273  002C3C  0E00               	movlw	0
  9274  002C3E  0100               	movlb	0	; () banked
  9275  002C40  0100               	movlb	0	; () banked
  9276  002C42  6FC1               	movwf	(___lwdiv@quotient+1)& (0+255),b
  9277  002C44  0E00               	movlw	0
  9278  002C46  0100               	movlb	0	; () banked
  9279  002C48  6FC0               	movwf	___lwdiv@quotient& (0+255),b
  9280                           
  9281                           ; BSR set to: 0
  9282  002C4A  0100               	movlb	0	; () banked
  9283  002C4C  0100               	movlb	0	; () banked
  9284  002C4E  51BD               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9285  002C50  11BC               	iorwf	___lwdiv@divisor& (0+255),w,b
  9286  002C52  B4D8               	btfsc	status,2,c
  9287  002C54  D043               	goto	l1676
  9288                           
  9289                           ; BSR set to: 0
  9290  002C56  0100               	movlb	0	; () banked
  9291  002C58  6FBE               	movwf	??___lwdiv& (0+255),b
  9292  002C5A  0E01               	movlw	1
  9293  002C5C  0100               	movlb	0	; () banked
  9294  002C5E  0100               	movlb	0	; () banked
  9295  002C60  6FBF               	movwf	___lwdiv@counter& (0+255),b
  9296  002C62  0100               	movlb	0	; () banked
  9297  002C64  51BE               	movf	??___lwdiv& (0+255),w,b
  9298  002C66  D009               	goto	l5672
  9299  002C68                     l5670:
  9300                           
  9301                           ; BSR set to: 0
  9302  002C68  0100               	movlb	0	; () banked
  9303  002C6A  0100               	movlb	0	; () banked
  9304  002C6C  0100               	movlb	0	; () banked
  9305  002C6E  90D8               	bcf	status,0,c
  9306  002C70  37BC               	rlcf	___lwdiv@divisor& (0+255),f,b
  9307  002C72  37BD               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  9308  002C74  0100               	movlb	0	; () banked
  9309  002C76  0100               	movlb	0	; () banked
  9310  002C78  2BBF               	incf	___lwdiv@counter& (0+255),f,b
  9311  002C7A                     l5672:
  9312                           
  9313                           ; BSR set to: 0
  9314  002C7A  0100               	movlb	0	; () banked
  9315  002C7C  0100               	movlb	0	; () banked
  9316  002C7E  AFBD               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  9317  002C80  D7F3               	goto	l5670
  9318  002C82                     l5674:
  9319                           
  9320                           ; BSR set to: 0
  9321  002C82  0100               	movlb	0	; () banked
  9322  002C84  0100               	movlb	0	; () banked
  9323  002C86  0100               	movlb	0	; () banked
  9324  002C88  90D8               	bcf	status,0,c
  9325  002C8A  37C0               	rlcf	___lwdiv@quotient& (0+255),f,b
  9326  002C8C  37C1               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  9327                           
  9328                           ; BSR set to: 0
  9329  002C8E  0100               	movlb	0	; () banked
  9330  002C90  0100               	movlb	0	; () banked
  9331  002C92  51BC               	movf	___lwdiv@divisor& (0+255),w,b
  9332  002C94  0100               	movlb	0	; () banked
  9333  002C96  0100               	movlb	0	; () banked
  9334  002C98  5DBA               	subwf	___lwdiv@dividend& (0+255),w,b
  9335  002C9A  0100               	movlb	0	; () banked
  9336  002C9C  0100               	movlb	0	; () banked
  9337  002C9E  51BD               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9338  002CA0  0100               	movlb	0	; () banked
  9339  002CA2  0100               	movlb	0	; () banked
  9340  002CA4  59BB               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  9341  002CA6  A0D8               	btfss	status,0,c
  9342  002CA8  D00F               	goto	l5682
  9343                           
  9344                           ; BSR set to: 0
  9345  002CAA  0100               	movlb	0	; () banked
  9346  002CAC  0100               	movlb	0	; () banked
  9347  002CAE  51BC               	movf	___lwdiv@divisor& (0+255),w,b
  9348  002CB0  0100               	movlb	0	; () banked
  9349  002CB2  0100               	movlb	0	; () banked
  9350  002CB4  5FBA               	subwf	___lwdiv@dividend& (0+255),f,b
  9351  002CB6  0100               	movlb	0	; () banked
  9352  002CB8  0100               	movlb	0	; () banked
  9353  002CBA  51BD               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9354  002CBC  0100               	movlb	0	; () banked
  9355  002CBE  0100               	movlb	0	; () banked
  9356  002CC0  5BBB               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  9357                           
  9358                           ; BSR set to: 0
  9359  002CC2  0100               	movlb	0	; () banked
  9360  002CC4  0100               	movlb	0	; () banked
  9361  002CC6  81C0               	bsf	___lwdiv@quotient& (0+255),0,b
  9362  002CC8                     l5682:
  9363                           
  9364                           ; BSR set to: 0
  9365  002CC8  0100               	movlb	0	; () banked
  9366  002CCA  0100               	movlb	0	; () banked
  9367  002CCC  0100               	movlb	0	; () banked
  9368  002CCE  90D8               	bcf	status,0,c
  9369  002CD0  33BD               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  9370  002CD2  33BC               	rrcf	___lwdiv@divisor& (0+255),f,b
  9371                           
  9372                           ; BSR set to: 0
  9373  002CD4  0100               	movlb	0	; () banked
  9374  002CD6  0100               	movlb	0	; () banked
  9375  002CD8  2FBF               	decfsz	___lwdiv@counter& (0+255),f,b
  9376  002CDA  D7D3               	goto	l5674
  9377  002CDC                     l1676:
  9378                           
  9379                           ; BSR set to: 0
  9380  002CDC  C0C0  F0BA         	movff	___lwdiv@quotient,?___lwdiv
  9381  002CE0  C0C1  F0BB         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9382                           
  9383                           ; BSR set to: 0
  9384  002CE4  0012               	return	
  9385  002CE6  FFFF               	dw	65535	; errata NOP
  9386  002CE8                     __end_of___lwdiv:
  9387                           	opt stack 0
  9388                           tblptru	equ	0xFF8
  9389                           tblptrh	equ	0xFF7
  9390                           tblptrl	equ	0xFF6
  9391                           tablat	equ	0xFF5
  9392                           prodh	equ	0xFF4
  9393                           prodl	equ	0xFF3
  9394                           intcon	equ	0xFF2
  9395                           intcon2	equ	0xFF1
  9396                           postinc0	equ	0xFEE
  9397                           wreg	equ	0xFE8
  9398                           indf1	equ	0xFE7
  9399                           postdec1	equ	0xFE5
  9400                           fsr1h	equ	0xFE2
  9401                           fsr1l	equ	0xFE1
  9402                           indf2	equ	0xFDF
  9403                           postinc2	equ	0xFDE
  9404                           postdec2	equ	0xFDD
  9405                           fsr2h	equ	0xFDA
  9406                           fsr2l	equ	0xFD9
  9407                           status	equ	0xFD8
  9408                           
  9409 ;; *************** function _ecran_wait *****************
  9410 ;; Defined at:
  9411 ;;		line 91 in file "ecran.c"
  9412 ;; Parameters:    Size  Location     Type
  9413 ;;		None
  9414 ;; Auto vars:     Size  Location     Type
  9415 ;;		None
  9416 ;; Return value:  Size  Location     Type
  9417 ;;		None               void
  9418 ;; Registers used:
  9419 ;;		wreg, status,2, status,0, cstack
  9420 ;; Tracked objects:
  9421 ;;		On entry : 0/0
  9422 ;;		On exit  : 0/0
  9423 ;;		Unchanged: 0/0
  9424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9425 ;;      Params:         0       0       0       0       0       0       0
  9426 ;;      Locals:         0       0       0       0       0       0       0
  9427 ;;      Temps:          0       1       0       0       0       0       0
  9428 ;;      Totals:         0       1       0       0       0       0       0
  9429 ;;Total ram usage:        1 bytes
  9430 ;; Hardware stack levels used:    1
  9431 ;; Hardware stack levels required when called:    4
  9432 ;; This function calls:
  9433 ;;		_ecran_dot
  9434 ;;		_ecran_raz_digit
  9435 ;; This function is called by:
  9436 ;;		_check_program_0
  9437 ;;		_test_process
  9438 ;;		_micro_wait
  9439 ;;		_armement_process
  9440 ;; This function uses a non-reentrant model
  9441 ;;
  9442                           
  9443                           	psect	text39
  9444  0035B8                     __ptext39:
  9445                           	opt stack 0
  9446  0035B8                     _ecran_wait:
  9447                           	opt stack 25
  9448                           
  9449                           ; BSR set to: 0
  9450                           ;incstack = 0
  9451  0035B8  FFFF               	dw	65535
  9452                           
  9453                           ;ecran.c: 94: ecran_raz_digit();
  9454  0035BA  EC21  F01B         	call	_ecran_raz_digit	;wreg free
  9455                           
  9456                           ;ecran.c: 96: ecran_dot(1);
  9457  0035BE  0E01               	movlw	1
  9458  0035C0  EC17  F01B         	call	_ecran_dot
  9459                           
  9460                           ;ecran.c: 98: PORTCbits.RC2 = 1;
  9461  0035C4  8482               	bsf	3970,2,c	;volatile
  9462                           
  9463                           ;ecran.c: 100: Ecran.Solid = 1;
  9464  0035C6  0100               	movlb	0	; () banked
  9465  0035C8  6FBB               	movwf	??_ecran_wait& (0+255),b
  9466  0035CA  0E01               	movlw	1
  9467  0035CC  0100               	movlb	0	; () banked
  9468  0035CE  0100               	movlb	0	; () banked
  9469  0035D0  6FB9               	movwf	(_Ecran+15)& (0+255),b
  9470  0035D2  0100               	movlb	0	; () banked
  9471  0035D4  51BB               	movf	??_ecran_wait& (0+255),w,b
  9472                           
  9473                           ; BSR set to: 0
  9474  0035D6  0012               	return	
  9475  0035D8  FFFF               	dw	65535	; errata NOP
  9476  0035DA                     __end_of_ecran_wait:
  9477                           	opt stack 0
  9478                           tblptru	equ	0xFF8
  9479                           tblptrh	equ	0xFF7
  9480                           tblptrl	equ	0xFF6
  9481                           tablat	equ	0xFF5
  9482                           prodh	equ	0xFF4
  9483                           prodl	equ	0xFF3
  9484                           intcon	equ	0xFF2
  9485                           intcon2	equ	0xFF1
  9486                           postinc0	equ	0xFEE
  9487                           wreg	equ	0xFE8
  9488                           indf1	equ	0xFE7
  9489                           postdec1	equ	0xFE5
  9490                           fsr1h	equ	0xFE2
  9491                           fsr1l	equ	0xFE1
  9492                           indf2	equ	0xFDF
  9493                           postinc2	equ	0xFDE
  9494                           postdec2	equ	0xFDD
  9495                           fsr2h	equ	0xFDA
  9496                           fsr2l	equ	0xFD9
  9497                           status	equ	0xFD8
  9498                           
  9499 ;; *************** function _check_comutest *****************
  9500 ;; Defined at:
  9501 ;;		line 3 in file "test.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;  State           1    wreg     unsigned char 
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;  State           1    6[BANK0 ] unsigned char 
  9506 ;; Return value:  Size  Location     Type
  9507 ;;		None               void
  9508 ;; Registers used:
  9509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9515 ;;      Params:         0       0       0       0       0       0       0
  9516 ;;      Locals:         0       1       0       0       0       0       0
  9517 ;;      Temps:          0       1       0       0       0       0       0
  9518 ;;      Totals:         0       2       0       0       0       0       0
  9519 ;;Total ram usage:        2 bytes
  9520 ;; Hardware stack levels used:    1
  9521 ;; Hardware stack levels required when called:    6
  9522 ;; This function calls:
  9523 ;;		_ecran_blank
  9524 ;;		_ecran_refresh
  9525 ;; This function is called by:
  9526 ;;		_main
  9527 ;;		_test_process
  9528 ;;		_micro_wait
  9529 ;;		_armement_process
  9530 ;; This function uses a non-reentrant model
  9531 ;;
  9532                           
  9533                           	psect	text40
  9534  0031BC                     __ptext40:
  9535                           	opt stack 0
  9536  0031BC                     _check_comutest:
  9537                           	opt stack 23
  9538                           
  9539                           ; BSR set to: 0
  9540                           ;incstack = 0
  9541  0031BC  FFFF               	dw	65535
  9542                           
  9543                           ;check_comutest@State stored from wreg
  9544  0031BE  CFE8 F0C0          	movff	wreg,check_comutest@State
  9545                           
  9546                           ;test.c: 5: ecran_blank();
  9547  0031C2  EC23  F018         	call	_ecran_blank	;wreg free
  9548                           
  9549                           ;test.c: 6: while(PORTCbits.RC5 == State)
  9550  0031C6  D017               	goto	l5970
  9551  0031C8                     l5958:
  9552                           
  9553                           ;test.c: 7: {
  9554                           ;test.c: 8: Ecran.Digits = (char *) ErreurTir;
  9555  0031C8  0E06               	movlw	high _ErreurTir
  9556  0031CA  0100               	movlb	0	; () banked
  9557  0031CC  0100               	movlb	0	; () banked
  9558  0031CE  6FAF               	movwf	(_Ecran+5)& (0+255),b
  9559  0031D0  0E0B               	movlw	low _ErreurTir
  9560  0031D2  0100               	movlb	0	; () banked
  9561  0031D4  0100               	movlb	0	; () banked
  9562  0031D6  6FAE               	movwf	(_Ecran+4)& (0+255),b
  9563                           
  9564                           ; BSR set to: 0
  9565                           ;test.c: 9: ecran_refresh();
  9566  0031D8  ECC4  F015         	call	_ecran_refresh	;wreg free
  9567                           
  9568                           ;test.c: 11: if ((PORTCbits.RC5 == 0) && (Micro.Phase == 0x01))
  9569  0031DC  BA82               	btfsc	3970,5,c	;volatile
  9570  0031DE  D00B               	goto	l5970
  9571  0031E0  0454               	decf	_Micro+2,w,c
  9572  0031E2  A4D8               	btfss	status,2,c
  9573  0031E4  D008               	goto	l5970
  9574                           
  9575                           ;test.c: 12: {
  9576                           ;test.c: 13: Test.Step = 0x01;
  9577  0031E6  0100               	movlb	0	; () banked
  9578  0031E8  6FBF               	movwf	??_check_comutest& (0+255),b
  9579  0031EA  0E01               	movlw	1
  9580  0031EC  6E2E               	movwf	_Test,c
  9581  0031EE  0100               	movlb	0	; () banked
  9582  0031F0  51BF               	movf	??_check_comutest& (0+255),w,b
  9583                           
  9584                           ; BSR set to: 0
  9585                           ;test.c: 14: ecran_blank();
  9586  0031F2  EC23  F018         	call	_ecran_blank	;wreg free
  9587  0031F6                     l5970:
  9588  0031F6  AA82               	btfss	3970,5,c	;volatile
  9589  0031F8  D002               	goto	u5280
  9590  0031FA  0E01               	movlw	1
  9591  0031FC  D001               	goto	u5286
  9592  0031FE                     u5280:
  9593  0031FE  0E00               	movlw	0
  9594  003200                     u5286:
  9595  003200  0100               	movlb	0	; () banked
  9596  003202  0100               	movlb	0	; () banked
  9597  003204  19C0               	xorwf	check_comutest@State& (0+255),w,b
  9598  003206  A4D8               	btfss	status,2,c
  9599                           
  9600                           ; BSR set to: 0
  9601                           
  9602                           ; BSR set to: 0
  9603  003208  0012               	return	
  9604  00320A  FFFF               	dw	65535	; assembler added errata NOP
  9605  00320C  D7DD               	goto	l5958
  9606  00320E  FFFF               	dw	65535	; errata NOP
  9607  003210                     __end_of_check_comutest:
  9608                           	opt stack 0
  9609                           tblptru	equ	0xFF8
  9610                           tblptrh	equ	0xFF7
  9611                           tblptrl	equ	0xFF6
  9612                           tablat	equ	0xFF5
  9613                           prodh	equ	0xFF4
  9614                           prodl	equ	0xFF3
  9615                           intcon	equ	0xFF2
  9616                           intcon2	equ	0xFF1
  9617                           postinc0	equ	0xFEE
  9618                           wreg	equ	0xFE8
  9619                           indf1	equ	0xFE7
  9620                           postdec1	equ	0xFE5
  9621                           fsr1h	equ	0xFE2
  9622                           fsr1l	equ	0xFE1
  9623                           indf2	equ	0xFDF
  9624                           postinc2	equ	0xFDE
  9625                           postdec2	equ	0xFDD
  9626                           fsr2h	equ	0xFDA
  9627                           fsr2l	equ	0xFD9
  9628                           status	equ	0xFD8
  9629                           
  9630 ;; *************** function _ecran_refresh *****************
  9631 ;; Defined at:
  9632 ;;		line 116 in file "ecran.c"
  9633 ;; Parameters:    Size  Location     Type
  9634 ;;		None
  9635 ;; Auto vars:     Size  Location     Type
  9636 ;;		None
  9637 ;; Return value:  Size  Location     Type
  9638 ;;		None               void
  9639 ;; Registers used:
  9640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9641 ;; Tracked objects:
  9642 ;;		On entry : 0/0
  9643 ;;		On exit  : 0/0
  9644 ;;		Unchanged: 0/0
  9645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9646 ;;      Params:         0       0       0       0       0       0       0
  9647 ;;      Locals:         0       0       0       0       0       0       0
  9648 ;;      Temps:          0       2       0       0       0       0       0
  9649 ;;      Totals:         0       2       0       0       0       0       0
  9650 ;;Total ram usage:        2 bytes
  9651 ;; Hardware stack levels used:    1
  9652 ;; Hardware stack levels required when called:    5
  9653 ;; This function calls:
  9654 ;;		_ecran_dot
  9655 ;;		_ecran_print_one_char
  9656 ;; This function is called by:
  9657 ;;		_main
  9658 ;;		_cf_check_and_display
  9659 ;;		_check_comutest
  9660 ;;		_check_program_0
  9661 ;; This function uses a non-reentrant model
  9662 ;;
  9663                           
  9664                           	psect	text41
  9665  002B88                     __ptext41:
  9666                           	opt stack 0
  9667  002B88                     _ecran_refresh:
  9668                           	opt stack 23
  9669                           
  9670                           ; BSR set to: 0
  9671                           ;incstack = 0
  9672  002B88  FFFF               	dw	65535
  9673                           
  9674                           ;ecran.c: 118: if ( (Ecran.Solid == 0)
  9675                           ;ecran.c: 119: && ((++ Ecran.Cpt) <= Ecran.tRate))
  9676  002B8A  0100               	movlb	0	; () banked
  9677  002B8C  0100               	movlb	0	; () banked
  9678  002B8E  67B9               	tstfsz	(_Ecran+15)& (0+255),b
  9679  002B90  D052               	goto	l280
  9680                           
  9681                           ; BSR set to: 0
  9682  002B92  0100               	movlb	0	; () banked
  9683  002B94  0100               	movlb	0	; () banked
  9684  002B96  2BB5               	incf	(_Ecran+11)& (0+255),f,b
  9685  002B98  0100               	movlb	0	; () banked
  9686  002B9A  51B5               	movf	(_Ecran+11)& (0+255),w,b
  9687  002B9C  0100               	movlb	0	; () banked
  9688  002B9E  0100               	movlb	0	; () banked
  9689  002BA0  5DB6               	subwf	(_Ecran+12)& (0+255),w,b
  9690  002BA2  A0D8               	btfss	status,0,c
  9691  002BA4  D048               	goto	l280
  9692                           
  9693                           ; BSR set to: 0
  9694                           ;ecran.c: 120: {
  9695                           ;ecran.c: 121: ecran_print_one_char(Ecran.Index, Ecran.Digits[Ecran.Index]);
  9696  002BA6  0100               	movlb	0	; () banked
  9697  002BA8  0100               	movlb	0	; () banked
  9698  002BAA  51B4               	movf	(_Ecran+10)& (0+255),w,b
  9699  002BAC  0D01               	mullw	1
  9700  002BAE  0100               	movlb	0	; () banked
  9701  002BB0  EE20  F0AE         	lfsr	2,_Ecran+4
  9702  002BB4  CFDE F0BD          	movff	postinc2,??_ecran_refresh
  9703  002BB8  CFDD F0BE          	movff	postdec2,??_ecran_refresh+1
  9704  002BBC  50F3               	movf	prodl,w,c
  9705  002BBE  0100               	movlb	0	; () banked
  9706  002BC0  27BD               	addwf	??_ecran_refresh& (0+255),f,b
  9707  002BC2  50F4               	movf	prodh,w,c
  9708  002BC4  0100               	movlb	0	; () banked
  9709  002BC6  23BE               	addwfc	(??_ecran_refresh+1)& (0+255),f,b
  9710  002BC8  C0BD  FFF6         	movff	??_ecran_refresh,tblptrl
  9711  002BCC  C0BE  FFF7         	movff	??_ecran_refresh+1,tblptrh
  9712  002BD0  6AF8               	clrf	tblptru,c
  9713  002BD2  0E05               	movlw	(high __ramtop+-1)
  9714  002BD4  64F7               	cpfsgt	tblptrh,c
  9715  002BD6  D004               	bra	u4927
  9716  002BD8  0008               	tblrd		*
  9717  002BDA  FFFF               	dw	65535	; errata NOP
  9718  002BDC  50F5               	movf	tablat,w,c
  9719  002BDE  D005               	bra	u4920
  9720  002BE0                     u4927:
  9721  002BE0  CFF6 FFE1          	movff	tblptrl,fsr1l
  9722  002BE4  CFF7 FFE2          	movff	tblptrh,fsr1h
  9723  002BE8  50E7               	movf	indf1,w,c
  9724  002BEA                     u4920:
  9725  002BEA  0100               	movlb	0	; () banked
  9726  002BEC  0100               	movlb	0	; () banked
  9727  002BEE  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  9728  002BF0  0100               	movlb	0	; () banked
  9729  002BF2  0100               	movlb	0	; () banked
  9730  002BF4  51B4               	movf	(_Ecran+10)& (0+255),w,b
  9731  002BF6  EC19  F01A         	call	_ecran_print_one_char
  9732                           
  9733                           ;ecran.c: 123: ecran_dot(Ecran.Dot[Ecran.Index]);
  9734  002BFA  0100               	movlb	0	; () banked
  9735  002BFC  0100               	movlb	0	; () banked
  9736  002BFE  51B4               	movf	(_Ecran+10)& (0+255),w,b
  9737  002C00  0D01               	mullw	1
  9738  002C02  0100               	movlb	0	; () banked
  9739  002C04  0EB0               	movlw	low (_Ecran+6)
  9740  002C06  24F3               	addwf	prodl,w,c
  9741  002C08  6ED9               	movwf	fsr2l,c
  9742  002C0A  0100               	movlb	0	; () banked
  9743  002C0C  0E00               	movlw	high (_Ecran+6)
  9744  002C0E  20F4               	addwfc	prodh,w,c
  9745  002C10  6EDA               	movwf	fsr2h,c
  9746  002C12  50DF               	movf	indf2,w,c
  9747  002C14  EC17  F01B         	call	_ecran_dot
  9748                           
  9749                           ;ecran.c: 125: if (++ Ecran.Index > 3) {Ecran.Index = 0;}
  9750  002C18  0100               	movlb	0	; () banked
  9751  002C1A  EE20  F0B4         	lfsr	2,_Ecran+10
  9752  002C1E  2ADF               	incf	indf2,f,c
  9753  002C20  0E03               	movlw	3
  9754  002C22  64DF               	cpfsgt	indf2,c
  9755  002C24  D008               	goto	l280
  9756                           
  9757                           ; BSR set to: 0
  9758  002C26  0100               	movlb	0	; () banked
  9759  002C28  6FBD               	movwf	??_ecran_refresh& (0+255),b
  9760  002C2A  0E00               	movlw	0
  9761  002C2C  0100               	movlb	0	; () banked
  9762  002C2E  0100               	movlb	0	; () banked
  9763  002C30  6FB4               	movwf	(_Ecran+10)& (0+255),b
  9764  002C32  0100               	movlb	0	; () banked
  9765  002C34  51BD               	movf	??_ecran_refresh& (0+255),w,b
  9766  002C36                     l280:
  9767                           
  9768                           ; BSR set to: 0
  9769  002C36  0012               	return	
  9770  002C38  FFFF               	dw	65535	; errata NOP
  9771  002C3A                     __end_of_ecran_refresh:
  9772                           	opt stack 0
  9773                           tblptru	equ	0xFF8
  9774                           tblptrh	equ	0xFF7
  9775                           tblptrl	equ	0xFF6
  9776                           tablat	equ	0xFF5
  9777                           prodh	equ	0xFF4
  9778                           prodl	equ	0xFF3
  9779                           intcon	equ	0xFF2
  9780                           intcon2	equ	0xFF1
  9781                           postinc0	equ	0xFEE
  9782                           wreg	equ	0xFE8
  9783                           indf1	equ	0xFE7
  9784                           postdec1	equ	0xFE5
  9785                           fsr1h	equ	0xFE2
  9786                           fsr1l	equ	0xFE1
  9787                           indf2	equ	0xFDF
  9788                           postinc2	equ	0xFDE
  9789                           postdec2	equ	0xFDD
  9790                           fsr2h	equ	0xFDA
  9791                           fsr2l	equ	0xFD9
  9792                           status	equ	0xFD8
  9793                           
  9794 ;; *************** function _ecran_print_one_char *****************
  9795 ;; Defined at:
  9796 ;;		line 50 in file "ecran.c"
  9797 ;; Parameters:    Size  Location     Type
  9798 ;;  Digit           1    wreg     unsigned char 
  9799 ;;  Character       1    1[BANK0 ] unsigned char 
  9800 ;; Auto vars:     Size  Location     Type
  9801 ;;  Digit           1    2[BANK0 ] unsigned char 
  9802 ;; Return value:  Size  Location     Type
  9803 ;;		None               void
  9804 ;; Registers used:
  9805 ;;		wreg, status,2, status,0, cstack
  9806 ;; Tracked objects:
  9807 ;;		On entry : 0/0
  9808 ;;		On exit  : 0/0
  9809 ;;		Unchanged: 0/0
  9810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9811 ;;      Params:         0       1       0       0       0       0       0
  9812 ;;      Locals:         0       1       0       0       0       0       0
  9813 ;;      Temps:          0       0       0       0       0       0       0
  9814 ;;      Totals:         0       2       0       0       0       0       0
  9815 ;;Total ram usage:        2 bytes
  9816 ;; Hardware stack levels used:    1
  9817 ;; Hardware stack levels required when called:    4
  9818 ;; This function calls:
  9819 ;;		_ecran_digit
  9820 ;;		_ecran_raz_digit
  9821 ;; This function is called by:
  9822 ;;		_ecran_refresh
  9823 ;;		_cf_check_and_display
  9824 ;;		_cf_rcv
  9825 ;;		_check_idtest
  9826 ;;		_check_bpon
  9827 ;;		_micro_wait
  9828 ;;		_feu_check_bp
  9829 ;; This function uses a non-reentrant model
  9830 ;;
  9831                           
  9832                           	psect	text42
  9833  003432                     __ptext42:
  9834                           	opt stack 0
  9835  003432                     _ecran_print_one_char:
  9836                           	opt stack 23
  9837                           
  9838                           ; BSR set to: 0
  9839                           ;incstack = 0
  9840  003432  FFFF               	dw	65535
  9841                           
  9842                           ;ecran_print_one_char@Digit stored from wreg
  9843  003434  CFE8 F0BC          	movff	wreg,ecran_print_one_char@Digit
  9844                           
  9845                           ;ecran.c: 52: ecran_raz_digit();
  9846  003438  EC21  F01B         	call	_ecran_raz_digit	;wreg free
  9847                           
  9848                           ;ecran.c: 54: ecran_digit(Character);
  9849  00343C  0100               	movlb	0	; () banked
  9850  00343E  0100               	movlb	0	; () banked
  9851  003440  51BB               	movf	ecran_print_one_char@Character& (0+255),w,b
  9852  003442  EC06  F014         	call	_ecran_digit
  9853                           
  9854                           ;ecran.c: 56: switch (Digit)
  9855  003446  D008               	goto	l5430
  9856  003448                     l258:
  9857                           
  9858                           ; BSR set to: 0
  9859  003448  8282               	bsf	3970,1,c	;volatile
  9860  00344A  D015               	goto	l264
  9861  00344C                     l260:
  9862                           
  9863                           ; BSR set to: 0
  9864  00344C  8482               	bsf	3970,2,c	;volatile
  9865  00344E  D013               	goto	l264
  9866  003450                     l261:
  9867                           
  9868                           ; BSR set to: 0
  9869  003450  8682               	bsf	3970,3,c	;volatile
  9870  003452  D011               	goto	l264
  9871  003454                     l262:
  9872                           
  9873                           ; BSR set to: 0
  9874  003454  8082               	bsf	3970,0,c	;volatile
  9875  003456  D00F               	goto	l264
  9876  003458                     l5430:
  9877  003458  0100               	movlb	0	; () banked
  9878  00345A  0100               	movlb	0	; () banked
  9879  00345C  51BC               	movf	ecran_print_one_char@Digit& (0+255),w,b
  9880                           
  9881                           ; Switch size 1, requested type "space"
  9882                           ; Number of cases is 4, Range of values is 0 to 3
  9883                           ; switch strategies available:
  9884                           ; Name         Instructions Cycles
  9885                           ; simple_byte           13     7 (average)
  9886                           ;	Chosen strategy is simple_byte
  9887  00345E  0A00               	xorlw	0	; case 0
  9888  003460  B4D8               	btfsc	status,2,c
  9889  003462  D7F2               	goto	l258
  9890  003464  0A01               	xorlw	1	; case 1
  9891  003466  B4D8               	btfsc	status,2,c
  9892  003468  D7F1               	goto	l260
  9893  00346A  0A03               	xorlw	3	; case 2
  9894  00346C  B4D8               	btfsc	status,2,c
  9895  00346E  D7F0               	goto	l261
  9896  003470  0A01               	xorlw	1	; case 3
  9897  003472  B4D8               	btfsc	status,2,c
  9898  003474  D7EF               	goto	l262
  9899  003476                     l264:
  9900                           
  9901                           ; BSR set to: 0
  9902  003476  0012               	return	
  9903  003478  FFFF               	dw	65535	; errata NOP
  9904  00347A                     __end_of_ecran_print_one_char:
  9905                           	opt stack 0
  9906                           tblptru	equ	0xFF8
  9907                           tblptrh	equ	0xFF7
  9908                           tblptrl	equ	0xFF6
  9909                           tablat	equ	0xFF5
  9910                           prodh	equ	0xFF4
  9911                           prodl	equ	0xFF3
  9912                           intcon	equ	0xFF2
  9913                           intcon2	equ	0xFF1
  9914                           postinc0	equ	0xFEE
  9915                           wreg	equ	0xFE8
  9916                           indf1	equ	0xFE7
  9917                           postdec1	equ	0xFE5
  9918                           fsr1h	equ	0xFE2
  9919                           fsr1l	equ	0xFE1
  9920                           indf2	equ	0xFDF
  9921                           postinc2	equ	0xFDE
  9922                           postdec2	equ	0xFDD
  9923                           fsr2h	equ	0xFDA
  9924                           fsr2l	equ	0xFD9
  9925                           status	equ	0xFD8
  9926                           
  9927 ;; *************** function _ecran_raz_digit *****************
  9928 ;; Defined at:
  9929 ;;		line 3 in file "ecran.c"
  9930 ;; Parameters:    Size  Location     Type
  9931 ;;		None
  9932 ;; Auto vars:     Size  Location     Type
  9933 ;;		None
  9934 ;; Return value:  Size  Location     Type
  9935 ;;		None               void
  9936 ;; Registers used:
  9937 ;;		wreg, status,2, status,0
  9938 ;; Tracked objects:
  9939 ;;		On entry : 0/0
  9940 ;;		On exit  : 0/0
  9941 ;;		Unchanged: 0/0
  9942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9943 ;;      Params:         0       0       0       0       0       0       0
  9944 ;;      Locals:         0       0       0       0       0       0       0
  9945 ;;      Temps:          0       0       0       0       0       0       0
  9946 ;;      Totals:         0       0       0       0       0       0       0
  9947 ;;Total ram usage:        0 bytes
  9948 ;; Hardware stack levels used:    1
  9949 ;; Hardware stack levels required when called:    3
  9950 ;; This function calls:
  9951 ;;		Nothing
  9952 ;; This function is called by:
  9953 ;;		_ecran_print_one_char
  9954 ;;		_ecran_wait
  9955 ;; This function uses a non-reentrant model
  9956 ;;
  9957                           
  9958                           	psect	text43
  9959  003642                     __ptext43:
  9960                           	opt stack 0
  9961  003642                     _ecran_raz_digit:
  9962                           	opt stack 25
  9963                           
  9964                           ; BSR set to: 0
  9965                           ;incstack = 0
  9966  003642  FFFF               	dw	65535
  9967                           
  9968                           ;ecran.c: 5: PORTD = 0;
  9969  003644  0E00               	movlw	0
  9970  003646  6E83               	movwf	3971,c	;volatile
  9971                           
  9972                           ;ecran.c: 6: PORTC &= 0xF0;
  9973  003648  0EF0               	movlw	240
  9974  00364A  1682               	andwf	3970,f,c	;volatile
  9975  00364C  0012               	return	
  9976  00364E  FFFF               	dw	65535	; errata NOP
  9977  003650                     __end_of_ecran_raz_digit:
  9978                           	opt stack 0
  9979                           tblptru	equ	0xFF8
  9980                           tblptrh	equ	0xFF7
  9981                           tblptrl	equ	0xFF6
  9982                           tablat	equ	0xFF5
  9983                           prodh	equ	0xFF4
  9984                           prodl	equ	0xFF3
  9985                           intcon	equ	0xFF2
  9986                           intcon2	equ	0xFF1
  9987                           postinc0	equ	0xFEE
  9988                           wreg	equ	0xFE8
  9989                           indf1	equ	0xFE7
  9990                           postdec1	equ	0xFE5
  9991                           fsr1h	equ	0xFE2
  9992                           fsr1l	equ	0xFE1
  9993                           indf2	equ	0xFDF
  9994                           postinc2	equ	0xFDE
  9995                           postdec2	equ	0xFDD
  9996                           fsr2h	equ	0xFDA
  9997                           fsr2l	equ	0xFD9
  9998                           status	equ	0xFD8
  9999                           
 10000 ;; *************** function _ecran_digit *****************
 10001 ;; Defined at:
 10002 ;;		line 9 in file "ecran.c"
 10003 ;; Parameters:    Size  Location     Type
 10004 ;;  Char            1    wreg     unsigned char 
 10005 ;; Auto vars:     Size  Location     Type
 10006 ;;  Char            1    0[BANK0 ] unsigned char 
 10007 ;; Return value:  Size  Location     Type
 10008 ;;		None               void
 10009 ;; Registers used:
 10010 ;;		wreg, status,2, status,0
 10011 ;; Tracked objects:
 10012 ;;		On entry : 0/0
 10013 ;;		On exit  : 0/0
 10014 ;;		Unchanged: 0/0
 10015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10016 ;;      Params:         0       0       0       0       0       0       0
 10017 ;;      Locals:         0       1       0       0       0       0       0
 10018 ;;      Temps:          0       0       0       0       0       0       0
 10019 ;;      Totals:         0       1       0       0       0       0       0
 10020 ;;Total ram usage:        1 bytes
 10021 ;; Hardware stack levels used:    1
 10022 ;; Hardware stack levels required when called:    3
 10023 ;; This function calls:
 10024 ;;		Nothing
 10025 ;; This function is called by:
 10026 ;;		_ecran_print_one_char
 10027 ;; This function uses a non-reentrant model
 10028 ;;
 10029                           
 10030                           	psect	text44
 10031  00280C                     __ptext44:
 10032                           	opt stack 0
 10033  00280C                     _ecran_digit:
 10034                           	opt stack 23
 10035                           
 10036                           ;incstack = 0
 10037  00280C  FFFF               	dw	65535
 10038                           
 10039                           ;ecran_digit@Char stored from wreg
 10040  00280E  CFE8 F0BA          	movff	wreg,ecran_digit@Char
 10041                           
 10042                           ;ecran.c: 11: switch (Char)
 10043  002812  D02B               	goto	l5414
 10044  002814                     l5362:
 10045  002814  0E00               	movlw	0
 10046  002816  D027               	goto	L71
 10047  002818                     l5364:
 10048  002818  0EB7               	movlw	183
 10049  00281A  D025               	goto	L71
 10050  00281C                     l5372:
 10051  00281C  0ED6               	movlw	214
 10052  00281E  D023               	goto	L71
 10053  002820                     l5374:
 10054  002820  0E96               	movlw	150
 10055  002822  D021               	goto	L71
 10056  002824                     l5376:
 10057  002824  0E97               	movlw	151
 10058  002826  D01F               	goto	L71
 10059  002828                     l5378:
 10060  002828  0EF2               	movlw	242
 10061  00282A  D01D               	goto	L71
 10062  00282C                     l5380:
 10063  00282C  0ED0               	movlw	208
 10064  00282E  D01B               	goto	L71
 10065  002830                     l5382:
 10066  002830  0EF1               	movlw	241
 10067  002832  D019               	goto	L71
 10068  002834                     l5386:
 10069  002834  0ED2               	movlw	210
 10070  002836  D017               	goto	L71
 10071  002838                     l5388:
 10072  002838  0E40               	movlw	64
 10073  00283A  D015               	goto	L71
 10074  00283C                     l5390:
 10075  00283C  0E10               	movlw	16
 10076  00283E  D013               	goto	L71
 10077  002840                     l5392:
 10078  002840  0EE7               	movlw	231
 10079  002842  D011               	goto	L71
 10080  002844                     l5394:
 10081  002844  0E21               	movlw	33
 10082  002846  D00F               	goto	L71
 10083  002848                     l5396:
 10084  002848  0ED5               	movlw	213
 10085  00284A  D00D               	goto	L71
 10086  00284C                     l5398:
 10087  00284C  0E75               	movlw	117
 10088  00284E  D00B               	goto	L71
 10089  002850                     l5400:
 10090  002850  0E33               	movlw	51
 10091  002852  D009               	goto	L71
 10092  002854                     l5402:
 10093  002854  0E76               	movlw	118
 10094  002856  D007               	goto	L71
 10095  002858                     l5404:
 10096  002858  0EF6               	movlw	246
 10097  00285A  D005               	goto	L71
 10098  00285C                     l5406:
 10099  00285C  0E25               	movlw	37
 10100  00285E  D003               	goto	L71
 10101  002860                     l5408:
 10102  002860  0EF7               	movlw	247
 10103  002862  D001               	goto	L71
 10104  002864                     l5410:
 10105  002864  0E77               	movlw	119
 10106  002866                     L71:
 10107  002866  6E83               	movwf	3971,c	;volatile
 10108  002868  D04E               	goto	l250
 10109  00286A                     l5414:
 10110  00286A  0100               	movlb	0	; () banked
 10111  00286C  0100               	movlb	0	; () banked
 10112  00286E  51BA               	movf	ecran_digit@Char& (0+255),w,b
 10113                           
 10114                           ; Switch size 1, requested type "space"
 10115                           ; Number of cases is 25, Range of values is 32 to 116
 10116                           ; switch strategies available:
 10117                           ; Name         Instructions Cycles
 10118                           ; simple_byte           76    39 (average)
 10119                           ;	Chosen strategy is simple_byte
 10120  002870  0A20               	xorlw	32	; case 32
 10121  002872  B4D8               	btfsc	status,2,c
 10122  002874  D7CF               	goto	l5362
 10123  002876  0A0D               	xorlw	13	; case 45
 10124  002878  B4D8               	btfsc	status,2,c
 10125  00287A  D7E0               	goto	l5390
 10126  00287C  0A1D               	xorlw	29	; case 48
 10127  00287E  B4D8               	btfsc	status,2,c
 10128  002880  D7DF               	goto	l5392
 10129  002882  0A01               	xorlw	1	; case 49
 10130  002884  B4D8               	btfsc	status,2,c
 10131  002886  D7DE               	goto	l5394
 10132  002888  0A03               	xorlw	3	; case 50
 10133  00288A  B4D8               	btfsc	status,2,c
 10134  00288C  D7DD               	goto	l5396
 10135  00288E  0A01               	xorlw	1	; case 51
 10136  002890  B4D8               	btfsc	status,2,c
 10137  002892  D7DC               	goto	l5398
 10138  002894  0A07               	xorlw	7	; case 52
 10139  002896  B4D8               	btfsc	status,2,c
 10140  002898  D7DB               	goto	l5400
 10141  00289A  0A01               	xorlw	1	; case 53
 10142  00289C  B4D8               	btfsc	status,2,c
 10143  00289E  D7DA               	goto	l5402
 10144  0028A0  0A03               	xorlw	3	; case 54
 10145  0028A2  B4D8               	btfsc	status,2,c
 10146  0028A4  D7D9               	goto	l5404
 10147  0028A6  0A01               	xorlw	1	; case 55
 10148  0028A8  B4D8               	btfsc	status,2,c
 10149  0028AA  D7D8               	goto	l5406
 10150  0028AC  0A0F               	xorlw	15	; case 56
 10151  0028AE  B4D8               	btfsc	status,2,c
 10152  0028B0  D7D7               	goto	l5408
 10153  0028B2  0A01               	xorlw	1	; case 57
 10154  0028B4  B4D8               	btfsc	status,2,c
 10155  0028B6  D7D6               	goto	l5410
 10156  0028B8  0A78               	xorlw	120	; case 65
 10157  0028BA  B4D8               	btfsc	status,2,c
 10158  0028BC  D7AD               	goto	l5364
 10159  0028BE  0A03               	xorlw	3	; case 66
 10160  0028C0  B4D8               	btfsc	status,2,c
 10161  0028C2  D7B2               	goto	l5378
 10162  0028C4  0A01               	xorlw	1	; case 67
 10163  0028C6  B4D8               	btfsc	status,2,c
 10164  0028C8  D7B1               	goto	l5380
 10165  0028CA  0A07               	xorlw	7	; case 68
 10166  0028CC  B4D8               	btfsc	status,2,c
 10167  0028CE  D7B0               	goto	l5382
 10168  0028D0  0A01               	xorlw	1	; case 69
 10169  0028D2  B4D8               	btfsc	status,2,c
 10170  0028D4  D7A3               	goto	l5372
 10171  0028D6  0A03               	xorlw	3	; case 70
 10172  0028D8  B4D8               	btfsc	status,2,c
 10173  0028DA  D7A2               	goto	l5374
 10174  0028DC  0A16               	xorlw	22	; case 80
 10175  0028DE  B4D8               	btfsc	status,2,c
 10176  0028E0  D7A1               	goto	l5376
 10177  0028E2  0A03               	xorlw	3	; case 83
 10178  0028E4  B4D8               	btfsc	status,2,c
 10179  0028E6  D7B6               	goto	l5402
 10180  0028E8  0A0C               	xorlw	12	; case 95
 10181  0028EA  B4D8               	btfsc	status,2,c
 10182  0028EC  D7A5               	goto	l5388
 10183  0028EE  0A3D               	xorlw	61	; case 98
 10184  0028F0  B4D8               	btfsc	status,2,c
 10185  0028F2  D79A               	goto	l5378
 10186  0028F4  0A01               	xorlw	1	; case 99
 10187  0028F6  B4D8               	btfsc	status,2,c
 10188  0028F8  D799               	goto	l5380
 10189  0028FA  0A07               	xorlw	7	; case 100
 10190  0028FC  B4D8               	btfsc	status,2,c
 10191  0028FE  D798               	goto	l5382
 10192  002900  0A10               	xorlw	16	; case 116
 10193  002902  B4D8               	btfsc	status,2,c
 10194  002904  D797               	goto	l5386
 10195  002906                     l250:
 10196  002906  0012               	return	
 10197  002908  FFFF               	dw	65535	; errata NOP
 10198  00290A                     __end_of_ecran_digit:
 10199                           	opt stack 0
 10200                           tblptru	equ	0xFF8
 10201                           tblptrh	equ	0xFF7
 10202                           tblptrl	equ	0xFF6
 10203                           tablat	equ	0xFF5
 10204                           prodh	equ	0xFF4
 10205                           prodl	equ	0xFF3
 10206                           intcon	equ	0xFF2
 10207                           intcon2	equ	0xFF1
 10208                           postinc0	equ	0xFEE
 10209                           wreg	equ	0xFE8
 10210                           indf1	equ	0xFE7
 10211                           postdec1	equ	0xFE5
 10212                           fsr1h	equ	0xFE2
 10213                           fsr1l	equ	0xFE1
 10214                           indf2	equ	0xFDF
 10215                           postinc2	equ	0xFDE
 10216                           postdec2	equ	0xFDD
 10217                           fsr2h	equ	0xFDA
 10218                           fsr2l	equ	0xFD9
 10219                           status	equ	0xFD8
 10220                           
 10221 ;; *************** function _ecran_dot *****************
 10222 ;; Defined at:
 10223 ;;		line 42 in file "ecran.c"
 10224 ;; Parameters:    Size  Location     Type
 10225 ;;  Dot             1    wreg     unsigned char 
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;  Dot             1    0[BANK0 ] unsigned char 
 10228 ;; Return value:  Size  Location     Type
 10229 ;;		None               void
 10230 ;; Registers used:
 10231 ;;		wreg, status,2, status,0
 10232 ;; Tracked objects:
 10233 ;;		On entry : 0/0
 10234 ;;		On exit  : 0/0
 10235 ;;		Unchanged: 0/0
 10236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10237 ;;      Params:         0       0       0       0       0       0       0
 10238 ;;      Locals:         0       1       0       0       0       0       0
 10239 ;;      Temps:          0       0       0       0       0       0       0
 10240 ;;      Totals:         0       1       0       0       0       0       0
 10241 ;;Total ram usage:        1 bytes
 10242 ;; Hardware stack levels used:    1
 10243 ;; Hardware stack levels required when called:    3
 10244 ;; This function calls:
 10245 ;;		Nothing
 10246 ;; This function is called by:
 10247 ;;		_ecran_wait
 10248 ;;		_ecran_refresh
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252                           	psect	text45
 10253  00362E                     __ptext45:
 10254                           	opt stack 0
 10255  00362E                     _ecran_dot:
 10256                           	opt stack 25
 10257                           
 10258                           ;incstack = 0
 10259  00362E  FFFF               	dw	65535
 10260                           
 10261                           ;ecran_dot@Dot stored from wreg
 10262  003630  CFE8 F0BA          	movff	wreg,ecran_dot@Dot
 10263                           
 10264                           ;ecran.c: 44: if (Dot == 1)
 10265  003634  0100               	movlb	0	; () banked
 10266  003636  0100               	movlb	0	; () banked
 10267  003638  05BA               	decf	ecran_dot@Dot& (0+255),w,b
 10268  00363A  B4D8               	btfsc	status,2,c
 10269                           
 10270                           ; BSR set to: 0
 10271                           ;ecran.c: 45: {
 10272                           ;ecran.c: 46: PORTD |= 0x08;
 10273  00363C  8683               	bsf	3971,3,c	;volatile
 10274                           
 10275                           ; BSR set to: 0
 10276                           
 10277                           ; BSR set to: 0
 10278  00363E  0012               	return	
 10279  003640  FFFF               	dw	65535	; errata NOP
 10280  003642                     __end_of_ecran_dot:
 10281                           	opt stack 0
 10282                           tblptru	equ	0xFF8
 10283                           tblptrh	equ	0xFF7
 10284                           tblptrl	equ	0xFF6
 10285                           tablat	equ	0xFF5
 10286                           prodh	equ	0xFF4
 10287                           prodl	equ	0xFF3
 10288                           intcon	equ	0xFF2
 10289                           intcon2	equ	0xFF1
 10290                           postinc0	equ	0xFEE
 10291                           wreg	equ	0xFE8
 10292                           indf1	equ	0xFE7
 10293                           postdec1	equ	0xFE5
 10294                           fsr1h	equ	0xFE2
 10295                           fsr1l	equ	0xFE1
 10296                           indf2	equ	0xFDF
 10297                           postinc2	equ	0xFDE
 10298                           postdec2	equ	0xFDD
 10299                           fsr2h	equ	0xFDA
 10300                           fsr2l	equ	0xFD9
 10301                           status	equ	0xFD8
 10302                           
 10303 ;; *************** function _ecran_blank *****************
 10304 ;; Defined at:
 10305 ;;		line 103 in file "ecran.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;		None
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;		None
 10310 ;; Return value:  Size  Location     Type
 10311 ;;		None               void
 10312 ;; Registers used:
 10313 ;;		wreg, status,2, status,0
 10314 ;; Tracked objects:
 10315 ;;		On entry : 0/0
 10316 ;;		On exit  : 0/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10319 ;;      Params:         0       0       0       0       0       0       0
 10320 ;;      Locals:         0       0       0       0       0       0       0
 10321 ;;      Temps:          0       1       0       0       0       0       0
 10322 ;;      Totals:         0       1       0       0       0       0       0
 10323 ;;Total ram usage:        1 bytes
 10324 ;; Hardware stack levels used:    1
 10325 ;; Hardware stack levels required when called:    3
 10326 ;; This function calls:
 10327 ;;		Nothing
 10328 ;; This function is called by:
 10329 ;;		_check_comutest
 10330 ;;		_check_program_0
 10331 ;;		_test_process
 10332 ;;		_micro_wait
 10333 ;;		_armement_process
 10334 ;; This function uses a non-reentrant model
 10335 ;;
 10336                           
 10337                           	psect	text46
 10338  003046                     __ptext46:
 10339                           	opt stack 0
 10340  003046                     _ecran_blank:
 10341                           	opt stack 26
 10342                           
 10343                           ; BSR set to: 0
 10344                           ;incstack = 0
 10345  003046  FFFF               	dw	65535
 10346                           
 10347                           ;ecran.c: 106: Ecran.Digits = (char *) Blank;
 10348  003048  0E06               	movlw	high _Blank
 10349  00304A  0100               	movlb	0	; () banked
 10350  00304C  0100               	movlb	0	; () banked
 10351  00304E  6FAF               	movwf	(_Ecran+5)& (0+255),b
 10352  003050  0E06               	movlw	low _Blank
 10353  003052  0100               	movlb	0	; () banked
 10354  003054  0100               	movlb	0	; () banked
 10355  003056  6FAE               	movwf	(_Ecran+4)& (0+255),b
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;ecran.c: 108: Ecran.Dot[0] = 0;
 10359  003058  0100               	movlb	0	; () banked
 10360  00305A  6FBA               	movwf	??_ecran_blank& (0+255),b
 10361  00305C  0E00               	movlw	0
 10362  00305E  0100               	movlb	0	; () banked
 10363  003060  0100               	movlb	0	; () banked
 10364  003062  6FB0               	movwf	(_Ecran+6)& (0+255),b
 10365  003064  0100               	movlb	0	; () banked
 10366  003066  51BA               	movf	??_ecran_blank& (0+255),w,b
 10367                           
 10368                           ; BSR set to: 0
 10369                           ;ecran.c: 109: Ecran.Dot[1] = 0;
 10370  003068  0100               	movlb	0	; () banked
 10371  00306A  6FBA               	movwf	??_ecran_blank& (0+255),b
 10372  00306C  0E00               	movlw	0
 10373  00306E  0100               	movlb	0	; () banked
 10374  003070  0100               	movlb	0	; () banked
 10375  003072  6FB1               	movwf	(_Ecran+7)& (0+255),b
 10376  003074  0100               	movlb	0	; () banked
 10377  003076  51BA               	movf	??_ecran_blank& (0+255),w,b
 10378                           
 10379                           ; BSR set to: 0
 10380                           ;ecran.c: 110: Ecran.Dot[2] = 0;
 10381  003078  0100               	movlb	0	; () banked
 10382  00307A  6FBA               	movwf	??_ecran_blank& (0+255),b
 10383  00307C  0E00               	movlw	0
 10384  00307E  0100               	movlb	0	; () banked
 10385  003080  0100               	movlb	0	; () banked
 10386  003082  6FB2               	movwf	(_Ecran+8)& (0+255),b
 10387  003084  0100               	movlb	0	; () banked
 10388  003086  51BA               	movf	??_ecran_blank& (0+255),w,b
 10389                           
 10390                           ; BSR set to: 0
 10391                           ;ecran.c: 111: Ecran.Dot[3] = 0;
 10392  003088  0100               	movlb	0	; () banked
 10393  00308A  6FBA               	movwf	??_ecran_blank& (0+255),b
 10394  00308C  0E00               	movlw	0
 10395  00308E  0100               	movlb	0	; () banked
 10396  003090  0100               	movlb	0	; () banked
 10397  003092  6FB3               	movwf	(_Ecran+9)& (0+255),b
 10398  003094  0100               	movlb	0	; () banked
 10399  003096  51BA               	movf	??_ecran_blank& (0+255),w,b
 10400                           
 10401                           ; BSR set to: 0
 10402                           ;ecran.c: 113: Ecran.Solid = 0;
 10403  003098  0100               	movlb	0	; () banked
 10404  00309A  6FBA               	movwf	??_ecran_blank& (0+255),b
 10405  00309C  0E00               	movlw	0
 10406  00309E  0100               	movlb	0	; () banked
 10407  0030A0  0100               	movlb	0	; () banked
 10408  0030A2  6FB9               	movwf	(_Ecran+15)& (0+255),b
 10409  0030A4  0100               	movlb	0	; () banked
 10410  0030A6  51BA               	movf	??_ecran_blank& (0+255),w,b
 10411                           
 10412                           ; BSR set to: 0
 10413  0030A8  0012               	return	
 10414  0030AA  FFFF               	dw	65535	; errata NOP
 10415  0030AC                     __end_of_ecran_blank:
 10416                           	opt stack 0
 10417                           tblptru	equ	0xFF8
 10418                           tblptrh	equ	0xFF7
 10419                           tblptrl	equ	0xFF6
 10420                           tablat	equ	0xFF5
 10421                           prodh	equ	0xFF4
 10422                           prodl	equ	0xFF3
 10423                           intcon	equ	0xFF2
 10424                           intcon2	equ	0xFF1
 10425                           postinc0	equ	0xFEE
 10426                           wreg	equ	0xFE8
 10427                           indf1	equ	0xFE7
 10428                           postdec1	equ	0xFE5
 10429                           fsr1h	equ	0xFE2
 10430                           fsr1l	equ	0xFE1
 10431                           indf2	equ	0xFDF
 10432                           postinc2	equ	0xFDE
 10433                           postdec2	equ	0xFDD
 10434                           fsr2h	equ	0xFDA
 10435                           fsr2l	equ	0xFD9
 10436                           status	equ	0xFD8
 10437                           
 10438 ;; *************** function _arm_UAlim_1A *****************
 10439 ;; Defined at:
 10440 ;;		line 3 in file "armement.c"
 10441 ;; Parameters:    Size  Location     Type
 10442 ;;		None
 10443 ;; Auto vars:     Size  Location     Type
 10444 ;;  temp            2   34[BANK0 ] unsigned short 
 10445 ;; Return value:  Size  Location     Type
 10446 ;;                  2   28[BANK0 ] unsigned short 
 10447 ;; Registers used:
 10448 ;;		wreg, status,2, status,0, cstack
 10449 ;; Tracked objects:
 10450 ;;		On entry : 0/0
 10451 ;;		On exit  : 0/0
 10452 ;;		Unchanged: 0/0
 10453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10454 ;;      Params:         0       2       0       0       0       0       0
 10455 ;;      Locals:         0       2       0       0       0       0       0
 10456 ;;      Temps:          0       4       0       0       0       0       0
 10457 ;;      Totals:         0       8       0       0       0       0       0
 10458 ;;Total ram usage:        8 bytes
 10459 ;; Hardware stack levels used:    1
 10460 ;; Hardware stack levels required when called:    5
 10461 ;; This function calls:
 10462 ;;		___ftmul
 10463 ;;		___fttol
 10464 ;;		___lwtoft
 10465 ;;		_ana_read
 10466 ;;		_delay_ms
 10467 ;; This function is called by:
 10468 ;;		_armement_process
 10469 ;; This function uses a non-reentrant model
 10470 ;;
 10471                           
 10472                           	psect	text47
 10473  0025FA                     __ptext47:
 10474                           	opt stack 0
 10475  0025FA                     _arm_UAlim_1A:
 10476                           	opt stack 24
 10477                           
 10478                           ; BSR set to: 0
 10479                           ;incstack = 0
 10480  0025FA  FFFF               	dw	65535
 10481                           
 10482                           ;armement.c: 5: unsigned short temp = 0;
 10483  0025FC  0E00               	movlw	0
 10484  0025FE  0100               	movlb	0	; () banked
 10485  002600  0100               	movlb	0	; () banked
 10486  002602  6FDD               	movwf	(arm_UAlim_1A@temp+1)& (0+255),b
 10487  002604  0E00               	movlw	0
 10488  002606  0100               	movlb	0	; () banked
 10489  002608  6FDC               	movwf	arm_UAlim_1A@temp& (0+255),b
 10490                           
 10491                           ; BSR set to: 0
 10492                           ;armement.c: 7: PORTAbits.RA5 = 0;
 10493  00260A  9A80               	bcf	3968,5,c	;volatile
 10494                           
 10495                           ; BSR set to: 0
 10496                           ;armement.c: 8: PORTBbits.RB1 = 1;
 10497  00260C  8281               	bsf	3969,1,c	;volatile
 10498                           
 10499                           ; BSR set to: 0
 10500                           ;armement.c: 10: delay_ms(10);
 10501  00260E  0E00               	movlw	0
 10502  002610  0100               	movlb	0	; () banked
 10503  002612  0100               	movlb	0	; () banked
 10504  002614  6FBB               	movwf	(delay_ms@TimeToWait+1)& (0+255),b
 10505  002616  0E0A               	movlw	10
 10506  002618  0100               	movlb	0	; () banked
 10507  00261A  6FBA               	movwf	delay_ms@TimeToWait& (0+255),b
 10508  00261C  ECF4  F019         	call	_delay_ms	;wreg free
 10509                           
 10510                           ;armement.c: 12: temp = ana_read(0);
 10511  002620  0E00               	movlw	0
 10512  002622  ECBC  F017         	call	_ana_read
 10513  002626  0100               	movlb	0	; () banked
 10514  002628  C0C0  F0DC         	movff	?_ana_read,arm_UAlim_1A@temp
 10515  00262C  0100               	movlb	0	; () banked
 10516  00262E  C0C1  F0DD         	movff	?_ana_read+1,arm_UAlim_1A@temp+1
 10517                           
 10518                           ; BSR set to: 0
 10519                           ;armement.c: 14: PORTAbits.RA5 = 0;
 10520  002632  9A80               	bcf	3968,5,c	;volatile
 10521                           
 10522                           ; BSR set to: 0
 10523                           ;armement.c: 15: PORTBbits.RB1 = 0;
 10524  002634  9281               	bcf	3969,1,c	;volatile
 10525                           
 10526                           ; BSR set to: 0
 10527                           ;armement.c: 17: Arm.U_Alim_1A = (float) temp * 0.0049f;
 10528  002636  C0DC  F0C2         	movff	arm_UAlim_1A@temp,___lwtoft@c
 10529  00263A  C0DD  F0C3         	movff	arm_UAlim_1A@temp+1,___lwtoft@c+1
 10530  00263E  ECCE  F019         	call	___lwtoft	;wreg free
 10531  002642  C0C2  F0C7         	movff	?___lwtoft,___ftmul@f1
 10532  002646  C0C3  F0C8         	movff	?___lwtoft+1,___ftmul@f1+1
 10533  00264A  C0C4  F0C9         	movff	?___lwtoft+2,___ftmul@f1+2
 10534  00264E  0E90               	movlw	144
 10535  002650  0100               	movlb	0	; () banked
 10536  002652  0100               	movlb	0	; () banked
 10537  002654  6FCA               	movwf	___ftmul@f2& (0+255),b
 10538  002656  0EA0               	movlw	160
 10539  002658  0100               	movlb	0	; () banked
 10540  00265A  0100               	movlb	0	; () banked
 10541  00265C  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
 10542  00265E  0E3B               	movlw	59
 10543  002660  0100               	movlb	0	; () banked
 10544  002662  0100               	movlb	0	; () banked
 10545  002664  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
 10546  002666  ECDE  F009         	call	___ftmul	;wreg free
 10547  00266A  C0C7  F09E         	movff	?___ftmul,_Arm+4
 10548  00266E  C0C8  F09F         	movff	?___ftmul+1,_Arm+5
 10549  002672  C0C9  F0A0         	movff	?___ftmul+2,_Arm+6
 10550                           
 10551                           ;armement.c: 18: Arm.U_Alim_1A = Arm.U_Alim_1A * 11.62f;
 10552  002676  C09E  F0C7         	movff	_Arm+4,___ftmul@f1
 10553  00267A  C09F  F0C8         	movff	_Arm+5,___ftmul@f1+1
 10554  00267E  C0A0  F0C9         	movff	_Arm+6,___ftmul@f1+2
 10555  002682  0EEC               	movlw	236
 10556  002684  0100               	movlb	0	; () banked
 10557  002686  0100               	movlb	0	; () banked
 10558  002688  6FCA               	movwf	___ftmul@f2& (0+255),b
 10559  00268A  0E39               	movlw	57
 10560  00268C  0100               	movlb	0	; () banked
 10561  00268E  0100               	movlb	0	; () banked
 10562  002690  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
 10563  002692  0E41               	movlw	65
 10564  002694  0100               	movlb	0	; () banked
 10565  002696  0100               	movlb	0	; () banked
 10566  002698  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
 10567  00269A  ECDE  F009         	call	___ftmul	;wreg free
 10568  00269E  C0C7  F09E         	movff	?___ftmul,_Arm+4
 10569  0026A2  C0C8  F09F         	movff	?___ftmul+1,_Arm+5
 10570  0026A6  C0C9  F0A0         	movff	?___ftmul+2,_Arm+6
 10571                           
 10572                           ;armement.c: 19: Arm.U_Alim_1A = Arm.U_Alim_1A * 100.0f;
 10573  0026AA  C09E  F0C7         	movff	_Arm+4,___ftmul@f1
 10574  0026AE  C09F  F0C8         	movff	_Arm+5,___ftmul@f1+1
 10575  0026B2  C0A0  F0C9         	movff	_Arm+6,___ftmul@f1+2
 10576  0026B6  0E00               	movlw	0
 10577  0026B8  0100               	movlb	0	; () banked
 10578  0026BA  0100               	movlb	0	; () banked
 10579  0026BC  6FCA               	movwf	___ftmul@f2& (0+255),b
 10580  0026BE  0EC8               	movlw	200
 10581  0026C0  0100               	movlb	0	; () banked
 10582  0026C2  0100               	movlb	0	; () banked
 10583  0026C4  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
 10584  0026C6  0E42               	movlw	66
 10585  0026C8  0100               	movlb	0	; () banked
 10586  0026CA  0100               	movlb	0	; () banked
 10587  0026CC  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
 10588  0026CE  ECDE  F009         	call	___ftmul	;wreg free
 10589  0026D2  C0C7  F09E         	movff	?___ftmul,_Arm+4
 10590  0026D6  C0C8  F09F         	movff	?___ftmul+1,_Arm+5
 10591  0026DA  C0C9  F0A0         	movff	?___ftmul+2,_Arm+6
 10592                           
 10593                           ;armement.c: 21: return (unsigned short) Arm.U_Alim_1A;
 10594  0026DE  C09E  F0BA         	movff	_Arm+4,___fttol@f1
 10595  0026E2  C09F  F0BB         	movff	_Arm+5,___fttol@f1+1
 10596  0026E6  C0A0  F0BC         	movff	_Arm+6,___fttol@f1+2
 10597  0026EA  ECFA  F00D         	call	___fttol	;wreg free
 10598  0026EE  C0BA  F0D8         	movff	?___fttol,??_arm_UAlim_1A
 10599  0026F2  C0BB  F0D9         	movff	?___fttol+1,??_arm_UAlim_1A+1
 10600  0026F6  C0BC  F0DA         	movff	?___fttol+2,??_arm_UAlim_1A+2
 10601  0026FA  C0BD  F0DB         	movff	?___fttol+3,??_arm_UAlim_1A+3
 10602  0026FE  C0D8  F0D6         	movff	??_arm_UAlim_1A,?_arm_UAlim_1A
 10603  002702  C0D9  F0D7         	movff	??_arm_UAlim_1A+1,?_arm_UAlim_1A+1
 10604  002706  0012               	return	
 10605  002708  FFFF               	dw	65535	; errata NOP
 10606  00270A                     __end_of_arm_UAlim_1A:
 10607                           	opt stack 0
 10608                           tblptru	equ	0xFF8
 10609                           tblptrh	equ	0xFF7
 10610                           tblptrl	equ	0xFF6
 10611                           tablat	equ	0xFF5
 10612                           prodh	equ	0xFF4
 10613                           prodl	equ	0xFF3
 10614                           intcon	equ	0xFF2
 10615                           intcon2	equ	0xFF1
 10616                           postinc0	equ	0xFEE
 10617                           wreg	equ	0xFE8
 10618                           indf1	equ	0xFE7
 10619                           postdec1	equ	0xFE5
 10620                           fsr1h	equ	0xFE2
 10621                           fsr1l	equ	0xFE1
 10622                           indf2	equ	0xFDF
 10623                           postinc2	equ	0xFDE
 10624                           postdec2	equ	0xFDD
 10625                           fsr2h	equ	0xFDA
 10626                           fsr2l	equ	0xFD9
 10627                           status	equ	0xFD8
 10628                           
 10629 ;; *************** function _ana_read *****************
 10630 ;; Defined at:
 10631 ;;		line 4 in file "analog.c"
 10632 ;; Parameters:    Size  Location     Type
 10633 ;;  ANx             1    wreg     unsigned char 
 10634 ;; Auto vars:     Size  Location     Type
 10635 ;;  ANx             1    9[BANK0 ] unsigned char 
 10636 ;;  temp            2   10[BANK0 ] unsigned short 
 10637 ;; Return value:  Size  Location     Type
 10638 ;;                  2    6[BANK0 ] unsigned short 
 10639 ;; Registers used:
 10640 ;;		wreg, status,2, status,0, cstack
 10641 ;; Tracked objects:
 10642 ;;		On entry : 0/0
 10643 ;;		On exit  : 0/0
 10644 ;;		Unchanged: 0/0
 10645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10646 ;;      Params:         0       2       0       0       0       0       0
 10647 ;;      Locals:         0       3       0       0       0       0       0
 10648 ;;      Temps:          0       1       0       0       0       0       0
 10649 ;;      Totals:         0       6       0       0       0       0       0
 10650 ;;Total ram usage:        6 bytes
 10651 ;; Hardware stack levels used:    1
 10652 ;; Hardware stack levels required when called:    4
 10653 ;; This function calls:
 10654 ;;		_delay_ms
 10655 ;; This function is called by:
 10656 ;;		_check_UAlim
 10657 ;;		_check_UInfla
 10658 ;;		_arm_UAlim_1A
 10659 ;; This function uses a non-reentrant model
 10660 ;;
 10661                           
 10662                           	psect	text48
 10663  002F78                     __ptext48:
 10664                           	opt stack 0
 10665  002F78                     _ana_read:
 10666                           	opt stack 24
 10667                           
 10668                           ;incstack = 0
 10669  002F78  FFFF               	dw	65535
 10670                           
 10671                           ;ana_read@ANx stored from wreg
 10672  002F7A  CFE8 F0C3          	movff	wreg,ana_read@ANx
 10673                           
 10674                           ;analog.c: 6: unsigned short temp = 0;
 10675  002F7E  0E00               	movlw	0
 10676  002F80  0100               	movlb	0	; () banked
 10677  002F82  0100               	movlb	0	; () banked
 10678  002F84  6FC5               	movwf	(ana_read@temp+1)& (0+255),b
 10679  002F86  0E00               	movlw	0
 10680  002F88  0100               	movlb	0	; () banked
 10681  002F8A  6FC4               	movwf	ana_read@temp& (0+255),b
 10682                           
 10683                           ; BSR set to: 0
 10684                           ;analog.c: 8: ADCON0bits.CHS = ANx;
 10685  002F8C  C0C3  F0C2         	movff	ana_read@ANx,??_ana_read
 10686  002F90  0100               	movlb	0	; () banked
 10687  002F92  47C2               	rlncf	??_ana_read& (0+255),f,b
 10688  002F94  47C2               	rlncf	??_ana_read& (0+255),f,b
 10689  002F96  47C2               	rlncf	??_ana_read& (0+255),f,b
 10690  002F98  50C2               	movf	4034,w,c	;volatile
 10691  002F9A  0100               	movlb	0	; () banked
 10692  002F9C  19C2               	xorwf	??_ana_read& (0+255),w,b
 10693  002F9E  0BC7               	andlw	-57
 10694  002FA0  19C2               	xorwf	??_ana_read& (0+255),w,b
 10695  002FA2  6EC2               	movwf	4034,c	;volatile
 10696                           
 10697                           ; BSR set to: 0
 10698                           ;analog.c: 9: ADCON0bits.ADON = 1;
 10699  002FA4  80C2               	bsf	4034,0,c	;volatile
 10700                           
 10701                           ; BSR set to: 0
 10702                           ;analog.c: 11: delay_ms(5);
 10703  002FA6  0E00               	movlw	0
 10704  002FA8  0100               	movlb	0	; () banked
 10705  002FAA  0100               	movlb	0	; () banked
 10706  002FAC  6FBB               	movwf	(delay_ms@TimeToWait+1)& (0+255),b
 10707  002FAE  0E05               	movlw	5
 10708  002FB0  0100               	movlb	0	; () banked
 10709  002FB2  6FBA               	movwf	delay_ms@TimeToWait& (0+255),b
 10710  002FB4  ECF4  F019         	call	_delay_ms	;wreg free
 10711                           
 10712                           ;analog.c: 13: ADCON0bits.GO_nDONE = 1;
 10713  002FB8  84C2               	bsf	4034,2,c	;volatile
 10714  002FBA                     l972:
 10715  002FBA  B4C2               	btfsc	4034,2,c	;volatile
 10716  002FBC  D7FE               	goto	l972
 10717                           
 10718                           ;analog.c: 16: temp = ADRESH << 8;
 10719  002FBE  50C4               	movf	4036,w,c	;volatile
 10720  002FC0  0100               	movlb	0	; () banked
 10721  002FC2  0100               	movlb	0	; () banked
 10722  002FC4  6FC5               	movwf	(ana_read@temp+1)& (0+255),b
 10723  002FC6  0100               	movlb	0	; () banked
 10724  002FC8  6BC4               	clrf	ana_read@temp& (0+255),b
 10725                           
 10726                           ; BSR set to: 0
 10727                           ;analog.c: 17: temp |= ADRESL;
 10728  002FCA  50C3               	movf	4035,w,c	;volatile
 10729  002FCC  0100               	movlb	0	; () banked
 10730  002FCE  0100               	movlb	0	; () banked
 10731  002FD0  13C4               	iorwf	ana_read@temp& (0+255),f,b
 10732                           
 10733                           ; BSR set to: 0
 10734                           ;analog.c: 19: ADCON0bits.ADON = 0;
 10735  002FD2  90C2               	bcf	4034,0,c	;volatile
 10736                           
 10737                           ; BSR set to: 0
 10738                           ;analog.c: 21: return temp;
 10739  002FD4  C0C4  F0C0         	movff	ana_read@temp,?_ana_read
 10740  002FD8  C0C5  F0C1         	movff	ana_read@temp+1,?_ana_read+1
 10741                           
 10742                           ; BSR set to: 0
 10743                           
 10744                           ; BSR set to: 0
 10745  002FDC  0012               	return	
 10746  002FDE  FFFF               	dw	65535	; errata NOP
 10747  002FE0                     __end_of_ana_read:
 10748                           	opt stack 0
 10749                           tblptru	equ	0xFF8
 10750                           tblptrh	equ	0xFF7
 10751                           tblptrl	equ	0xFF6
 10752                           tablat	equ	0xFF5
 10753                           prodh	equ	0xFF4
 10754                           prodl	equ	0xFF3
 10755                           intcon	equ	0xFF2
 10756                           intcon2	equ	0xFF1
 10757                           postinc0	equ	0xFEE
 10758                           wreg	equ	0xFE8
 10759                           indf1	equ	0xFE7
 10760                           postdec1	equ	0xFE5
 10761                           fsr1h	equ	0xFE2
 10762                           fsr1l	equ	0xFE1
 10763                           indf2	equ	0xFDF
 10764                           postinc2	equ	0xFDE
 10765                           postdec2	equ	0xFDD
 10766                           fsr2h	equ	0xFDA
 10767                           fsr2l	equ	0xFD9
 10768                           status	equ	0xFD8
 10769                           
 10770 ;; *************** function _delay_ms *****************
 10771 ;; Defined at:
 10772 ;;		line 4 in file "time.c"
 10773 ;; Parameters:    Size  Location     Type
 10774 ;;  TimeToWait      2    0[BANK0 ] unsigned short 
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;  temp            2    4[BANK0 ] unsigned short 
 10777 ;; Return value:  Size  Location     Type
 10778 ;;		None               void
 10779 ;; Registers used:
 10780 ;;		wreg, status,2, status,0
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10786 ;;      Params:         0       2       0       0       0       0       0
 10787 ;;      Locals:         0       2       0       0       0       0       0
 10788 ;;      Temps:          0       2       0       0       0       0       0
 10789 ;;      Totals:         0       6       0       0       0       0       0
 10790 ;;Total ram usage:        6 bytes
 10791 ;; Hardware stack levels used:    1
 10792 ;; Hardware stack levels required when called:    3
 10793 ;; This function calls:
 10794 ;;		Nothing
 10795 ;; This function is called by:
 10796 ;;		_ana_read
 10797 ;;		_arm_UAlim_1A
 10798 ;;		_feu_tir
 10799 ;;		_feu_process
 10800 ;; This function uses a non-reentrant model
 10801 ;;
 10802                           
 10803                           	psect	text49
 10804  0033E8                     __ptext49:
 10805                           	opt stack 0
 10806  0033E8                     _delay_ms:
 10807                           	opt stack 24
 10808                           
 10809                           ; BSR set to: 0
 10810                           ;incstack = 0
 10811  0033E8  FFFF               	dw	65535
 10812                           
 10813                           ;time.c: 6: unsigned short temp = Cptms;
 10814  0033EA  C04F  F0BE         	movff	_Cptms,delay_ms@temp	;volatile
 10815  0033EE  C050  F0BF         	movff	_Cptms+1,delay_ms@temp+1	;volatile
 10816  0033F2                     l5568:
 10817  0033F2  0100               	movlb	0	; () banked
 10818  0033F4  C0BE  F0BC         	movff	delay_ms@temp,??_delay_ms
 10819  0033F8  0100               	movlb	0	; () banked
 10820  0033FA  C0BF  F0BD         	movff	delay_ms@temp+1,??_delay_ms+1
 10821  0033FE  0100               	movlb	0	; () banked
 10822  003400  1FBC               	comf	??_delay_ms& (0+255),f,b
 10823  003402  1FBD               	comf	(??_delay_ms+1)& (0+255),f,b
 10824  003404  4BBC               	infsnz	??_delay_ms& (0+255),f,b
 10825  003406  2BBD               	incf	(??_delay_ms+1)& (0+255),f,b
 10826  003408  504F               	movf	_Cptms,w,c	;volatile
 10827  00340A  0100               	movlb	0	; () banked
 10828  00340C  27BC               	addwf	??_delay_ms& (0+255),f,b
 10829  00340E  5050               	movf	_Cptms+1,w,c	;volatile
 10830  003410  0100               	movlb	0	; () banked
 10831  003412  23BD               	addwfc	(??_delay_ms+1)& (0+255),f,b
 10832  003414  0100               	movlb	0	; () banked
 10833  003416  0100               	movlb	0	; () banked
 10834  003418  51BA               	movf	delay_ms@TimeToWait& (0+255),w,b
 10835  00341A  0100               	movlb	0	; () banked
 10836  00341C  5DBC               	subwf	??_delay_ms& (0+255),w,b
 10837  00341E  0100               	movlb	0	; () banked
 10838  003420  0100               	movlb	0	; () banked
 10839  003422  51BB               	movf	(delay_ms@TimeToWait+1)& (0+255),w,b
 10840  003424  0100               	movlb	0	; () banked
 10841  003426  59BD               	subwfb	(??_delay_ms+1)& (0+255),w,b
 10842  003428  B0D8               	btfsc	status,0,c
 10843                           
 10844                           ; BSR set to: 0
 10845                           
 10846                           ; BSR set to: 0
 10847  00342A  0012               	return	
 10848  00342C  FFFF               	dw	65535	; assembler added errata NOP
 10849  00342E  D7E1               	goto	l5568
 10850  003430  FFFF               	dw	65535	; errata NOP
 10851  003432                     __end_of_delay_ms:
 10852                           	opt stack 0
 10853                           tblptru	equ	0xFF8
 10854                           tblptrh	equ	0xFF7
 10855                           tblptrl	equ	0xFF6
 10856                           tablat	equ	0xFF5
 10857                           prodh	equ	0xFF4
 10858                           prodl	equ	0xFF3
 10859                           intcon	equ	0xFF2
 10860                           intcon2	equ	0xFF1
 10861                           postinc0	equ	0xFEE
 10862                           wreg	equ	0xFE8
 10863                           indf1	equ	0xFE7
 10864                           postdec1	equ	0xFE5
 10865                           fsr1h	equ	0xFE2
 10866                           fsr1l	equ	0xFE1
 10867                           indf2	equ	0xFDF
 10868                           postinc2	equ	0xFDE
 10869                           postdec2	equ	0xFDD
 10870                           fsr2h	equ	0xFDA
 10871                           fsr2l	equ	0xFD9
 10872                           status	equ	0xFD8
 10873                           
 10874 ;; *************** function ___lwtoft *****************
 10875 ;; Defined at:
 10876 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwtoft.c"
 10877 ;; Parameters:    Size  Location     Type
 10878 ;;  c               2    8[BANK0 ] unsigned int 
 10879 ;; Auto vars:     Size  Location     Type
 10880 ;;		None
 10881 ;; Return value:  Size  Location     Type
 10882 ;;                  3    8[BANK0 ] float 
 10883 ;; Registers used:
 10884 ;;		wreg, status,2, status,0, cstack
 10885 ;; Tracked objects:
 10886 ;;		On entry : 0/0
 10887 ;;		On exit  : 0/0
 10888 ;;		Unchanged: 0/0
 10889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10890 ;;      Params:         0       3       0       0       0       0       0
 10891 ;;      Locals:         0       0       0       0       0       0       0
 10892 ;;      Temps:          0       2       0       0       0       0       0
 10893 ;;      Totals:         0       5       0       0       0       0       0
 10894 ;;Total ram usage:        5 bytes
 10895 ;; Hardware stack levels used:    1
 10896 ;; Hardware stack levels required when called:    4
 10897 ;; This function calls:
 10898 ;;		___ftpack
 10899 ;; This function is called by:
 10900 ;;		_check_UAlim
 10901 ;;		_check_UInfla
 10902 ;;		_arm_UAlim_1A
 10903 ;; This function uses a non-reentrant model
 10904 ;;
 10905                           
 10906                           	psect	text50
 10907  00339C                     __ptext50:
 10908                           	opt stack 0
 10909  00339C                     ___lwtoft:
 10910                           	opt stack 24
 10911                           
 10912                           ; BSR set to: 0
 10913                           ;incstack = 0
 10914  00339C  FFFF               	dw	65535
 10915  00339E  0100               	movlb	0	; () banked
 10916  0033A0  0100               	movlb	0	; () banked
 10917  0033A2  C0C2  F0BA         	movff	___lwtoft@c,___ftpack@arg
 10918  0033A6  0100               	movlb	0	; () banked
 10919  0033A8  0100               	movlb	0	; () banked
 10920  0033AA  C0C3  F0BB         	movff	___lwtoft@c+1,___ftpack@arg+1
 10921  0033AE  0100               	movlb	0	; () banked
 10922  0033B0  0100               	movlb	0	; () banked
 10923  0033B2  6BBC               	clrf	(___ftpack@arg+2)& (0+255),b
 10924  0033B4  0100               	movlb	0	; () banked
 10925  0033B6  6FC5               	movwf	??___lwtoft& (0+255),b
 10926  0033B8  0E8E               	movlw	142
 10927  0033BA  0100               	movlb	0	; () banked
 10928  0033BC  0100               	movlb	0	; () banked
 10929  0033BE  6FBD               	movwf	___ftpack@exp& (0+255),b
 10930  0033C0  0100               	movlb	0	; () banked
 10931  0033C2  51C5               	movf	??___lwtoft& (0+255),w,b
 10932  0033C4  0100               	movlb	0	; () banked
 10933  0033C6  6FC6               	movwf	(??___lwtoft+1)& (0+255),b
 10934  0033C8  0E00               	movlw	0
 10935  0033CA  0100               	movlb	0	; () banked
 10936  0033CC  0100               	movlb	0	; () banked
 10937  0033CE  6FBE               	movwf	___ftpack@sign& (0+255),b
 10938  0033D0  0100               	movlb	0	; () banked
 10939  0033D2  51C6               	movf	(??___lwtoft+1)& (0+255),w,b
 10940  0033D4  ECB4  F010         	call	___ftpack	;wreg free
 10941  0033D8  C0BA  F0C2         	movff	?___ftpack,?___lwtoft
 10942  0033DC  C0BB  F0C3         	movff	?___ftpack+1,?___lwtoft+1
 10943  0033E0  C0BC  F0C4         	movff	?___ftpack+2,?___lwtoft+2
 10944  0033E4  0012               	return	
 10945  0033E6  FFFF               	dw	65535	; errata NOP
 10946  0033E8                     __end_of___lwtoft:
 10947                           	opt stack 0
 10948                           tblptru	equ	0xFF8
 10949                           tblptrh	equ	0xFF7
 10950                           tblptrl	equ	0xFF6
 10951                           tablat	equ	0xFF5
 10952                           prodh	equ	0xFF4
 10953                           prodl	equ	0xFF3
 10954                           intcon	equ	0xFF2
 10955                           intcon2	equ	0xFF1
 10956                           postinc0	equ	0xFEE
 10957                           wreg	equ	0xFE8
 10958                           indf1	equ	0xFE7
 10959                           postdec1	equ	0xFE5
 10960                           fsr1h	equ	0xFE2
 10961                           fsr1l	equ	0xFE1
 10962                           indf2	equ	0xFDF
 10963                           postinc2	equ	0xFDE
 10964                           postdec2	equ	0xFDD
 10965                           fsr2h	equ	0xFDA
 10966                           fsr2l	equ	0xFD9
 10967                           status	equ	0xFD8
 10968                           
 10969 ;; *************** function ___fttol *****************
 10970 ;; Defined at:
 10971 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\fttol.c"
 10972 ;; Parameters:    Size  Location     Type
 10973 ;;  f1              3    0[BANK0 ] float 
 10974 ;; Auto vars:     Size  Location     Type
 10975 ;;  lval            4   10[BANK0 ] unsigned long 
 10976 ;;  exp1            1   14[BANK0 ] unsigned char 
 10977 ;;  sign1           1    9[BANK0 ] unsigned char 
 10978 ;; Return value:  Size  Location     Type
 10979 ;;                  4    0[BANK0 ] long 
 10980 ;; Registers used:
 10981 ;;		wreg, status,2, status,0
 10982 ;; Tracked objects:
 10983 ;;		On entry : 0/0
 10984 ;;		On exit  : 0/0
 10985 ;;		Unchanged: 0/0
 10986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10987 ;;      Params:         0       4       0       0       0       0       0
 10988 ;;      Locals:         0       6       0       0       0       0       0
 10989 ;;      Temps:          0       5       0       0       0       0       0
 10990 ;;      Totals:         0      15       0       0       0       0       0
 10991 ;;Total ram usage:       15 bytes
 10992 ;; Hardware stack levels used:    1
 10993 ;; Hardware stack levels required when called:    3
 10994 ;; This function calls:
 10995 ;;		Nothing
 10996 ;; This function is called by:
 10997 ;;		_check_UAlim
 10998 ;;		_check_UInfla
 10999 ;;		_arm_UAlim_1A
 11000 ;; This function uses a non-reentrant model
 11001 ;;
 11002                           
 11003                           	psect	text51
 11004  001BF4                     __ptext51:
 11005                           	opt stack 0
 11006  001BF4                     ___fttol:
 11007                           	opt stack 25
 11008                           
 11009                           ;incstack = 0
 11010  001BF4  FFFF               	dw	65535
 11011  001BF6  0100               	movlb	0	; () banked
 11012  001BF8  C0BC  F0BE         	movff	___fttol@f1+2,??___fttol
 11013  001BFC  0100               	movlb	0	; () banked
 11014  001BFE  6BBF               	clrf	(??___fttol+1)& (0+255),b
 11015  001C00  6BC0               	clrf	(??___fttol+2)& (0+255),b
 11016  001C02  0100               	movlb	0	; () banked
 11017  001C04  0100               	movlb	0	; () banked
 11018  001C06  35BB               	rlcf	(___fttol@f1+1)& (0+255),w,b
 11019  001C08  0100               	movlb	0	; () banked
 11020  001C0A  37BE               	rlcf	??___fttol& (0+255),f,b
 11021  001C0C  E301               	bnc	u5131
 11022  001C0E  81BF               	bsf	(??___fttol+1)& (0+255),0,b
 11023  001C10                     u5131:
 11024  001C10  0100               	movlb	0	; () banked
 11025  001C12  51BE               	movf	??___fttol& (0+255),w,b
 11026  001C14  0100               	movlb	0	; () banked
 11027  001C16  0100               	movlb	0	; () banked
 11028  001C18  6FC8               	movwf	___fttol@exp1& (0+255),b
 11029  001C1A  0100               	movlb	0	; () banked
 11030  001C1C  67C8               	tstfsz	___fttol@exp1& (0+255),b
 11031  001C1E  D001               	goto	l5882
 11032  001C20  D066               	goto	u5180
 11033  001C22                     l5882:
 11034                           
 11035                           ; BSR set to: 0
 11036  001C22  0E17               	movlw	23
 11037  001C24  0100               	movlb	0	; () banked
 11038  001C26  6FBE               	movwf	??___fttol& (0+255),b
 11039  001C28  0100               	movlb	0	; () banked
 11040  001C2A  C0BA  F0BF         	movff	___fttol@f1,??___fttol+1
 11041  001C2E  0100               	movlb	0	; () banked
 11042  001C30  C0BB  F0C0         	movff	___fttol@f1+1,??___fttol+2
 11043  001C34  0100               	movlb	0	; () banked
 11044  001C36  C0BC  F0C1         	movff	___fttol@f1+2,??___fttol+3
 11045  001C3A  0100               	movlb	0	; () banked
 11046  001C3C  29BE               	incf	??___fttol& (0+255),w,b
 11047  001C3E  0100               	movlb	0	; () banked
 11048  001C40  6FC2               	movwf	(??___fttol+4)& (0+255),b
 11049  001C42  D005               	goto	u5150
 11050  001C44                     u5155:
 11051  001C44  0100               	movlb	0	; () banked
 11052  001C46  90D8               	bcf	status,0,c
 11053  001C48  33C1               	rrcf	(??___fttol+3)& (0+255),f,b
 11054  001C4A  33C0               	rrcf	(??___fttol+2)& (0+255),f,b
 11055  001C4C  33BF               	rrcf	(??___fttol+1)& (0+255),f,b
 11056  001C4E                     u5150:
 11057  001C4E  0100               	movlb	0	; () banked
 11058  001C50  2FC2               	decfsz	(??___fttol+4)& (0+255),f,b
 11059  001C52  D7F8               	goto	u5155
 11060  001C54  0100               	movlb	0	; () banked
 11061  001C56  51BF               	movf	(??___fttol+1)& (0+255),w,b
 11062  001C58  0100               	movlb	0	; () banked
 11063  001C5A  0100               	movlb	0	; () banked
 11064  001C5C  6FC3               	movwf	___fttol@sign1& (0+255),b
 11065                           
 11066                           ; BSR set to: 0
 11067  001C5E  0100               	movlb	0	; () banked
 11068  001C60  0100               	movlb	0	; () banked
 11069  001C62  8FBB               	bsf	(___fttol@f1+1)& (0+255),7,b
 11070                           
 11071                           ; BSR set to: 0
 11072  001C64  0EFF               	movlw	255
 11073  001C66  0100               	movlb	0	; () banked
 11074  001C68  0100               	movlb	0	; () banked
 11075  001C6A  17BA               	andwf	___fttol@f1& (0+255),f,b
 11076  001C6C  0EFF               	movlw	255
 11077  001C6E  0100               	movlb	0	; () banked
 11078  001C70  0100               	movlb	0	; () banked
 11079  001C72  17BB               	andwf	(___fttol@f1+1)& (0+255),f,b
 11080  001C74  0E00               	movlw	0
 11081  001C76  0100               	movlb	0	; () banked
 11082  001C78  0100               	movlb	0	; () banked
 11083  001C7A  17BC               	andwf	(___fttol@f1+2)& (0+255),f,b
 11084                           
 11085                           ; BSR set to: 0
 11086  001C7C  0100               	movlb	0	; () banked
 11087  001C7E  0100               	movlb	0	; () banked
 11088  001C80  51BA               	movf	___fttol@f1& (0+255),w,b
 11089  001C82  0100               	movlb	0	; () banked
 11090  001C84  0100               	movlb	0	; () banked
 11091  001C86  6FC4               	movwf	___fttol@lval& (0+255),b
 11092  001C88  0100               	movlb	0	; () banked
 11093  001C8A  0100               	movlb	0	; () banked
 11094  001C8C  51BB               	movf	(___fttol@f1+1)& (0+255),w,b
 11095  001C8E  0100               	movlb	0	; () banked
 11096  001C90  6FC5               	movwf	(___fttol@lval+1)& (0+255),b
 11097  001C92  0100               	movlb	0	; () banked
 11098  001C94  51BC               	movf	(___fttol@f1+2)& (0+255),w,b
 11099  001C96  0100               	movlb	0	; () banked
 11100  001C98  6FC6               	movwf	(___fttol@lval+2)& (0+255),b
 11101  001C9A  0100               	movlb	0	; () banked
 11102  001C9C  6BC7               	clrf	(___fttol@lval+3)& (0+255),b
 11103                           
 11104                           ; BSR set to: 0
 11105  001C9E  0E8E               	movlw	142
 11106  001CA0  0100               	movlb	0	; () banked
 11107  001CA2  0100               	movlb	0	; () banked
 11108  001CA4  5FC8               	subwf	___fttol@exp1& (0+255),f,b
 11109                           
 11110                           ; BSR set to: 0
 11111  001CA6  0100               	movlb	0	; () banked
 11112  001CA8  0100               	movlb	0	; () banked
 11113  001CAA  AFC8               	btfss	___fttol@exp1& (0+255),7,b
 11114  001CAC  D01B               	goto	l5904
 11115                           
 11116                           ; BSR set to: 0
 11117  001CAE  0100               	movlb	0	; () banked
 11118  001CB0  0100               	movlb	0	; () banked
 11119  001CB2  51C8               	movf	___fttol@exp1& (0+255),w,b
 11120  001CB4  0A80               	xorlw	128
 11121  001CB6  0100               	movlb	0	; () banked
 11122  001CB8  6FBE               	movwf	??___fttol& (0+255),b
 11123  001CBA  0EF1               	movlw	241
 11124  001CBC  0A80               	xorlw	128
 11125  001CBE  0100               	movlb	0	; () banked
 11126  001CC0  5DBE               	subwf	??___fttol& (0+255),w,b
 11127  001CC2  A0D8               	btfss	status,0,c
 11128  001CC4  D014               	goto	u5180
 11129  001CC6                     l5900:
 11130                           
 11131                           ; BSR set to: 0
 11132  001CC6  0100               	movlb	0	; () banked
 11133  001CC8  90D8               	bcf	status,0,c
 11134  001CCA  0100               	movlb	0	; () banked
 11135  001CCC  33C7               	rrcf	(___fttol@lval+3)& (0+255),f,b
 11136  001CCE  0100               	movlb	0	; () banked
 11137  001CD0  33C6               	rrcf	(___fttol@lval+2)& (0+255),f,b
 11138  001CD2  0100               	movlb	0	; () banked
 11139  001CD4  33C5               	rrcf	(___fttol@lval+1)& (0+255),f,b
 11140  001CD6  0100               	movlb	0	; () banked
 11141  001CD8  33C4               	rrcf	___fttol@lval& (0+255),f,b
 11142                           
 11143                           ; BSR set to: 0
 11144  001CDA  0100               	movlb	0	; () banked
 11145  001CDC  0100               	movlb	0	; () banked
 11146  001CDE  3FC8               	incfsz	___fttol@exp1& (0+255),f,b
 11147  001CE0  D7F2               	goto	l5900
 11148  001CE2  D024               	goto	l5914
 11149  001CE4                     l5904:
 11150                           
 11151                           ; BSR set to: 0
 11152  001CE4  0E17               	movlw	23
 11153  001CE6  0100               	movlb	0	; () banked
 11154  001CE8  0100               	movlb	0	; () banked
 11155  001CEA  65C8               	cpfsgt	___fttol@exp1& (0+255),b
 11156  001CEC  D01B               	goto	l5912
 11157  001CEE                     u5180:
 11158                           
 11159                           ; BSR set to: 0
 11160  001CEE  0E00               	movlw	0
 11161  001CF0  0100               	movlb	0	; () banked
 11162  001CF2  0100               	movlb	0	; () banked
 11163  001CF4  6FBA               	movwf	?___fttol& (0+255),b
 11164  001CF6  0E00               	movlw	0
 11165  001CF8  0100               	movlb	0	; () banked
 11166  001CFA  6FBB               	movwf	(?___fttol+1)& (0+255),b
 11167  001CFC  0E00               	movlw	0
 11168  001CFE  0100               	movlb	0	; () banked
 11169  001D00  6FBC               	movwf	(?___fttol+2)& (0+255),b
 11170  001D02  0E00               	movlw	0
 11171  001D04  0100               	movlb	0	; () banked
 11172  001D06  6FBD               	movwf	(?___fttol+3)& (0+255),b
 11173  001D08  D02E               	goto	l1554
 11174  001D0A                     l5910:
 11175                           
 11176                           ; BSR set to: 0
 11177  001D0A  0100               	movlb	0	; () banked
 11178  001D0C  90D8               	bcf	status,0,c
 11179  001D0E  0100               	movlb	0	; () banked
 11180  001D10  37C4               	rlcf	___fttol@lval& (0+255),f,b
 11181  001D12  0100               	movlb	0	; () banked
 11182  001D14  37C5               	rlcf	(___fttol@lval+1)& (0+255),f,b
 11183  001D16  0100               	movlb	0	; () banked
 11184  001D18  37C6               	rlcf	(___fttol@lval+2)& (0+255),f,b
 11185  001D1A  0100               	movlb	0	; () banked
 11186  001D1C  37C7               	rlcf	(___fttol@lval+3)& (0+255),f,b
 11187  001D1E  0100               	movlb	0	; () banked
 11188  001D20  0100               	movlb	0	; () banked
 11189  001D22  07C8               	decf	___fttol@exp1& (0+255),f,b
 11190  001D24                     l5912:
 11191                           
 11192                           ; BSR set to: 0
 11193  001D24  0100               	movlb	0	; () banked
 11194  001D26  0100               	movlb	0	; () banked
 11195  001D28  67C8               	tstfsz	___fttol@exp1& (0+255),b
 11196  001D2A  D7EF               	goto	l5910
 11197  001D2C                     l5914:
 11198                           
 11199                           ; BSR set to: 0
 11200  001D2C  0100               	movlb	0	; () banked
 11201  001D2E  0100               	movlb	0	; () banked
 11202  001D30  51C3               	movf	___fttol@sign1& (0+255),w,b
 11203  001D32  B4D8               	btfsc	status,2,c
 11204  001D34  D010               	goto	l5918
 11205                           
 11206                           ; BSR set to: 0
 11207  001D36  0100               	movlb	0	; () banked
 11208  001D38  0100               	movlb	0	; () banked
 11209  001D3A  1FC7               	comf	(___fttol@lval+3)& (0+255),f,b
 11210  001D3C  0100               	movlb	0	; () banked
 11211  001D3E  1FC6               	comf	(___fttol@lval+2)& (0+255),f,b
 11212  001D40  0100               	movlb	0	; () banked
 11213  001D42  1FC5               	comf	(___fttol@lval+1)& (0+255),f,b
 11214  001D44  0100               	movlb	0	; () banked
 11215  001D46  6DC4               	negf	___fttol@lval& (0+255),b
 11216  001D48  0E00               	movlw	0
 11217  001D4A  0100               	movlb	0	; () banked
 11218  001D4C  23C5               	addwfc	(___fttol@lval+1)& (0+255),f,b
 11219  001D4E  0100               	movlb	0	; () banked
 11220  001D50  23C6               	addwfc	(___fttol@lval+2)& (0+255),f,b
 11221  001D52  0100               	movlb	0	; () banked
 11222  001D54  23C7               	addwfc	(___fttol@lval+3)& (0+255),f,b
 11223  001D56                     l5918:
 11224                           
 11225                           ; BSR set to: 0
 11226  001D56  C0C4  F0BA         	movff	___fttol@lval,?___fttol
 11227  001D5A  C0C5  F0BB         	movff	___fttol@lval+1,?___fttol+1
 11228  001D5E  C0C6  F0BC         	movff	___fttol@lval+2,?___fttol+2
 11229  001D62  C0C7  F0BD         	movff	___fttol@lval+3,?___fttol+3
 11230  001D66                     l1554:
 11231                           
 11232                           ; BSR set to: 0
 11233  001D66  0012               	return	
 11234  001D68  FFFF               	dw	65535	; errata NOP
 11235  001D6A                     __end_of___fttol:
 11236                           	opt stack 0
 11237                           tblptru	equ	0xFF8
 11238                           tblptrh	equ	0xFF7
 11239                           tblptrl	equ	0xFF6
 11240                           tablat	equ	0xFF5
 11241                           prodh	equ	0xFF4
 11242                           prodl	equ	0xFF3
 11243                           intcon	equ	0xFF2
 11244                           intcon2	equ	0xFF1
 11245                           postinc0	equ	0xFEE
 11246                           wreg	equ	0xFE8
 11247                           indf1	equ	0xFE7
 11248                           postdec1	equ	0xFE5
 11249                           fsr1h	equ	0xFE2
 11250                           fsr1l	equ	0xFE1
 11251                           indf2	equ	0xFDF
 11252                           postinc2	equ	0xFDE
 11253                           postdec2	equ	0xFDD
 11254                           fsr2h	equ	0xFDA
 11255                           fsr2l	equ	0xFD9
 11256                           status	equ	0xFD8
 11257                           
 11258 ;; *************** function ___ftmul *****************
 11259 ;; Defined at:
 11260 ;;		line 51 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\ftmul.c"
 11261 ;; Parameters:    Size  Location     Type
 11262 ;;  f1              3   13[BANK0 ] float 
 11263 ;;  f2              3   16[BANK0 ] float 
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;  f3_as_produc    3   23[BANK0 ] unsigned um
 11266 ;;  sign            1   27[BANK0 ] unsigned char 
 11267 ;;  cntr            1   26[BANK0 ] unsigned char 
 11268 ;;  exp             1   22[BANK0 ] unsigned char 
 11269 ;; Return value:  Size  Location     Type
 11270 ;;                  3   13[BANK0 ] float 
 11271 ;; Registers used:
 11272 ;;		wreg, status,2, status,0, cstack
 11273 ;; Tracked objects:
 11274 ;;		On entry : 0/0
 11275 ;;		On exit  : 0/0
 11276 ;;		Unchanged: 0/0
 11277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11278 ;;      Params:         0       6       0       0       0       0       0
 11279 ;;      Locals:         0       6       0       0       0       0       0
 11280 ;;      Temps:          0       3       0       0       0       0       0
 11281 ;;      Totals:         0      15       0       0       0       0       0
 11282 ;;Total ram usage:       15 bytes
 11283 ;; Hardware stack levels used:    1
 11284 ;; Hardware stack levels required when called:    4
 11285 ;; This function calls:
 11286 ;;		___ftpack
 11287 ;; This function is called by:
 11288 ;;		_check_UAlim
 11289 ;;		_check_UInfla
 11290 ;;		_arm_UAlim_1A
 11291 ;; This function uses a non-reentrant model
 11292 ;;
 11293                           
 11294                           	psect	text52
 11295  0013BC                     __ptext52:
 11296                           	opt stack 0
 11297  0013BC                     ___ftmul:
 11298                           	opt stack 24
 11299                           
 11300                           ; BSR set to: 0
 11301                           ;incstack = 0
 11302  0013BC  FFFF               	dw	65535
 11303  0013BE  0100               	movlb	0	; () banked
 11304  0013C0  C0C9  F0CD         	movff	___ftmul@f1+2,??___ftmul
 11305  0013C4  0100               	movlb	0	; () banked
 11306  0013C6  6BCE               	clrf	(??___ftmul+1)& (0+255),b
 11307  0013C8  6BCF               	clrf	(??___ftmul+2)& (0+255),b
 11308  0013CA  0100               	movlb	0	; () banked
 11309  0013CC  0100               	movlb	0	; () banked
 11310  0013CE  35C8               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 11311  0013D0  0100               	movlb	0	; () banked
 11312  0013D2  37CD               	rlcf	??___ftmul& (0+255),f,b
 11313  0013D4  E301               	bnc	u5071
 11314  0013D6  81CE               	bsf	(??___ftmul+1)& (0+255),0,b
 11315  0013D8                     u5071:
 11316  0013D8  0100               	movlb	0	; () banked
 11317  0013DA  51CD               	movf	??___ftmul& (0+255),w,b
 11318  0013DC  0100               	movlb	0	; () banked
 11319  0013DE  0100               	movlb	0	; () banked
 11320  0013E0  6FD0               	movwf	___ftmul@exp& (0+255),b
 11321  0013E2  0100               	movlb	0	; () banked
 11322  0013E4  67D0               	tstfsz	___ftmul@exp& (0+255),b
 11323  0013E6  D001               	goto	l5834
 11324  0013E8  D015               	goto	u5100
 11325  0013EA                     l5834:
 11326                           
 11327                           ; BSR set to: 0
 11328  0013EA  0100               	movlb	0	; () banked
 11329  0013EC  C0CC  F0CD         	movff	___ftmul@f2+2,??___ftmul
 11330  0013F0  0100               	movlb	0	; () banked
 11331  0013F2  6BCE               	clrf	(??___ftmul+1)& (0+255),b
 11332  0013F4  6BCF               	clrf	(??___ftmul+2)& (0+255),b
 11333  0013F6  0100               	movlb	0	; () banked
 11334  0013F8  0100               	movlb	0	; () banked
 11335  0013FA  35CB               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 11336  0013FC  0100               	movlb	0	; () banked
 11337  0013FE  37CD               	rlcf	??___ftmul& (0+255),f,b
 11338  001400  E301               	bnc	u5091
 11339  001402  81CE               	bsf	(??___ftmul+1)& (0+255),0,b
 11340  001404                     u5091:
 11341  001404  0100               	movlb	0	; () banked
 11342  001406  51CD               	movf	??___ftmul& (0+255),w,b
 11343  001408  0100               	movlb	0	; () banked
 11344  00140A  0100               	movlb	0	; () banked
 11345  00140C  6FD5               	movwf	___ftmul@sign& (0+255),b
 11346  00140E  0100               	movlb	0	; () banked
 11347  001410  67D5               	tstfsz	___ftmul@sign& (0+255),b
 11348  001412  D00D               	goto	l5840
 11349  001414                     u5100:
 11350                           
 11351                           ; BSR set to: 0
 11352  001414  0E00               	movlw	0
 11353  001416  0100               	movlb	0	; () banked
 11354  001418  0100               	movlb	0	; () banked
 11355  00141A  6FC7               	movwf	?___ftmul& (0+255),b
 11356  00141C  0E00               	movlw	0
 11357  00141E  0100               	movlb	0	; () banked
 11358  001420  0100               	movlb	0	; () banked
 11359  001422  6FC8               	movwf	(?___ftmul+1)& (0+255),b
 11360  001424  0E00               	movlw	0
 11361  001426  0100               	movlb	0	; () banked
 11362  001428  0100               	movlb	0	; () banked
 11363  00142A  6FC9               	movwf	(?___ftmul+2)& (0+255),b
 11364  00142C  D0A7               	goto	l1534
 11365  00142E                     l5840:
 11366                           
 11367                           ; BSR set to: 0
 11368  00142E  0100               	movlb	0	; () banked
 11369  001430  0100               	movlb	0	; () banked
 11370  001432  51D5               	movf	___ftmul@sign& (0+255),w,b
 11371  001434  0F7B               	addlw	123
 11372  001436  0100               	movlb	0	; () banked
 11373  001438  0100               	movlb	0	; () banked
 11374  00143A  27D0               	addwf	___ftmul@exp& (0+255),f,b
 11375                           
 11376                           ; BSR set to: 0
 11377  00143C  C0C9  F0D5         	movff	___ftmul@f1+2,___ftmul@sign
 11378  001440  0100               	movlb	0	; () banked
 11379  001442  0100               	movlb	0	; () banked
 11380  001444  51CC               	movf	(___ftmul@f2+2)& (0+255),w,b
 11381  001446  0100               	movlb	0	; () banked
 11382  001448  0100               	movlb	0	; () banked
 11383  00144A  1BD5               	xorwf	___ftmul@sign& (0+255),f,b
 11384  00144C  0E80               	movlw	128
 11385  00144E  0100               	movlb	0	; () banked
 11386  001450  0100               	movlb	0	; () banked
 11387  001452  17D5               	andwf	___ftmul@sign& (0+255),f,b
 11388                           
 11389                           ; BSR set to: 0
 11390  001454  0100               	movlb	0	; () banked
 11391  001456  0100               	movlb	0	; () banked
 11392  001458  8FC8               	bsf	(___ftmul@f1+1)& (0+255),7,b
 11393                           
 11394                           ; BSR set to: 0
 11395  00145A  0100               	movlb	0	; () banked
 11396  00145C  0100               	movlb	0	; () banked
 11397  00145E  8FCB               	bsf	(___ftmul@f2+1)& (0+255),7,b
 11398                           
 11399                           ; BSR set to: 0
 11400  001460  0EFF               	movlw	255
 11401  001462  0100               	movlb	0	; () banked
 11402  001464  0100               	movlb	0	; () banked
 11403  001466  17CA               	andwf	___ftmul@f2& (0+255),f,b
 11404  001468  0EFF               	movlw	255
 11405  00146A  0100               	movlb	0	; () banked
 11406  00146C  0100               	movlb	0	; () banked
 11407  00146E  17CB               	andwf	(___ftmul@f2+1)& (0+255),f,b
 11408  001470  0E00               	movlw	0
 11409  001472  0100               	movlb	0	; () banked
 11410  001474  0100               	movlb	0	; () banked
 11411  001476  17CC               	andwf	(___ftmul@f2+2)& (0+255),f,b
 11412                           
 11413                           ; BSR set to: 0
 11414  001478  0E00               	movlw	0
 11415  00147A  0100               	movlb	0	; () banked
 11416  00147C  0100               	movlb	0	; () banked
 11417  00147E  6FD1               	movwf	___ftmul@f3_as_product& (0+255),b
 11418  001480  0E00               	movlw	0
 11419  001482  0100               	movlb	0	; () banked
 11420  001484  0100               	movlb	0	; () banked
 11421  001486  6FD2               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 11422  001488  0E00               	movlw	0
 11423  00148A  0100               	movlb	0	; () banked
 11424  00148C  0100               	movlb	0	; () banked
 11425  00148E  6FD3               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 11426                           
 11427                           ; BSR set to: 0
 11428  001490  0100               	movlb	0	; () banked
 11429  001492  6FCD               	movwf	??___ftmul& (0+255),b
 11430  001494  0E07               	movlw	7
 11431  001496  0100               	movlb	0	; () banked
 11432  001498  0100               	movlb	0	; () banked
 11433  00149A  6FD4               	movwf	___ftmul@cntr& (0+255),b
 11434  00149C  0100               	movlb	0	; () banked
 11435  00149E  51CD               	movf	??___ftmul& (0+255),w,b
 11436  0014A0                     l5854:
 11437                           
 11438                           ; BSR set to: 0
 11439  0014A0  0100               	movlb	0	; () banked
 11440  0014A2  0100               	movlb	0	; () banked
 11441  0014A4  A1C7               	btfss	___ftmul@f1& (0+255),0,b
 11442  0014A6  D012               	goto	l5858
 11443                           
 11444                           ; BSR set to: 0
 11445  0014A8  0100               	movlb	0	; () banked
 11446  0014AA  0100               	movlb	0	; () banked
 11447  0014AC  51CA               	movf	___ftmul@f2& (0+255),w,b
 11448  0014AE  0100               	movlb	0	; () banked
 11449  0014B0  0100               	movlb	0	; () banked
 11450  0014B2  27D1               	addwf	___ftmul@f3_as_product& (0+255),f,b
 11451  0014B4  0100               	movlb	0	; () banked
 11452  0014B6  0100               	movlb	0	; () banked
 11453  0014B8  51CB               	movf	(___ftmul@f2+1)& (0+255),w,b
 11454  0014BA  0100               	movlb	0	; () banked
 11455  0014BC  0100               	movlb	0	; () banked
 11456  0014BE  23D2               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 11457  0014C0  0100               	movlb	0	; () banked
 11458  0014C2  0100               	movlb	0	; () banked
 11459  0014C4  51CC               	movf	(___ftmul@f2+2)& (0+255),w,b
 11460  0014C6  0100               	movlb	0	; () banked
 11461  0014C8  0100               	movlb	0	; () banked
 11462  0014CA  23D3               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 11463  0014CC                     l5858:
 11464                           
 11465                           ; BSR set to: 0
 11466  0014CC  0100               	movlb	0	; () banked
 11467  0014CE  90D8               	bcf	status,0,c
 11468  0014D0  0100               	movlb	0	; () banked
 11469  0014D2  33C9               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 11470  0014D4  0100               	movlb	0	; () banked
 11471  0014D6  33C8               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 11472  0014D8  0100               	movlb	0	; () banked
 11473  0014DA  33C7               	rrcf	___ftmul@f1& (0+255),f,b
 11474  0014DC  0100               	movlb	0	; () banked
 11475  0014DE  90D8               	bcf	status,0,c
 11476  0014E0  0100               	movlb	0	; () banked
 11477  0014E2  37CA               	rlcf	___ftmul@f2& (0+255),f,b
 11478  0014E4  0100               	movlb	0	; () banked
 11479  0014E6  37CB               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 11480  0014E8  0100               	movlb	0	; () banked
 11481  0014EA  37CC               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 11482                           
 11483                           ; BSR set to: 0
 11484  0014EC  0100               	movlb	0	; () banked
 11485  0014EE  0100               	movlb	0	; () banked
 11486  0014F0  2FD4               	decfsz	___ftmul@cntr& (0+255),f,b
 11487  0014F2  D7D6               	goto	l5854
 11488                           
 11489                           ; BSR set to: 0
 11490                           
 11491                           ; BSR set to: 0
 11492  0014F4  0100               	movlb	0	; () banked
 11493  0014F6  6FCD               	movwf	??___ftmul& (0+255),b
 11494  0014F8  0E09               	movlw	9
 11495  0014FA  0100               	movlb	0	; () banked
 11496  0014FC  0100               	movlb	0	; () banked
 11497  0014FE  6FD4               	movwf	___ftmul@cntr& (0+255),b
 11498  001500  0100               	movlb	0	; () banked
 11499  001502  51CD               	movf	??___ftmul& (0+255),w,b
 11500  001504                     l5864:
 11501                           
 11502                           ; BSR set to: 0
 11503  001504  0100               	movlb	0	; () banked
 11504  001506  0100               	movlb	0	; () banked
 11505  001508  A1C7               	btfss	___ftmul@f1& (0+255),0,b
 11506  00150A  D012               	goto	l5868
 11507                           
 11508                           ; BSR set to: 0
 11509  00150C  0100               	movlb	0	; () banked
 11510  00150E  0100               	movlb	0	; () banked
 11511  001510  51CA               	movf	___ftmul@f2& (0+255),w,b
 11512  001512  0100               	movlb	0	; () banked
 11513  001514  0100               	movlb	0	; () banked
 11514  001516  27D1               	addwf	___ftmul@f3_as_product& (0+255),f,b
 11515  001518  0100               	movlb	0	; () banked
 11516  00151A  0100               	movlb	0	; () banked
 11517  00151C  51CB               	movf	(___ftmul@f2+1)& (0+255),w,b
 11518  00151E  0100               	movlb	0	; () banked
 11519  001520  0100               	movlb	0	; () banked
 11520  001522  23D2               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 11521  001524  0100               	movlb	0	; () banked
 11522  001526  0100               	movlb	0	; () banked
 11523  001528  51CC               	movf	(___ftmul@f2+2)& (0+255),w,b
 11524  00152A  0100               	movlb	0	; () banked
 11525  00152C  0100               	movlb	0	; () banked
 11526  00152E  23D3               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 11527  001530                     l5868:
 11528                           
 11529                           ; BSR set to: 0
 11530  001530  0100               	movlb	0	; () banked
 11531  001532  90D8               	bcf	status,0,c
 11532  001534  0100               	movlb	0	; () banked
 11533  001536  33C9               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 11534  001538  0100               	movlb	0	; () banked
 11535  00153A  33C8               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 11536  00153C  0100               	movlb	0	; () banked
 11537  00153E  33C7               	rrcf	___ftmul@f1& (0+255),f,b
 11538  001540  0100               	movlb	0	; () banked
 11539  001542  90D8               	bcf	status,0,c
 11540  001544  0100               	movlb	0	; () banked
 11541  001546  33D3               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 11542  001548  0100               	movlb	0	; () banked
 11543  00154A  33D2               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 11544  00154C  0100               	movlb	0	; () banked
 11545  00154E  33D1               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 11546                           
 11547                           ; BSR set to: 0
 11548  001550  0100               	movlb	0	; () banked
 11549  001552  0100               	movlb	0	; () banked
 11550  001554  2FD4               	decfsz	___ftmul@cntr& (0+255),f,b
 11551  001556  D7D6               	goto	l5864
 11552                           
 11553                           ; BSR set to: 0
 11554                           
 11555                           ; BSR set to: 0
 11556  001558  C0D1  F0BA         	movff	___ftmul@f3_as_product,___ftpack@arg
 11557  00155C  C0D2  F0BB         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 11558  001560  C0D3  F0BC         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 11559  001564  C0D0  F0BD         	movff	___ftmul@exp,___ftpack@exp
 11560  001568  C0D5  F0BE         	movff	___ftmul@sign,___ftpack@sign
 11561  00156C  ECB4  F010         	call	___ftpack	;wreg free
 11562  001570  C0BA  F0C7         	movff	?___ftpack,?___ftmul
 11563  001574  C0BB  F0C8         	movff	?___ftpack+1,?___ftmul+1
 11564  001578  C0BC  F0C9         	movff	?___ftpack+2,?___ftmul+2
 11565  00157C                     l1534:
 11566  00157C  0012               	return	
 11567  00157E  FFFF               	dw	65535	; errata NOP
 11568  001580                     __end_of___ftmul:
 11569                           	opt stack 0
 11570                           tblptru	equ	0xFF8
 11571                           tblptrh	equ	0xFF7
 11572                           tblptrl	equ	0xFF6
 11573                           tablat	equ	0xFF5
 11574                           prodh	equ	0xFF4
 11575                           prodl	equ	0xFF3
 11576                           intcon	equ	0xFF2
 11577                           intcon2	equ	0xFF1
 11578                           postinc0	equ	0xFEE
 11579                           wreg	equ	0xFE8
 11580                           indf1	equ	0xFE7
 11581                           postdec1	equ	0xFE5
 11582                           fsr1h	equ	0xFE2
 11583                           fsr1l	equ	0xFE1
 11584                           indf2	equ	0xFDF
 11585                           postinc2	equ	0xFDE
 11586                           postdec2	equ	0xFDD
 11587                           fsr2h	equ	0xFDA
 11588                           fsr2l	equ	0xFD9
 11589                           status	equ	0xFD8
 11590                           
 11591 ;; *************** function ___ftpack *****************
 11592 ;; Defined at:
 11593 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\float.c"
 11594 ;; Parameters:    Size  Location     Type
 11595 ;;  arg             3    0[BANK0 ] unsigned um
 11596 ;;  exp             1    3[BANK0 ] unsigned char 
 11597 ;;  sign            1    4[BANK0 ] unsigned char 
 11598 ;; Auto vars:     Size  Location     Type
 11599 ;;		None
 11600 ;; Return value:  Size  Location     Type
 11601 ;;                  3    0[BANK0 ] float 
 11602 ;; Registers used:
 11603 ;;		wreg, status,2, status,0
 11604 ;; Tracked objects:
 11605 ;;		On entry : 0/0
 11606 ;;		On exit  : 0/0
 11607 ;;		Unchanged: 0/0
 11608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11609 ;;      Params:         0       5       0       0       0       0       0
 11610 ;;      Locals:         0       0       0       0       0       0       0
 11611 ;;      Temps:          0       3       0       0       0       0       0
 11612 ;;      Totals:         0       8       0       0       0       0       0
 11613 ;;Total ram usage:        8 bytes
 11614 ;; Hardware stack levels used:    1
 11615 ;; Hardware stack levels required when called:    3
 11616 ;; This function calls:
 11617 ;;		Nothing
 11618 ;; This function is called by:
 11619 ;;		___ftmul
 11620 ;;		___lwtoft
 11621 ;; This function uses a non-reentrant model
 11622 ;;
 11623                           
 11624                           	psect	text53
 11625  002168                     __ptext53:
 11626                           	opt stack 0
 11627  002168                     ___ftpack:
 11628                           	opt stack 24
 11629                           
 11630                           ;incstack = 0
 11631  002168  FFFF               	dw	65535
 11632  00216A  0100               	movlb	0	; () banked
 11633  00216C  0100               	movlb	0	; () banked
 11634  00216E  51BD               	movf	___ftpack@exp& (0+255),w,b
 11635  002170  B4D8               	btfsc	status,2,c
 11636  002172  D009               	goto	l5574
 11637                           
 11638                           ; BSR set to: 0
 11639  002174  0100               	movlb	0	; () banked
 11640  002176  0100               	movlb	0	; () banked
 11641  002178  51BA               	movf	___ftpack@arg& (0+255),w,b
 11642  00217A  0100               	movlb	0	; () banked
 11643  00217C  11BB               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 11644  00217E  0100               	movlb	0	; () banked
 11645  002180  11BC               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 11646  002182  A4D8               	btfss	status,2,c
 11647  002184  D018               	goto	l5580
 11648  002186                     l5574:
 11649                           
 11650                           ; BSR set to: 0
 11651  002186  0E00               	movlw	0
 11652  002188  0100               	movlb	0	; () banked
 11653  00218A  0100               	movlb	0	; () banked
 11654  00218C  6FBA               	movwf	?___ftpack& (0+255),b
 11655  00218E  0E00               	movlw	0
 11656  002190  0100               	movlb	0	; () banked
 11657  002192  0100               	movlb	0	; () banked
 11658  002194  6FBB               	movwf	(?___ftpack+1)& (0+255),b
 11659  002196  0E00               	movlw	0
 11660  002198  0100               	movlb	0	; () banked
 11661  00219A  0100               	movlb	0	; () banked
 11662  00219C  6FBC               	movwf	(?___ftpack+2)& (0+255),b
 11663  00219E  D081               	goto	l1450
 11664  0021A0                     l5578:
 11665                           
 11666                           ; BSR set to: 0
 11667  0021A0  0100               	movlb	0	; () banked
 11668  0021A2  0100               	movlb	0	; () banked
 11669  0021A4  2BBD               	incf	___ftpack@exp& (0+255),f,b
 11670  0021A6  0100               	movlb	0	; () banked
 11671  0021A8  90D8               	bcf	status,0,c
 11672  0021AA  0100               	movlb	0	; () banked
 11673  0021AC  33BC               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 11674  0021AE  0100               	movlb	0	; () banked
 11675  0021B0  33BB               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 11676  0021B2  0100               	movlb	0	; () banked
 11677  0021B4  33BA               	rrcf	___ftpack@arg& (0+255),f,b
 11678  0021B6                     l5580:
 11679                           
 11680                           ; BSR set to: 0
 11681  0021B6  0E00               	movlw	0
 11682  0021B8  0100               	movlb	0	; () banked
 11683  0021BA  0100               	movlb	0	; () banked
 11684  0021BC  15BA               	andwf	___ftpack@arg& (0+255),w,b
 11685  0021BE  0100               	movlb	0	; () banked
 11686  0021C0  6FBF               	movwf	??___ftpack& (0+255),b
 11687  0021C2  0E00               	movlw	0
 11688  0021C4  0100               	movlb	0	; () banked
 11689  0021C6  0100               	movlb	0	; () banked
 11690  0021C8  15BB               	andwf	(___ftpack@arg+1)& (0+255),w,b
 11691  0021CA  0100               	movlb	0	; () banked
 11692  0021CC  6FC0               	movwf	(??___ftpack+1)& (0+255),b
 11693  0021CE  0EFE               	movlw	254
 11694  0021D0  0100               	movlb	0	; () banked
 11695  0021D2  0100               	movlb	0	; () banked
 11696  0021D4  15BC               	andwf	(___ftpack@arg+2)& (0+255),w,b
 11697  0021D6  0100               	movlb	0	; () banked
 11698  0021D8  6FC1               	movwf	(??___ftpack+2)& (0+255),b
 11699  0021DA  0100               	movlb	0	; () banked
 11700  0021DC  51BF               	movf	??___ftpack& (0+255),w,b
 11701  0021DE  11C0               	iorwf	(??___ftpack+1)& (0+255),w,b
 11702  0021E0  11C1               	iorwf	(??___ftpack+2)& (0+255),w,b
 11703  0021E2  B4D8               	btfsc	status,2,c
 11704  0021E4  D018               	goto	l5586
 11705  0021E6  D7DC               	goto	l5578
 11706  0021E8                     l5582:
 11707                           
 11708                           ; BSR set to: 0
 11709  0021E8  0100               	movlb	0	; () banked
 11710  0021EA  0100               	movlb	0	; () banked
 11711  0021EC  2BBD               	incf	___ftpack@exp& (0+255),f,b
 11712                           
 11713                           ; BSR set to: 0
 11714  0021EE  0E01               	movlw	1
 11715  0021F0  0100               	movlb	0	; () banked
 11716  0021F2  0100               	movlb	0	; () banked
 11717  0021F4  27BA               	addwf	___ftpack@arg& (0+255),f,b
 11718  0021F6  0E00               	movlw	0
 11719  0021F8  0100               	movlb	0	; () banked
 11720  0021FA  0100               	movlb	0	; () banked
 11721  0021FC  23BB               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 11722  0021FE  0E00               	movlw	0
 11723  002200  0100               	movlb	0	; () banked
 11724  002202  0100               	movlb	0	; () banked
 11725  002204  23BC               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 11726  002206  0100               	movlb	0	; () banked
 11727  002208  90D8               	bcf	status,0,c
 11728  00220A  0100               	movlb	0	; () banked
 11729  00220C  33BC               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 11730  00220E  0100               	movlb	0	; () banked
 11731  002210  33BB               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 11732  002212  0100               	movlb	0	; () banked
 11733  002214  33BA               	rrcf	___ftpack@arg& (0+255),f,b
 11734  002216                     l5586:
 11735                           
 11736                           ; BSR set to: 0
 11737  002216  0E00               	movlw	0
 11738  002218  0100               	movlb	0	; () banked
 11739  00221A  0100               	movlb	0	; () banked
 11740  00221C  15BA               	andwf	___ftpack@arg& (0+255),w,b
 11741  00221E  0100               	movlb	0	; () banked
 11742  002220  6FBF               	movwf	??___ftpack& (0+255),b
 11743  002222  0E00               	movlw	0
 11744  002224  0100               	movlb	0	; () banked
 11745  002226  0100               	movlb	0	; () banked
 11746  002228  15BB               	andwf	(___ftpack@arg+1)& (0+255),w,b
 11747  00222A  0100               	movlb	0	; () banked
 11748  00222C  6FC0               	movwf	(??___ftpack+1)& (0+255),b
 11749  00222E  0EFF               	movlw	255
 11750  002230  0100               	movlb	0	; () banked
 11751  002232  0100               	movlb	0	; () banked
 11752  002234  15BC               	andwf	(___ftpack@arg+2)& (0+255),w,b
 11753  002236  0100               	movlb	0	; () banked
 11754  002238  6FC1               	movwf	(??___ftpack+2)& (0+255),b
 11755  00223A  0100               	movlb	0	; () banked
 11756  00223C  51BF               	movf	??___ftpack& (0+255),w,b
 11757  00223E  11C0               	iorwf	(??___ftpack+1)& (0+255),w,b
 11758  002240  11C1               	iorwf	(??___ftpack+2)& (0+255),w,b
 11759  002242  B4D8               	btfsc	status,2,c
 11760  002244  D00C               	goto	l5590
 11761  002246  D7D0               	goto	l5582
 11762  002248                     l5588:
 11763                           
 11764                           ; BSR set to: 0
 11765  002248  0100               	movlb	0	; () banked
 11766  00224A  0100               	movlb	0	; () banked
 11767  00224C  07BD               	decf	___ftpack@exp& (0+255),f,b
 11768  00224E  0100               	movlb	0	; () banked
 11769  002250  90D8               	bcf	status,0,c
 11770  002252  0100               	movlb	0	; () banked
 11771  002254  37BA               	rlcf	___ftpack@arg& (0+255),f,b
 11772  002256  0100               	movlb	0	; () banked
 11773  002258  37BB               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 11774  00225A  0100               	movlb	0	; () banked
 11775  00225C  37BC               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 11776  00225E                     l5590:
 11777                           
 11778                           ; BSR set to: 0
 11779  00225E  0100               	movlb	0	; () banked
 11780  002260  0100               	movlb	0	; () banked
 11781  002262  AFBB               	btfss	(___ftpack@arg+1)& (0+255),7,b
 11782  002264  D7F1               	goto	l5588
 11783                           
 11784                           ; BSR set to: 0
 11785  002266  0100               	movlb	0	; () banked
 11786  002268  0100               	movlb	0	; () banked
 11787  00226A  B1BD               	btfsc	___ftpack@exp& (0+255),0,b
 11788  00226C  D003               	goto	l5594
 11789                           
 11790                           ; BSR set to: 0
 11791  00226E  0100               	movlb	0	; () banked
 11792  002270  0100               	movlb	0	; () banked
 11793  002272  9FBB               	bcf	(___ftpack@arg+1)& (0+255),7,b
 11794  002274                     l5594:
 11795                           
 11796                           ; BSR set to: 0
 11797  002274  0100               	movlb	0	; () banked
 11798  002276  90D8               	bcf	status,0,c
 11799  002278  33BD               	rrcf	___ftpack@exp& (0+255),f,b
 11800  00227A  0100               	movlb	0	; () banked
 11801  00227C  0100               	movlb	0	; () banked
 11802  00227E  51BD               	movf	___ftpack@exp& (0+255),w,b
 11803  002280  0100               	movlb	0	; () banked
 11804  002282  0100               	movlb	0	; () banked
 11805  002284  13BC               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 11806                           
 11807                           ; BSR set to: 0
 11808  002286  0100               	movlb	0	; () banked
 11809  002288  0100               	movlb	0	; () banked
 11810  00228A  51BE               	movf	___ftpack@sign& (0+255),w,b
 11811  00228C  B4D8               	btfsc	status,2,c
 11812  00228E  D003               	goto	l5600
 11813                           
 11814                           ; BSR set to: 0
 11815  002290  0100               	movlb	0	; () banked
 11816  002292  0100               	movlb	0	; () banked
 11817  002294  8FBC               	bsf	(___ftpack@arg+2)& (0+255),7,b
 11818  002296                     l5600:
 11819                           
 11820                           ; BSR set to: 0
 11821  002296  C0BA  F0BA         	movff	___ftpack@arg,?___ftpack
 11822  00229A  C0BB  F0BB         	movff	___ftpack@arg+1,?___ftpack+1
 11823  00229E  C0BC  F0BC         	movff	___ftpack@arg+2,?___ftpack+2
 11824  0022A2                     l1450:
 11825                           
 11826                           ; BSR set to: 0
 11827  0022A2  0012               	return	
 11828  0022A4  FFFF               	dw	65535	; errata NOP
 11829  0022A6                     __end_of___ftpack:
 11830                           	opt stack 0
 11831                           tblptru	equ	0xFF8
 11832                           tblptrh	equ	0xFF7
 11833                           tblptrl	equ	0xFF6
 11834                           tablat	equ	0xFF5
 11835                           prodh	equ	0xFF4
 11836                           prodl	equ	0xFF3
 11837                           intcon	equ	0xFF2
 11838                           intcon2	equ	0xFF1
 11839                           postinc0	equ	0xFEE
 11840                           wreg	equ	0xFE8
 11841                           indf1	equ	0xFE7
 11842                           postdec1	equ	0xFE5
 11843                           fsr1h	equ	0xFE2
 11844                           fsr1l	equ	0xFE1
 11845                           indf2	equ	0xFDF
 11846                           postinc2	equ	0xFDE
 11847                           postdec2	equ	0xFDD
 11848                           fsr2h	equ	0xFDA
 11849                           fsr2l	equ	0xFD9
 11850                           status	equ	0xFD8
 11851                           
 11852 ;; *************** function _Low_priority *****************
 11853 ;; Defined at:
 11854 ;;		line 51 in file "main.c"
 11855 ;; Parameters:    Size  Location     Type
 11856 ;;		None
 11857 ;; Auto vars:     Size  Location     Type
 11858 ;;		None
 11859 ;; Return value:  Size  Location     Type
 11860 ;;		None               void
 11861 ;; Registers used:
 11862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11863 ;; Tracked objects:
 11864 ;;		On entry : 0/0
 11865 ;;		On exit  : 0/0
 11866 ;;		Unchanged: 0/0
 11867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11868 ;;      Params:         0       0       0       0       0       0       0
 11869 ;;      Locals:         0       0       0       0       0       0       0
 11870 ;;      Temps:         17       0       0       0       0       0       0
 11871 ;;      Totals:        17       0       0       0       0       0       0
 11872 ;;Total ram usage:       17 bytes
 11873 ;; Hardware stack levels used:    1
 11874 ;; Hardware stack levels required when called:    2
 11875 ;; This function calls:
 11876 ;;		Nothing
 11877 ;; This function is called by:
 11878 ;;		Interrupt level 1
 11879 ;; This function uses a non-reentrant model
 11880 ;;
 11881                           
 11882                           	psect	intcodelo
 11883  000018                     __pintcodelo:
 11884                           	opt stack 0
 11885  000018                     _Low_priority:
 11886                           	opt stack 23
 11887                           
 11888                           ; BSR set to: 0
 11889                           ;incstack = 0
 11890  000018  FFFF               	dw	65535	; errata NOP
 11891  00001A  CFD8 F01D          	movff	status,??_Low_priority
 11892  00001E  CFE8 F01E          	movff	wreg,??_Low_priority+1
 11893  000022  CFE0 F01F          	movff	bsr,??_Low_priority+2
 11894  000026  CFFA F020          	movff	pclath,??_Low_priority+3
 11895  00002A  CFFB F021          	movff	pclatu,??_Low_priority+4
 11896  00002E  CFE9 F022          	movff	fsr0l,??_Low_priority+5
 11897  000032  CFEA F023          	movff	fsr0h,??_Low_priority+6
 11898  000036  CFE1 F024          	movff	fsr1l,??_Low_priority+7
 11899  00003A  CFE2 F025          	movff	fsr1h,??_Low_priority+8
 11900  00003E  CFD9 F026          	movff	fsr2l,??_Low_priority+9
 11901  000042  CFDA F027          	movff	fsr2h,??_Low_priority+10
 11902  000046  CFF3 F028          	movff	prodl,??_Low_priority+11
 11903  00004A  CFF4 F029          	movff	prodh,??_Low_priority+12
 11904  00004E  CFF6 F02A          	movff	tblptrl,??_Low_priority+13
 11905  000052  CFF7 F02B          	movff	tblptrh,??_Low_priority+14
 11906  000056  CFF8 F02C          	movff	tblptru,??_Low_priority+15
 11907  00005A  CFF5 F02D          	movff	tablat,??_Low_priority+16
 11908                           
 11909                           ;main.c: 53: if (RCIE && RCIF)
 11910  00005E  BA9D               	btfsc	3997,5,c	;volatile
 11911  000060  AA9E               	btfss	3998,5,c	;volatile
 11912  000062  D023               	goto	i1l86
 11913                           
 11914                           ;main.c: 54: {
 11915                           ;main.c: 55: Cf.Data[Cf.Index] = RCREG;
 11916  000064  0101               	movlb	1	; () banked
 11917  000066  0101               	movlb	1	; () banked
 11918  000068  5165               	movf	(_Cf+101)& (0+255),w,b	;volatile
 11919  00006A  0D01               	mullw	1
 11920  00006C  0101               	movlb	1	; () banked
 11921  00006E  0E00               	movlw	low _Cf	;volatile
 11922  000070  24F3               	addwf	prodl,w,c
 11923  000072  6ED9               	movwf	fsr2l,c
 11924  000074  0101               	movlb	1	; () banked
 11925  000076  0E01               	movlw	high _Cf	;volatile
 11926  000078  20F4               	addwfc	prodh,w,c
 11927  00007A  6EDA               	movwf	fsr2h,c
 11928  00007C  CFAE FFDF          	movff	4014,indf2	;volatile
 11929                           
 11930                           ;main.c: 56: TXREG = Cf.Data[Cf.Index];
 11931  000080  0101               	movlb	1	; () banked
 11932  000082  0101               	movlb	1	; () banked
 11933  000084  5165               	movf	(_Cf+101)& (0+255),w,b	;volatile
 11934  000086  0D01               	mullw	1
 11935  000088  0101               	movlb	1	; () banked
 11936  00008A  0E00               	movlw	low _Cf	;volatile
 11937  00008C  24F3               	addwf	prodl,w,c
 11938  00008E  6ED9               	movwf	fsr2l,c
 11939  000090  0101               	movlb	1	; () banked
 11940  000092  0E01               	movlw	high _Cf	;volatile
 11941  000094  20F4               	addwfc	prodh,w,c
 11942  000096  6EDA               	movwf	fsr2h,c
 11943  000098  50DF               	movf	indf2,w,c
 11944  00009A  6EAD               	movwf	4013,c	;volatile
 11945                           
 11946                           ; BSR set to: 1
 11947                           ;main.c: 58: Cf.Index ++;
 11948  00009C  0101               	movlb	1	; () banked
 11949  00009E  0101               	movlb	1	; () banked
 11950  0000A0  2B65               	incf	(_Cf+101)& (0+255),f,b	;volatile
 11951                           
 11952                           ; BSR set to: 1
 11953                           ;main.c: 60: Cf.Time1 = Cptms;
 11954  0000A2  C04F  F166         	movff	_Cptms,_Cf+102	;volatile
 11955  0000A6  C050  F167         	movff	_Cptms+1,_Cf+103	;volatile
 11956  0000AA                     i1l86:
 11957  0000AA  C02D  FFF5         	movff	??_Low_priority+16,tablat
 11958  0000AE  C02C  FFF8         	movff	??_Low_priority+15,tblptru
 11959  0000B2  C02B  FFF7         	movff	??_Low_priority+14,tblptrh
 11960  0000B6  C02A  FFF6         	movff	??_Low_priority+13,tblptrl
 11961  0000BA  C029  FFF4         	movff	??_Low_priority+12,prodh
 11962  0000BE  C028  FFF3         	movff	??_Low_priority+11,prodl
 11963  0000C2  C027  FFDA         	movff	??_Low_priority+10,fsr2h
 11964  0000C6  C026  FFD9         	movff	??_Low_priority+9,fsr2l
 11965  0000CA  C025  FFE2         	movff	??_Low_priority+8,fsr1h
 11966  0000CE  C024  FFE1         	movff	??_Low_priority+7,fsr1l
 11967  0000D2  C023  FFEA         	movff	??_Low_priority+6,fsr0h
 11968  0000D6  C022  FFE9         	movff	??_Low_priority+5,fsr0l
 11969  0000DA  C021  FFFB         	movff	??_Low_priority+4,pclatu
 11970  0000DE  C020  FFFA         	movff	??_Low_priority+3,pclath
 11971  0000E2  C01F  FFE0         	movff	??_Low_priority+2,bsr
 11972  0000E6  C01E  FFE8         	movff	??_Low_priority+1,wreg
 11973  0000EA  C01D  FFD8         	movff	??_Low_priority,status
 11974  0000EE  0010               	retfie	
 11975  0000F0  FFFF               	dw	65535	; errata NOP
 11976  0000F2                     __end_of_Low_priority:
 11977                           	opt stack 0
 11978                           pclatu	equ	0xFFB
 11979                           pclath	equ	0xFFA
 11980                           tblptru	equ	0xFF8
 11981                           tblptrh	equ	0xFF7
 11982                           tblptrl	equ	0xFF6
 11983                           tablat	equ	0xFF5
 11984                           prodh	equ	0xFF4
 11985                           prodl	equ	0xFF3
 11986                           intcon	equ	0xFF2
 11987                           intcon2	equ	0xFF1
 11988                           postinc0	equ	0xFEE
 11989                           fsr0h	equ	0xFEA
 11990                           fsr0l	equ	0xFE9
 11991                           wreg	equ	0xFE8
 11992                           indf1	equ	0xFE7
 11993                           postdec1	equ	0xFE5
 11994                           fsr1h	equ	0xFE2
 11995                           fsr1l	equ	0xFE1
 11996                           bsr	equ	0xFE0
 11997                           indf2	equ	0xFDF
 11998                           postinc2	equ	0xFDE
 11999                           postdec2	equ	0xFDD
 12000                           fsr2h	equ	0xFDA
 12001                           fsr2l	equ	0xFD9
 12002                           status	equ	0xFD8
 12003                           
 12004 ;; *************** function _High_priority *****************
 12005 ;; Defined at:
 12006 ;;		line 66 in file "main.c"
 12007 ;; Parameters:    Size  Location     Type
 12008 ;;		None
 12009 ;; Auto vars:     Size  Location     Type
 12010 ;;		None
 12011 ;; Return value:  Size  Location     Type
 12012 ;;		None               void
 12013 ;; Registers used:
 12014 ;;		wreg, status,2, status,0, prodl, cstack
 12015 ;; Tracked objects:
 12016 ;;		On entry : 0/0
 12017 ;;		On exit  : 0/0
 12018 ;;		Unchanged: 0/0
 12019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12020 ;;      Params:         0       0       0       0       0       0       0
 12021 ;;      Locals:         0       0       0       0       0       0       0
 12022 ;;      Temps:         19       0       0       0       0       0       0
 12023 ;;      Totals:        19       0       0       0       0       0       0
 12024 ;;Total ram usage:       19 bytes
 12025 ;; Hardware stack levels used:    1
 12026 ;; Hardware stack levels required when called:    1
 12027 ;; This function calls:
 12028 ;;		___awdiv
 12029 ;; This function is called by:
 12030 ;;		Interrupt level 2
 12031 ;; This function uses a non-reentrant model
 12032 ;;
 12033                           
 12034                           	psect	intcode
 12035  000008                     __pintcode:
 12036                           	opt stack 0
 12037  000008                     _High_priority:
 12038                           	opt stack 23
 12039                           
 12040                           ;incstack = 0
 12041  000008  FFFF               	dw	65535	; errata NOP
 12042  00000A  CFFA F00F          	movff	pclath,??_High_priority+5
 12043  00000E  CFFB F010          	movff	pclatu,??_High_priority+6
 12044  000012  EFB5  F00E         	goto	int_func
 12045                           pclatu	equ	0xFFB
 12046                           pclath	equ	0xFFA
 12047                           tblptru	equ	0xFF8
 12048                           tblptrh	equ	0xFF7
 12049                           tblptrl	equ	0xFF6
 12050                           tablat	equ	0xFF5
 12051                           prodh	equ	0xFF4
 12052                           prodl	equ	0xFF3
 12053                           intcon	equ	0xFF2
 12054                           intcon2	equ	0xFF1
 12055                           postinc0	equ	0xFEE
 12056                           fsr0h	equ	0xFEA
 12057                           fsr0l	equ	0xFE9
 12058                           wreg	equ	0xFE8
 12059                           indf1	equ	0xFE7
 12060                           postdec1	equ	0xFE5
 12061                           fsr1h	equ	0xFE2
 12062                           fsr1l	equ	0xFE1
 12063                           bsr	equ	0xFE0
 12064                           indf2	equ	0xFDF
 12065                           postinc2	equ	0xFDE
 12066                           postdec2	equ	0xFDD
 12067                           fsr2h	equ	0xFDA
 12068                           fsr2l	equ	0xFD9
 12069                           status	equ	0xFD8
 12070                           
 12071                           	psect	intcode_body
 12072  001D6A                     __pintcode_body:
 12073                           	opt stack 23
 12074  001D6A                     int_func:
 12075                           	opt stack 23
 12076  001D6A  FFFF               	dw	65535	; errata NOP
 12077  001D6C  CFE9 F011          	movff	fsr0l,??_High_priority+7
 12078  001D70  CFEA F012          	movff	fsr0h,??_High_priority+8
 12079  001D74  CFE1 F013          	movff	fsr1l,??_High_priority+9
 12080  001D78  CFE2 F014          	movff	fsr1h,??_High_priority+10
 12081  001D7C  CFD9 F015          	movff	fsr2l,??_High_priority+11
 12082  001D80  CFDA F016          	movff	fsr2h,??_High_priority+12
 12083  001D84  CFF3 F017          	movff	prodl,??_High_priority+13
 12084  001D88  CFF4 F018          	movff	prodh,??_High_priority+14
 12085  001D8C  CFF6 F019          	movff	tblptrl,??_High_priority+15
 12086  001D90  CFF7 F01A          	movff	tblptrh,??_High_priority+16
 12087  001D94  CFF8 F01B          	movff	tblptru,??_High_priority+17
 12088  001D98  CFF5 F01C          	movff	tablat,??_High_priority+18
 12089                           
 12090                           ;main.c: 68: if (TMR0IE && TMR0IF)
 12091  001D9C  BAF2               	btfsc	intcon,5,c	;volatile
 12092  001D9E  A4F2               	btfss	intcon,2,c	;volatile
 12093  001DA0  D074               	goto	i2l102
 12094                           
 12095                           ;main.c: 69: {
 12096                           ;main.c: 70: TMR0IF = 0;
 12097  001DA2  94F2               	bcf	intcon,2,c	;volatile
 12098                           
 12099                           ;main.c: 72: TMR0H = 0xF0;
 12100  001DA4  0EF0               	movlw	240
 12101  001DA6  6ED7               	movwf	4055,c	;volatile
 12102                           
 12103                           ;main.c: 73: TMR0L = 0x8C;
 12104  001DA8  0E8C               	movlw	140
 12105  001DAA  6ED6               	movwf	4054,c	;volatile
 12106                           
 12107                           ;main.c: 75: Cptms ++;
 12108  001DAC  4A4F               	infsnz	_Cptms,f,c	;volatile
 12109  001DAE  2A50               	incf	_Cptms+1,f,c	;volatile
 12110                           
 12111                           ;main.c: 77: if (-- Decompte == 0)
 12112  001DB0  2E51               	decfsz	_Decompte,f,c	;volatile
 12113  001DB2  D004               	goto	i2l5236
 12114                           
 12115                           ;main.c: 78: {
 12116                           ;main.c: 79: Decompte = 50;
 12117  001DB4  0E32               	movlw	50
 12118  001DB6  6E51               	movwf	_Decompte,c	;volatile
 12119                           
 12120                           ;main.c: 80: Cpt1Sur20s ++;
 12121  001DB8  4A4D               	infsnz	_Cpt1Sur20s,f,c	;volatile
 12122  001DBA  2A4E               	incf	_Cpt1Sur20s+1,f,c	;volatile
 12123  001DBC                     i2l5236:
 12124                           
 12125                           ;main.c: 81: }
 12126                           ;main.c: 83: if (Micro.State)
 12127  001DBC  5056               	movf	_Micro+4,w,c
 12128  001DBE  B4D8               	btfsc	status,2,c
 12129  001DC0  D05C               	goto	i2l91
 12130                           
 12131                           ;main.c: 84: {
 12132                           ;main.c: 85: if (Feedback.Period == 0)
 12133  001DC2  0100               	movlb	0	; () banked
 12134  001DC4  0100               	movlb	0	; () banked
 12135  001DC6  51A2               	movf	(_Feedback+1)& (0+255),w,b
 12136  001DC8  11A1               	iorwf	_Feedback& (0+255),w,b
 12137  001DCA  A4D8               	btfss	status,2,c
 12138  001DCC  D010               	goto	i2l5246
 12139                           
 12140                           ; BSR set to: 0
 12141                           ;main.c: 86: {
 12142                           ;main.c: 87: Feedback.State = Micro.State;
 12143  001DCE  C056  F0A4         	movff	_Micro+4,_Feedback+3
 12144                           
 12145                           ; BSR set to: 0
 12146                           ;main.c: 88: Feedback.Period = 500;
 12147  001DD2  0E01               	movlw	1
 12148  001DD4  0100               	movlb	0	; () banked
 12149  001DD6  0100               	movlb	0	; () banked
 12150  001DD8  6FA2               	movwf	(_Feedback+1)& (0+255),b
 12151  001DDA  0EF4               	movlw	244
 12152  001DDC  0100               	movlb	0	; () banked
 12153  001DDE  6FA1               	movwf	_Feedback& (0+255),b
 12154                           
 12155                           ; BSR set to: 0
 12156                           ;main.c: 89: Feedback.Step = 0;
 12157  001DE0  6E0A               	movwf	??_High_priority& (0+255),c
 12158  001DE2  0E00               	movlw	0
 12159  001DE4  0100               	movlb	0	; () banked
 12160  001DE6  0100               	movlb	0	; () banked
 12161  001DE8  6FA5               	movwf	(_Feedback+4)& (0+255),b
 12162  001DEA  500A               	movf	??_High_priority& (0+255),w,c
 12163                           
 12164                           ;main.c: 90: }
 12165  001DEC  D005               	goto	i2l5248
 12166  001DEE                     i2l5246:
 12167                           
 12168                           ; BSR set to: 0
 12169                           ;main.c: 91: else
 12170                           ;main.c: 92: {
 12171                           ;main.c: 93: Feedback.Period --;
 12172  001DEE  0100               	movlb	0	; () banked
 12173  001DF0  0100               	movlb	0	; () banked
 12174  001DF2  07A1               	decf	_Feedback& (0+255),f,b
 12175  001DF4  A0D8               	btfss	status,0,c
 12176  001DF6  07A2               	decf	(_Feedback+1)& (0+255),f,b
 12177  001DF8                     i2l5248:
 12178                           
 12179                           ; BSR set to: 0
 12180                           ;main.c: 94: }
 12181                           ;main.c: 96: if ((0x01 << (unsigned char) (Feedback.Step / 2)) <= Feedback.State)
 12182  001DF8  0100               	movlb	0	; () banked
 12183  001DFA  C0A5  F001         	movff	_Feedback+4,___awdiv@dividend
 12184  001DFE  6A02               	clrf	___awdiv@dividend+1,c
 12185  001E00  0E00               	movlw	0
 12186  001E02  6E04               	movwf	___awdiv@divisor+1,c
 12187  001E04  0E02               	movlw	2
 12188  001E06  6E03               	movwf	___awdiv@divisor,c
 12189  001E08  EC6A  F015         	call	___awdiv	;wreg free
 12190  001E0C  0E01               	movlw	1
 12191  001E0E  6E0A               	movwf	??_High_priority& (0+255),c
 12192  001E10  6A0B               	clrf	(??_High_priority+1)& (0+255),c
 12193  001E12  2A01               	incf	?___awdiv,f,c
 12194  001E14  D003               	goto	i2u433_44
 12195  001E16                     i2u433_45:
 12196  001E16  90D8               	bcf	status,0,c
 12197  001E18  360A               	rlcf	??_High_priority,f,c
 12198  001E1A  360B               	rlcf	??_High_priority+1,f,c
 12199  001E1C                     i2u433_44:
 12200  001E1C  2E01               	decfsz	?___awdiv,f,c
 12201  001E1E  D7FB               	goto	i2u433_45
 12202  001E20  0100               	movlb	0	; () banked
 12203  001E22  0100               	movlb	0	; () banked
 12204  001E24  51A4               	movf	(_Feedback+3)& (0+255),w,b
 12205  001E26  6E0C               	movwf	(??_High_priority+2)& (0+255),c
 12206  001E28  6A0D               	clrf	(??_High_priority+3)& (0+255),c
 12207  001E2A  500D               	movf	??_High_priority+3,w,c
 12208  001E2C  0A80               	xorlw	128
 12209  001E2E  6E0E               	movwf	(??_High_priority+4)& (0+255),c
 12210  001E30  500A               	movf	??_High_priority,w,c
 12211  001E32  5C0C               	subwf	??_High_priority+2,w,c
 12212  001E34  500B               	movf	??_High_priority+1,w,c
 12213  001E36  0A80               	xorlw	128
 12214  001E38  580E               	subwfb	(??_High_priority+4)& (0+255),w,c
 12215  001E3A  A0D8               	btfss	status,0,c
 12216  001E3C  D026               	goto	i2l102
 12217                           
 12218                           ; BSR set to: 0
 12219                           ;main.c: 97: {
 12220                           ;main.c: 98: if ((Feedback.Step & 0x01) == 0)
 12221  001E3E  0100               	movlb	0	; () banked
 12222  001E40  0100               	movlb	0	; () banked
 12223  001E42  B1A5               	btfsc	(_Feedback+4)& (0+255),0,b
 12224  001E44  D00B               	goto	i2l95
 12225                           
 12226                           ; BSR set to: 0
 12227                           ;main.c: 99: {
 12228                           ;main.c: 100: if ((Feedback.Step == 0) || (-- Feedback.Pulse == 0))
 12229  001E46  0100               	movlb	0	; () banked
 12230  001E48  0100               	movlb	0	; () banked
 12231  001E4A  51A5               	movf	(_Feedback+4)& (0+255),w,b
 12232  001E4C  B4D8               	btfsc	status,2,c
 12233  001E4E  D004               	goto	i2l98
 12234                           
 12235                           ; BSR set to: 0
 12236  001E50  0100               	movlb	0	; () banked
 12237  001E52  0100               	movlb	0	; () banked
 12238  001E54  2FA3               	decfsz	(_Feedback+2)& (0+255),f,b
 12239  001E56  D019               	goto	i2l102
 12240  001E58                     i2l98:
 12241                           
 12242                           ; BSR set to: 0
 12243                           ;main.c: 101: {
 12244                           ;main.c: 102: PORTCbits.RC4 = 1;
 12245  001E58  8882               	bsf	3970,4,c	;volatile
 12246  001E5A  D005               	goto	L72
 12247  001E5C                     i2l95:
 12248                           
 12249                           ; BSR set to: 0
 12250                           ;main.c: 107: else
 12251                           ;main.c: 108: {
 12252                           ;main.c: 109: if (-- Feedback.Pulse == 0)
 12253  001E5C  0100               	movlb	0	; () banked
 12254  001E5E  0100               	movlb	0	; () banked
 12255  001E60  2FA3               	decfsz	(_Feedback+2)& (0+255),f,b
 12256  001E62  D013               	goto	i2l102
 12257                           
 12258                           ; BSR set to: 0
 12259                           ;main.c: 110: {
 12260                           ;main.c: 111: PORTCbits.RC4 = 0;
 12261  001E64  9882               	bcf	3970,4,c	;volatile
 12262  001E66                     L72:
 12263                           
 12264                           ; BSR set to: 0
 12265                           ;main.c: 112: Feedback.Pulse = 50;
 12266  001E66  6E0A               	movwf	??_High_priority& (0+255),c
 12267  001E68  0E32               	movlw	50
 12268  001E6A  0100               	movlb	0	; () banked
 12269  001E6C  0100               	movlb	0	; () banked
 12270  001E6E  6FA3               	movwf	(_Feedback+2)& (0+255),b
 12271  001E70  500A               	movf	??_High_priority& (0+255),w,c
 12272                           
 12273                           ; BSR set to: 0
 12274                           ;main.c: 113: Feedback.Step ++;
 12275  001E72  0100               	movlb	0	; () banked
 12276  001E74  0100               	movlb	0	; () banked
 12277  001E76  2BA5               	incf	(_Feedback+4)& (0+255),f,b
 12278  001E78  D008               	goto	i2l102
 12279  001E7A                     i2l91:
 12280                           
 12281                           ;main.c: 118: else
 12282                           ;main.c: 119: {
 12283                           ;main.c: 120: PORTCbits.RC4 = 0;
 12284  001E7A  9882               	bcf	3970,4,c	;volatile
 12285                           
 12286                           ;main.c: 121: Feedback.Period = 0;
 12287  001E7C  0E00               	movlw	0
 12288  001E7E  0100               	movlb	0	; () banked
 12289  001E80  0100               	movlb	0	; () banked
 12290  001E82  6FA2               	movwf	(_Feedback+1)& (0+255),b
 12291  001E84  0E00               	movlw	0
 12292  001E86  0100               	movlb	0	; () banked
 12293  001E88  6FA1               	movwf	_Feedback& (0+255),b
 12294  001E8A                     i2l102:
 12295  001E8A  C01C  FFF5         	movff	??_High_priority+18,tablat
 12296  001E8E  C01B  FFF8         	movff	??_High_priority+17,tblptru
 12297  001E92  C01A  FFF7         	movff	??_High_priority+16,tblptrh
 12298  001E96  C019  FFF6         	movff	??_High_priority+15,tblptrl
 12299  001E9A  C018  FFF4         	movff	??_High_priority+14,prodh
 12300  001E9E  C017  FFF3         	movff	??_High_priority+13,prodl
 12301  001EA2  C016  FFDA         	movff	??_High_priority+12,fsr2h
 12302  001EA6  C015  FFD9         	movff	??_High_priority+11,fsr2l
 12303  001EAA  C014  FFE2         	movff	??_High_priority+10,fsr1h
 12304  001EAE  C013  FFE1         	movff	??_High_priority+9,fsr1l
 12305  001EB2  C012  FFEA         	movff	??_High_priority+8,fsr0h
 12306  001EB6  C011  FFE9         	movff	??_High_priority+7,fsr0l
 12307  001EBA  C010  FFFB         	movff	??_High_priority+6,pclatu
 12308  001EBE  C00F  FFFA         	movff	??_High_priority+5,pclath
 12309  001EC2  0011               	retfie		f
 12310  001EC4  FFFF               	dw	65535	; errata NOP
 12311  001EC6                     __end_of_High_priority:
 12312                           	opt stack 0
 12313                           pclatu	equ	0xFFB
 12314                           pclath	equ	0xFFA
 12315                           tblptru	equ	0xFF8
 12316                           tblptrh	equ	0xFF7
 12317                           tblptrl	equ	0xFF6
 12318                           tablat	equ	0xFF5
 12319                           prodh	equ	0xFF4
 12320                           prodl	equ	0xFF3
 12321                           intcon	equ	0xFF2
 12322                           intcon2	equ	0xFF1
 12323                           postinc0	equ	0xFEE
 12324                           fsr0h	equ	0xFEA
 12325                           fsr0l	equ	0xFE9
 12326                           wreg	equ	0xFE8
 12327                           indf1	equ	0xFE7
 12328                           postdec1	equ	0xFE5
 12329                           fsr1h	equ	0xFE2
 12330                           fsr1l	equ	0xFE1
 12331                           bsr	equ	0xFE0
 12332                           indf2	equ	0xFDF
 12333                           postinc2	equ	0xFDE
 12334                           postdec2	equ	0xFDD
 12335                           fsr2h	equ	0xFDA
 12336                           fsr2l	equ	0xFD9
 12337                           status	equ	0xFD8
 12338                           
 12339 ;; *************** function ___awdiv *****************
 12340 ;; Defined at:
 12341 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awdiv.c"
 12342 ;; Parameters:    Size  Location     Type
 12343 ;;  dividend        2    0[COMRAM] int 
 12344 ;;  divisor         2    2[COMRAM] int 
 12345 ;; Auto vars:     Size  Location     Type
 12346 ;;  quotient        2    7[COMRAM] int 
 12347 ;;  sign            1    6[COMRAM] unsigned char 
 12348 ;;  counter         1    5[COMRAM] unsigned char 
 12349 ;; Return value:  Size  Location     Type
 12350 ;;                  2    0[COMRAM] int 
 12351 ;; Registers used:
 12352 ;;		wreg, status,2, status,0, prodl
 12353 ;; Tracked objects:
 12354 ;;		On entry : 0/0
 12355 ;;		On exit  : 0/0
 12356 ;;		Unchanged: 0/0
 12357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12358 ;;      Params:         4       0       0       0       0       0       0
 12359 ;;      Locals:         4       0       0       0       0       0       0
 12360 ;;      Temps:          1       0       0       0       0       0       0
 12361 ;;      Totals:         9       0       0       0       0       0       0
 12362 ;;Total ram usage:        9 bytes
 12363 ;; Hardware stack levels used:    1
 12364 ;; This function calls:
 12365 ;;		Nothing
 12366 ;; This function is called by:
 12367 ;;		_High_priority
 12368 ;; This function uses a non-reentrant model
 12369 ;;
 12370                           
 12371                           	psect	text56
 12372  002AD4                     __ptext56:
 12373                           	opt stack 0
 12374  002AD4                     ___awdiv:
 12375                           	opt stack 23
 12376                           
 12377                           ;incstack = 0
 12378  002AD4  FFFF               	dw	65535
 12379  002AD6  6E05               	movwf	??___awdiv& (0+255),c
 12380  002AD8  0E00               	movlw	0
 12381  002ADA  6E07               	movwf	___awdiv@sign,c
 12382  002ADC  5005               	movf	??___awdiv& (0+255),w,c
 12383  002ADE  5004               	movf	___awdiv@divisor+1,w,c
 12384  002AE0  0A80               	xorlw	128
 12385  002AE2  6EF3               	movwf	prodl,c
 12386  002AE4  0E80               	movlw	128
 12387  002AE6  5CF3               	subwf	prodl,w,c
 12388  002AE8  0E00               	movlw	0
 12389  002AEA  B4D8               	btfsc	status,2,c
 12390  002AEC  5C03               	subwf	___awdiv@divisor,w,c
 12391  002AEE  B0D8               	btfsc	status,0,c
 12392  002AF0  D008               	goto	i2l5172
 12393  002AF2  6C03               	negf	___awdiv@divisor,c
 12394  002AF4  1E04               	comf	___awdiv@divisor+1,f,c
 12395  002AF6  B0D8               	btfsc	status,0,c
 12396  002AF8  2A04               	incf	___awdiv@divisor+1,f,c
 12397  002AFA  6E05               	movwf	??___awdiv& (0+255),c
 12398  002AFC  0E01               	movlw	1
 12399  002AFE  6E07               	movwf	___awdiv@sign,c
 12400  002B00  5005               	movf	??___awdiv& (0+255),w,c
 12401  002B02                     i2l5172:
 12402  002B02  5002               	movf	___awdiv@dividend+1,w,c
 12403  002B04  0A80               	xorlw	128
 12404  002B06  6EF3               	movwf	prodl,c
 12405  002B08  0E80               	movlw	128
 12406  002B0A  5CF3               	subwf	prodl,w,c
 12407  002B0C  0E00               	movlw	0
 12408  002B0E  B4D8               	btfsc	status,2,c
 12409  002B10  5C01               	subwf	___awdiv@dividend,w,c
 12410  002B12  B0D8               	btfsc	status,0,c
 12411  002B14  D006               	goto	i2l5178
 12412  002B16  6C01               	negf	___awdiv@dividend,c
 12413  002B18  1E02               	comf	___awdiv@dividend+1,f,c
 12414  002B1A  B0D8               	btfsc	status,0,c
 12415  002B1C  2A02               	incf	___awdiv@dividend+1,f,c
 12416  002B1E  0E01               	movlw	1
 12417  002B20  1A07               	xorwf	___awdiv@sign,f,c
 12418  002B22                     i2l5178:
 12419  002B22  0E00               	movlw	0
 12420  002B24  6E09               	movwf	___awdiv@quotient+1,c
 12421  002B26  0E00               	movlw	0
 12422  002B28  6E08               	movwf	___awdiv@quotient,c
 12423  002B2A  5004               	movf	___awdiv@divisor+1,w,c
 12424  002B2C  1003               	iorwf	___awdiv@divisor,w,c
 12425  002B2E  B4D8               	btfsc	status,2,c
 12426  002B30  D01E               	goto	i2l5200
 12427  002B32  6E05               	movwf	??___awdiv& (0+255),c
 12428  002B34  0E01               	movlw	1
 12429  002B36  6E06               	movwf	___awdiv@counter,c
 12430  002B38  5005               	movf	??___awdiv& (0+255),w,c
 12431  002B3A  D004               	goto	i2l5186
 12432  002B3C                     i2l5184:
 12433  002B3C  90D8               	bcf	status,0,c
 12434  002B3E  3603               	rlcf	___awdiv@divisor,f,c
 12435  002B40  3604               	rlcf	___awdiv@divisor+1,f,c
 12436  002B42  2A06               	incf	___awdiv@counter,f,c
 12437  002B44                     i2l5186:
 12438  002B44  AE04               	btfss	___awdiv@divisor+1,7,c
 12439  002B46  D7FA               	goto	i2l5184
 12440  002B48                     i2l5188:
 12441  002B48  90D8               	bcf	status,0,c
 12442  002B4A  3608               	rlcf	___awdiv@quotient,f,c
 12443  002B4C  3609               	rlcf	___awdiv@quotient+1,f,c
 12444  002B4E  5003               	movf	___awdiv@divisor,w,c
 12445  002B50  5C01               	subwf	___awdiv@dividend,w,c
 12446  002B52  5004               	movf	___awdiv@divisor+1,w,c
 12447  002B54  5802               	subwfb	___awdiv@dividend+1,w,c
 12448  002B56  A0D8               	btfss	status,0,c
 12449  002B58  D005               	goto	i2l5196
 12450  002B5A  5003               	movf	___awdiv@divisor,w,c
 12451  002B5C  5E01               	subwf	___awdiv@dividend,f,c
 12452  002B5E  5004               	movf	___awdiv@divisor+1,w,c
 12453  002B60  5A02               	subwfb	___awdiv@dividend+1,f,c
 12454  002B62  8008               	bsf	___awdiv@quotient,0,c
 12455  002B64                     i2l5196:
 12456  002B64  90D8               	bcf	status,0,c
 12457  002B66  3204               	rrcf	___awdiv@divisor+1,f,c
 12458  002B68  3203               	rrcf	___awdiv@divisor,f,c
 12459  002B6A  2E06               	decfsz	___awdiv@counter,f,c
 12460  002B6C  D7ED               	goto	i2l5188
 12461  002B6E                     i2l5200:
 12462  002B6E  5007               	movf	___awdiv@sign,w,c
 12463  002B70  B4D8               	btfsc	status,2,c
 12464  002B72  D004               	goto	i2l5204
 12465  002B74  6C08               	negf	___awdiv@quotient,c
 12466  002B76  1E09               	comf	___awdiv@quotient+1,f,c
 12467  002B78  B0D8               	btfsc	status,0,c
 12468  002B7A  2A09               	incf	___awdiv@quotient+1,f,c
 12469  002B7C                     i2l5204:
 12470  002B7C  C008  F001         	movff	___awdiv@quotient,?___awdiv
 12471  002B80  C009  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12472  002B84  0012               	return	
 12473  002B86  FFFF               	dw	65535	; errata NOP
 12474  002B88                     __end_of___awdiv:
 12475                           	opt stack 0
 12476                           pclatu	equ	0xFFB
 12477                           pclath	equ	0xFFA
 12478                           tblptru	equ	0xFF8
 12479                           tblptrh	equ	0xFF7
 12480                           tblptrl	equ	0xFF6
 12481                           tablat	equ	0xFF5
 12482                           prodh	equ	0xFF4
 12483                           prodl	equ	0xFF3
 12484                           intcon	equ	0xFF2
 12485                           intcon2	equ	0xFF1
 12486                           postinc0	equ	0xFEE
 12487                           fsr0h	equ	0xFEA
 12488                           fsr0l	equ	0xFE9
 12489                           wreg	equ	0xFE8
 12490                           indf1	equ	0xFE7
 12491                           postdec1	equ	0xFE5
 12492                           fsr1h	equ	0xFE2
 12493                           fsr1l	equ	0xFE1
 12494                           bsr	equ	0xFE0
 12495                           indf2	equ	0xFDF
 12496                           postinc2	equ	0xFDE
 12497                           postdec2	equ	0xFDD
 12498                           fsr2h	equ	0xFDA
 12499                           fsr2l	equ	0xFD9
 12500                           status	equ	0xFD8
 12501                           pclatu	equ	0xFFB
 12502                           pclath	equ	0xFFA
 12503                           tblptru	equ	0xFF8
 12504                           tblptrh	equ	0xFF7
 12505                           tblptrl	equ	0xFF6
 12506                           tablat	equ	0xFF5
 12507                           prodh	equ	0xFF4
 12508                           prodl	equ	0xFF3
 12509                           intcon	equ	0xFF2
 12510                           intcon2	equ	0xFF1
 12511                           postinc0	equ	0xFEE
 12512                           fsr0h	equ	0xFEA
 12513                           fsr0l	equ	0xFE9
 12514                           wreg	equ	0xFE8
 12515                           indf1	equ	0xFE7
 12516                           postdec1	equ	0xFE5
 12517                           fsr1h	equ	0xFE2
 12518                           fsr1l	equ	0xFE1
 12519                           bsr	equ	0xFE0
 12520                           indf2	equ	0xFDF
 12521                           postinc2	equ	0xFDE
 12522                           postdec2	equ	0xFDD
 12523                           fsr2h	equ	0xFDA
 12524                           fsr2l	equ	0xFD9
 12525                           status	equ	0xFD8
 12526                           
 12527                           	psect	rparam
 12528  0000                     pclatu	equ	0xFFB
 12529                           pclath	equ	0xFFA
 12530                           tblptru	equ	0xFF8
 12531                           tblptrh	equ	0xFF7
 12532                           tblptrl	equ	0xFF6
 12533                           tablat	equ	0xFF5
 12534                           prodh	equ	0xFF4
 12535                           prodl	equ	0xFF3
 12536                           intcon	equ	0xFF2
 12537                           intcon2	equ	0xFF1
 12538                           postinc0	equ	0xFEE
 12539                           fsr0h	equ	0xFEA
 12540                           fsr0l	equ	0xFE9
 12541                           wreg	equ	0xFE8
 12542                           indf1	equ	0xFE7
 12543                           postdec1	equ	0xFE5
 12544                           fsr1h	equ	0xFE2
 12545                           fsr1l	equ	0xFE1
 12546                           bsr	equ	0xFE0
 12547                           indf2	equ	0xFDF
 12548                           postinc2	equ	0xFDE
 12549                           postdec2	equ	0xFDD
 12550                           fsr2h	equ	0xFDA
 12551                           fsr2l	equ	0xFD9
 12552                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    20
    Data        5
    BSS         201
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     45      87
    BANK0           128     43     106
    BANK1           256      0     107
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    DecToStr@result	PTR unsigned char  size(2) Largest target is 5
		 -> PrintTest(BANK0[5]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    eeprom_write_array@pData	PTR unsigned char  size(2) Largest target is 107
		 -> Cf(BANK1[107]), 

    eeprom_read_array@pData	PTR unsigned char  size(2) Largest target is 107
		 -> Cf(BANK1[107]), 

    sp__DecToStr	PTR unsigned char  size(2) Largest target is 5
		 -> PrintTest(BANK0[5]), 

    ecran_print_num@tempStr	PTR unsigned char  size(2) Largest target is 5
		 -> PrintTest(BANK0[5]), 

    S58StructEcran$Digits	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran(BANK0[16]), 
		 -> PrintTest(BANK0[5]), 

    Ecran.Digits	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Low_priority in COMRAM

    None.

Critical Paths under _High_priority in COMRAM

    _High_priority->___awdiv

Critical Paths under _main in BANK0

    _main->_test_process
    _test_process->_check_UAlim
    _test_process->_check_UInfla
    _check_UInfla->___ftmul
    _check_UAlim->___ftmul
    _micro_wait->_check_comutest
    _feu_process->_feu_tir
    _feu_tir->_delay_ms
    _feu_check_bp->_ecran_print_num
    _ecran_print_num->_DecToStr
    _DecToStr->___awmod
    _check_program_0->_ecran_refresh
    _check_idtest->_cf_rcv
    _cf_rcv->_cf_check
    _eeprom_write_array->_eeprom_write
    _check_bpon->_ecran_print_one_char
    _cf_check_and_display->_cf_check
    _eeprom_read_array->_eeprom_read
    _cf_check->_cf_checksum
    _cf_checkout->___wmul
    _armement_process->_arm_UAlim_1A
    _itoa->_utoa
    _utoa->___lwdiv
    _ecran_wait->_ecran_dot
    _check_comutest->_ecran_refresh
    _ecran_refresh->_ecran_print_one_char
    _ecran_print_one_char->_ecran_digit
    _arm_UAlim_1A->___ftmul
    _ana_read->_delay_ms
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft

Critical Paths under _Low_priority in BANK0

    None.

Critical Paths under _High_priority in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Low_priority in BANK1

    None.

Critical Paths under _High_priority in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Low_priority in BANK2

    None.

Critical Paths under _High_priority in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Low_priority in BANK3

    None.

Critical Paths under _High_priority in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Low_priority in BANK4

    None.

Critical Paths under _High_priority in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Low_priority in BANK5

    None.

Critical Paths under _High_priority in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   54399
                                             41 BANK0      2     2      0
                   _armement_process
                        _bouton_init
                     _bouton_refresh
               _cf_check_and_display
                         _check_bpon
                     _check_comutest
                       _check_idtest
                    _check_program_0
                      _ecran_refresh
                       _feu_check_bp
                        _feu_process
                          _hw_config
                       _micro_config
                         _micro_wait
                       _test_process
 ---------------------------------------------------------------------------------
 (1) _test_process                                         6     6      0   21863
                                             36 BANK0      5     5      0
                        _check_UAlim
                       _check_UInfla
                     _check_comutest
                        _ecran_blank
                    _ecran_print_num
                         _ecran_wait
                               _itoa
                     _register_write
 ---------------------------------------------------------------------------------
 (2) _check_UInfla                                         8     6      2    7959
                                             28 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
                           _ana_read
 ---------------------------------------------------------------------------------
 (2) _check_UAlim                                          8     6      2    7959
                                             28 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
                           _ana_read
 ---------------------------------------------------------------------------------
 (1) _micro_wait                                           6     6      0    2201
                                              7 BANK0      6     6      0
                     _check_comutest
                        _ecran_blank
               _ecran_print_one_char
                         _ecran_wait
 ---------------------------------------------------------------------------------
 (1) _micro_config                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hw_config                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _feu_process                                          2     2      0     907
                                              7 BANK0      2     2      0
                           _delay_ms
                      _feu_check_end
                            _feu_tir
 ---------------------------------------------------------------------------------
 (2) _feu_tir                                              1     1      0     534
                                              6 BANK0      1     1      0
                           _delay_ms
                     _register_write
 ---------------------------------------------------------------------------------
 (2) _register_write                                       3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _feu_check_end                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _feu_check_bp                                         2     2      0    3309
                                             21 BANK0      2     2      0
                    _ecran_print_num
               _ecran_print_one_char
 ---------------------------------------------------------------------------------
 (2) _ecran_print_num                                      4     4      0    2292
                                             17 BANK0      4     4      0
                           _DecToStr
 ---------------------------------------------------------------------------------
 (3) _DecToStr                                            10     8      2    2100
                                              7 BANK0     10     8      2
                            ___awmod
                            ___lbdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              5     4      1     318
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     587
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _check_program_0                                      2     2      0    1116
                                              5 BANK0      2     2      0
                        _ecran_blank
                      _ecran_refresh
                         _ecran_wait
 ---------------------------------------------------------------------------------
 (1) _check_idtest                                         1     1      0    5017
                                             24 BANK0      1     1      0
                             _cf_rcv
               _ecran_print_one_char
                    _micro_config_rs
 ---------------------------------------------------------------------------------
 (2) _micro_config_rs                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cf_rcv                                               4     4      0    4000
                                             20 BANK0      4     4      0
                           _cf_check
               _ecran_print_one_char
                  _eeprom_read_array
                 _eeprom_write_array
 ---------------------------------------------------------------------------------
 (3) _eeprom_write_array                                   6     2      4     506
                                              2 BANK0      6     2      4
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (4) _eeprom_write                                         2     1      1     139
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _check_bpon                                           2     2      0    1017
                                              3 BANK0      2     2      0
               _ecran_print_one_char
 ---------------------------------------------------------------------------------
 (1) _cf_check_and_display                                 5     5      0    4573
                                             20 BANK0      5     5      0
                         _HexToAscii
                           _cf_check
               _ecran_print_one_char
                      _ecran_refresh
                  _eeprom_read_array
 ---------------------------------------------------------------------------------
 (3) _eeprom_read_array                                    6     2      4     629
                                              1 BANK0      6     2      4
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (4) _eeprom_read                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _cf_check                                             2     2      0    1678
                                             18 BANK0      2     2      0
                        _cf_checkout
                      _cf_checkrange
                        _cf_checksum
 ---------------------------------------------------------------------------------
 (4) _cf_checksum                                         18    18      0     328
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 (4) _cf_checkrange                                        3     3      0     167
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _cf_checkout                                          4     4      0    1146
                                              6 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     694
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _HexToAscii                                           2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _bouton_refresh                                       6     6      0     489
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _bouton_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _armement_process                                     4     4      0   11777
                                             36 BANK0      4     4      0
                       _arm_UAlim_1A
                     _check_comutest
                        _ecran_blank
                         _ecran_wait
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    2301
                                             17 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1606
                                              8 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     386
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     549
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _ecran_wait                                           1     1      0      31
                                              1 BANK0      1     1      0
                          _ecran_dot
                    _ecran_raz_digit
 ---------------------------------------------------------------------------------
 (2) _check_comutest                                       2     2      0    1079
                                              5 BANK0      2     2      0
                        _ecran_blank
                      _ecran_refresh
 ---------------------------------------------------------------------------------
 (3) _ecran_refresh                                        2     2      0    1048
                                              3 BANK0      2     2      0
                          _ecran_dot
               _ecran_print_one_char
 ---------------------------------------------------------------------------------
 (4) _ecran_print_one_char                                 2     1      1    1017
                                              1 BANK0      2     1      1
                        _ecran_digit
                    _ecran_raz_digit
 ---------------------------------------------------------------------------------
 (3) _ecran_raz_digit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ecran_digit                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ecran_dot                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ecran_blank                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _arm_UAlim_1A                                         8     6      2    8332
                                             28 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
                           _ana_read
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _ana_read                                             6     4      2     444
                                              6 BANK0      6     4      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             6     4      2     373
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             5     2      3    2575
                                              8 BANK0      5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     602
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4301
                                             13 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2313
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Low_priority                                        17    17      0       0
                                             28 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _High_priority                                       19    19      0     428
                                              9 COMRAM    19    19      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              9     5      4     428
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _armement_process
     _arm_UAlim_1A
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
       ___lwtoft
         ___ftpack
       _ana_read
         _delay_ms
       _delay_ms
     _check_comutest
       _ecran_blank
       _ecran_refresh
         _ecran_dot
         _ecran_print_one_char
           _ecran_digit
           _ecran_raz_digit
     _ecran_blank
     _ecran_wait
       _ecran_dot
       _ecran_raz_digit
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _bouton_init
   _bouton_refresh
   _cf_check_and_display
     _HexToAscii
     _cf_check
       _cf_checkout
         ___wmul
       _cf_checkrange
       _cf_checksum
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
     _ecran_refresh
       _ecran_dot
       _ecran_print_one_char
         _ecran_digit
         _ecran_raz_digit
     _eeprom_read_array
       _eeprom_read
   _check_bpon
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
   _check_comutest
     _ecran_blank
     _ecran_refresh
       _ecran_dot
       _ecran_print_one_char
         _ecran_digit
         _ecran_raz_digit
   _check_idtest
     _cf_rcv
       _cf_check
         _cf_checkout
           ___wmul
         _cf_checkrange
         _cf_checksum
       _ecran_print_one_char
         _ecran_digit
         _ecran_raz_digit
       _eeprom_read_array
         _eeprom_read
       _eeprom_write_array
         _eeprom_write
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
     _micro_config_rs
   _check_program_0
     _ecran_blank
     _ecran_refresh
       _ecran_dot
       _ecran_print_one_char
         _ecran_digit
         _ecran_raz_digit
     _ecran_wait
       _ecran_dot
       _ecran_raz_digit
   _ecran_refresh
     _ecran_dot
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
   _feu_check_bp
     _ecran_print_num
       _DecToStr
         ___awmod
         ___lbdiv
         ___wmul
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
   _feu_process
     _delay_ms
     _feu_check_end
     _feu_tir
       _delay_ms
       _register_write
   _hw_config
   _micro_config
   _micro_wait
     _check_comutest
       _ecran_blank
       _ecran_refresh
         _ecran_dot
         _ecran_print_one_char
           _ecran_digit
           _ecran_raz_digit
     _ecran_blank
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
     _ecran_wait
       _ecran_dot
       _ecran_raz_digit
   _test_process
     _check_UAlim
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
       ___lwtoft
         ___ftpack
       _ana_read
         _delay_ms
     _check_UInfla
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
       ___lwtoft
         ___ftpack
       _ana_read
         _delay_ms
     _check_comutest
       _ecran_blank
       _ecran_refresh
         _ecran_dot
         _ecran_print_one_char
           _ecran_digit
           _ecran_raz_digit
     _ecran_blank
     _ecran_print_num
       _DecToStr
         ___awmod
         ___lbdiv
         ___wmul
     _ecran_wait
       _ecran_dot
       _ecran_raz_digit
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _register_write

 _Low_priority (ROOT)

 _High_priority (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      6B       7       41.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2B      6A       5       82.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2D      57       1       68.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12C      15        0.0%
DATA                 0      0     12C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Thu Jul 25 01:06:58 2019

                                        __end_of_check_UInfla 280C  
                                         ?_eeprom_write_array 00BC  
                                              ??_feu_check_bp 00CF  
                                                          _RD 007D30  
                                                          _Cf 0100  
                                                          _WR 007D31  
                                                ___awdiv@sign 0007  
                                      ??_cf_check_and_display 00CE  
                                                 __CFG_BOR$ON 000000  
                                                          bsr 000FE0  
                                         ___wmul@multiplicand 00BC  
                                             ??_feu_check_end 00BA  
                                                __CFG_CP0$OFF 000000  
                                                __CFG_CP1$OFF 000000  
                                                __CFG_CP2$OFF 000000  
                                                __CFG_CP3$OFF 000000  
                                        __end_of_check_idtest 358C  
                                                         l250 2906  
                                                         l260 344C  
                                                         l340 35AC  
                                                         l261 3450  
                                                         l262 3454  
                                                         l264 3476  
                                                         l280 2C36  
                                                         l417 2302  
                                                         l258 3448  
                                                         l426 238A  
                                                         l603 0A52  
                                                         l445 1BEE  
                                                         l461 173C  
                                                         l614 0B5E  
                                                         l448 1BF0  
                                                         l544 3588  
                                                         l616 0BDA  
                                                         l553 3164  
                                                         l609 0ADE  
                                                         l548 3130  
                                                         l820 2050  
                                                         l564 062A  
                                                         l821 207A  
                                                         l590 08F4  
                                                         l815 2024  
                                                         l591 0930  
                                                         l920 3320  
                                                         l584 0864  
                                                         l568 06E0  
                                                         l833 2164  
                                                         l922 3334  
                                                         l818 203C  
                                                         l923 3336  
                                                         l972 2FBA  
                                                         _GIE 007F97  
                                                __CFG_CPB$OFF 000000  
                                                __CFG_CPD$OFF 000000  
                                                         _Arm 009A  
                                                         _Feu 0080  
                                              _check_comutest 31BC  
                                                __CFG_BORV$45 000000  
                                                ___awmod@sign 00C0  
                                                         prod 000FF3  
                                                         wreg 000FE8  
                                                __CFG_LVP$OFF 000000  
                                        ??_eeprom_write_array 00C0  
                                                __CFG_WDT$OFF 000000  
                                                        l1110 1800  
                                                        l1111 17D0  
                                                        l1032 18E8  
                                                        l1120 187E  
                                                        l1105 1758  
                                                        l1122 189A  
                                                        l1115 1812  
                                                        l1107 179E  
                                                        l1131 0F22  
                                                        l1036 1998  
                                                        l1124 18B6  
                                                        l1117 1862  
                                                        l1141 103C  
                                                        l1038 19BC  
                                                        l1046 1A76  
                                                        l1142 1048  
                                                        l1039 19D4  
                                                        l1127 18E0  
                                                        l1152 1100  
                                                        l1154 111A  
                                                        l1147 1084  
                                                        l1156 1184  
                                                        l1450 22A2  
                                                        l1098 35F6  
                                                        l1534 157C  
                                                        l1554 1D66  
                                                        l1576 2492  
                                                        l6002 3518  
                                                        l1676 2CDC  
                                                        l6020 160C  
                                                        l1686 2DFA  
                                                        l6110 2D50  
                                                        l6030 1644  
                                                        l5400 2850  
                                                        l5410 2864  
                                                        l5402 2854  
                                                        l6018 1608  
                                                        l5404 2858  
                                                        l6052 171C  
                                                        l5406 285C  
                                                        l5414 286A  
                                                        l5430 3458  
                                                        l5502 0F12  
                                                        l6038 168E  
                                                        l6054 1732  
                                                        l6142 35F0  
                                                        l5600 2296  
                                                        l5408 2860  
                                                        l5512 22DA  
                                                        l6304 1B42  
                                                        l6312 1BD8  
                                                        l5362 2814  
                                                        l6322 119C  
                                                        l5522 2356  
                                                        l6306 1B46  
                                                        l6410 0638  
                                                        l5380 282C  
                                                        l5372 281C  
                                                        l5364 2818  
                                                        l6324 11AA  
                                                        l6332 11D4  
                                                        l5540 23C4  
                                                        l6308 1B76  
                                                        l5620 2574  
                                                        l5612 2530  
                                                        l6148 35F4  
                                                        l6404 2150  
                                                        l6092 2722  
                                                        l5390 283C  
                                                        l5382 2830  
                                                        l5374 2820  
                                                        l6342 1298  
                                                        l6350 1356  
                                                        l6326 11B8  
                                                        l6334 11F2  
                                                        l5550 2F2C  
                                                        l6254 3186  
                                                        l5622 2586  
                                                        l5392 2840  
                                                        l5376 2824  
                                                        l6344 12A4  
                                                        l6352 13A8  
                                                        l6328 11C6  
                                                        l5528 2360  
                                                        l5472 0C1C  
                                                        l6256 318A  
                                                        l6264 31B2  
                                                        l5624 258E  
                                                        l5632 25D6  
                                                        l5616 2556  
                                                        l5720 1F18  
                                                        l5394 2844  
                                                        l5386 2834  
                                                        l5378 2828  
                                                        l5538 23B4  
                                                        l5650 2E4C  
                                                        l5730 1F76  
                                                        l6442 070A  
                                                        l6434 06F2  
                                                        l5580 21B6  
                                                        l5900 1CC6  
                                                        l5396 2848  
                                                        l5388 2838  
                                                        l5556 2F4C  
                                                        l6276 3582  
                                                        l5636 25EE  
                                                        l5628 25C2  
                                                        l5644 2E38  
                                                        l5660 2E82  
                                                        l5724 1F54  
                                                        l5716 1EEC  
                                                        l6532 09FA  
                                                        l6524 09E0  
                                                        l6516 0986  
                                                        l6508 0948  
                                                        l5590 225E  
                                                        l5582 21E8  
                                                        l5574 2186  
                                                        l5910 1D0A  
                                                        l5398 284C  
                                                        l5670 2C68  
                                                        l6550 0A9C  
                                                        l6470 080C  
                                                        l6462 07DE  
                                                        l6454 0784  
                                                        l6446 072C  
                                                        l5840 142E  
                                                        l5912 1D24  
                                                        l5904 1CE4  
                                                        l5568 33F2  
                                                        l5672 2C7A  
                                                        l5488 0ECA  
                                                        l5656 2E74  
                                                        l5648 2E44  
                                                        l6392 2128  
                                                        l6384 20DC  
                                                        l6376 20A6  
                                                        l6560 0ABE  
                                                        l5594 2274  
                                                        l5586 2216  
                                                        l5578 21A0  
                                                        l5834 13EA  
                                                        l5914 1D2C  
                                                        l5682 2CC8  
                                                        l5674 2C82  
                                                        l5690 2D98  
                                                        l6626 1A58  
                                                        l5498 0EEC  
                                                        l6650 0FB4  
                                                        l6634 0F34  
                                                        l6570 0B1C  
                                                        l6538 0A3E  
                                                        l5588 2248  
                                                        l5692 2DAA  
                                                        l5924 23DA  
                                                        l5756 3224  
                                                        l5764 324C  
                                                        l6732 185A  
                                                        l6644 0F7C  
                                                        l6396 213A  
                                                        l6556 0AB0  
                                                        l6476 0850  
                                                        l6580 0B72  
                                                        l5854 14A0  
                                                        l5918 1D56  
                                                        l5694 2DB2  
                                                        l5934 2440  
                                                        l6742 18D0  
                                                        l6718 17F8  
                                                        l6654 1018  
                                                        l6494 08C2  
                                                        l5864 1504  
                                                        l5768 3276  
                                                        l5776 329C  
                                                        l6664 106C  
                                                        l6488 08AE  
                                                        l6760 2EC2  
                                                        l5858 14CC  
                                                        l5882 1C22  
                                                        l5970 31F6  
                                                        l5698 2DE6  
                                                        l6586 18F6  
                                                        l6690 1148  
                                                        l6498 08D4  
                                                        l6770 2EDC  
                                                        l6762 2EC6  
                                                        l5868 1530  
                                                        l5788 34B4  
                                                        l6676 10C0  
                                                        l6772 2EE2  
                                                        l5958 31C8  
                                                        l5990 2ABC  
                                                        l6686 113A  
                                                        l6766 2ED0  
                                                        l6768 2ED6  
                                                        l6776 2EEC  
                                                        l5986 2A92  
                                                        _CFGS 007D36  
                                                  _Cpt1Sur20s 004D  
                                                        u5100 1414  
                                               __CFG_DEBUG$ON 000000  
                                                        _IPEN 007E87  
                                                        u5131 1C10  
                                                        u5220 2436  
                                                        u5150 1C4E  
                                                        u4430 0CE8  
                                                        u5071 13D8  
                                                        u5240 24C6  
                                                        u5410 2D3A  
                                                        u4450 0D74  
                                                        u5091 1404  
                                                        u5155 1C44  
                                                        u5227 242A  
                                                        u4435 0CDC  
                                                        _PEIE 007F96  
                                                        u5180 1CEE  
                                                        u4445 0D3A  
                                                        u5247 24B8  
                                                        u4455 0D68  
                                                        u5280 31FE  
                                                        u5417 2D2E  
                                                        u4465 0DC6  
                                                        u5610 121A  
                                                        u4475 0E4E  
                                                        _RCIE 007CED  
                                                        _RCIF 007CF5  
                                                        u4485 0EB6  
                                                        u5286 3200  
                                                        u5630 124E  
                                                        u4920 2BEA  
                                                        u5640 127C  
                                                        u5632 1250  
                                                        u5616 121C  
                                                        u5705 1384  
                                                        u5706 1388  
                                                        u5642 127E  
                                                        u5565 335C  
                                                        i1l86 00AA  
                                                        _RCIP 007CFD  
                                                        u4927 2BE0  
                                                        u5575 336E  
                                                        u5567 3362  
                                                        u5585 3380  
                                                        u5577 3374  
                                                        i2l91 1E7A  
                                                        u5595 3392  
                                                        u5587 3386  
                                                        u5597 3398  
                                                        i2l95 1E5C  
                                                        u5695 134A  
                                                        u5696 1354  
                                                        i2l98 1E58  
                                                __CFG_WDTPS$1 000000  
                                                        _WREN 007D32  
                                              ??_eeprom_write 00BB  
                                                __CFG_PWRT$ON 000000  
                                                ?_bouton_init 0001  
                                     eeprom_write_array@pData 00BC  
                                                        _Test 002E  
                                                        _main 2E8C  
                                                ___ftpack@arg 00BA  
                                                        _itoa 2CE8  
                                                ___ftpack@exp 00BD  
                                                        fsr0h 000FEA  
                                                        fsr1h 000FE2  
                                                        fsr0l 000FE9  
                                                        fsr2h 000FDA  
                                                        indf1 000FE7  
                                                        fsr1l 000FE1  
                                                        indf2 000FDF  
                                                        fsr2l 000FD9  
                                                        _utoa 23D0  
                                                        pclat 000FFA  
                                                        prodh 000FF4  
                                                        prodl 000FF3  
                                               feu_tir@Output 00C0  
                                                        start 0112  
                                        __size_of_cf_checkout 012A  
                                        __size_of_cf_checksum 0340  
                                            ?_ecran_raz_digit 0001  
                                                ___ftmul@cntr 00D4  
                                                ___ftmul@sign 00D5  
                                                ___fttol@exp1 00C8  
                                                ___fttol@lval 00C4  
                                     __size_of_bouton_refresh 0234  
                                               __CFG_OSCS$OFF 000000  
                                           ??_micro_config_rs 00BA  
                                      __end_of_check_comutest 3210  
                                            ?_ecran_print_num 0001  
                                             __end_of_Version 0615  
                                    eeprom_write_array@NbData 00BF  
                                                       ?_main 0001  
                                                       ?_itoa 00CB  
                                             __end_of___awdiv 2B88  
                                             __end_of___lbdiv 2E8C  
                                                       _EEADR 000FA9  
                                             __end_of___awmod 25FA  
                                                       _EEPGD 007D37  
                                                       ?_utoa 00C2  
                                             __end_of___ftmul 1580  
                                                       _T0CON 000FD5  
                                             ___awdiv@divisor 0003  
                                             __end_of___fttol 1D6A  
                                             __end_of___lwdiv 2CE8  
                                                       i2l102 1E8A  
                                             __end_of___lwmod 2E06  
                                             ___awdiv@counter 0006  
                                                       _RCREG 000FAE  
                                                       _RCSTA 000FAB  
                                                  _HexToAscii 34FC  
                                                       _TMR0H 000FD7  
                                                       _TMR0L 000FD6  
                                                       _SPBRG 000FAF  
                                                       _PORTA 000F80  
                                                       _PORTB 000F81  
                                                       _PORTC 000F82  
                                                       _PORTD 000F83  
                                                       _PORTE 000F84  
                                        __size_of_check_UAlim 00FA  
                                        __end_of_arm_UAlim_1A 270A  
                                                       _TXREG 000FAD  
                                                       _TXSTA 000FAC  
                                                       _Blank 0606  
                                                       _Ecran 00AA  
                                                       _Armed 0601  
                                               __CFG_WRT0$OFF 000000  
                                               __CFG_WRT1$OFF 000000  
                                               __CFG_WRT2$OFF 000000  
                                               __CFG_WRT3$OFF 000000  
                                                       _Cptms 004F  
                                                       _Micro 0052  
                                          eeprom_read_array@i 00C0  
                                              __CFG_EBTR0$OFF 000000  
                                              __CFG_EBTR1$OFF 000000  
                                              __CFG_EBTR2$OFF 000000  
                                              __CFG_EBTR3$OFF 000000  
                                               __CFG_STVR$OFF 000000  
                                             __end_of_feu_tir 34FC  
                                               __CFG_WRTB$OFF 000000  
                                               __CFG_WRTC$OFF 000000  
                                               __CFG_WRTD$OFF 000000  
                                              __CFG_EBTRB$OFF 000000  
                                             _check_program_0 3168  
                                               ___ftpack@sign 00BE  
                                                       tablat 000FF5  
                                            __end_of_DecToStr 2020  
                                                       utoa@c 00CA  
                                                       utoa@v 00C8  
                                                       status 000FD8  
                                             ___lbdiv@divisor 00BA  
                                             ___lbdiv@counter 00BD  
                                     eeprom_read_array@NbData 00BE  
                                             __initialization 32B2  
                                                __end_of_main 2F08  
                                                __end_of_itoa 2D78  
                                                __end_of_utoa 24E8  
                                              DecToStr@result 00C1  
                                         eeprom_write@Address 00BA  
                                        __size_of_ecran_blank 0066  
                                        __size_of_ecran_digit 00FE  
                                              __CFG_OSC$HSPLL 000000  
                                             ?_check_comutest 0001  
                                                      ??_main 00E3  
                                               ___fttol@sign1 00C3  
                                                      ??_itoa 00D1  
                                                      ??_utoa 00C8  
                                               __activetblptr 000002  
                               __size_of_ecran_print_one_char 0048  
                                                      _ADCON0 000FC2  
                                                      _ADCON1 000FC1  
                                                      _ADRESH 000FC4  
                                                      _ADRESL 000FC3  
                                                      _EEDATA 000FA8  
                                                      _EECON2 000FA7  
                                            ___awdiv@dividend 0001  
                                            __end_of___ftpack 22A6  
                                        __end_of_feu_check_bp 18E4  
                                                      i2l5200 2B6E  
                                                      i2l5204 2B7C  
                                              _register_write 3300  
                                                      i2l5172 2B02  
                                                      i2l5236 1DBC  
                                                      i2l5246 1DEE  
                                                      i2l5184 2B3C  
                                                      i2l5248 1DF8  
                                                      i2l5186 2B44  
                                                      i2l5178 2B22  
                                                      i2l5196 2B64  
                                                      i2l5188 2B48  
                                            __end_of___lwtoft 33E8  
                                            __end_of_cf_check 34BE  
                                                      _TMR0IE 007F95  
                                                      _TMR0IF 007F92  
                                                      _TMR0IP 007F8A  
                                       __size_of_check_UInfla 0102  
                                            __end_of_ana_read 2FE0  
                                             bouton_refresh@i 00BF  
                                            test_process@temp 00E1  
                                            __end_of_delay_ms 3432  
                                                      _Bouton 008E  
                                            _armement_process 18E4  
                                               ?_micro_config 0001  
                                        __size_of_eeprom_read 001A  
                                        __size_of_feu_process 026A  
                                                      ___wmul 2FE0  
                                                   ??___awdiv 0005  
                                                   ??___lbdiv 00BB  
                                                      _cf_rcv 1580  
                                                   ??___awmod 00BE  
                                       __size_of_check_idtest 002C  
                                                   ??___ftmul 00CD  
                                                   ??___fttol 00BE  
                                                   ??___lwdiv 00BE  
                                                   ??___lwmod 00BE  
                                                      clear_0 32B8  
                                                      clear_1 32C4  
                                                      clear_2 32D0  
                                            ___awdiv@quotient 0008  
                                             ___awmod@divisor 00BC  
                                        __end_of_eeprom_write 35B8  
                                             ___awmod@counter 00BF  
                                                   ??_feu_tir 00C0  
                                     __end_of_check_program_0 31BC  
                                       ___ftmul@f3_as_product 00D1  
                                                 ?_HexToAscii 0001  
                                                      itoa@cp 00D1  
                                                __mediumconst 0000  
                                       __end_of_ecran_refresh 2C3A  
                                                      tblptrh 000FF7  
                                                      tblptrl 000FF6  
                                                      tblptru 000FF8  
                                                _check_UInfla 270A  
                                      __end_of_register_write 334E  
                                      __size_of_cf_checkrange 0070  
                                           cf_checksum@calcul 00C8  
                                            ___lbdiv@dividend 00BC  
                                                  __accesstop 0080  
                                     __end_of__initialization 32F6  
                                         eeprom_write_array@i 00C1  
                                    eeprom_read_array@Address 00BD  
                                                _check_idtest 3560  
                                        __size_of_bouton_init 004E  
                                              ??_micro_config 00BA  
                                               __end_of_Blank 060B  
                                                  ___ftmul@f1 00C7  
                                                  ___ftmul@f2 00CA  
                                               __end_of_Armed 0606  
                                                  ___fttol@f1 00BA  
                                              __pcstackCOMRAM 0001  
                                                __pidataBANK0 3650  
                                cf_check_and_display@configOk 00D2  
                                              _bouton_refresh 1188  
                                             DecToStr@power10 00CA  
                                       __size_of_arm_UAlim_1A 0110  
                                            ___lbdiv@quotient 00BE  
                                                  ___lwtoft@c 00C2  
                                          __size_of_ecran_dot 0014  
                                                   ?_DecToStr 00C1  
                                           __end_of_ErreurTir 0610  
                                               ?_Low_priority 0001  
                                             ?_register_write 0001  
                                                  __pbssBANK0 0080  
                                                  __pbssBANK1 0100  
                                                  _check_bpon 310C  
                                          delay_ms@TimeToWait 00BA  
                                                  __pnvCOMRAM 0052  
                                       __end_of_High_priority 1EC6  
                                          __size_of_hw_config 0060  
                                             _micro_config_rs 35FA  
                                          check_program_0@ret 00C0  
                                                _arm_UAlim_1A 25FA  
                                         __size_of_HexToAscii 0034  
                                      __end_of_bouton_refresh 13BC  
                                                  _ecran_wait 35B8  
                                            __CFG_CCP2MUX$OFF 000000  
                                                     ?___wmul 00BA  
                                               _cf_checkrange 2F08  
                                                     ?_cf_rcv 0001  
                                                   ?___ftpack 00BA  
                                             _micro_wait$2387 00C5  
                               __size_of_cf_check_and_display 017A  
                                                  ??_DecToStr 00C3  
                                                   ?___lwtoft 00C2  
                                                   ?_cf_check 0001  
                                       __end_of_feu_check_end 35FA  
                                            ?_check_program_0 0001  
                                              ??_Low_priority 001D  
                                                   ?_ana_read 00C0  
                                           _eeprom_read_array 3210  
                                       __size_of_feu_check_bp 01A4  
                                                   ?_delay_ms 00BA  
                                          cf_checkrange@valid 00BB  
                                          ?_eeprom_read_array 00BB  
                                 __size_of_eeprom_write_array 0050  
                                               ??_cf_checkout 00C0  
                                               ??_cf_checksum 00BA  
                                         ??_eeprom_read_array 00BF  
                                    cf_check_and_display@temp 00D0  
                                           __end_of_ecran_dot 3642  
                                                  cf_rcv@temp 00D0  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                              ?_cf_checkrange 0001  
                                             ?_bouton_refresh 0001  
                                       __size_of_eeprom_write 002C  
                                            ??_check_comutest 00BF  
                                                     _Version 0610  
                                                     ___awdiv 2AD4  
                                                     ___lbdiv 2E06  
                                                     ___awmod 24E8  
                                             __size_of___wmul 0066  
                                                     ___ftmul 13BC  
                                                     ___fttol 1BF4  
                                             __size_of_cf_rcv 01C0  
                                                     ___lwdiv 2C3A  
                                                     ___lwmod 2D78  
                                                __psmallconst 0600  
                                                _feu_check_bp 1740  
                                               ??_check_UAlim 00D8  
                                                     __pcinit 32B2  
                                                  ??___ftpack 00BF  
                                      ecran_print_num@tempStr 00CD  
                                                     __ramtop 0600  
                                    __size_of_ecran_raz_digit 000E  
                                                  _micro_wait 2020  
                                                     __ptext0 2E8C  
                                                     __ptext1 0616  
                                                     __ptext2 270A  
                                                     __ptext3 290A  
                                                     __ptext4 2020  
                                                     __ptext5 3530  
                                                     __ptext6 30AC  
                                                     __ptext7 0F1E  
                                                     __ptext8 34BE  
                                                     __ptext9 3300  
                                                     _feu_tir 34BE  
                                                  ??___lwtoft 00C5  
                                                  ??_cf_check 00CC  
                                   __end_of_eeprom_read_array 3262  
                                                     cf_rcv@i 00D1  
                                           __end_of_hw_config 310C  
                                                  ??_ana_read 00C2  
                                            ___awmod@dividend 00BA  
                                        __end_of_micro_config 3560  
                                    __end_of_armement_process 1A7A  
                                                  ??_delay_ms 00BC  
                                    __size_of_ecran_print_num 00D0  
                                                     main@cpt 00E4  
                                              __pintcode_body 1D6A  
                                     __end_of_micro_config_rs 3614  
                                        end_of_initialization 32F6  
                                         HexToAscii@character 00BA  
                                                 ?_check_bpon 0001  
                                                     itoa@buf 00CB  
                                                     itoa@val 00CD  
                                               __Lmediumconst 0000  
                                                _eeprom_write 358C  
                                                     int_func 1D6A  
                                __end_of_ecran_print_one_char 347A  
                                         __end_of_cf_checkout 23D0  
                                         __end_of_cf_checksum 0F1E  
                                               ??_ecran_blank 00BA  
                                               ??_ecran_digit 00BA  
                                                 ?_ecran_wait 0001  
                                                     postdec1 000FE5  
                                                     postdec2 000FDD  
                                                     postinc0 000FEE  
                                                     postinc2 000FDE  
                                                cf_checkout@i 00C3  
                                                cf_checksum@i 00C7  
                                                     utoa@buf 00C2  
                                                     utoa@val 00C4  
                                                   _PORTAbits 000F80  
                                                   _PORTBbits 000F81  
                                                   _PORTCbits 000F82  
                                                   _PORTEbits 000F84  
                                                ??_HexToAscii 00BA  
                                                   _TRISAbits 000F92  
                                                   _TRISBbits 000F93  
                                                   _TRISCbits 000F94  
                                                   _TRISDbits 000F95  
                                                   _TRISEbits 000F96  
                                         __end_of_check_UAlim 2A04  
                                               ?_test_process 0001  
                                          bouton_refresh@temp 00BE  
                                               ??_eeprom_read 00BA  
                                               ??_feu_process 00C1  
                                             ??_cf_checkrange 00BA  
                                        __end_of_Low_priority 00F2  
                                          __end_of_HexToAscii 3530  
                                                 ___ftmul@exp 00D0  
                                        DecToStr@compareValue 00C7  
                                              __end_of___wmul 3046  
                                              __end_of_cf_rcv 1740  
                                                 ?_micro_wait 0001  
                                         __size_of_check_bpon 005C  
                                         __end_of_ecran_blank 30AC  
                                         __end_of_ecran_digit 290A  
                                  __size_of_eeprom_read_array 0052  
                                            ??_register_write 00BA  
                                         start_initialization 32B2  
                                           __size_of_DecToStr 015A  
                                              ??_test_process 00DE  
                                           ??_ecran_raz_digit 00BA  
                                                   _ErreurTir 060B  
                                               DecToStr@value 00C9  
                                      eeprom_read_array@pData 00BB  
                                         __size_of_ecran_wait 0022  
                                            ?_micro_config_rs 0001  
                                               ??_bouton_init 00BA  
                                             ecran_digit@Char 00BA  
                                                 _cf_checkout 22A6  
                                                 _cf_checksum 0BDE  
                                           ??_ecran_print_num 00CB  
                                             test_process@ret 00E0  
                                      __size_of_ecran_refresh 00B2  
                                                    ??___wmul 00BE  
                                                    ??_cf_rcv 00CE  
                                         __end_of_eeprom_read 362E  
                                                   _PrintTest 00E5  
                                                 __pdataBANK0 00E5  
                                         __end_of_feu_process 1188  
                                            cf_checkout@valid 00C1  
                                       __size_of_micro_config 0030  
                                                 _check_UAlim 290A  
                                          micro_wait@tempTime 00C3  
                                            cf_checksum@valid 00C6  
                                           __size_of___ftpack 013E  
                                                 __pbssCOMRAM 002E  
                                           __size_of___lwtoft 004C  
                                               __pcstackBANK0 00BA  
                                           __size_of_cf_check 0044  
                                                ana_read@temp 00C4  
                                           __size_of_ana_read 0068  
                                        _ecran_print_one_char 3432  
                                        register_write@Output 00BB  
                                           __size_of_delay_ms 004A  
                                            eeprom_write@Data 00BB  
                                __end_of_cf_check_and_display 1BF4  
                                            ??_bouton_refresh 00BA  
                                         __size_of_micro_wait 0148  
                                   ecran_print_one_char@Digit 00BC  
                                            ___lwdiv@dividend 00BA  
                                                _micro_config 3530  
                                         __end_of_bouton_init 339C  
                                                   _ecran_dot 362E  
                                                   __pintcode 0008  
                                                 _ecran_blank 3046  
                                                 _ecran_digit 280C  
                                                    ?___awdiv 0001  
                                                    ?___lbdiv 00BA  
                                                    ?___awmod 00BA  
                                                    ?___ftmul 00C7  
                                                    ?___fttol 00BA  
                                                    ?___lwdiv 00BA  
                                                    ?___lwmod 00BA  
                                                 __pintcodelo 0018  
                                                    ?_feu_tir 0001  
                                                 __smallconst 0600  
                                            arm_UAlim_1A@temp 00DC  
                                      __size_of_High_priority 1EBE  
                                  __end_of_eeprom_write_array 32B2  
                                           ?_armement_process 0001  
                                       ?_ecran_print_one_char 00BB  
                                               _ecran_refresh 2B88  
                                            ___lwdiv@quotient 00C0  
                                                   _hw_config 30AC  
                                          ??_armement_process 00DE  
                                    __size_of_check_program_0 0054  
                                                ??_check_bpon 00BD  
                                       __size_of_Low_priority 00DA  
                                              ___wmul@product 00BE  
                                                 _eeprom_read 3614  
                                                 _feu_process 0F1E  
                                      __size_of_feu_check_end 0020  
                                                    i2u433_44 1E1C  
                                                    i2u433_45 1E16  
                                        __end_of_test_process 0BDE  
                                                  ?_ecran_dot 0001  
                                                ??_ecran_wait 00BB  
                                                  _ADCON0bits 000FC2  
                                           ___wmul@multiplier 00BA  
                                                    _DecToStr 1EC6  
                                          __end_of_check_bpon 3168  
                                   eeprom_write_array@Address 00BE  
                                            check_UInfla@temp 00DC  
                                                    _Feedback 00A1  
                                                    _Decompte 0051  
                                              ?_ecran_refresh 0001  
                                                _Low_priority 0018  
                                               ?_check_UInfla 00D6  
                                                  ?_hw_config 0001  
                                                delay_ms@temp 00BE  
                                                   copy_data0 32EA  
                                          __end_of_ecran_wait 35DA  
                                                 _bouton_init 334E  
                                               ?_check_idtest 0001  
                                               _High_priority 0008  
                                                    _Register 00A6  
                                                    __Hrparam 0000  
                                                    __Lrparam 0000  
                                             register_write@i 00BC  
                                            __size_of___awdiv 00B4  
                                             _ecran_raz_digit 3642  
                                            __size_of___lbdiv 0086  
                                            __size_of___awmod 0112  
                                            __size_of___ftmul 01C4  
                                            __size_of___fttol 0176  
                                                 ana_read@ANx 00C3  
                                            __size_of___lwdiv 00AE  
                                            __size_of___lwmod 008E  
                                                    ___ftpack 2168  
                                                ??_micro_wait 00C1  
                                        _cf_check_and_display 1A7A  
                                                    ___lwtoft 339C  
                                                    _cf_check 347A  
                                                ecran_dot@Dot 00BA  
                                            __size_of_feu_tir 003E  
                                               _feu_check_end 35DA  
                                                    _ana_read 2F78  
                                     __size_of_check_comutest 0054  
                                      ??_ecran_print_one_char 00BC  
                                              ??_check_UInfla 00D8  
                                                    _delay_ms 33E8  
                                             _ecran_print_num 2A04  
                                             ___lwdiv@divisor 00BC  
                                             ___lwdiv@counter 00BF  
                                                    __ptext10 35DA  
                                                    __ptext11 1740  
                                                    __ptext20 3262  
                                                    __ptext12 2A04  
                                                    __ptext21 358C  
                                                    __ptext13 1EC6  
                                                    __ptext30 2FE0  
                                                    __ptext22 310C  
                                                    __ptext14 2E06  
                                                    __ptext31 34FC  
                                                    __ptext23 1A7A  
                                                    __ptext15 24E8  
                                                    __ptext40 31BC  
                                                    __ptext32 1188  
                                                    __ptext24 3210  
                                                    __ptext16 3168  
                                                    __ptext41 2B88  
                                                    __ptext33 334E  
                                                    __ptext25 3614  
                                                    __ptext17 3560  
                                                    __ptext50 339C  
                                                    __ptext42 3432  
                                                    __ptext34 18E4  
                                                    __ptext26 347A  
                                                    __ptext18 35FA  
                                                    __ptext51 1BF4  
                                                    __ptext43 3642  
                                                    __ptext35 2CE8  
                                                    __ptext27 0BDE  
                                                    __ptext19 1580  
                                                    __ptext52 13BC  
                                                    __ptext44 280C  
                                                    __ptext36 23D0  
                                                    __ptext28 2F08  
                                                    __ptext53 2168  
                                                    __ptext45 362E  
                                                    __ptext37 2D78  
                                                    __ptext29 22A6  
                                                    __ptext46 3046  
                                                    __ptext38 2C3A  
                                                    __ptext47 25FA  
                                                    __ptext39 35B8  
                                                    __ptext56 2AD4  
                                                    __ptext48 2F78  
                                                    __ptext49 33E8  
                                             check_UAlim@temp 00DC  
                               ecran_print_one_char@Character 00BB  
                                        armement_process@temp 00E0  
                                                ?_cf_checkout 0001  
                                              ??_check_idtest 00D2  
                                                ?_cf_checksum 0001  
                                         _bouton_refresh$2134 00BC  
                                               __size_of_main 007C  
                                               __size_of_itoa 0090  
                                              ?_High_priority 0001  
                                               __size_of_utoa 0118  
                                          __end_of_micro_wait 2168  
                                               ?_arm_UAlim_1A 00D6  
                                           ??_check_program_0 00BF  
                                                 ??_ecran_dot 00BA  
                                       __end_of_cf_checkrange 2F78  
                                                ?_check_UAlim 00D6  
                                       ?_cf_check_and_display 0001  
                                              ?_feu_check_end 0001  
                                             ??_ecran_refresh 00BD  
                                                  _INTCONbits 000FF2  
                                              cf_checkrange@i 00BC  
                                                    itoa@base 00CF  
                                                 ??_hw_config 00BA  
                                                    intlevel1 3656  
                                                    intlevel2 3656  
                                         cf_checkout@last_out 00C2  
                                            ___lwmod@dividend 00BA  
                                       __size_of_test_process 05C8  
                                              ??_arm_UAlim_1A 00D8  
                                               cf_check@valid 00CD  
                                     __end_of_ecran_raz_digit 3650  
                                    __size_of_micro_config_rs 001A  
                                                ?_ecran_blank 0001  
                                                ?_ecran_digit 0001  
                                         check_comutest@State 00C0  
                                               ?_feu_check_bp 0001  
                                     __end_of_ecran_print_num 2AD4  
                                                    utoa@base 00C6  
                                             ___lwmod@divisor 00BC  
                                          ecran_print_num@Num 00CC  
                                             HexToAscii@Value 00BB  
                                             ___lwmod@counter 00BF  
                                                _test_process 0616  
                                             ??_High_priority 000A  
                                     __size_of_register_write 004E  
                                               ?_eeprom_write 00BA  
                                                ?_eeprom_read 0001  
                                          eeprom_read@Address 00BA  
                                          _eeprom_write_array 3262  
                                                ?_feu_process 0001  
                                   __size_of_armement_process 0196  
