

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Sat Dec 09 10:35:45 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           	psect	idataBANK0
    77  0035D0                     __pidataBANK0:
    78                           	opt stack 0
    79                           
    80                           ;initializer for _PrintTest
    81  0035D0  33                 	db	51
    82  0035D1  34                 	db	52
    83  0035D2  35                 	db	53
    84  0035D3  36                 	db	54
    85  0035D4  00                 	db	0
    86                           
    87                           	psect	smallconst
    88  000600                     __psmallconst:
    89                           	opt stack 0
    90  000600  00                 	db	0
    91  000601                     _Armed:
    92                           	opt stack 0
    93  000601  2D                 	db	45
    94  000602  20                 	db	32
    95  000603  20                 	db	32
    96  000604  20                 	db	32
    97  000605  00                 	db	0
    98  000606                     __end_of_Armed:
    99                           	opt stack 0
   100  000606                     _Blank:
   101                           	opt stack 0
   102  000606  20                 	db	32
   103  000607  20                 	db	32
   104  000608  20                 	db	32
   105  000609  20                 	db	32
   106  00060A  00                 	db	0
   107  00060B                     __end_of_Blank:
   108                           	opt stack 0
   109  00060B                     _ErreurTir:
   110                           	opt stack 0
   111  00060B  45                 	db	69
   112  00060C  5F                 	db	95
   113  00060D  74                 	db	116
   114  00060E  20                 	db	32
   115  00060F  00                 	db	0
   116  000610                     __end_of_ErreurTir:
   117                           	opt stack 0
   118  000610                     _Version:
   119                           	opt stack 0
   120  000610  30                 	db	48
   121  000611  30                 	db	48
   122  000612  30                 	db	48
   123  000613  39                 	db	57
   124  000614  00                 	db	0
   125  000615                     __end_of_Version:
   126                           	opt stack 0
   127  0000                     _ADCON0	set	4034
   128  0000                     _ADCON0bits	set	4034
   129  0000                     _ADCON1	set	4033
   130  0000                     _ADRESH	set	4036
   131  0000                     _ADRESL	set	4035
   132  0000                     _EEADR	set	4009
   133  0000                     _EECON2	set	4007
   134  0000                     _EEDATA	set	4008
   135  0000                     _INTCONbits	set	4082
   136  0000                     _PORTA	set	3968
   137  0000                     _PORTAbits	set	3968
   138  0000                     _PORTB	set	3969
   139  0000                     _PORTBbits	set	3969
   140  0000                     _PORTC	set	3970
   141  0000                     _PORTCbits	set	3970
   142  0000                     _PORTD	set	3971
   143  0000                     _PORTE	set	3972
   144  0000                     _PORTEbits	set	3972
   145  0000                     _RCREG	set	4014
   146  0000                     _RCSTA	set	4011
   147  0000                     _SPBRG	set	4015
   148  0000                     _T0CON	set	4053
   149  0000                     _TMR0H	set	4055
   150  0000                     _TMR0L	set	4054
   151  0000                     _TRISAbits	set	3986
   152  0000                     _TRISBbits	set	3987
   153  0000                     _TRISCbits	set	3988
   154  0000                     _TRISDbits	set	3989
   155  0000                     _TRISEbits	set	3990
   156  0000                     _TXREG	set	4013
   157  0000                     _TXSTA	set	4012
   158  0000                     _CFGS	set	32054
   159  0000                     _EEPGD	set	32055
   160  0000                     _GIE	set	32663
   161  0000                     _IPEN	set	32391
   162  0000                     _PEIE	set	32662
   163  0000                     _RCIE	set	31981
   164  0000                     _RCIF	set	31989
   165  0000                     _RCIP	set	31997
   166  0000                     _RD	set	32048
   167  0000                     _TMR0IE	set	32661
   168  0000                     _TMR0IF	set	32658
   169  0000                     _TMR0IP	set	32650
   170  0000                     _WR	set	32049
   171  0000                     _WREN	set	32050
   172  000615  00                 	db	0	; dummy byte at the end
   173  0000                     
   174                           	psect	nvCOMRAM
   175  000052                     __pnvCOMRAM:
   176                           	opt stack 0
   177  000052                     _Micro:
   178                           	opt stack 0
   179  000052                     	ds	6
   180                           
   181                           ; #config settings
   182  0000                     
   183                           	psect	cinit
   184  003232                     __pcinit:
   185                           	opt stack 0
   186  003232                     start_initialization:
   187                           	opt stack 0
   188  003232                     __initialization:
   189                           	opt stack 0
   190                           
   191                           ; Clear objects allocated to BANK1 (107 bytes)
   192  003232  EE01  F000         	lfsr	0,__pbssBANK1
   193  003236  0E6B               	movlw	107
   194  003238                     clear_0:
   195  003238  6AEE               	clrf	postinc0,c
   196  00323A  06E8               	decf	wreg,f,c
   197  00323C  E1FD               	bnz	clear_0
   198                           
   199                           ; Clear objects allocated to BANK0 (58 bytes)
   200  00323E  EE00  F080         	lfsr	0,__pbssBANK0
   201  003242  0E3A               	movlw	58
   202  003244                     clear_1:
   203  003244  6AEE               	clrf	postinc0,c
   204  003246  06E8               	decf	wreg,f,c
   205  003248  E1FD               	bnz	clear_1
   206                           
   207                           ; Clear objects allocated to COMRAM (36 bytes)
   208  00324A  EE00  F02E         	lfsr	0,__pbssCOMRAM
   209  00324E  0E24               	movlw	36
   210  003250                     clear_2:
   211  003250  6AEE               	clrf	postinc0,c
   212  003252  06E8               	decf	wreg,f,c
   213  003254  E1FD               	bnz	clear_2
   214                           
   215                           ; Initialize objects allocated to BANK0 (5 bytes)
   216                           ; load TBLPTR registers with __pidataBANK0
   217  003256  0ED0               	movlw	low __pidataBANK0
   218  003258  6EF6               	movwf	tblptrl,c
   219  00325A  0E35               	movlw	high __pidataBANK0
   220  00325C  6EF7               	movwf	tblptrh,c
   221  00325E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   222  003260  6EF8               	movwf	tblptru,c
   223  003262  EE00  F0E5         	lfsr	0,__pdataBANK0
   224  003266  EE10 F005          	lfsr	1,5
   225  00326A                     copy_data0:
   226  00326A  0009               	tblrd		*+
   227  00326C  CFF5 FFEE          	movff	tablat,postinc0
   228  003270  50E5               	movf	postdec1,w,c
   229  003272  50E1               	movf	fsr1l,w,c
   230  003274  E1FA               	bnz	copy_data0
   231  003276                     end_of_initialization:
   232                           	opt stack 0
   233  003276                     __end_of__initialization:
   234                           	opt stack 0
   235  003276  0E00               	movlw	low (__Lmediumconst shr (0+16))
   236  003278  6EF8               	movwf	tblptru,c
   237  00327A  0100               	movlb	0
   238  00327C  EF06  F017         	goto	_main	;jump to C main() function
   239                           tblptru	equ	0xFF8
   240                           tblptrh	equ	0xFF7
   241                           tblptrl	equ	0xFF6
   242                           tablat	equ	0xFF5
   243                           postinc0	equ	0xFEE
   244                           wreg	equ	0xFE8
   245                           postdec1	equ	0xFE5
   246                           fsr1l	equ	0xFE1
   247                           
   248                           	psect	bssCOMRAM
   249  00002E                     __pbssCOMRAM:
   250                           	opt stack 0
   251  00002E                     _Test:
   252                           	opt stack 0
   253  00002E                     	ds	31
   254  00004D                     _Cpt1Sur20s:
   255                           	opt stack 0
   256  00004D                     	ds	2
   257  00004F                     _Cptms:
   258                           	opt stack 0
   259  00004F                     	ds	2
   260  000051                     _Decompte:
   261                           	opt stack 0
   262  000051                     	ds	1
   263                           tblptru	equ	0xFF8
   264                           tblptrh	equ	0xFF7
   265                           tblptrl	equ	0xFF6
   266                           tablat	equ	0xFF5
   267                           postinc0	equ	0xFEE
   268                           wreg	equ	0xFE8
   269                           postdec1	equ	0xFE5
   270                           fsr1l	equ	0xFE1
   271                           
   272                           	psect	bssBANK0
   273  000080                     __pbssBANK0:
   274                           	opt stack 0
   275  000080                     _Feu:
   276                           	opt stack 0
   277  000080                     	ds	14
   278  00008E                     _Bouton:
   279                           	opt stack 0
   280  00008E                     	ds	12
   281  00009A                     _Arm:
   282                           	opt stack 0
   283  00009A                     	ds	7
   284  0000A1                     _Feedback:
   285                           	opt stack 0
   286  0000A1                     	ds	5
   287  0000A6                     _Register:
   288                           	opt stack 0
   289  0000A6                     	ds	4
   290  0000AA                     _Ecran:
   291                           	opt stack 0
   292  0000AA                     	ds	16
   293                           tblptru	equ	0xFF8
   294                           tblptrh	equ	0xFF7
   295                           tblptrl	equ	0xFF6
   296                           tablat	equ	0xFF5
   297                           postinc0	equ	0xFEE
   298                           wreg	equ	0xFE8
   299                           postdec1	equ	0xFE5
   300                           fsr1l	equ	0xFE1
   301                           
   302                           	psect	dataBANK0
   303  0000E5                     __pdataBANK0:
   304                           	opt stack 0
   305  0000E5                     _PrintTest:
   306                           	opt stack 0
   307  0000E5                     	ds	5
   308                           tblptru	equ	0xFF8
   309                           tblptrh	equ	0xFF7
   310                           tblptrl	equ	0xFF6
   311                           tablat	equ	0xFF5
   312                           postinc0	equ	0xFEE
   313                           wreg	equ	0xFE8
   314                           postdec1	equ	0xFE5
   315                           fsr1l	equ	0xFE1
   316                           
   317                           	psect	bssBANK1
   318  000100                     __pbssBANK1:
   319                           	opt stack 0
   320  000100                     _Cf:
   321                           	opt stack 0
   322  000100                     	ds	107
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           postdec1	equ	0xFE5
   330                           fsr1l	equ	0xFE1
   331                           
   332                           	psect	cstackBANK0
   333  0000BA                     __pcstackBANK0:
   334                           	opt stack 0
   335  0000BA                     ??_bouton_refresh:
   336  0000BA                     ??_register_write:
   337  0000BA                     ??_ecran_blank:
   338  0000BA                     ??_cf_checksum:
   339  0000BA                     ??_cf_checkrange:
   340  0000BA                     ?___awmod:
   341                           	opt stack 0
   342  0000BA                     ?___lwdiv:
   343                           	opt stack 0
   344  0000BA                     ?___lwmod:
   345                           	opt stack 0
   346  0000BA                     ?___wmul:
   347                           	opt stack 0
   348  0000BA                     ?___ftpack:
   349                           	opt stack 0
   350  0000BA                     ?___fttol:
   351                           	opt stack 0
   352  0000BA                     ecran_digit@Char:
   353                           	opt stack 0
   354  0000BA                     ecran_dot@Dot:
   355                           	opt stack 0
   356  0000BA                     eeprom_read@Address:
   357                           	opt stack 0
   358  0000BA                     eeprom_write@Address:
   359                           	opt stack 0
   360  0000BA                     HexToAscii@character:
   361                           	opt stack 0
   362  0000BA                     ___lbdiv@divisor:
   363                           	opt stack 0
   364  0000BA                     delay_ms@TimeToWait:
   365                           	opt stack 0
   366  0000BA                     ___awmod@dividend:
   367                           	opt stack 0
   368  0000BA                     ___lwdiv@dividend:
   369                           	opt stack 0
   370  0000BA                     ___lwmod@dividend:
   371                           	opt stack 0
   372  0000BA                     ___wmul@multiplier:
   373                           	opt stack 0
   374  0000BA                     ___ftpack@arg:
   375                           	opt stack 0
   376  0000BA                     ___fttol@f1:
   377                           	opt stack 0
   378                           
   379                           ; 3 bytes @ 0x0
   380  0000BA                     	ds	1
   381  0000BB                     ??_ecran_wait:
   382  0000BB                     ??___lbdiv:
   383  0000BB                     ecran_print_one_char@Character:
   384                           	opt stack 0
   385  0000BB                     eeprom_write@Data:
   386                           	opt stack 0
   387  0000BB                     cf_checkrange@valid:
   388                           	opt stack 0
   389  0000BB                     HexToAscii@Value:
   390                           	opt stack 0
   391  0000BB                     register_write@Output:
   392                           	opt stack 0
   393  0000BB                     eeprom_read_array@pData:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x1
   397  0000BB                     	ds	1
   398  0000BC                     ??_delay_ms:
   399  0000BC                     ecran_print_one_char@Digit:
   400                           	opt stack 0
   401  0000BC                     cf_checkrange@i:
   402                           	opt stack 0
   403  0000BC                     register_write@i:
   404                           	opt stack 0
   405  0000BC                     ___lbdiv@dividend:
   406                           	opt stack 0
   407  0000BC                     eeprom_write_array@pData:
   408                           	opt stack 0
   409  0000BC                     _bouton_refresh$2134:
   410                           	opt stack 0
   411  0000BC                     ___awmod@divisor:
   412                           	opt stack 0
   413  0000BC                     ___lwdiv@divisor:
   414                           	opt stack 0
   415  0000BC                     ___lwmod@divisor:
   416                           	opt stack 0
   417  0000BC                     ___wmul@multiplicand:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x2
   421  0000BC                     	ds	1
   422  0000BD                     ??_check_bpon:
   423  0000BD                     ??_ecran_refresh:
   424  0000BD                     eeprom_read_array@Address:
   425                           	opt stack 0
   426  0000BD                     ___ftpack@exp:
   427                           	opt stack 0
   428  0000BD                     ___lbdiv@counter:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0x3
   432  0000BD                     	ds	1
   433  0000BE                     ??___awmod:
   434  0000BE                     ??___fttol:
   435  0000BE                     ??___lwdiv:
   436  0000BE                     ??___lwmod:
   437  0000BE                     eeprom_read_array@NbData:
   438                           	opt stack 0
   439  0000BE                     eeprom_write_array@Address:
   440                           	opt stack 0
   441  0000BE                     bouton_refresh@temp:
   442                           	opt stack 0
   443  0000BE                     ___ftpack@sign:
   444                           	opt stack 0
   445  0000BE                     ___lbdiv@quotient:
   446                           	opt stack 0
   447  0000BE                     delay_ms@temp:
   448                           	opt stack 0
   449  0000BE                     ___wmul@product:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x4
   453  0000BE                     	ds	1
   454  0000BF                     ??_check_comutest:
   455  0000BF                     ??_check_program_0:
   456  0000BF                     ??___ftpack:
   457  0000BF                     ??_eeprom_read_array:
   458  0000BF                     eeprom_write_array@NbData:
   459                           	opt stack 0
   460  0000BF                     bouton_refresh@i:
   461                           	opt stack 0
   462  0000BF                     ___awmod@counter:
   463                           	opt stack 0
   464  0000BF                     ___lwdiv@counter:
   465                           	opt stack 0
   466  0000BF                     ___lwmod@counter:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0x5
   470  0000BF                     	ds	1
   471  0000C0                     ??_eeprom_write_array:
   472  0000C0                     ??_cf_checkout:
   473  0000C0                     ?_ana_read:
   474                           	opt stack 0
   475  0000C0                     eeprom_read_array@i:
   476                           	opt stack 0
   477  0000C0                     check_comutest@State:
   478                           	opt stack 0
   479  0000C0                     check_program_0@ret:
   480                           	opt stack 0
   481  0000C0                     feu_tir@Output:
   482                           	opt stack 0
   483  0000C0                     ___awmod@sign:
   484                           	opt stack 0
   485  0000C0                     ___lwdiv@quotient:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x6
   489  0000C0                     	ds	1
   490  0000C1                     ??_micro_wait:
   491  0000C1                     ??_feu_process:
   492  0000C1                     ?_DecToStr:
   493                           	opt stack 0
   494  0000C1                     eeprom_write_array@i:
   495                           	opt stack 0
   496  0000C1                     cf_checkout@valid:
   497                           	opt stack 0
   498  0000C1                     DecToStr@result:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x7
   502  0000C1                     	ds	1
   503  0000C2                     ??_ana_read:
   504  0000C2                     ?___lwtoft:
   505                           	opt stack 0
   506  0000C2                     cf_checkout@last_out:
   507                           	opt stack 0
   508  0000C2                     utoa@buf:
   509                           	opt stack 0
   510  0000C2                     ___lwtoft@c:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x8
   514  0000C2                     	ds	1
   515  0000C3                     ??_DecToStr:
   516  0000C3                     cf_checkout@i:
   517                           	opt stack 0
   518  0000C3                     ana_read@ANx:
   519                           	opt stack 0
   520  0000C3                     ___fttol@sign1:
   521                           	opt stack 0
   522                           
   523                           ; 1 bytes @ 0x9
   524  0000C3                     	ds	1
   525  0000C4                     ana_read@temp:
   526                           	opt stack 0
   527  0000C4                     utoa@val:
   528                           	opt stack 0
   529  0000C4                     ___fttol@lval:
   530                           	opt stack 0
   531                           
   532                           ; 4 bytes @ 0xA
   533  0000C4                     	ds	1
   534  0000C5                     ??___lwtoft:
   535                           
   536                           ; 0 bytes @ 0xB
   537  0000C5                     	ds	1
   538  0000C6                     cf_checksum@valid:
   539                           	opt stack 0
   540  0000C6                     utoa@base:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0xC
   544  0000C6                     	ds	1
   545  0000C7                     ?___ftmul:
   546                           	opt stack 0
   547  0000C7                     cf_checksum@i:
   548                           	opt stack 0
   549  0000C7                     DecToStr@compareValue:
   550                           	opt stack 0
   551  0000C7                     ___ftmul@f1:
   552                           	opt stack 0
   553                           
   554                           ; 3 bytes @ 0xD
   555  0000C7                     	ds	1
   556  0000C8                     ___fttol@exp1:
   557                           	opt stack 0
   558  0000C8                     utoa@v:
   559                           	opt stack 0
   560  0000C8                     cf_checksum@calcul:
   561                           	opt stack 0
   562                           
   563                           ; 4 bytes @ 0xE
   564  0000C8                     	ds	1
   565  0000C9                     DecToStr@value:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0xF
   569  0000C9                     	ds	1
   570  0000CA                     DecToStr@power10:
   571                           	opt stack 0
   572  0000CA                     utoa@c:
   573                           	opt stack 0
   574  0000CA                     ___ftmul@f2:
   575                           	opt stack 0
   576                           
   577                           ; 3 bytes @ 0x10
   578  0000CA                     	ds	1
   579  0000CB                     ??_ecran_print_num:
   580  0000CB                     itoa@buf:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x11
   584  0000CB                     	ds	1
   585  0000CC                     ??_cf_check:
   586  0000CC                     ecran_print_num@Num:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x12
   590  0000CC                     	ds	1
   591  0000CD                     ??___ftmul:
   592  0000CD                     cf_check@valid:
   593                           	opt stack 0
   594  0000CD                     ecran_print_num@tempStr:
   595                           	opt stack 0
   596  0000CD                     itoa@val:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x13
   600  0000CD                     	ds	1
   601  0000CE                     ??_cf_check_and_display:
   602  0000CE                     ??_cf_rcv:
   603                           
   604                           ; 0 bytes @ 0x14
   605  0000CE                     	ds	1
   606  0000CF                     ??_feu_check_bp:
   607  0000CF                     itoa@base:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x15
   611  0000CF                     	ds	1
   612  0000D0                     cf_rcv@temp:
   613                           	opt stack 0
   614  0000D0                     ___ftmul@exp:
   615                           	opt stack 0
   616  0000D0                     cf_check_and_display@temp:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x16
   620  0000D0                     	ds	1
   621  0000D1                     cf_rcv@i:
   622                           	opt stack 0
   623  0000D1                     itoa@cp:
   624                           	opt stack 0
   625  0000D1                     ___ftmul@f3_as_product:
   626                           	opt stack 0
   627                           
   628                           ; 3 bytes @ 0x17
   629  0000D1                     	ds	1
   630  0000D2                     ??_check_idtest:
   631  0000D2                     cf_check_and_display@configOk:
   632                           	opt stack 0
   633                           
   634                           ; 1 bytes @ 0x18
   635  0000D2                     	ds	2
   636  0000D4                     ___ftmul@cntr:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x1A
   640  0000D4                     	ds	1
   641  0000D5                     ___ftmul@sign:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x1B
   645  0000D5                     	ds	1
   646  0000D6                     ?_check_UAlim:
   647                           	opt stack 0
   648  0000D6                     ?_check_UInfla:
   649                           	opt stack 0
   650  0000D6                     ?_arm_UAlim_1A:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x1C
   654  0000D6                     	ds	2
   655  0000D8                     ??_check_UAlim:
   656  0000D8                     ??_check_UInfla:
   657  0000D8                     ??_arm_UAlim_1A:
   658                           
   659                           ; 0 bytes @ 0x1E
   660  0000D8                     	ds	4
   661  0000DC                     check_UAlim@temp:
   662                           	opt stack 0
   663  0000DC                     check_UInfla@temp:
   664                           	opt stack 0
   665  0000DC                     arm_UAlim_1A@temp:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x22
   669  0000DC                     	ds	2
   670  0000DE                     ??_test_process:
   671  0000DE                     ??_armement_process:
   672                           
   673                           ; 0 bytes @ 0x24
   674  0000DE                     	ds	2
   675  0000E0                     test_process@ret:
   676                           	opt stack 0
   677  0000E0                     armement_process@temp:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x26
   681  0000E0                     	ds	1
   682  0000E1                     test_process@temp:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x27
   686  0000E1                     	ds	2
   687  0000E3                     ??_main:
   688                           
   689                           ; 0 bytes @ 0x29
   690  0000E3                     	ds	1
   691  0000E4                     main@cpt:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x2A
   695  0000E4                     	ds	1
   696                           tblptru	equ	0xFF8
   697                           tblptrh	equ	0xFF7
   698                           tblptrl	equ	0xFF6
   699                           tablat	equ	0xFF5
   700                           postinc0	equ	0xFEE
   701                           wreg	equ	0xFE8
   702                           postdec1	equ	0xFE5
   703                           fsr1l	equ	0xFE1
   704                           
   705                           	psect	cstackCOMRAM
   706  000001                     __pcstackCOMRAM:
   707                           	opt stack 0
   708  000001                     ?___awdiv:
   709                           	opt stack 0
   710  000001                     ___awdiv@dividend:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x0
   714  000001                     	ds	2
   715  000003                     ___awdiv@divisor:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x2
   719  000003                     	ds	2
   720  000005                     ??___awdiv:
   721                           
   722                           ; 0 bytes @ 0x4
   723  000005                     	ds	1
   724  000006                     ___awdiv@counter:
   725                           	opt stack 0
   726                           
   727                           ; 1 bytes @ 0x5
   728  000006                     	ds	1
   729  000007                     ___awdiv@sign:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x6
   733  000007                     	ds	1
   734  000008                     ___awdiv@quotient:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x7
   738  000008                     	ds	2
   739  00000A                     ??_High_priority:
   740                           
   741                           ; 0 bytes @ 0x9
   742  00000A                     	ds	19
   743  00001D                     ??_Low_priority:
   744                           
   745                           ; 0 bytes @ 0x1C
   746  00001D                     	ds	17
   747                           tblptru	equ	0xFF8
   748                           tblptrh	equ	0xFF7
   749                           tblptrl	equ	0xFF6
   750                           tablat	equ	0xFF5
   751                           postinc0	equ	0xFEE
   752                           wreg	equ	0xFE8
   753                           postdec1	equ	0xFE5
   754                           fsr1l	equ	0xFE1
   755                           
   756 ;;
   757 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   758 ;;
   759 ;; *************** function _main *****************
   760 ;; Defined at:
   761 ;;		line 132 in file "main.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;  cpt             1   42[BANK0 ] unsigned char 
   766 ;;  temp            1    0        unsigned char 
   767 ;;  i               1    0        unsigned char 
   768 ;; Return value:  Size  Location     Type
   769 ;;		None               void
   770 ;; Registers used:
   771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   777 ;;      Params:         0       0       0       0       0       0       0
   778 ;;      Locals:         0       1       0       0       0       0       0
   779 ;;      Temps:          0       1       0       0       0       0       0
   780 ;;      Totals:         0       2       0       0       0       0       0
   781 ;;Total ram usage:        2 bytes
   782 ;; Hardware stack levels required when called:    8
   783 ;; This function calls:
   784 ;;		_armement_process
   785 ;;		_bouton_init
   786 ;;		_bouton_refresh
   787 ;;		_cf_check_and_display
   788 ;;		_check_bpon
   789 ;;		_check_comutest
   790 ;;		_check_idtest
   791 ;;		_check_program_0
   792 ;;		_ecran_refresh
   793 ;;		_feu_check_bp
   794 ;;		_feu_process
   795 ;;		_hw_config
   796 ;;		_micro_config
   797 ;;		_micro_wait
   798 ;;		_test_process
   799 ;; This function is called by:
   800 ;;		Startup code after reset
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text0
   805  002E0C                     __ptext0:
   806                           	opt stack 0
   807  002E0C                     _main:
   808                           	opt stack 23
   809                           
   810                           ;incstack = 0
   811  002E0C  FFFF               	dw	65535
   812                           
   813                           ;main.c: 134: unsigned char i, temp, cpt = 0;
   814  002E0E  0100               	movlb	0	; () banked
   815  002E10  6FE3               	movwf	??_main& (0+255),b
   816  002E12  0E00               	movlw	0
   817  002E14  0100               	movlb	0	; () banked
   818  002E16  0100               	movlb	0	; () banked
   819  002E18  6FE4               	movwf	main@cpt& (0+255),b
   820  002E1A  0100               	movlb	0	; () banked
   821  002E1C  51E3               	movf	??_main& (0+255),w,b
   822                           
   823                           ; BSR set to: 0
   824                           ;main.c: 137: hw_config();
   825  002E1E  EC16  F018         	call	_hw_config	;wreg free
   826                           
   827                           ;main.c: 138: micro_config();
   828  002E22  EC58  F01A         	call	_micro_config	;wreg free
   829                           
   830                           ;main.c: 141: check_comutest(0);
   831  002E26  0E00               	movlw	0
   832  002E28  EC9E  F018         	call	_check_comutest
   833                           
   834                           ;main.c: 144: if (check_program_0() == 0)
   835  002E2C  EC74  F018         	call	_check_program_0	;wreg free
   836  002E30  0900               	iorlw	0
   837  002E32  A4D8               	btfss	status,2,c
   838  002E34  D006               	goto	l6695
   839                           
   840                           ;main.c: 145: {
   841                           ;main.c: 147: check_idtest();
   842  002E36  EC70  F01A         	call	_check_idtest	;wreg free
   843                           
   844                           ;main.c: 150: check_bpon();
   845  002E3A  EC46  F018         	call	_check_bpon	;wreg free
   846                           
   847                           ;main.c: 153: cf_check_and_display();
   848  002E3E  EC3D  F00D         	call	_cf_check_and_display	;wreg free
   849  002E42                     l6695:
   850                           
   851                           ;main.c: 154: }
   852                           ;main.c: 156: bouton_init();
   853  002E42  EC67  F019         	call	_bouton_init	;wreg free
   854  002E46                     l6697:
   855                           
   856                           ;main.c: 159: {
   857                           ;main.c: 160: bouton_refresh();
   858  002E46  ECC4  F008         	call	_bouton_refresh	;wreg free
   859                           
   860                           ;main.c: 161: ecran_refresh();
   861  002E4A  EC84  F015         	call	_ecran_refresh	;wreg free
   862                           
   863                           ;main.c: 163: switch (Micro.Phase)
   864  002E4E  D00E               	goto	l6711
   865  002E50                     l6701:
   866                           
   867                           ;main.c: 166: micro_wait();
   868  002E50  ECC6  F014         	call	_micro_wait	;wreg free
   869                           
   870                           ;main.c: 167: break;
   871  002E54  D7F8               	goto	l6697
   872  002E56                     l6703:
   873                           
   874                           ;main.c: 169: test_process();
   875  002E56  EC0B  F003         	call	_test_process	;wreg free
   876                           
   877                           ;main.c: 170: break;
   878  002E5A  D7F5               	goto	l6697
   879  002E5C                     l6705:
   880                           
   881                           ;main.c: 172: armement_process();
   882  002E5C  EC72  F00C         	call	_armement_process	;wreg free
   883                           
   884                           ;main.c: 173: break;
   885  002E60  D7F2               	goto	l6697
   886  002E62                     l6707:
   887                           
   888                           ;main.c: 175: feu_process();
   889  002E62  EC8F  F007         	call	_feu_process	;wreg free
   890                           
   891                           ;main.c: 176: feu_check_bp();
   892  002E66  ECA0  F00B         	call	_feu_check_bp	;wreg free
   893                           
   894                           ;main.c: 177: break;
   895  002E6A  D7ED               	goto	l6697
   896  002E6C                     l6711:
   897  002E6C  5054               	movf	_Micro+2,w,c
   898                           
   899                           ; Switch size 1, requested type "space"
   900                           ; Number of cases is 4, Range of values is 0 to 3
   901                           ; switch strategies available:
   902                           ; Name         Instructions Cycles
   903                           ; simple_byte           13     7 (average)
   904                           ;	Chosen strategy is simple_byte
   905  002E6E  0A00               	xorlw	0	; case 0
   906  002E70  B4D8               	btfsc	status,2,c
   907  002E72  D7EE               	goto	l6701
   908  002E74  0A01               	xorlw	1	; case 1
   909  002E76  B4D8               	btfsc	status,2,c
   910  002E78  D7EE               	goto	l6703
   911  002E7A  0A03               	xorlw	3	; case 2
   912  002E7C  B4D8               	btfsc	status,2,c
   913  002E7E  D7EE               	goto	l6705
   914  002E80  0A01               	xorlw	1	; case 3
   915  002E82  B4D8               	btfsc	status,2,c
   916  002E84  D7EE               	goto	l6707
   917  002E86  D7DF               	goto	l6697
   918  002E88                     __end_of_main:
   919                           	opt stack 0
   920                           tblptru	equ	0xFF8
   921                           tblptrh	equ	0xFF7
   922                           tblptrl	equ	0xFF6
   923                           tablat	equ	0xFF5
   924                           postinc0	equ	0xFEE
   925                           wreg	equ	0xFE8
   926                           postdec1	equ	0xFE5
   927                           fsr1l	equ	0xFE1
   928                           status	equ	0xFD8
   929                           
   930 ;; *************** function _test_process *****************
   931 ;; Defined at:
   932 ;;		line 102 in file "test.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  temp            2   39[BANK0 ] unsigned short 
   937 ;;  ret             1   38[BANK0 ] unsigned char 
   938 ;;  i               1    0        unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      unsigned char 
   941 ;; Registers used:
   942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   948 ;;      Params:         0       0       0       0       0       0       0
   949 ;;      Locals:         0       3       0       0       0       0       0
   950 ;;      Temps:          0       2       0       0       0       0       0
   951 ;;      Totals:         0       5       0       0       0       0       0
   952 ;;Total ram usage:        5 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    7
   955 ;; This function calls:
   956 ;;		_check_UAlim
   957 ;;		_check_UInfla
   958 ;;		_check_comutest
   959 ;;		_ecran_blank
   960 ;;		_ecran_print_num
   961 ;;		_ecran_wait
   962 ;;		_itoa
   963 ;;		_register_write
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text1
   970  000616                     __ptext1:
   971                           	opt stack 0
   972  000616                     _test_process:
   973                           	opt stack 23
   974                           
   975                           ;incstack = 0
   976  000616  FFFF               	dw	65535
   977                           
   978                           ;test.c: 104: unsigned short temp;
   979                           ;test.c: 105: unsigned char i, ret = 0;
   980  000618  0100               	movlb	0	; () banked
   981  00061A  6FDE               	movwf	??_test_process& (0+255),b
   982  00061C  0E00               	movlw	0
   983  00061E  0100               	movlb	0	; () banked
   984  000620  0100               	movlb	0	; () banked
   985  000622  6FE0               	movwf	test_process@ret& (0+255),b
   986  000624  0100               	movlb	0	; () banked
   987  000626  51DE               	movf	??_test_process& (0+255),w,b
   988                           
   989                           ;test.c: 107: switch(Test.Step)
   990  000628  D2A4               	goto	l6515
   991  00062A                     l564:
   992                           
   993                           ; BSR set to: 0
   994                           ;test.c: 110: if (Bouton[Bp_IdTest].State == 1)
   995  00062A  0100               	movlb	0	; () banked
   996  00062C  A393               	btfss	(_Bouton+5)& (0+255),1,b
   997  00062E  D2D5               	goto	l616
   998                           
   999                           ; BSR set to: 0
  1000                           ;test.c: 111: {
  1001                           ;test.c: 112: Test.Step = 0x02;
  1002  000630  0100               	movlb	0	; () banked
  1003  000632  6FDE               	movwf	??_test_process& (0+255),b
  1004  000634  0E02               	movlw	2
  1005  000636  D270               	goto	L13
  1006  000638                     l6345:
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;test.c: 117: check_comutest(0);
  1010  000638  0E00               	movlw	0
  1011  00063A  EC9E  F018         	call	_check_comutest
  1012                           
  1013                           ;test.c: 119: Test.Cpt = 0;
  1014  00063E  0100               	movlb	0	; () banked
  1015  000640  6FDE               	movwf	??_test_process& (0+255),b
  1016  000642  0E00               	movlw	0
  1017  000644  6E2F               	movwf	_Test+1,c
  1018  000646  0100               	movlb	0	; () banked
  1019  000648  51DE               	movf	??_test_process& (0+255),w,b
  1020                           
  1021                           ; BSR set to: 0
  1022                           ;test.c: 121: temp = check_UAlim();
  1023  00064A  ECE1  F013         	call	_check_UAlim	;wreg free
  1024  00064E  0100               	movlb	0	; () banked
  1025  000650  C0D6  F0E1         	movff	?_check_UAlim,test_process@temp
  1026  000654  0100               	movlb	0	; () banked
  1027  000656  C0D7  F0E2         	movff	?_check_UAlim+1,test_process@temp+1
  1028                           
  1029                           ; BSR set to: 0
  1030                           ;test.c: 123: Ecran.Digits = PrintTest;
  1031  00065A  0100               	movlb	0	; () banked
  1032  00065C  0E00               	movlw	high _PrintTest
  1033  00065E  0100               	movlb	0	; () banked
  1034  000660  0100               	movlb	0	; () banked
  1035  000662  6FAF               	movwf	(_Ecran+5)& (0+255),b
  1036  000664  0100               	movlb	0	; () banked
  1037  000666  0EE5               	movlw	low _PrintTest
  1038  000668  0100               	movlb	0	; () banked
  1039  00066A  0100               	movlb	0	; () banked
  1040  00066C  6FAE               	movwf	(_Ecran+4)& (0+255),b
  1041                           
  1042                           ; BSR set to: 0
  1043                           ;test.c: 125: itoa(Ecran.Digits,temp,10);
  1044  00066E  0100               	movlb	0	; () banked
  1045  000670  0100               	movlb	0	; () banked
  1046  000672  C0AF  F0CC         	movff	_Ecran+5,itoa@buf+1
  1047  000676  0100               	movlb	0	; () banked
  1048  000678  0100               	movlb	0	; () banked
  1049  00067A  C0AE  F0CB         	movff	_Ecran+4,itoa@buf
  1050  00067E  C0E1  F0CD         	movff	test_process@temp,itoa@val
  1051  000682  C0E2  F0CE         	movff	test_process@temp+1,itoa@val+1
  1052  000686  0E00               	movlw	0
  1053  000688  0100               	movlb	0	; () banked
  1054  00068A  0100               	movlb	0	; () banked
  1055  00068C  6FD0               	movwf	(itoa@base+1)& (0+255),b
  1056  00068E  0E0A               	movlw	10
  1057  000690  0100               	movlb	0	; () banked
  1058  000692  6FCF               	movwf	itoa@base& (0+255),b
  1059  000694  EC34  F016         	call	_itoa	;wreg free
  1060                           
  1061                           ;test.c: 127: Ecran.Dot[0] = 0;
  1062  000698  0100               	movlb	0	; () banked
  1063  00069A  6FDE               	movwf	??_test_process& (0+255),b
  1064  00069C  0E00               	movlw	0
  1065  00069E  0100               	movlb	0	; () banked
  1066  0006A0  0100               	movlb	0	; () banked
  1067  0006A2  6FB0               	movwf	(_Ecran+6)& (0+255),b
  1068  0006A4  0100               	movlb	0	; () banked
  1069  0006A6  51DE               	movf	??_test_process& (0+255),w,b
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;test.c: 128: Ecran.Dot[1] = 1;
  1073  0006A8  0100               	movlb	0	; () banked
  1074  0006AA  6FDE               	movwf	??_test_process& (0+255),b
  1075  0006AC  0E01               	movlw	1
  1076  0006AE  0100               	movlb	0	; () banked
  1077  0006B0  0100               	movlb	0	; () banked
  1078  0006B2  6FB1               	movwf	(_Ecran+7)& (0+255),b
  1079  0006B4  0100               	movlb	0	; () banked
  1080  0006B6  51DE               	movf	??_test_process& (0+255),w,b
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;test.c: 129: Ecran.Dot[2] = 0;
  1084  0006B8  0100               	movlb	0	; () banked
  1085  0006BA  6FDE               	movwf	??_test_process& (0+255),b
  1086  0006BC  0E00               	movlw	0
  1087  0006BE  0100               	movlb	0	; () banked
  1088  0006C0  0100               	movlb	0	; () banked
  1089  0006C2  6FB2               	movwf	(_Ecran+8)& (0+255),b
  1090  0006C4  0100               	movlb	0	; () banked
  1091  0006C6  51DE               	movf	??_test_process& (0+255),w,b
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;test.c: 130: Ecran.Dot[3] = 0;
  1095  0006C8  0100               	movlb	0	; () banked
  1096  0006CA  6FDE               	movwf	??_test_process& (0+255),b
  1097  0006CC  0E00               	movlw	0
  1098  0006CE  0100               	movlb	0	; () banked
  1099  0006D0  0100               	movlb	0	; () banked
  1100  0006D2  6FB3               	movwf	(_Ecran+9)& (0+255),b
  1101  0006D4  0100               	movlb	0	; () banked
  1102  0006D6  51DE               	movf	??_test_process& (0+255),w,b
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;test.c: 132: Test.Step = 0x03;
  1106  0006D8  0100               	movlb	0	; () banked
  1107  0006DA  6FDE               	movwf	??_test_process& (0+255),b
  1108  0006DC  0E03               	movlw	3
  1109  0006DE  D21C               	goto	L13
  1110  0006E0                     l568:
  1111                           
  1112                           ; BSR set to: 0
  1113                           ;test.c: 135: if (Bouton[Bp_IdTest].State == 0)
  1114  0006E0  0100               	movlb	0	; () banked
  1115  0006E2  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  1116  0006E4  D27A               	goto	l616
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;test.c: 136: {
  1120                           ;test.c: 137: if (Micro.Mod.P_0 == 0) {Test.Step = 0x04;}
  1121  0006E6  B057               	btfsc	_Micro+5,0,c
  1122  0006E8  D004               	goto	l6369
  1123                           
  1124                           ; BSR set to: 0
  1125  0006EA  0100               	movlb	0	; () banked
  1126  0006EC  6FDE               	movwf	??_test_process& (0+255),b
  1127  0006EE  0E04               	movlw	4
  1128  0006F0  D003               	goto	L3
  1129  0006F2                     l6369:
  1130                           
  1131                           ; BSR set to: 0
  1132                           ;test.c: 138: else {Test.Step = 0x0A;}
  1133  0006F2  0100               	movlb	0	; () banked
  1134  0006F4  6FDE               	movwf	??_test_process& (0+255),b
  1135  0006F6  0E0A               	movlw	10
  1136  0006F8                     L3:
  1137  0006F8  6E2E               	movwf	_Test,c
  1138  0006FA  0100               	movlb	0	; () banked
  1139  0006FC  51DE               	movf	??_test_process& (0+255),w,b
  1140                           
  1141                           ; BSR set to: 0
  1142                           ;test.c: 140: ecran_blank();
  1143                           
  1144                           ; BSR set to: 0
  1145  0006FE  ECE3  F017         	call	_ecran_blank	;wreg free
  1146                           
  1147                           ;test.c: 141: check_comutest(0);
  1148  000702  0E00               	movlw	0
  1149  000704  EC9E  F018         	call	_check_comutest
  1150  000708  D11A               	goto	L12
  1151  00070A                     l6377:
  1152                           
  1153                           ;test.c: 146: if (Cf.Data[Test.Cpt*3] == 0)
  1154  00070A  502F               	movf	_Test+1,w,c
  1155  00070C  0D03               	mullw	3
  1156  00070E  0101               	movlb	1	; () banked
  1157  000710  0E00               	movlw	low _Cf	;volatile
  1158  000712  24F3               	addwf	prodl,w,c
  1159  000714  6ED9               	movwf	fsr2l,c
  1160  000716  0101               	movlb	1	; () banked
  1161  000718  0E01               	movlw	high _Cf	;volatile
  1162  00071A  20F4               	addwfc	prodh,w,c
  1163  00071C  6EDA               	movwf	fsr2h,c
  1164  00071E  50DF               	movf	indf2,w,c
  1165  000720  A4D8               	btfss	status,2,c
  1166  000722  D004               	goto	l6381
  1167                           
  1168                           ; BSR set to: 1
  1169                           ;test.c: 147: {
  1170                           ;test.c: 149: Test.Step = 0x08;
  1171  000724  0100               	movlb	0	; () banked
  1172  000726  6FDE               	movwf	??_test_process& (0+255),b
  1173  000728  0E08               	movlw	8
  1174  00072A  D1F6               	goto	L13
  1175  00072C                     l6381:
  1176                           
  1177                           ;test.c: 151: else if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1178  00072C  EE20  F030         	lfsr	2,_Test+2
  1179  000730  CFDE F0DE          	movff	postinc2,??_test_process
  1180  000734  CFDD F0DF          	movff	postdec2,??_test_process+1
  1181  000738  0100               	movlb	0	; () banked
  1182  00073A  1FDE               	comf	??_test_process& (0+255),f,b
  1183  00073C  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1184  00073E  4BDE               	infsnz	??_test_process& (0+255),f,b
  1185  000740  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1186  000742  504F               	movf	_Cptms,w,c	;volatile
  1187  000744  0100               	movlb	0	; () banked
  1188  000746  27DE               	addwf	??_test_process& (0+255),f,b
  1189  000748  5050               	movf	_Cptms+1,w,c	;volatile
  1190  00074A  0100               	movlb	0	; () banked
  1191  00074C  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1192  00074E  0E15               	movlw	21
  1193  000750  0100               	movlb	0	; () banked
  1194  000752  5DDE               	subwf	??_test_process& (0+255),w,b
  1195  000754  0E00               	movlw	0
  1196  000756  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1197  000758  A0D8               	btfss	status,0,c
  1198  00075A  D23F               	goto	l616
  1199                           
  1200                           ; BSR set to: 0
  1201                           ;test.c: 152: {
  1202                           ;test.c: 153: register_write(Cf.Data[Test.Cpt*3]);
  1203  00075C  502F               	movf	_Test+1,w,c
  1204  00075E  0D03               	mullw	3
  1205  000760  0101               	movlb	1	; () banked
  1206  000762  0E00               	movlw	low _Cf	;volatile
  1207  000764  24F3               	addwf	prodl,w,c
  1208  000766  6ED9               	movwf	fsr2l,c
  1209  000768  0101               	movlb	1	; () banked
  1210  00076A  0E01               	movlw	high _Cf	;volatile
  1211  00076C  20F4               	addwfc	prodh,w,c
  1212  00076E  6EDA               	movwf	fsr2h,c
  1213  000770  50DF               	movf	indf2,w,c
  1214  000772  EC40  F019         	call	_register_write
  1215                           
  1216                           ;test.c: 154: Test.Step = 0x05;
  1217  000776  0100               	movlb	0	; () banked
  1218  000778  6FDE               	movwf	??_test_process& (0+255),b
  1219  00077A  0E05               	movlw	5
  1220  00077C  6E2E               	movwf	_Test,c
  1221  00077E  0100               	movlb	0	; () banked
  1222  000780  51DE               	movf	??_test_process& (0+255),w,b
  1223  000782  D0DD               	goto	L12
  1224  000784                     l6389:
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;test.c: 159: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1228  000784  EE20  F030         	lfsr	2,_Test+2
  1229  000788  CFDE F0DE          	movff	postinc2,??_test_process
  1230  00078C  CFDD F0DF          	movff	postdec2,??_test_process+1
  1231  000790  0100               	movlb	0	; () banked
  1232  000792  1FDE               	comf	??_test_process& (0+255),f,b
  1233  000794  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1234  000796  4BDE               	infsnz	??_test_process& (0+255),f,b
  1235  000798  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1236  00079A  504F               	movf	_Cptms,w,c	;volatile
  1237  00079C  0100               	movlb	0	; () banked
  1238  00079E  27DE               	addwf	??_test_process& (0+255),f,b
  1239  0007A0  5050               	movf	_Cptms+1,w,c	;volatile
  1240  0007A2  0100               	movlb	0	; () banked
  1241  0007A4  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1242  0007A6  0E15               	movlw	21
  1243  0007A8  0100               	movlb	0	; () banked
  1244  0007AA  5DDE               	subwf	??_test_process& (0+255),w,b
  1245  0007AC  0E00               	movlw	0
  1246  0007AE  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1247  0007B0  A0D8               	btfss	status,0,c
  1248  0007B2  D213               	goto	l616
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;test.c: 160: {
  1252                           ;test.c: 161: temp = check_UInfla();
  1253  0007B4  ECE1  F012         	call	_check_UInfla	;wreg free
  1254  0007B8  0100               	movlb	0	; () banked
  1255  0007BA  C0D6  F0E1         	movff	?_check_UInfla,test_process@temp
  1256  0007BE  0100               	movlb	0	; () banked
  1257  0007C0  C0D7  F0E2         	movff	?_check_UInfla+1,test_process@temp+1
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;test.c: 163: if (temp > 85) {Test.Step = 0x07;}
  1261  0007C4  0E56               	movlw	86
  1262  0007C6  0100               	movlb	0	; () banked
  1263  0007C8  0100               	movlb	0	; () banked
  1264  0007CA  5DE1               	subwf	test_process@temp& (0+255),w,b
  1265  0007CC  0E00               	movlw	0
  1266  0007CE  0100               	movlb	0	; () banked
  1267  0007D0  59E2               	subwfb	(test_process@temp+1)& (0+255),w,b
  1268  0007D2  A0D8               	btfss	status,0,c
  1269  0007D4  D004               	goto	l6397
  1270                           
  1271                           ; BSR set to: 0
  1272  0007D6  0100               	movlb	0	; () banked
  1273  0007D8  6FDE               	movwf	??_test_process& (0+255),b
  1274  0007DA  0E07               	movlw	7
  1275  0007DC  D003               	goto	L7
  1276  0007DE                     l6397:
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;test.c: 164: else {Test.Step = 0x06;}
  1280  0007DE  0100               	movlb	0	; () banked
  1281  0007E0  6FDE               	movwf	??_test_process& (0+255),b
  1282  0007E2  0E06               	movlw	6
  1283  0007E4                     L7:
  1284  0007E4  6E2E               	movwf	_Test,c
  1285  0007E6  0100               	movlb	0	; () banked
  1286  0007E8  51DE               	movf	??_test_process& (0+255),w,b
  1287                           
  1288                           ; BSR set to: 0
  1289                           ;test.c: 167: ecran_print_num(Cf.Data[Test.Cpt*3]);
  1290                           
  1291                           ; BSR set to: 0
  1292  0007EA  502F               	movf	_Test+1,w,c
  1293  0007EC  0D03               	mullw	3
  1294  0007EE  0101               	movlb	1	; () banked
  1295  0007F0  0E00               	movlw	low _Cf	;volatile
  1296  0007F2  24F3               	addwf	prodl,w,c
  1297  0007F4  6ED9               	movwf	fsr2l,c
  1298  0007F6  0101               	movlb	1	; () banked
  1299  0007F8  0E01               	movlw	high _Cf	;volatile
  1300  0007FA  20F4               	addwfc	prodh,w,c
  1301  0007FC  6EDA               	movwf	fsr2h,c
  1302  0007FE  50DF               	movf	indf2,w,c
  1303  000800  EC5E  F014         	call	_ecran_print_num
  1304                           
  1305                           ;test.c: 168: register_write(0);
  1306  000804  0E00               	movlw	0
  1307  000806  EC40  F019         	call	_register_write
  1308  00080A  D099               	goto	L12
  1309  00080C                     l6405:
  1310                           
  1311                           ;test.c: 174: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1312  00080C  EE20  F030         	lfsr	2,_Test+2
  1313  000810  CFDE F0DE          	movff	postinc2,??_test_process
  1314  000814  CFDD F0DF          	movff	postdec2,??_test_process+1
  1315  000818  0100               	movlb	0	; () banked
  1316  00081A  1FDE               	comf	??_test_process& (0+255),f,b
  1317  00081C  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1318  00081E  4BDE               	infsnz	??_test_process& (0+255),f,b
  1319  000820  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1320  000822  504F               	movf	_Cptms,w,c	;volatile
  1321  000824  0100               	movlb	0	; () banked
  1322  000826  27DE               	addwf	??_test_process& (0+255),f,b
  1323  000828  5050               	movf	_Cptms+1,w,c	;volatile
  1324  00082A  0100               	movlb	0	; () banked
  1325  00082C  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1326  00082E  0E15               	movlw	21
  1327  000830  0100               	movlb	0	; () banked
  1328  000832  5DDE               	subwf	??_test_process& (0+255),w,b
  1329  000834  0E00               	movlw	0
  1330  000836  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1331  000838  A0D8               	btfss	status,0,c
  1332  00083A  D1CF               	goto	l616
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;test.c: 175: {
  1336                           ;test.c: 176: if (++Test.Cpt > 31) {Test.Step = 0x08;}
  1337  00083C  EE20  F02F         	lfsr	2,_Test+1
  1338  000840  2ADF               	incf	indf2,f,c
  1339  000842  0E1F               	movlw	31
  1340  000844  64DF               	cpfsgt	indf2,c
  1341  000846  D004               	goto	l6411
  1342                           
  1343                           ; BSR set to: 0
  1344  000848  0100               	movlb	0	; () banked
  1345  00084A  6FDE               	movwf	??_test_process& (0+255),b
  1346  00084C  0E08               	movlw	8
  1347  00084E  D003               	goto	L9
  1348  000850                     l6411:
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;test.c: 177: else {Test.Step = 0x04;}
  1352  000850  0100               	movlb	0	; () banked
  1353  000852  6FDE               	movwf	??_test_process& (0+255),b
  1354  000854  0E04               	movlw	4
  1355  000856                     L9:
  1356  000856  6E2E               	movwf	_Test,c
  1357  000858  0100               	movlb	0	; () banked
  1358  00085A  51DE               	movf	??_test_process& (0+255),w,b
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;test.c: 178: check_comutest(0);
  1362                           
  1363                           ; BSR set to: 0
  1364  00085C  0E00               	movlw	0
  1365  00085E  EC9E  F018         	call	_check_comutest
  1366  000862  D06D               	goto	L12
  1367  000864                     l584:
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;test.c: 183: if ( (Bouton[Bp_IdTest].State == 0)
  1371                           ;test.c: 184: && ((((unsigned short) (Cptms - Test.Time) > 500) ? 1 : 0)))
  1372  000864  0100               	movlb	0	; () banked
  1373  000866  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  1374  000868  D1B8               	goto	l616
  1375                           
  1376                           ; BSR set to: 0
  1377  00086A  EE20  F030         	lfsr	2,_Test+2
  1378  00086E  CFDE F0DE          	movff	postinc2,??_test_process
  1379  000872  CFDD F0DF          	movff	postdec2,??_test_process+1
  1380  000876  0100               	movlb	0	; () banked
  1381  000878  1FDE               	comf	??_test_process& (0+255),f,b
  1382  00087A  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1383  00087C  4BDE               	infsnz	??_test_process& (0+255),f,b
  1384  00087E  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1385  000880  504F               	movf	_Cptms,w,c	;volatile
  1386  000882  0100               	movlb	0	; () banked
  1387  000884  27DE               	addwf	??_test_process& (0+255),f,b
  1388  000886  5050               	movf	_Cptms+1,w,c	;volatile
  1389  000888  0100               	movlb	0	; () banked
  1390  00088A  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1391  00088C  0EF5               	movlw	245
  1392  00088E  0100               	movlb	0	; () banked
  1393  000890  5DDE               	subwf	??_test_process& (0+255),w,b
  1394  000892  0E01               	movlw	1
  1395  000894  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1396  000896  A0D8               	btfss	status,0,c
  1397  000898  D1A0               	goto	l616
  1398                           
  1399                           ; BSR set to: 0
  1400                           ;test.c: 185: {
  1401                           ;test.c: 186: if (++Test.Cpt > 31) {Test.Step = 0x08;}
  1402  00089A  EE20  F02F         	lfsr	2,_Test+1
  1403  00089E  2ADF               	incf	indf2,f,c
  1404  0008A0  0E1F               	movlw	31
  1405  0008A2  64DF               	cpfsgt	indf2,c
  1406  0008A4  D004               	goto	l6423
  1407                           
  1408                           ; BSR set to: 0
  1409  0008A6  0100               	movlb	0	; () banked
  1410  0008A8  6FDE               	movwf	??_test_process& (0+255),b
  1411  0008AA  0E08               	movlw	8
  1412  0008AC  D003               	goto	L11
  1413  0008AE                     l6423:
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;test.c: 187: else {Test.Step = 0x04;}
  1417  0008AE  0100               	movlb	0	; () banked
  1418  0008B0  6FDE               	movwf	??_test_process& (0+255),b
  1419  0008B2  0E04               	movlw	4
  1420  0008B4                     L11:
  1421  0008B4  6E2E               	movwf	_Test,c
  1422  0008B6  0100               	movlb	0	; () banked
  1423  0008B8  51DE               	movf	??_test_process& (0+255),w,b
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;test.c: 188: check_comutest(0);
  1427                           
  1428                           ; BSR set to: 0
  1429  0008BA  0E00               	movlw	0
  1430  0008BC  EC9E  F018         	call	_check_comutest
  1431  0008C0  D03E               	goto	L12
  1432  0008C2                     l6429:
  1433                           
  1434                           ;test.c: 193: if (Test.Cpt != 0)
  1435  0008C2  502F               	movf	_Test+1,w,c
  1436  0008C4  B4D8               	btfsc	status,2,c
  1437  0008C6  D006               	goto	l6433
  1438                           
  1439                           ;test.c: 194: {
  1440                           ;test.c: 195: ecran_print_num(Cf.Data[96]);
  1441  0008C8  0101               	movlb	1	; () banked
  1442  0008CA  0101               	movlb	1	; () banked
  1443  0008CC  5160               	movf	(_Cf+96)& (0+255),w,b	;volatile
  1444  0008CE  EC5E  F014         	call	_ecran_print_num
  1445                           
  1446                           ;test.c: 196: }
  1447  0008D2  D010               	goto	l590
  1448  0008D4                     l6433:
  1449                           
  1450                           ;test.c: 197: else
  1451                           ;test.c: 198: {
  1452                           ;test.c: 199: Ecran.Digit[2] = 0;
  1453  0008D4  0100               	movlb	0	; () banked
  1454  0008D6  6FDE               	movwf	??_test_process& (0+255),b
  1455  0008D8  0E00               	movlw	0
  1456  0008DA  0100               	movlb	0	; () banked
  1457  0008DC  0100               	movlb	0	; () banked
  1458  0008DE  6FAC               	movwf	(_Ecran+2)& (0+255),b
  1459  0008E0  0100               	movlb	0	; () banked
  1460  0008E2  51DE               	movf	??_test_process& (0+255),w,b
  1461                           
  1462                           ;test.c: 200: Ecran.Digit[3] = 0;
  1463  0008E4  0100               	movlb	0	; () banked
  1464  0008E6  6FDE               	movwf	??_test_process& (0+255),b
  1465  0008E8  0E00               	movlw	0
  1466  0008EA  0100               	movlb	0	; () banked
  1467  0008EC  0100               	movlb	0	; () banked
  1468  0008EE  6FAD               	movwf	(_Ecran+3)& (0+255),b
  1469  0008F0  0100               	movlb	0	; () banked
  1470  0008F2  51DE               	movf	??_test_process& (0+255),w,b
  1471  0008F4                     l590:
  1472                           
  1473                           ;test.c: 201: }
  1474                           ;test.c: 203: Ecran.Digit[0] = '-';
  1475  0008F4  0100               	movlb	0	; () banked
  1476  0008F6  6FDE               	movwf	??_test_process& (0+255),b
  1477  0008F8  0E2D               	movlw	45
  1478  0008FA  0100               	movlb	0	; () banked
  1479  0008FC  0100               	movlb	0	; () banked
  1480  0008FE  6FAA               	movwf	_Ecran& (0+255),b
  1481  000900  0100               	movlb	0	; () banked
  1482  000902  51DE               	movf	??_test_process& (0+255),w,b
  1483                           
  1484                           ;test.c: 204: Ecran.Digit[1] = '-';
  1485  000904  0100               	movlb	0	; () banked
  1486  000906  6FDE               	movwf	??_test_process& (0+255),b
  1487  000908  0E2D               	movlw	45
  1488  00090A  0100               	movlb	0	; () banked
  1489  00090C  0100               	movlb	0	; () banked
  1490  00090E  6FAB               	movwf	(_Ecran+1)& (0+255),b
  1491  000910  0100               	movlb	0	; () banked
  1492  000912  51DE               	movf	??_test_process& (0+255),w,b
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;test.c: 206: Ecran.Digits = Ecran.Digit;
  1496  000914  0100               	movlb	0	; () banked
  1497  000916  0E00               	movlw	high _Ecran
  1498  000918  0100               	movlb	0	; () banked
  1499  00091A  0100               	movlb	0	; () banked
  1500  00091C  6FAF               	movwf	(_Ecran+5)& (0+255),b
  1501  00091E  0100               	movlb	0	; () banked
  1502  000920  0EAA               	movlw	low _Ecran
  1503  000922  0100               	movlb	0	; () banked
  1504  000924  0100               	movlb	0	; () banked
  1505  000926  6FAE               	movwf	(_Ecran+4)& (0+255),b
  1506                           
  1507                           ; BSR set to: 0
  1508                           ;test.c: 207: Test.Step = 0x09;
  1509  000928  0100               	movlb	0	; () banked
  1510  00092A  6FDE               	movwf	??_test_process& (0+255),b
  1511  00092C  0E09               	movlw	9
  1512  00092E  D0F4               	goto	L13
  1513  000930                     l591:
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;test.c: 210: if (Bouton[Bp_IdTest].State == 0)
  1517  000930  0100               	movlb	0	; () banked
  1518  000932  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  1519  000934  D152               	goto	l616
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;test.c: 211: {
  1523                           ;test.c: 212: Test.Step = 0x10;
  1524  000936  0100               	movlb	0	; () banked
  1525  000938  6FDE               	movwf	??_test_process& (0+255),b
  1526  00093A  0E10               	movlw	16
  1527  00093C  D71F               	goto	L20
  1528  00093E                     L12:
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;test.c: 214: Test.Time = Cptms;
  1532  00093E  C04F  F030         	movff	_Cptms,_Test+2	;volatile
  1533  000942  C050  F031         	movff	_Cptms+1,_Test+3	;volatile
  1534  000946  D149               	goto	l616
  1535  000948                     l6443:
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;test.c: 218: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1539  000948  EE20  F030         	lfsr	2,_Test+2
  1540  00094C  CFDE F0DE          	movff	postinc2,??_test_process
  1541  000950  CFDD F0DF          	movff	postdec2,??_test_process+1
  1542  000954  0100               	movlb	0	; () banked
  1543  000956  1FDE               	comf	??_test_process& (0+255),f,b
  1544  000958  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1545  00095A  4BDE               	infsnz	??_test_process& (0+255),f,b
  1546  00095C  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1547  00095E  504F               	movf	_Cptms,w,c	;volatile
  1548  000960  0100               	movlb	0	; () banked
  1549  000962  27DE               	addwf	??_test_process& (0+255),f,b
  1550  000964  5050               	movf	_Cptms+1,w,c	;volatile
  1551  000966  0100               	movlb	0	; () banked
  1552  000968  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1553  00096A  0E15               	movlw	21
  1554  00096C  0100               	movlb	0	; () banked
  1555  00096E  5DDE               	subwf	??_test_process& (0+255),w,b
  1556  000970  0E00               	movlw	0
  1557  000972  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1558  000974  A0D8               	btfss	status,0,c
  1559  000976  D131               	goto	l616
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;test.c: 219: {
  1563                           ;test.c: 220: register_write((unsigned char) (Test.Cpt + 1));
  1564  000978  282F               	incf	_Test+1,w,c
  1565  00097A  EC40  F019         	call	_register_write
  1566                           
  1567                           ;test.c: 221: Test.Step = 0x0B;
  1568  00097E  0100               	movlb	0	; () banked
  1569  000980  6FDE               	movwf	??_test_process& (0+255),b
  1570  000982  0E0B               	movlw	11
  1571  000984  D6FB               	goto	L20
  1572  000986                     l6451:
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;test.c: 226: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1576  000986  EE20  F030         	lfsr	2,_Test+2
  1577  00098A  CFDE F0DE          	movff	postinc2,??_test_process
  1578  00098E  CFDD F0DF          	movff	postdec2,??_test_process+1
  1579  000992  0100               	movlb	0	; () banked
  1580  000994  1FDE               	comf	??_test_process& (0+255),f,b
  1581  000996  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1582  000998  4BDE               	infsnz	??_test_process& (0+255),f,b
  1583  00099A  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1584  00099C  504F               	movf	_Cptms,w,c	;volatile
  1585  00099E  0100               	movlb	0	; () banked
  1586  0009A0  27DE               	addwf	??_test_process& (0+255),f,b
  1587  0009A2  5050               	movf	_Cptms+1,w,c	;volatile
  1588  0009A4  0100               	movlb	0	; () banked
  1589  0009A6  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1590  0009A8  0E15               	movlw	21
  1591  0009AA  0100               	movlb	0	; () banked
  1592  0009AC  5DDE               	subwf	??_test_process& (0+255),w,b
  1593  0009AE  0E00               	movlw	0
  1594  0009B0  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1595  0009B2  A0D8               	btfss	status,0,c
  1596  0009B4  D112               	goto	l616
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;test.c: 227: {
  1600                           ;test.c: 228: temp = check_UInfla();
  1601  0009B6  ECE1  F012         	call	_check_UInfla	;wreg free
  1602  0009BA  0100               	movlb	0	; () banked
  1603  0009BC  C0D6  F0E1         	movff	?_check_UInfla,test_process@temp
  1604  0009C0  0100               	movlb	0	; () banked
  1605  0009C2  C0D7  F0E2         	movff	?_check_UInfla+1,test_process@temp+1
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;test.c: 231: if (temp > 85) {Test.Step = 0x0D;}
  1609  0009C6  0E56               	movlw	86
  1610  0009C8  0100               	movlb	0	; () banked
  1611  0009CA  0100               	movlb	0	; () banked
  1612  0009CC  5DE1               	subwf	test_process@temp& (0+255),w,b
  1613  0009CE  0E00               	movlw	0
  1614  0009D0  0100               	movlb	0	; () banked
  1615  0009D2  59E2               	subwfb	(test_process@temp+1)& (0+255),w,b
  1616  0009D4  A0D8               	btfss	status,0,c
  1617  0009D6  D004               	goto	l6459
  1618                           
  1619                           ; BSR set to: 0
  1620  0009D8  0100               	movlb	0	; () banked
  1621  0009DA  6FDE               	movwf	??_test_process& (0+255),b
  1622  0009DC  0E0D               	movlw	13
  1623  0009DE  D003               	goto	L15
  1624  0009E0                     l6459:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;test.c: 232: else {Test.Step = 0x0C;}
  1628  0009E0  0100               	movlb	0	; () banked
  1629  0009E2  6FDE               	movwf	??_test_process& (0+255),b
  1630  0009E4  0E0C               	movlw	12
  1631  0009E6                     L15:
  1632  0009E6  6E2E               	movwf	_Test,c
  1633  0009E8  0100               	movlb	0	; () banked
  1634  0009EA  51DE               	movf	??_test_process& (0+255),w,b
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;test.c: 235: ecran_print_num((unsigned char) (Test.Cpt + 1));
  1638                           
  1639                           ; BSR set to: 0
  1640  0009EC  282F               	incf	_Test+1,w,c
  1641  0009EE  EC5E  F014         	call	_ecran_print_num
  1642                           
  1643                           ;test.c: 236: register_write(0);
  1644  0009F2  0E00               	movlw	0
  1645  0009F4  EC40  F019         	call	_register_write
  1646  0009F8  D7A2               	goto	L12
  1647  0009FA                     l6467:
  1648                           
  1649                           ;test.c: 242: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1650  0009FA  EE20  F030         	lfsr	2,_Test+2
  1651  0009FE  CFDE F0DE          	movff	postinc2,??_test_process
  1652  000A02  CFDD F0DF          	movff	postdec2,??_test_process+1
  1653  000A06  0100               	movlb	0	; () banked
  1654  000A08  1FDE               	comf	??_test_process& (0+255),f,b
  1655  000A0A  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1656  000A0C  4BDE               	infsnz	??_test_process& (0+255),f,b
  1657  000A0E  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1658  000A10  504F               	movf	_Cptms,w,c	;volatile
  1659  000A12  0100               	movlb	0	; () banked
  1660  000A14  27DE               	addwf	??_test_process& (0+255),f,b
  1661  000A16  5050               	movf	_Cptms+1,w,c	;volatile
  1662  000A18  0100               	movlb	0	; () banked
  1663  000A1A  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1664  000A1C  0E15               	movlw	21
  1665  000A1E  0100               	movlb	0	; () banked
  1666  000A20  5DDE               	subwf	??_test_process& (0+255),w,b
  1667  000A22  0E00               	movlw	0
  1668  000A24  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1669  000A26  A0D8               	btfss	status,0,c
  1670  000A28  D0D8               	goto	l616
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;test.c: 243: {
  1674                           ;test.c: 244: if (++Test.Cpt > 31) {Test.Step = 0x0E;}
  1675  000A2A  EE20  F02F         	lfsr	2,_Test+1
  1676  000A2E  2ADF               	incf	indf2,f,c
  1677  000A30  0E1F               	movlw	31
  1678  000A32  64DF               	cpfsgt	indf2,c
  1679  000A34  D004               	goto	l6473
  1680                           
  1681                           ; BSR set to: 0
  1682  000A36  0100               	movlb	0	; () banked
  1683  000A38  6FDE               	movwf	??_test_process& (0+255),b
  1684  000A3A  0E0E               	movlw	14
  1685  000A3C  D003               	goto	L16
  1686  000A3E                     l6473:
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;test.c: 245: else {Test.Step = 0x0A;}
  1690  000A3E  0100               	movlb	0	; () banked
  1691  000A40  6FDE               	movwf	??_test_process& (0+255),b
  1692  000A42  0E0A               	movlw	10
  1693  000A44                     L16:
  1694  000A44  6E2E               	movwf	_Test,c
  1695  000A46  0100               	movlb	0	; () banked
  1696  000A48  51DE               	movf	??_test_process& (0+255),w,b
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;test.c: 246: check_comutest(0);
  1700                           
  1701                           ; BSR set to: 0
  1702  000A4A  0E00               	movlw	0
  1703  000A4C  EC9E  F018         	call	_check_comutest
  1704  000A50  D776               	goto	L12
  1705  000A52                     l603:
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;test.c: 251: if ( (Bouton[Bp_IdTest].State == 0)
  1709                           ;test.c: 252: && ((((unsigned short) (Cptms - Test.Time) > 500) ? 1 : 0)))
  1710  000A52  0100               	movlb	0	; () banked
  1711  000A54  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  1712  000A56  D0C1               	goto	l616
  1713                           
  1714                           ; BSR set to: 0
  1715  000A58  EE20  F030         	lfsr	2,_Test+2
  1716  000A5C  CFDE F0DE          	movff	postinc2,??_test_process
  1717  000A60  CFDD F0DF          	movff	postdec2,??_test_process+1
  1718  000A64  0100               	movlb	0	; () banked
  1719  000A66  1FDE               	comf	??_test_process& (0+255),f,b
  1720  000A68  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1721  000A6A  4BDE               	infsnz	??_test_process& (0+255),f,b
  1722  000A6C  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1723  000A6E  504F               	movf	_Cptms,w,c	;volatile
  1724  000A70  0100               	movlb	0	; () banked
  1725  000A72  27DE               	addwf	??_test_process& (0+255),f,b
  1726  000A74  5050               	movf	_Cptms+1,w,c	;volatile
  1727  000A76  0100               	movlb	0	; () banked
  1728  000A78  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1729  000A7A  0EF5               	movlw	245
  1730  000A7C  0100               	movlb	0	; () banked
  1731  000A7E  5DDE               	subwf	??_test_process& (0+255),w,b
  1732  000A80  0E01               	movlw	1
  1733  000A82  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1734  000A84  A0D8               	btfss	status,0,c
  1735  000A86  D0A9               	goto	l616
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;test.c: 253: {
  1739                           ;test.c: 254: if (++Test.Cpt > 31) {Test.Step = 0x0E;}
  1740  000A88  EE20  F02F         	lfsr	2,_Test+1
  1741  000A8C  2ADF               	incf	indf2,f,c
  1742  000A8E  0E1F               	movlw	31
  1743  000A90  64DF               	cpfsgt	indf2,c
  1744  000A92  D004               	goto	l6485
  1745                           
  1746                           ; BSR set to: 0
  1747  000A94  0100               	movlb	0	; () banked
  1748  000A96  6FDE               	movwf	??_test_process& (0+255),b
  1749  000A98  0E0E               	movlw	14
  1750  000A9A  D003               	goto	L17
  1751  000A9C                     l6485:
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;test.c: 255: else {Test.Step = 0x0A;}
  1755  000A9C  0100               	movlb	0	; () banked
  1756  000A9E  6FDE               	movwf	??_test_process& (0+255),b
  1757  000AA0  0E0A               	movlw	10
  1758  000AA2                     L17:
  1759  000AA2  6E2E               	movwf	_Test,c
  1760  000AA4  0100               	movlb	0	; () banked
  1761  000AA6  51DE               	movf	??_test_process& (0+255),w,b
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;test.c: 256: check_comutest(0);
  1765                           
  1766                           ; BSR set to: 0
  1767  000AA8  0E00               	movlw	0
  1768  000AAA  EC9E  F018         	call	_check_comutest
  1769  000AAE  D747               	goto	L12
  1770  000AB0                     l6491:
  1771                           
  1772                           ;test.c: 261: if (Test.Cpt != 0)
  1773  000AB0  502F               	movf	_Test+1,w,c
  1774  000AB2  B4D8               	btfsc	status,2,c
  1775  000AB4  D004               	goto	l6495
  1776                           
  1777                           ;test.c: 262: {
  1778                           ;test.c: 263: ecran_print_num(Test.Cpt);
  1779  000AB6  502F               	movf	_Test+1,w,c
  1780  000AB8  EC5E  F014         	call	_ecran_print_num
  1781                           
  1782                           ;test.c: 264: }
  1783  000ABC  D010               	goto	l609
  1784  000ABE                     l6495:
  1785                           
  1786                           ;test.c: 265: else
  1787                           ;test.c: 266: {
  1788                           ;test.c: 267: Ecran.Digit[2] = 0;
  1789  000ABE  0100               	movlb	0	; () banked
  1790  000AC0  6FDE               	movwf	??_test_process& (0+255),b
  1791  000AC2  0E00               	movlw	0
  1792  000AC4  0100               	movlb	0	; () banked
  1793  000AC6  0100               	movlb	0	; () banked
  1794  000AC8  6FAC               	movwf	(_Ecran+2)& (0+255),b
  1795  000ACA  0100               	movlb	0	; () banked
  1796  000ACC  51DE               	movf	??_test_process& (0+255),w,b
  1797                           
  1798                           ;test.c: 268: Ecran.Digit[3] = 0;
  1799  000ACE  0100               	movlb	0	; () banked
  1800  000AD0  6FDE               	movwf	??_test_process& (0+255),b
  1801  000AD2  0E00               	movlw	0
  1802  000AD4  0100               	movlb	0	; () banked
  1803  000AD6  0100               	movlb	0	; () banked
  1804  000AD8  6FAD               	movwf	(_Ecran+3)& (0+255),b
  1805  000ADA  0100               	movlb	0	; () banked
  1806  000ADC  51DE               	movf	??_test_process& (0+255),w,b
  1807  000ADE                     l609:
  1808                           
  1809                           ;test.c: 269: }
  1810                           ;test.c: 271: Ecran.Digit[0] = '-';
  1811  000ADE  0100               	movlb	0	; () banked
  1812  000AE0  6FDE               	movwf	??_test_process& (0+255),b
  1813  000AE2  0E2D               	movlw	45
  1814  000AE4  0100               	movlb	0	; () banked
  1815  000AE6  0100               	movlb	0	; () banked
  1816  000AE8  6FAA               	movwf	_Ecran& (0+255),b
  1817  000AEA  0100               	movlb	0	; () banked
  1818  000AEC  51DE               	movf	??_test_process& (0+255),w,b
  1819                           
  1820                           ;test.c: 272: Ecran.Digit[1] = '-';
  1821  000AEE  0100               	movlb	0	; () banked
  1822  000AF0  6FDE               	movwf	??_test_process& (0+255),b
  1823  000AF2  0E2D               	movlw	45
  1824  000AF4  0100               	movlb	0	; () banked
  1825  000AF6  0100               	movlb	0	; () banked
  1826  000AF8  6FAB               	movwf	(_Ecran+1)& (0+255),b
  1827  000AFA  0100               	movlb	0	; () banked
  1828  000AFC  51DE               	movf	??_test_process& (0+255),w,b
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;test.c: 274: Ecran.Digits = Ecran.Digit;
  1832  000AFE  0100               	movlb	0	; () banked
  1833  000B00  0E00               	movlw	high _Ecran
  1834  000B02  0100               	movlb	0	; () banked
  1835  000B04  0100               	movlb	0	; () banked
  1836  000B06  6FAF               	movwf	(_Ecran+5)& (0+255),b
  1837  000B08  0100               	movlb	0	; () banked
  1838  000B0A  0EAA               	movlw	low _Ecran
  1839  000B0C  0100               	movlb	0	; () banked
  1840  000B0E  0100               	movlb	0	; () banked
  1841  000B10  6FAE               	movwf	(_Ecran+4)& (0+255),b
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;test.c: 275: Test.Step = 0x0F;
  1845  000B12  0100               	movlb	0	; () banked
  1846  000B14  6FDE               	movwf	??_test_process& (0+255),b
  1847  000B16  0E0F               	movlw	15
  1848  000B18                     L13:
  1849  000B18  6E2E               	movwf	_Test,c
  1850  000B1A  D028               	goto	L18
  1851  000B1C                     l6505:
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;test.c: 286: if ((((unsigned short) (Cptms - Test.Time) > 1000) ? 1 : 0))
  1855  000B1C  EE20  F030         	lfsr	2,_Test+2
  1856  000B20  CFDE F0DE          	movff	postinc2,??_test_process
  1857  000B24  CFDD F0DF          	movff	postdec2,??_test_process+1
  1858  000B28  0100               	movlb	0	; () banked
  1859  000B2A  1FDE               	comf	??_test_process& (0+255),f,b
  1860  000B2C  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1861  000B2E  4BDE               	infsnz	??_test_process& (0+255),f,b
  1862  000B30  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1863  000B32  504F               	movf	_Cptms,w,c	;volatile
  1864  000B34  0100               	movlb	0	; () banked
  1865  000B36  27DE               	addwf	??_test_process& (0+255),f,b
  1866  000B38  5050               	movf	_Cptms+1,w,c	;volatile
  1867  000B3A  0100               	movlb	0	; () banked
  1868  000B3C  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1869  000B3E  0EE9               	movlw	233
  1870  000B40  0100               	movlb	0	; () banked
  1871  000B42  5DDE               	subwf	??_test_process& (0+255),w,b
  1872  000B44  0E03               	movlw	3
  1873  000B46  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1874  000B48  A0D8               	btfss	status,0,c
  1875  000B4A  D047               	goto	l616
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;test.c: 287: {
  1879                           ;test.c: 288: Test.Step = 0x11;
  1880  000B4C  0100               	movlb	0	; () banked
  1881  000B4E  6FDE               	movwf	??_test_process& (0+255),b
  1882  000B50  0E11               	movlw	17
  1883  000B52  6E2E               	movwf	_Test,c
  1884  000B54  0100               	movlb	0	; () banked
  1885  000B56  51DE               	movf	??_test_process& (0+255),w,b
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;test.c: 290: ecran_wait();
  1889  000B58  EC9C  F01A         	call	_ecran_wait	;wreg free
  1890  000B5C  D03E               	goto	l616
  1891  000B5E                     l614:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;test.c: 294: if (Bouton[Bp_IdTest].State == 1)
  1895  000B5E  0100               	movlb	0	; () banked
  1896  000B60  A393               	btfss	(_Bouton+5)& (0+255),1,b
  1897  000B62  D03B               	goto	l616
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;test.c: 295: {
  1901                           ;test.c: 296: Micro.Phase = 0x00;
  1902  000B64  0100               	movlb	0	; () banked
  1903  000B66  6FDE               	movwf	??_test_process& (0+255),b
  1904  000B68  0E00               	movlw	0
  1905  000B6A  6E54               	movwf	_Micro+2,c
  1906  000B6C                     L18:
  1907  000B6C  0100               	movlb	0	; () banked
  1908  000B6E  51DE               	movf	??_test_process& (0+255),w,b
  1909  000B70  D034               	goto	l616
  1910  000B72                     l6515:
  1911                           
  1912                           ; BSR set to: 0
  1913  000B72  502E               	movf	_Test,w,c
  1914                           
  1915                           ; Switch size 1, requested type "space"
  1916                           ; Number of cases is 17, Range of values is 1 to 17
  1917                           ; switch strategies available:
  1918                           ; Name         Instructions Cycles
  1919                           ; simple_byte           52    27 (average)
  1920                           ;	Chosen strategy is simple_byte
  1921  000B74  0A01               	xorlw	1	; case 1
  1922  000B76  B4D8               	btfsc	status,2,c
  1923  000B78  D558               	goto	l564
  1924  000B7A  0A03               	xorlw	3	; case 2
  1925  000B7C  B4D8               	btfsc	status,2,c
  1926  000B7E  D55C               	goto	l6345
  1927  000B80  0A01               	xorlw	1	; case 3
  1928  000B82  B4D8               	btfsc	status,2,c
  1929  000B84  D5AD               	goto	l568
  1930  000B86  0A07               	xorlw	7	; case 4
  1931  000B88  B4D8               	btfsc	status,2,c
  1932  000B8A  D5BF               	goto	l6377
  1933  000B8C  0A01               	xorlw	1	; case 5
  1934  000B8E  B4D8               	btfsc	status,2,c
  1935  000B90  D5F9               	goto	l6389
  1936  000B92  0A03               	xorlw	3	; case 6
  1937  000B94  B4D8               	btfsc	status,2,c
  1938  000B96  D63A               	goto	l6405
  1939  000B98  0A01               	xorlw	1	; case 7
  1940  000B9A  B4D8               	btfsc	status,2,c
  1941  000B9C  D663               	goto	l584
  1942  000B9E  0A0F               	xorlw	15	; case 8
  1943  000BA0  B4D8               	btfsc	status,2,c
  1944  000BA2  D68F               	goto	l6429
  1945  000BA4  0A01               	xorlw	1	; case 9
  1946  000BA6  B4D8               	btfsc	status,2,c
  1947  000BA8  D6C3               	goto	l591
  1948  000BAA  0A03               	xorlw	3	; case 10
  1949  000BAC  B4D8               	btfsc	status,2,c
  1950  000BAE  D6CC               	goto	l6443
  1951  000BB0  0A01               	xorlw	1	; case 11
  1952  000BB2  B4D8               	btfsc	status,2,c
  1953  000BB4  D6E8               	goto	l6451
  1954  000BB6  0A07               	xorlw	7	; case 12
  1955  000BB8  B4D8               	btfsc	status,2,c
  1956  000BBA  D71F               	goto	l6467
  1957  000BBC  0A01               	xorlw	1	; case 13
  1958  000BBE  B4D8               	btfsc	status,2,c
  1959  000BC0  D748               	goto	l603
  1960  000BC2  0A03               	xorlw	3	; case 14
  1961  000BC4  B4D8               	btfsc	status,2,c
  1962  000BC6  D774               	goto	l6491
  1963  000BC8  0A01               	xorlw	1	; case 15
  1964  000BCA  B4D8               	btfsc	status,2,c
  1965  000BCC  D6B1               	goto	l591
  1966  000BCE  0A1F               	xorlw	31	; case 16
  1967  000BD0  B4D8               	btfsc	status,2,c
  1968  000BD2  D7A4               	goto	l6505
  1969  000BD4  0A01               	xorlw	1	; case 17
  1970  000BD6  B4D8               	btfsc	status,2,c
  1971  000BD8  D7C2               	goto	l614
  1972  000BDA                     l616:
  1973  000BDA  0012               	return	
  1974  000BDC  FFFF               	dw	65535	; errata NOP
  1975  000BDE                     __end_of_test_process:
  1976                           	opt stack 0
  1977                           tblptru	equ	0xFF8
  1978                           tblptrh	equ	0xFF7
  1979                           tblptrl	equ	0xFF6
  1980                           tablat	equ	0xFF5
  1981                           prodh	equ	0xFF4
  1982                           prodl	equ	0xFF3
  1983                           postinc0	equ	0xFEE
  1984                           wreg	equ	0xFE8
  1985                           postdec1	equ	0xFE5
  1986                           fsr1l	equ	0xFE1
  1987                           indf2	equ	0xFDF
  1988                           postinc2	equ	0xFDE
  1989                           postdec2	equ	0xFDD
  1990                           fsr2h	equ	0xFDA
  1991                           fsr2l	equ	0xFD9
  1992                           status	equ	0xFD8
  1993                           
  1994 ;; *************** function _check_UInfla *****************
  1995 ;; Defined at:
  1996 ;;		line 80 in file "test.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;		None
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  temp            2   34[BANK0 ] unsigned short 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  2   28[BANK0 ] unsigned short 
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, status,0, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2010 ;;      Params:         0       2       0       0       0       0       0
  2011 ;;      Locals:         0       2       0       0       0       0       0
  2012 ;;      Temps:          0       4       0       0       0       0       0
  2013 ;;      Totals:         0       8       0       0       0       0       0
  2014 ;;Total ram usage:        8 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    5
  2017 ;; This function calls:
  2018 ;;		___ftmul
  2019 ;;		___fttol
  2020 ;;		___lwtoft
  2021 ;;		_ana_read
  2022 ;; This function is called by:
  2023 ;;		_test_process
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text2
  2028  0025C2                     __ptext2:
  2029                           	opt stack 0
  2030  0025C2                     _check_UInfla:
  2031                           	opt stack 24
  2032                           
  2033                           ;incstack = 0
  2034  0025C2  FFFF               	dw	65535
  2035                           
  2036                           ;test.c: 82: unsigned short temp = 0;
  2037  0025C4  0E00               	movlw	0
  2038  0025C6  0100               	movlb	0	; () banked
  2039  0025C8  0100               	movlb	0	; () banked
  2040  0025CA  6FDD               	movwf	(check_UInfla@temp+1)& (0+255),b
  2041  0025CC  0E00               	movlw	0
  2042  0025CE  0100               	movlb	0	; () banked
  2043  0025D0  6FDC               	movwf	check_UInfla@temp& (0+255),b
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;test.c: 84: if (PORTCbits.RC5 == 1)
  2047  0025D2  AA82               	btfss	3970,5,c	;volatile
  2048  0025D4  D002               	goto	l6047
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;test.c: 85: {
  2052                           ;test.c: 86: PORTBbits.RB1 = 1;
  2053  0025D6  8281               	bsf	3969,1,c	;volatile
  2054                           
  2055                           ;test.c: 87: PORTAbits.RA5 = 1;
  2056  0025D8  8A80               	bsf	3968,5,c	;volatile
  2057  0025DA                     l6047:
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;test.c: 88: }
  2061                           ;test.c: 90: temp = ana_read(1);
  2062  0025DA  0E01               	movlw	1
  2063  0025DC  EC7C  F017         	call	_ana_read
  2064  0025E0  0100               	movlb	0	; () banked
  2065  0025E2  C0C0  F0DC         	movff	?_ana_read,check_UInfla@temp
  2066  0025E6  0100               	movlb	0	; () banked
  2067  0025E8  C0C1  F0DD         	movff	?_ana_read+1,check_UInfla@temp+1
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;test.c: 92: PORTBbits.RB1 = 0;
  2071  0025EC  9281               	bcf	3969,1,c	;volatile
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;test.c: 93: PORTAbits.RA5 = 0;
  2075  0025EE  9A80               	bcf	3968,5,c	;volatile
  2076                           
  2077                           ;test.c: 95: Test.U_Infla = (float) temp * 0.0049f;
  2078  0025F0  C0DC  F0C2         	movff	check_UInfla@temp,___lwtoft@c
  2079  0025F4  C0DD  F0C3         	movff	check_UInfla@temp+1,___lwtoft@c+1
  2080  0025F8  EC8E  F019         	call	___lwtoft	;wreg free
  2081  0025FC  C0C2  F0C7         	movff	?___lwtoft,___ftmul@f1
  2082  002600  C0C3  F0C8         	movff	?___lwtoft+1,___ftmul@f1+1
  2083  002604  C0C4  F0C9         	movff	?___lwtoft+2,___ftmul@f1+2
  2084  002608  0E90               	movlw	144
  2085  00260A  0100               	movlb	0	; () banked
  2086  00260C  0100               	movlb	0	; () banked
  2087  00260E  6FCA               	movwf	___ftmul@f2& (0+255),b
  2088  002610  0EA0               	movlw	160
  2089  002612  0100               	movlb	0	; () banked
  2090  002614  0100               	movlb	0	; () banked
  2091  002616  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2092  002618  0E3B               	movlw	59
  2093  00261A  0100               	movlb	0	; () banked
  2094  00261C  0100               	movlb	0	; () banked
  2095  00261E  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2096  002620  ECDE  F009         	call	___ftmul	;wreg free
  2097  002624  C0C7  F035         	movff	?___ftmul,_Test+7
  2098  002628  C0C8  F036         	movff	?___ftmul+1,_Test+8
  2099  00262C  C0C9  F037         	movff	?___ftmul+2,_Test+9
  2100                           
  2101                           ;test.c: 96: Test.U_Infla = Test.U_Infla * 11.62f;
  2102  002630  C035  F0C7         	movff	_Test+7,___ftmul@f1
  2103  002634  C036  F0C8         	movff	_Test+8,___ftmul@f1+1
  2104  002638  C037  F0C9         	movff	_Test+9,___ftmul@f1+2
  2105  00263C  0EEC               	movlw	236
  2106  00263E  0100               	movlb	0	; () banked
  2107  002640  0100               	movlb	0	; () banked
  2108  002642  6FCA               	movwf	___ftmul@f2& (0+255),b
  2109  002644  0E39               	movlw	57
  2110  002646  0100               	movlb	0	; () banked
  2111  002648  0100               	movlb	0	; () banked
  2112  00264A  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2113  00264C  0E41               	movlw	65
  2114  00264E  0100               	movlb	0	; () banked
  2115  002650  0100               	movlb	0	; () banked
  2116  002652  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2117  002654  ECDE  F009         	call	___ftmul	;wreg free
  2118  002658  C0C7  F035         	movff	?___ftmul,_Test+7
  2119  00265C  C0C8  F036         	movff	?___ftmul+1,_Test+8
  2120  002660  C0C9  F037         	movff	?___ftmul+2,_Test+9
  2121                           
  2122                           ;test.c: 97: Test.U_Infla = Test.U_Infla * 100.0f;
  2123  002664  C035  F0C7         	movff	_Test+7,___ftmul@f1
  2124  002668  C036  F0C8         	movff	_Test+8,___ftmul@f1+1
  2125  00266C  C037  F0C9         	movff	_Test+9,___ftmul@f1+2
  2126  002670  0E00               	movlw	0
  2127  002672  0100               	movlb	0	; () banked
  2128  002674  0100               	movlb	0	; () banked
  2129  002676  6FCA               	movwf	___ftmul@f2& (0+255),b
  2130  002678  0EC8               	movlw	200
  2131  00267A  0100               	movlb	0	; () banked
  2132  00267C  0100               	movlb	0	; () banked
  2133  00267E  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2134  002680  0E42               	movlw	66
  2135  002682  0100               	movlb	0	; () banked
  2136  002684  0100               	movlb	0	; () banked
  2137  002686  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2138  002688  ECDE  F009         	call	___ftmul	;wreg free
  2139  00268C  C0C7  F035         	movff	?___ftmul,_Test+7
  2140  002690  C0C8  F036         	movff	?___ftmul+1,_Test+8
  2141  002694  C0C9  F037         	movff	?___ftmul+2,_Test+9
  2142                           
  2143                           ;test.c: 99: return (unsigned short) Test.U_Infla;
  2144  002698  C035  F0BA         	movff	_Test+7,___fttol@f1
  2145  00269C  C036  F0BB         	movff	_Test+8,___fttol@f1+1
  2146  0026A0  C037  F0BC         	movff	_Test+9,___fttol@f1+2
  2147  0026A4  ECFA  F00D         	call	___fttol	;wreg free
  2148  0026A8  C0BA  F0D8         	movff	?___fttol,??_check_UInfla
  2149  0026AC  C0BB  F0D9         	movff	?___fttol+1,??_check_UInfla+1
  2150  0026B0  C0BC  F0DA         	movff	?___fttol+2,??_check_UInfla+2
  2151  0026B4  C0BD  F0DB         	movff	?___fttol+3,??_check_UInfla+3
  2152  0026B8  C0D8  F0D6         	movff	??_check_UInfla,?_check_UInfla
  2153  0026BC  C0D9  F0D7         	movff	??_check_UInfla+1,?_check_UInfla+1
  2154  0026C0  0012               	return	
  2155  0026C2  FFFF               	dw	65535	; errata NOP
  2156  0026C4                     __end_of_check_UInfla:
  2157                           	opt stack 0
  2158                           tblptru	equ	0xFF8
  2159                           tblptrh	equ	0xFF7
  2160                           tblptrl	equ	0xFF6
  2161                           tablat	equ	0xFF5
  2162                           prodh	equ	0xFF4
  2163                           prodl	equ	0xFF3
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           postdec1	equ	0xFE5
  2167                           fsr1l	equ	0xFE1
  2168                           indf2	equ	0xFDF
  2169                           postinc2	equ	0xFDE
  2170                           postdec2	equ	0xFDD
  2171                           fsr2h	equ	0xFDA
  2172                           fsr2l	equ	0xFD9
  2173                           status	equ	0xFD8
  2174                           
  2175 ;; *************** function _check_UAlim *****************
  2176 ;; Defined at:
  2177 ;;		line 64 in file "test.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;		None
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  temp            2   34[BANK0 ] unsigned short 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  2   28[BANK0 ] unsigned short 
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2191 ;;      Params:         0       2       0       0       0       0       0
  2192 ;;      Locals:         0       2       0       0       0       0       0
  2193 ;;      Temps:          0       4       0       0       0       0       0
  2194 ;;      Totals:         0       8       0       0       0       0       0
  2195 ;;Total ram usage:        8 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:    5
  2198 ;; This function calls:
  2199 ;;		___ftmul
  2200 ;;		___fttol
  2201 ;;		___lwtoft
  2202 ;;		_ana_read
  2203 ;; This function is called by:
  2204 ;;		_test_process
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text3
  2209  0027C2                     __ptext3:
  2210                           	opt stack 0
  2211  0027C2                     _check_UAlim:
  2212                           	opt stack 24
  2213                           
  2214                           ;incstack = 0
  2215  0027C2  FFFF               	dw	65535
  2216                           
  2217                           ;test.c: 66: unsigned short temp = 0;
  2218  0027C4  0E00               	movlw	0
  2219  0027C6  0100               	movlb	0	; () banked
  2220  0027C8  0100               	movlb	0	; () banked
  2221  0027CA  6FDD               	movwf	(check_UAlim@temp+1)& (0+255),b
  2222  0027CC  0E00               	movlw	0
  2223  0027CE  0100               	movlb	0	; () banked
  2224  0027D0  6FDC               	movwf	check_UAlim@temp& (0+255),b
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;test.c: 68: PORTBbits.RB1 = 0;
  2228  0027D2  9281               	bcf	3969,1,c	;volatile
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;test.c: 69: PORTAbits.RA5 = 0;
  2232  0027D4  9A80               	bcf	3968,5,c	;volatile
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;test.c: 71: temp = ana_read(0);
  2236  0027D6  0E00               	movlw	0
  2237  0027D8  EC7C  F017         	call	_ana_read
  2238  0027DC  0100               	movlb	0	; () banked
  2239  0027DE  C0C0  F0DC         	movff	?_ana_read,check_UAlim@temp
  2240  0027E2  0100               	movlb	0	; () banked
  2241  0027E4  C0C1  F0DD         	movff	?_ana_read+1,check_UAlim@temp+1
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;test.c: 73: Test.U_Alim = (float) temp * 0.0049f;
  2245  0027E8  C0DC  F0C2         	movff	check_UAlim@temp,___lwtoft@c
  2246  0027EC  C0DD  F0C3         	movff	check_UAlim@temp+1,___lwtoft@c+1
  2247  0027F0  EC8E  F019         	call	___lwtoft	;wreg free
  2248  0027F4  C0C2  F0C7         	movff	?___lwtoft,___ftmul@f1
  2249  0027F8  C0C3  F0C8         	movff	?___lwtoft+1,___ftmul@f1+1
  2250  0027FC  C0C4  F0C9         	movff	?___lwtoft+2,___ftmul@f1+2
  2251  002800  0E90               	movlw	144
  2252  002802  0100               	movlb	0	; () banked
  2253  002804  0100               	movlb	0	; () banked
  2254  002806  6FCA               	movwf	___ftmul@f2& (0+255),b
  2255  002808  0EA0               	movlw	160
  2256  00280A  0100               	movlb	0	; () banked
  2257  00280C  0100               	movlb	0	; () banked
  2258  00280E  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2259  002810  0E3B               	movlw	59
  2260  002812  0100               	movlb	0	; () banked
  2261  002814  0100               	movlb	0	; () banked
  2262  002816  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2263  002818  ECDE  F009         	call	___ftmul	;wreg free
  2264  00281C  C0C7  F032         	movff	?___ftmul,_Test+4
  2265  002820  C0C8  F033         	movff	?___ftmul+1,_Test+5
  2266  002824  C0C9  F034         	movff	?___ftmul+2,_Test+6
  2267                           
  2268                           ;test.c: 74: Test.U_Alim = Test.U_Alim * 11.62f;
  2269  002828  C032  F0C7         	movff	_Test+4,___ftmul@f1
  2270  00282C  C033  F0C8         	movff	_Test+5,___ftmul@f1+1
  2271  002830  C034  F0C9         	movff	_Test+6,___ftmul@f1+2
  2272  002834  0EEC               	movlw	236
  2273  002836  0100               	movlb	0	; () banked
  2274  002838  0100               	movlb	0	; () banked
  2275  00283A  6FCA               	movwf	___ftmul@f2& (0+255),b
  2276  00283C  0E39               	movlw	57
  2277  00283E  0100               	movlb	0	; () banked
  2278  002840  0100               	movlb	0	; () banked
  2279  002842  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2280  002844  0E41               	movlw	65
  2281  002846  0100               	movlb	0	; () banked
  2282  002848  0100               	movlb	0	; () banked
  2283  00284A  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2284  00284C  ECDE  F009         	call	___ftmul	;wreg free
  2285  002850  C0C7  F032         	movff	?___ftmul,_Test+4
  2286  002854  C0C8  F033         	movff	?___ftmul+1,_Test+5
  2287  002858  C0C9  F034         	movff	?___ftmul+2,_Test+6
  2288                           
  2289                           ;test.c: 75: Test.U_Alim = Test.U_Alim * 100.0f;
  2290  00285C  C032  F0C7         	movff	_Test+4,___ftmul@f1
  2291  002860  C033  F0C8         	movff	_Test+5,___ftmul@f1+1
  2292  002864  C034  F0C9         	movff	_Test+6,___ftmul@f1+2
  2293  002868  0E00               	movlw	0
  2294  00286A  0100               	movlb	0	; () banked
  2295  00286C  0100               	movlb	0	; () banked
  2296  00286E  6FCA               	movwf	___ftmul@f2& (0+255),b
  2297  002870  0EC8               	movlw	200
  2298  002872  0100               	movlb	0	; () banked
  2299  002874  0100               	movlb	0	; () banked
  2300  002876  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2301  002878  0E42               	movlw	66
  2302  00287A  0100               	movlb	0	; () banked
  2303  00287C  0100               	movlb	0	; () banked
  2304  00287E  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2305  002880  ECDE  F009         	call	___ftmul	;wreg free
  2306  002884  C0C7  F032         	movff	?___ftmul,_Test+4
  2307  002888  C0C8  F033         	movff	?___ftmul+1,_Test+5
  2308  00288C  C0C9  F034         	movff	?___ftmul+2,_Test+6
  2309                           
  2310                           ;test.c: 77: return (unsigned short) Test.U_Alim;
  2311  002890  C032  F0BA         	movff	_Test+4,___fttol@f1
  2312  002894  C033  F0BB         	movff	_Test+5,___fttol@f1+1
  2313  002898  C034  F0BC         	movff	_Test+6,___fttol@f1+2
  2314  00289C  ECFA  F00D         	call	___fttol	;wreg free
  2315  0028A0  C0BA  F0D8         	movff	?___fttol,??_check_UAlim
  2316  0028A4  C0BB  F0D9         	movff	?___fttol+1,??_check_UAlim+1
  2317  0028A8  C0BC  F0DA         	movff	?___fttol+2,??_check_UAlim+2
  2318  0028AC  C0BD  F0DB         	movff	?___fttol+3,??_check_UAlim+3
  2319  0028B0  C0D8  F0D6         	movff	??_check_UAlim,?_check_UAlim
  2320  0028B4  C0D9  F0D7         	movff	??_check_UAlim+1,?_check_UAlim+1
  2321  0028B8  0012               	return	
  2322  0028BA  FFFF               	dw	65535	; errata NOP
  2323  0028BC                     __end_of_check_UAlim:
  2324                           	opt stack 0
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           prodh	equ	0xFF4
  2330                           prodl	equ	0xFF3
  2331                           postinc0	equ	0xFEE
  2332                           wreg	equ	0xFE8
  2333                           postdec1	equ	0xFE5
  2334                           fsr1l	equ	0xFE1
  2335                           indf2	equ	0xFDF
  2336                           postinc2	equ	0xFDE
  2337                           postdec2	equ	0xFDD
  2338                           fsr2h	equ	0xFDA
  2339                           fsr2l	equ	0xFD9
  2340                           status	equ	0xFD8
  2341                           
  2342 ;; *************** function _micro_wait *****************
  2343 ;; Defined at:
  2344 ;;		line 91 in file "micro.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;		None               void
  2351 ;; Registers used:
  2352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2358 ;;      Params:         0       0       0       0       0       0       0
  2359 ;;      Locals:         0       0       0       0       0       0       0
  2360 ;;      Temps:          0       1       0       0       0       0       0
  2361 ;;      Totals:         0       1       0       0       0       0       0
  2362 ;;Total ram usage:        1 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    7
  2365 ;; This function calls:
  2366 ;;		_check_comutest
  2367 ;;		_ecran_blank
  2368 ;;		_ecran_print_one_char
  2369 ;;		_ecran_wait
  2370 ;; This function is called by:
  2371 ;;		_main
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text4
  2376  00298C                     __ptext4:
  2377                           	opt stack 0
  2378  00298C                     _micro_wait:
  2379                           	opt stack 23
  2380                           
  2381                           ;incstack = 0
  2382  00298C  FFFF               	dw	65535
  2383                           
  2384                           ;micro.c: 93: switch (Micro.Step)
  2385  00298E  D056               	goto	l6339
  2386  002990                     l815:
  2387                           
  2388                           ;micro.c: 96: if (Bouton[Bp_IdTest].State == 0)
  2389  002990  0100               	movlb	0	; () banked
  2390  002992  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  2391  002994  D05D               	goto	l828
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;micro.c: 97: {
  2395                           ;micro.c: 98: Micro.Step = 0x01;
  2396  002996  0100               	movlb	0	; () banked
  2397  002998  6FC1               	movwf	??_micro_wait& (0+255),b
  2398  00299A  0E01               	movlw	1
  2399  00299C  6E55               	movwf	_Micro+3,c
  2400  00299E  0100               	movlb	0	; () banked
  2401  0029A0  51C1               	movf	??_micro_wait& (0+255),w,b
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;micro.c: 99: ecran_wait();
  2405  0029A2  EC9C  F01A         	call	_ecran_wait	;wreg free
  2406  0029A6  D054               	goto	l828
  2407  0029A8                     l818:
  2408                           
  2409                           ;micro.c: 103: if (Bouton[Bp_IdTest].State == 1)
  2410  0029A8  0100               	movlb	0	; () banked
  2411  0029AA  A393               	btfss	(_Bouton+5)& (0+255),1,b
  2412  0029AC  D051               	goto	l828
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;micro.c: 104: {
  2416                           ;micro.c: 105: Micro.Step = 0x03;
  2417  0029AE  0100               	movlb	0	; () banked
  2418  0029B0  6FC1               	movwf	??_micro_wait& (0+255),b
  2419  0029B2  0E03               	movlw	3
  2420  0029B4  6E55               	movwf	_Micro+3,c
  2421  0029B6  0100               	movlb	0	; () banked
  2422  0029B8  51C1               	movf	??_micro_wait& (0+255),w,b
  2423  0029BA  D04A               	goto	l828
  2424  0029BC                     l820:
  2425                           
  2426                           ;micro.c: 109: if (Bouton[Bp_IdTest].State == 0)
  2427  0029BC  0100               	movlb	0	; () banked
  2428  0029BE  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  2429  0029C0  D012               	goto	l821
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;micro.c: 110: {
  2433                           ;micro.c: 111: Micro.Phase = 0x01;
  2434  0029C2  0100               	movlb	0	; () banked
  2435  0029C4  6FC1               	movwf	??_micro_wait& (0+255),b
  2436  0029C6  0E01               	movlw	1
  2437  0029C8  6E54               	movwf	_Micro+2,c
  2438  0029CA  0100               	movlb	0	; () banked
  2439  0029CC  51C1               	movf	??_micro_wait& (0+255),w,b
  2440                           
  2441                           ;micro.c: 112: Test.Step = 0x01;
  2442  0029CE  0100               	movlb	0	; () banked
  2443  0029D0  6FC1               	movwf	??_micro_wait& (0+255),b
  2444  0029D2  0E01               	movlw	1
  2445  0029D4  6E2E               	movwf	_Test,c
  2446  0029D6  0100               	movlb	0	; () banked
  2447  0029D8  51C1               	movf	??_micro_wait& (0+255),w,b
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;micro.c: 113: check_comutest(0);
  2451  0029DA  0E00               	movlw	0
  2452  0029DC  EC9E  F018         	call	_check_comutest
  2453                           
  2454                           ;micro.c: 114: ecran_blank();
  2455  0029E0  ECE3  F017         	call	_ecran_blank	;wreg free
  2456                           
  2457                           ;micro.c: 115: }
  2458  0029E4  D016               	goto	l6331
  2459  0029E6                     l821:
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;micro.c: 116: else if (Bouton[Bp_On].State == 0)
  2463  0029E6  0100               	movlb	0	; () banked
  2464  0029E8  B390               	btfsc	(_Bouton+2)& (0+255),1,b
  2465  0029EA  D013               	goto	l6331
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;micro.c: 117: {
  2469                           ;micro.c: 118: Micro.Phase = 0x02;
  2470  0029EC  0100               	movlb	0	; () banked
  2471  0029EE  6FC1               	movwf	??_micro_wait& (0+255),b
  2472  0029F0  0E02               	movlw	2
  2473  0029F2  6E54               	movwf	_Micro+2,c
  2474  0029F4  0100               	movlb	0	; () banked
  2475  0029F6  51C1               	movf	??_micro_wait& (0+255),w,b
  2476                           
  2477                           ;micro.c: 119: Arm.Step = 0x01;
  2478  0029F8  0100               	movlb	0	; () banked
  2479  0029FA  6FC1               	movwf	??_micro_wait& (0+255),b
  2480  0029FC  0E01               	movlw	1
  2481  0029FE  0100               	movlb	0	; () banked
  2482  002A00  0100               	movlb	0	; () banked
  2483  002A02  6F9A               	movwf	_Arm& (0+255),b
  2484  002A04  0100               	movlb	0	; () banked
  2485  002A06  51C1               	movf	??_micro_wait& (0+255),w,b
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;micro.c: 120: check_comutest(1);
  2489  002A08  0E01               	movlw	1
  2490  002A0A  EC9E  F018         	call	_check_comutest
  2491                           
  2492                           ;micro.c: 121: ecran_blank();
  2493  002A0E  ECE3  F017         	call	_ecran_blank	;wreg free
  2494  002A12                     l6331:
  2495                           
  2496                           ;micro.c: 122: }
  2497                           ;micro.c: 124: if (Bouton[Bp_Start].State == 0)
  2498  002A12  0100               	movlb	0	; () banked
  2499  002A14  B399               	btfsc	(_Bouton+11)& (0+255),1,b
  2500  002A16  D01C               	goto	l828
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;micro.c: 125: {
  2504                           ;micro.c: 126: ecran_blank();
  2505  002A18  ECE3  F017         	call	_ecran_blank	;wreg free
  2506                           
  2507                           ;micro.c: 128: ecran_print_one_char(0, 'S');
  2508  002A1C  0100               	movlb	0	; () banked
  2509  002A1E  6FC1               	movwf	??_micro_wait& (0+255),b
  2510  002A20  0E53               	movlw	83
  2511  002A22  0100               	movlb	0	; () banked
  2512  002A24  0100               	movlb	0	; () banked
  2513  002A26  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  2514  002A28  0100               	movlb	0	; () banked
  2515  002A2A  51C1               	movf	??_micro_wait& (0+255),w,b
  2516  002A2C  0E00               	movlw	0
  2517  002A2E  ECD9  F019         	call	_ecran_print_one_char
  2518  002A32                     l825:
  2519  002A32  A081               	btfss	3969,0,c	;volatile
  2520  002A34  D7FE               	goto	l825
  2521                           
  2522                           ;micro.c: 132: ecran_wait();
  2523  002A36  EC9C  F01A         	call	_ecran_wait	;wreg free
  2524  002A3A  D00A               	goto	l828
  2525  002A3C                     l6339:
  2526  002A3C  5055               	movf	_Micro+3,w,c
  2527                           
  2528                           ; Switch size 1, requested type "space"
  2529                           ; Number of cases is 3, Range of values is 0 to 3
  2530                           ; switch strategies available:
  2531                           ; Name         Instructions Cycles
  2532                           ; simple_byte           10     6 (average)
  2533                           ;	Chosen strategy is simple_byte
  2534  002A3E  0A00               	xorlw	0	; case 0
  2535  002A40  B4D8               	btfsc	status,2,c
  2536  002A42  D7A6               	goto	l815
  2537  002A44  0A01               	xorlw	1	; case 1
  2538  002A46  B4D8               	btfsc	status,2,c
  2539  002A48  D7AF               	goto	l818
  2540  002A4A  0A02               	xorlw	2	; case 3
  2541  002A4C  B4D8               	btfsc	status,2,c
  2542  002A4E  D7B6               	goto	l820
  2543  002A50                     l828:
  2544  002A50  0012               	return	
  2545  002A52  FFFF               	dw	65535	; errata NOP
  2546  002A54                     __end_of_micro_wait:
  2547                           	opt stack 0
  2548                           tblptru	equ	0xFF8
  2549                           tblptrh	equ	0xFF7
  2550                           tblptrl	equ	0xFF6
  2551                           tablat	equ	0xFF5
  2552                           prodh	equ	0xFF4
  2553                           prodl	equ	0xFF3
  2554                           postinc0	equ	0xFEE
  2555                           wreg	equ	0xFE8
  2556                           postdec1	equ	0xFE5
  2557                           fsr1l	equ	0xFE1
  2558                           indf2	equ	0xFDF
  2559                           postinc2	equ	0xFDE
  2560                           postdec2	equ	0xFDD
  2561                           fsr2h	equ	0xFDA
  2562                           fsr2l	equ	0xFD9
  2563                           status	equ	0xFD8
  2564                           
  2565 ;; *************** function _micro_config *****************
  2566 ;; Defined at:
  2567 ;;		line 39 in file "micro.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;		None
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;		None
  2572 ;; Return value:  Size  Location     Type
  2573 ;;		None               void
  2574 ;; Registers used:
  2575 ;;		wreg, status,2
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2581 ;;      Params:         0       0       0       0       0       0       0
  2582 ;;      Locals:         0       0       0       0       0       0       0
  2583 ;;      Temps:          0       0       0       0       0       0       0
  2584 ;;      Totals:         0       0       0       0       0       0       0
  2585 ;;Total ram usage:        0 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    3
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text5
  2596  0034B0                     __ptext5:
  2597                           	opt stack 0
  2598  0034B0                     _micro_config:
  2599                           	opt stack 27
  2600                           
  2601                           ;incstack = 0
  2602  0034B0  FFFF               	dw	65535
  2603                           
  2604                           ;micro.c: 43: T0CON = 0x88;
  2605  0034B2  0E88               	movlw	136
  2606  0034B4  6ED5               	movwf	4053,c	;volatile
  2607                           
  2608                           ;micro.c: 64: TMR0H = 0xF0;
  2609  0034B6  0EF0               	movlw	240
  2610  0034B8  6ED7               	movwf	4055,c	;volatile
  2611                           
  2612                           ;micro.c: 65: TMR0L = 0x8C;
  2613  0034BA  0E8C               	movlw	140
  2614  0034BC  6ED6               	movwf	4054,c	;volatile
  2615                           
  2616                           ;micro.c: 69: ADCON0 = 0x80;
  2617  0034BE  0E80               	movlw	128
  2618  0034C0  6EC2               	movwf	4034,c	;volatile
  2619                           
  2620                           ;micro.c: 75: ADCON1 = 0xC4;
  2621  0034C2  0EC4               	movlw	196
  2622  0034C4  6EC1               	movwf	4033,c	;volatile
  2623                           
  2624                           ;micro.c: 82: TMR0IP = 1;
  2625  0034C6  84F1               	bsf	intcon2,2,c	;volatile
  2626                           
  2627                           ;micro.c: 83: TMR0IE = 1;
  2628  0034C8  8AF2               	bsf	intcon,5,c	;volatile
  2629                           
  2630                           ;micro.c: 84: IPEN = 1;
  2631  0034CA  8ED0               	bsf	4048,7,c	;volatile
  2632                           
  2633                           ;micro.c: 85: GIE = 1;
  2634  0034CC  8EF2               	bsf	intcon,7,c	;volatile
  2635                           
  2636                           ;micro.c: 87: Micro.Time = Cptms;
  2637  0034CE  C04F  F052         	movff	_Cptms,_Micro	;volatile
  2638  0034D2  C050  F053         	movff	_Cptms+1,_Micro+1	;volatile
  2639                           
  2640                           ;micro.c: 88: Ecran.tRate = 255;
  2641  0034D6  0100               	movlb	0	; () banked
  2642  0034D8  0100               	movlb	0	; () banked
  2643  0034DA  69B6               	setf	(_Ecran+12)& (0+255),b
  2644                           
  2645                           ; BSR set to: 0
  2646  0034DC  0012               	return	
  2647  0034DE  FFFF               	dw	65535	; errata NOP
  2648  0034E0                     __end_of_micro_config:
  2649                           	opt stack 0
  2650                           tblptru	equ	0xFF8
  2651                           tblptrh	equ	0xFF7
  2652                           tblptrl	equ	0xFF6
  2653                           tablat	equ	0xFF5
  2654                           prodh	equ	0xFF4
  2655                           prodl	equ	0xFF3
  2656                           intcon	equ	0xFF2
  2657                           intcon2	equ	0xFF1
  2658                           postinc0	equ	0xFEE
  2659                           wreg	equ	0xFE8
  2660                           postdec1	equ	0xFE5
  2661                           fsr1l	equ	0xFE1
  2662                           indf2	equ	0xFDF
  2663                           postinc2	equ	0xFDE
  2664                           postdec2	equ	0xFDD
  2665                           fsr2h	equ	0xFDA
  2666                           fsr2l	equ	0xFD9
  2667                           status	equ	0xFD8
  2668                           
  2669 ;; *************** function _hw_config *****************
  2670 ;; Defined at:
  2671 ;;		line 3 in file "hardware.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;		None
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;		None
  2676 ;; Return value:  Size  Location     Type
  2677 ;;		None               void
  2678 ;; Registers used:
  2679 ;;		wreg, status,2
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2685 ;;      Params:         0       0       0       0       0       0       0
  2686 ;;      Locals:         0       0       0       0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0       0       0
  2688 ;;      Totals:         0       0       0       0       0       0       0
  2689 ;;Total ram usage:        0 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; Hardware stack levels required when called:    3
  2692 ;; This function calls:
  2693 ;;		Nothing
  2694 ;; This function is called by:
  2695 ;;		_main
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text6
  2700  00302C                     __ptext6:
  2701                           	opt stack 0
  2702  00302C                     _hw_config:
  2703                           	opt stack 27
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;incstack = 0
  2707  00302C  FFFF               	dw	65535
  2708                           
  2709                           ;hardware.c: 6: ADCON1 = 0x07;
  2710  00302E  0E07               	movlw	7
  2711  003030  6EC1               	movwf	4033,c	;volatile
  2712                           
  2713                           ;hardware.c: 10: PORTA = 0;
  2714  003032  0E00               	movlw	0
  2715  003034  6E80               	movwf	3968,c	;volatile
  2716                           
  2717                           ;hardware.c: 12: TRISAbits.TRISA0 = 1;
  2718  003036  8092               	bsf	3986,0,c	;volatile
  2719                           
  2720                           ;hardware.c: 13: TRISAbits.TRISA1 = 1;
  2721  003038  8292               	bsf	3986,1,c	;volatile
  2722                           
  2723                           ;hardware.c: 14: TRISAbits.TRISA2 = 0;
  2724  00303A  9492               	bcf	3986,2,c	;volatile
  2725                           
  2726                           ;hardware.c: 15: TRISAbits.TRISA3 = 1;
  2727  00303C  8692               	bsf	3986,3,c	;volatile
  2728                           
  2729                           ;hardware.c: 16: TRISAbits.TRISA4 = 1;
  2730  00303E  8892               	bsf	3986,4,c	;volatile
  2731                           
  2732                           ;hardware.c: 17: TRISAbits.TRISA5 = 0;
  2733  003040  9A92               	bcf	3986,5,c	;volatile
  2734                           
  2735                           ;hardware.c: 20: PORTB = 0;
  2736  003042  0E00               	movlw	0
  2737  003044  6E81               	movwf	3969,c	;volatile
  2738                           
  2739                           ;hardware.c: 22: TRISBbits.TRISB0 = 1;
  2740  003046  8093               	bsf	3987,0,c	;volatile
  2741                           
  2742                           ;hardware.c: 23: TRISBbits.TRISB1 = 0;
  2743  003048  9293               	bcf	3987,1,c	;volatile
  2744                           
  2745                           ;hardware.c: 24: TRISBbits.TRISB2 = 0;
  2746  00304A  9493               	bcf	3987,2,c	;volatile
  2747                           
  2748                           ;hardware.c: 25: TRISBbits.TRISB3 = 0;
  2749  00304C  9693               	bcf	3987,3,c	;volatile
  2750                           
  2751                           ;hardware.c: 26: TRISBbits.TRISB4 = 0;
  2752  00304E  9893               	bcf	3987,4,c	;volatile
  2753                           
  2754                           ;hardware.c: 27: TRISBbits.TRISB5 = 0;
  2755  003050  9A93               	bcf	3987,5,c	;volatile
  2756                           
  2757                           ;hardware.c: 28: TRISBbits.TRISB6 = 1;
  2758  003052  8C93               	bsf	3987,6,c	;volatile
  2759                           
  2760                           ;hardware.c: 29: TRISBbits.TRISB7 = 1;
  2761  003054  8E93               	bsf	3987,7,c	;volatile
  2762                           
  2763                           ;hardware.c: 32: PORTC = 0;
  2764  003056  0E00               	movlw	0
  2765  003058  6E82               	movwf	3970,c	;volatile
  2766                           
  2767                           ;hardware.c: 34: TRISCbits.TRISC0 = 0;
  2768  00305A  9094               	bcf	3988,0,c	;volatile
  2769                           
  2770                           ;hardware.c: 35: TRISCbits.TRISC1 = 0;
  2771  00305C  9294               	bcf	3988,1,c	;volatile
  2772                           
  2773                           ;hardware.c: 36: TRISCbits.TRISC2 = 0;
  2774  00305E  9494               	bcf	3988,2,c	;volatile
  2775                           
  2776                           ;hardware.c: 37: TRISCbits.TRISC3 = 0;
  2777  003060  9694               	bcf	3988,3,c	;volatile
  2778                           
  2779                           ;hardware.c: 38: TRISCbits.TRISC4 = 0;
  2780  003062  9894               	bcf	3988,4,c	;volatile
  2781                           
  2782                           ;hardware.c: 39: TRISCbits.TRISC5 = 1;
  2783  003064  8A94               	bsf	3988,5,c	;volatile
  2784                           
  2785                           ;hardware.c: 40: TRISCbits.TRISC6 = 0;
  2786  003066  9C94               	bcf	3988,6,c	;volatile
  2787                           
  2788                           ;hardware.c: 41: TRISCbits.TRISC7 = 1;
  2789  003068  8E94               	bsf	3988,7,c	;volatile
  2790                           
  2791                           ;hardware.c: 44: PORTD = 0;
  2792  00306A  0E00               	movlw	0
  2793  00306C  6E83               	movwf	3971,c	;volatile
  2794                           
  2795                           ;hardware.c: 46: TRISDbits.TRISD0 = 0;
  2796  00306E  9095               	bcf	3989,0,c	;volatile
  2797                           
  2798                           ;hardware.c: 47: TRISDbits.TRISD1 = 0;
  2799  003070  9295               	bcf	3989,1,c	;volatile
  2800                           
  2801                           ;hardware.c: 48: TRISDbits.TRISD2 = 0;
  2802  003072  9495               	bcf	3989,2,c	;volatile
  2803                           
  2804                           ;hardware.c: 49: TRISDbits.TRISD3 = 0;
  2805  003074  9695               	bcf	3989,3,c	;volatile
  2806                           
  2807                           ;hardware.c: 50: TRISDbits.TRISD4 = 0;
  2808  003076  9895               	bcf	3989,4,c	;volatile
  2809                           
  2810                           ;hardware.c: 51: TRISDbits.TRISD5 = 0;
  2811  003078  9A95               	bcf	3989,5,c	;volatile
  2812                           
  2813                           ;hardware.c: 52: TRISDbits.TRISD6 = 0;
  2814  00307A  9C95               	bcf	3989,6,c	;volatile
  2815                           
  2816                           ;hardware.c: 53: TRISDbits.TRISD7 = 0;
  2817  00307C  9E95               	bcf	3989,7,c	;volatile
  2818                           
  2819                           ;hardware.c: 56: PORTE = 0;
  2820  00307E  0E00               	movlw	0
  2821  003080  6E84               	movwf	3972,c	;volatile
  2822                           
  2823                           ;hardware.c: 58: TRISEbits.TRISE0 = 1;
  2824  003082  8096               	bsf	3990,0,c	;volatile
  2825                           
  2826                           ;hardware.c: 59: TRISEbits.TRISE1 = 1;
  2827  003084  8296               	bsf	3990,1,c	;volatile
  2828                           
  2829                           ;hardware.c: 60: TRISEbits.TRISE2 = 0;
  2830  003086  9496               	bcf	3990,2,c	;volatile
  2831  003088  0012               	return	
  2832  00308A  FFFF               	dw	65535	; errata NOP
  2833  00308C                     __end_of_hw_config:
  2834                           	opt stack 0
  2835                           tblptru	equ	0xFF8
  2836                           tblptrh	equ	0xFF7
  2837                           tblptrl	equ	0xFF6
  2838                           tablat	equ	0xFF5
  2839                           prodh	equ	0xFF4
  2840                           prodl	equ	0xFF3
  2841                           intcon	equ	0xFF2
  2842                           intcon2	equ	0xFF1
  2843                           postinc0	equ	0xFEE
  2844                           wreg	equ	0xFE8
  2845                           postdec1	equ	0xFE5
  2846                           fsr1l	equ	0xFE1
  2847                           indf2	equ	0xFDF
  2848                           postinc2	equ	0xFDE
  2849                           postdec2	equ	0xFDD
  2850                           fsr2h	equ	0xFDA
  2851                           fsr2l	equ	0xFD9
  2852                           status	equ	0xFD8
  2853                           
  2854 ;; *************** function _feu_process *****************
  2855 ;; Defined at:
  2856 ;;		line 89 in file "feu.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;		None
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;		None
  2861 ;; Return value:  Size  Location     Type
  2862 ;;		None               void
  2863 ;; Registers used:
  2864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2870 ;;      Params:         0       0       0       0       0       0       0
  2871 ;;      Locals:         0       0       0       0       0       0       0
  2872 ;;      Temps:          0       2       0       0       0       0       0
  2873 ;;      Totals:         0       2       0       0       0       0       0
  2874 ;;Total ram usage:        2 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:    5
  2877 ;; This function calls:
  2878 ;;		_delay_ms
  2879 ;;		_feu_check_end
  2880 ;;		_feu_tir
  2881 ;; This function is called by:
  2882 ;;		_main
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text7
  2887  000F1E                     __ptext7:
  2888                           	opt stack 0
  2889  000F1E                     _feu_process:
  2890                           	opt stack 25
  2891                           
  2892                           ;incstack = 0
  2893  000F1E  FFFF               	dw	65535
  2894                           
  2895                           ;feu.c: 91: switch (Feu.Step)
  2896  000F20  D113               	goto	l6625
  2897  000F22                     l1126:
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;feu.c: 95: if (Bouton[Bp_Start].State == 0)
  2901  000F22  0100               	movlb	0	; () banked
  2902  000F24  B399               	btfsc	(_Bouton+11)& (0+255),1,b
  2903  000F26  D12E               	goto	l1151
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;feu.c: 96: {
  2907                           ;feu.c: 97: if (Micro.Mods == 0) {Feu.Step = 0x01;}
  2908  000F28  6657               	tstfsz	_Micro+5,c
  2909  000F2A  D004               	goto	l6569
  2910                           
  2911                           ; BSR set to: 0
  2912  000F2C  0100               	movlb	0	; () banked
  2913  000F2E  6FC1               	movwf	??_feu_process& (0+255),b
  2914  000F30  0E01               	movlw	1
  2915  000F32  D003               	goto	L21
  2916  000F34                     l6569:
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;feu.c: 98: else {Feu.Step = 0x03;}
  2920  000F34  0100               	movlb	0	; () banked
  2921  000F36  6FC1               	movwf	??_feu_process& (0+255),b
  2922  000F38  0E03               	movlw	3
  2923  000F3A                     L21:
  2924  000F3A  0100               	movlb	0	; () banked
  2925  000F3C  0100               	movlb	0	; () banked
  2926  000F3E  6F80               	movwf	_Feu& (0+255),b
  2927  000F40  0100               	movlb	0	; () banked
  2928  000F42  51C1               	movf	??_feu_process& (0+255),w,b
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;feu.c: 100: Micro.State = 0x02;
  2932  000F44  0100               	movlb	0	; () banked
  2933  000F46  6FC1               	movwf	??_feu_process& (0+255),b
  2934  000F48  0E02               	movlw	2
  2935  000F4A  6E56               	movwf	_Micro+4,c
  2936  000F4C  0100               	movlb	0	; () banked
  2937  000F4E  51C1               	movf	??_feu_process& (0+255),w,b
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;feu.c: 102: Decompte = 50;
  2941  000F50  0E32               	movlw	50
  2942  000F52  6E51               	movwf	_Decompte,c	;volatile
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;feu.c: 103: Cpt1Sur20s = 0;
  2946  000F54  0E00               	movlw	0
  2947  000F56  6E4E               	movwf	_Cpt1Sur20s+1,c	;volatile
  2948  000F58  0E00               	movlw	0
  2949  000F5A  6E4D               	movwf	_Cpt1Sur20s,c	;volatile
  2950                           
  2951                           ;feu.c: 105: Feu.LastOutput = 0;
  2952  000F5C  0100               	movlb	0	; () banked
  2953  000F5E  6FC1               	movwf	??_feu_process& (0+255),b
  2954  000F60  0E00               	movlw	0
  2955  000F62  0100               	movlb	0	; () banked
  2956  000F64  0100               	movlb	0	; () banked
  2957  000F66  6F8B               	movwf	(_Feu+11)& (0+255),b
  2958  000F68  0100               	movlb	0	; () banked
  2959  000F6A  51C1               	movf	??_feu_process& (0+255),w,b
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;feu.c: 107: Feu.CanStopStart = 0;
  2963  000F6C  0100               	movlb	0	; () banked
  2964  000F6E  0100               	movlb	0	; () banked
  2965  000F70  918D               	bcf	(_Feu+13)& (0+255),0,b
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;feu.c: 108: Feu.TimeStart = Cptms;
  2969  000F72  C04F  F089         	movff	_Cptms,_Feu+9	;volatile
  2970  000F76  C050  F08A         	movff	_Cptms+1,_Feu+10	;volatile
  2971  000F7A  D104               	goto	l1151
  2972  000F7C                     l6579:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;feu.c: 113: Feu.NextOutput = Cf.Data[Feu.Cpt*3];
  2976  000F7C  0100               	movlb	0	; () banked
  2977  000F7E  0100               	movlb	0	; () banked
  2978  000F80  5181               	movf	(_Feu+1)& (0+255),w,b
  2979  000F82  0D03               	mullw	3
  2980  000F84  0101               	movlb	1	; () banked
  2981  000F86  0E00               	movlw	low _Cf	;volatile
  2982  000F88  24F3               	addwf	prodl,w,c
  2983  000F8A  6ED9               	movwf	fsr2l,c
  2984  000F8C  0101               	movlb	1	; () banked
  2985  000F8E  0E01               	movlw	high _Cf	;volatile
  2986  000F90  20F4               	addwfc	prodh,w,c
  2987  000F92  6EDA               	movwf	fsr2h,c
  2988  000F94  50DF               	movf	indf2,w,c
  2989  000F96  0100               	movlb	0	; () banked
  2990  000F98  0100               	movlb	0	; () banked
  2991  000F9A  6F8C               	movwf	(_Feu+12)& (0+255),b
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;feu.c: 115: if (feu_check_end() == 1) {Feu.Step = 0x08;}
  2995  000F9C  ECAD  F01A         	call	_feu_check_end	;wreg free
  2996  000FA0  0100               	movlb	0	; () banked
  2997  000FA2  6FC1               	movwf	??_feu_process& (0+255),b
  2998  000FA4  0100               	movlb	0	; () banked
  2999  000FA6  05C1               	decf	??_feu_process& (0+255),w,b
  3000  000FA8  A4D8               	btfss	status,2,c
  3001  000FAA  D004               	goto	l6585
  3002  000FAC                     
  3003                           ; BSR set to: 0
  3004  000FAC  0100               	movlb	0	; () banked
  3005  000FAE  6FC1               	movwf	??_feu_process& (0+255),b
  3006  000FB0  0E08               	movlw	8
  3007  000FB2  D0BF               	goto	L28
  3008  000FB4                     l6585:
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;feu.c: 116: else
  3012                           ;feu.c: 117: {
  3013                           ;feu.c: 119: Feu.TimeToFire = Cf.Data[(Feu.Cpt*3) + 1] << 8;
  3014  000FB4  0100               	movlb	0	; () banked
  3015  000FB6  0100               	movlb	0	; () banked
  3016  000FB8  5181               	movf	(_Feu+1)& (0+255),w,b
  3017  000FBA  0D03               	mullw	3
  3018  000FBC  0E01               	movlw	1
  3019  000FBE  26F3               	addwf	prodl,f,c
  3020  000FC0  0E00               	movlw	0
  3021  000FC2  22F4               	addwfc	prodh,f,c
  3022  000FC4  0101               	movlb	1	; () banked
  3023  000FC6  0E00               	movlw	low _Cf	;volatile
  3024  000FC8  24F3               	addwf	prodl,w,c
  3025  000FCA  6ED9               	movwf	fsr2l,c
  3026  000FCC  0101               	movlb	1	; () banked
  3027  000FCE  0E01               	movlw	high _Cf	;volatile
  3028  000FD0  20F4               	addwfc	prodh,w,c
  3029  000FD2  6EDA               	movwf	fsr2h,c
  3030  000FD4  50DF               	movf	indf2,w,c
  3031  000FD6  0100               	movlb	0	; () banked
  3032  000FD8  0100               	movlb	0	; () banked
  3033  000FDA  6F86               	movwf	(_Feu+6)& (0+255),b
  3034  000FDC  0100               	movlb	0	; () banked
  3035  000FDE  6B85               	clrf	(_Feu+5)& (0+255),b
  3036                           
  3037                           ;feu.c: 120: Feu.TimeToFire |= Cf.Data[(Feu.Cpt*3) + 2];
  3038  000FE0  0100               	movlb	0	; () banked
  3039  000FE2  0100               	movlb	0	; () banked
  3040  000FE4  5181               	movf	(_Feu+1)& (0+255),w,b
  3041  000FE6  0D03               	mullw	3
  3042  000FE8  0E02               	movlw	2
  3043  000FEA  26F3               	addwf	prodl,f,c
  3044  000FEC  0E00               	movlw	0
  3045  000FEE  22F4               	addwfc	prodh,f,c
  3046  000FF0  0101               	movlb	1	; () banked
  3047  000FF2  0E00               	movlw	low _Cf	;volatile
  3048  000FF4  24F3               	addwf	prodl,w,c
  3049  000FF6  6ED9               	movwf	fsr2l,c
  3050  000FF8  0101               	movlb	1	; () banked
  3051  000FFA  0E01               	movlw	high _Cf	;volatile
  3052  000FFC  20F4               	addwfc	prodh,w,c
  3053  000FFE  6EDA               	movwf	fsr2h,c
  3054  001000  50DF               	movf	indf2,w,c
  3055  001002  0100               	movlb	0	; () banked
  3056  001004  6FC1               	movwf	??_feu_process& (0+255),b
  3057  001006  0100               	movlb	0	; () banked
  3058  001008  51C1               	movf	??_feu_process& (0+255),w,b
  3059  00100A  0100               	movlb	0	; () banked
  3060  00100C  0100               	movlb	0	; () banked
  3061  00100E  1385               	iorwf	(_Feu+5)& (0+255),f,b
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;feu.c: 122: Feu.Step = 0x02;
  3065  001010  0100               	movlb	0	; () banked
  3066  001012  6FC1               	movwf	??_feu_process& (0+255),b
  3067  001014  0E02               	movlw	2
  3068  001016  D08D               	goto	L28
  3069  001018                     l6589:
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;feu.c: 126: if (Cpt1Sur20s == Feu.TimeToFire)
  3073  001018  0100               	movlb	0	; () banked
  3074  00101A  EE20  F085         	lfsr	2,_Feu+5
  3075  00101E  52DE               	movf	postinc2,f,c
  3076  001020  504E               	movf	_Cpt1Sur20s+1,w,c	;volatile
  3077  001022  18DD               	xorwf	postdec2,w,c
  3078  001024  C04D  FFE8         	movff	_Cpt1Sur20s,wreg	;volatile
  3079  001028  B4D8               	btfsc	status,2,c
  3080  00102A  18DF               	xorwf	indf2,w,c
  3081  00102C  A4D8               	btfss	status,2,c
  3082  00102E  D0AA               	goto	l1151
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;feu.c: 127: {
  3086                           ;feu.c: 128: feu_tir(Feu.NextOutput);
  3087  001030  0100               	movlb	0	; () banked
  3088  001032  0100               	movlb	0	; () banked
  3089  001034  518C               	movf	(_Feu+12)& (0+255),w,b
  3090  001036  EC1F  F01A         	call	_feu_tir
  3091  00103A  D078               	goto	L30
  3092  00103C                     l1136:
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;feu.c: 134: if (Micro.Mod.P_0 == 1) {Feu.NextOutput = Feu.Cpt+1;}
  3096  00103C  A057               	btfss	_Micro+5,0,c
  3097  00103E  D004               	goto	l1137
  3098                           
  3099                           ; BSR set to: 0
  3100  001040  0100               	movlb	0	; () banked
  3101  001042  0100               	movlb	0	; () banked
  3102  001044  2981               	incf	(_Feu+1)& (0+255),w,b
  3103  001046  D00F               	goto	L25
  3104  001048                     l1137:
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;feu.c: 135: else if (Micro.Mod.P_00 == 1) {Feu.NextOutput = Cf.Data[Feu.Cpt*3];}
  3108  001048  A257               	btfss	_Micro+5,1,c
  3109  00104A  D010               	goto	l6599
  3110                           
  3111                           ; BSR set to: 0
  3112  00104C  0100               	movlb	0	; () banked
  3113  00104E  0100               	movlb	0	; () banked
  3114  001050  5181               	movf	(_Feu+1)& (0+255),w,b
  3115  001052  0D03               	mullw	3
  3116  001054  0101               	movlb	1	; () banked
  3117  001056  0E00               	movlw	low _Cf	;volatile
  3118  001058  24F3               	addwf	prodl,w,c
  3119  00105A  6ED9               	movwf	fsr2l,c
  3120  00105C  0101               	movlb	1	; () banked
  3121  00105E  0E01               	movlw	high _Cf	;volatile
  3122  001060  20F4               	addwfc	prodh,w,c
  3123  001062  6EDA               	movwf	fsr2h,c
  3124  001064  50DF               	movf	indf2,w,c
  3125  001066                     L25:
  3126  001066  0100               	movlb	0	; () banked
  3127  001068  0100               	movlb	0	; () banked
  3128  00106A  6F8C               	movwf	(_Feu+12)& (0+255),b
  3129  00106C                     l6599:
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;feu.c: 137: if (feu_check_end() == 1) {Feu.Step = 0x08;}
  3133  00106C  ECAD  F01A         	call	_feu_check_end	;wreg free
  3134  001070  0100               	movlb	0	; () banked
  3135  001072  6FC1               	movwf	??_feu_process& (0+255),b
  3136  001074  0100               	movlb	0	; () banked
  3137  001076  05C1               	decf	??_feu_process& (0+255),w,b
  3138  001078  B4D8               	btfsc	status,2,c
  3139  00107A  D798               	goto	L31
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;feu.c: 138: else {Feu.Step = 0x04;}
  3143                           
  3144                           ; BSR set to: 0
  3145                           
  3146                           ; BSR set to: 0
  3147  00107C  0100               	movlb	0	; () banked
  3148  00107E  6FC1               	movwf	??_feu_process& (0+255),b
  3149  001080  0E04               	movlw	4
  3150  001082  D057               	goto	L28
  3151  001084                     l1142:
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;feu.c: 141: if (Bouton[Bp_Start].State == 0)
  3155  001084  0100               	movlb	0	; () banked
  3156  001086  B399               	btfsc	(_Bouton+11)& (0+255),1,b
  3157  001088  D07D               	goto	l1151
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;feu.c: 142: {
  3161                           ;feu.c: 143: delay_ms(15);
  3162  00108A  0E00               	movlw	0
  3163  00108C  0100               	movlb	0	; () banked
  3164  00108E  0100               	movlb	0	; () banked
  3165  001090  6FBB               	movwf	(delay_ms@TimeToWait+1)& (0+255),b
  3166  001092  0E0F               	movlw	15
  3167  001094  0100               	movlb	0	; () banked
  3168  001096  6FBA               	movwf	delay_ms@TimeToWait& (0+255),b
  3169  001098  ECB4  F019         	call	_delay_ms	;wreg free
  3170                           
  3171                           ;feu.c: 145: feu_tir(Feu.NextOutput);
  3172  00109C  0100               	movlb	0	; () banked
  3173  00109E  0100               	movlb	0	; () banked
  3174  0010A0  518C               	movf	(_Feu+12)& (0+255),w,b
  3175  0010A2  EC1F  F01A         	call	_feu_tir
  3176                           
  3177                           ;feu.c: 147: Feu.Step = 0x05;
  3178  0010A6  0100               	movlb	0	; () banked
  3179  0010A8  6FC1               	movwf	??_feu_process& (0+255),b
  3180  0010AA  0E05               	movlw	5
  3181  0010AC  0100               	movlb	0	; () banked
  3182  0010AE  0100               	movlb	0	; () banked
  3183  0010B0  6F80               	movwf	_Feu& (0+255),b
  3184  0010B2  0100               	movlb	0	; () banked
  3185  0010B4  51C1               	movf	??_feu_process& (0+255),w,b
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;feu.c: 148: Feu.Time = Cptms;
  3189  0010B6  C04F  F087         	movff	_Cptms,_Feu+7	;volatile
  3190  0010BA  C050  F088         	movff	_Cptms+1,_Feu+8	;volatile
  3191  0010BE  D062               	goto	l1151
  3192  0010C0                     l6611:
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;feu.c: 152: if ((((unsigned short) (Cptms - Feu.Time) > 200) ? 1 : 0))
  3196  0010C0  0100               	movlb	0	; () banked
  3197  0010C2  EE20  F087         	lfsr	2,_Feu+7
  3198  0010C6  CFDE F0C1          	movff	postinc2,??_feu_process
  3199  0010CA  CFDD F0C2          	movff	postdec2,??_feu_process+1
  3200  0010CE  0100               	movlb	0	; () banked
  3201  0010D0  1FC1               	comf	??_feu_process& (0+255),f,b
  3202  0010D2  1FC2               	comf	(??_feu_process+1)& (0+255),f,b
  3203  0010D4  4BC1               	infsnz	??_feu_process& (0+255),f,b
  3204  0010D6  2BC2               	incf	(??_feu_process+1)& (0+255),f,b
  3205  0010D8  504F               	movf	_Cptms,w,c	;volatile
  3206  0010DA  0100               	movlb	0	; () banked
  3207  0010DC  27C1               	addwf	??_feu_process& (0+255),f,b
  3208  0010DE  5050               	movf	_Cptms+1,w,c	;volatile
  3209  0010E0  0100               	movlb	0	; () banked
  3210  0010E2  23C2               	addwfc	(??_feu_process+1)& (0+255),f,b
  3211  0010E4  0EC9               	movlw	201
  3212  0010E6  0100               	movlb	0	; () banked
  3213  0010E8  5DC1               	subwf	??_feu_process& (0+255),w,b
  3214  0010EA  0E00               	movlw	0
  3215  0010EC  59C2               	subwfb	(??_feu_process+1)& (0+255),w,b
  3216  0010EE  A0D8               	btfss	status,0,c
  3217  0010F0  D049               	goto	l1151
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;feu.c: 153: {
  3221                           ;feu.c: 154: if (Bouton[Bp_Start].State == 1) {Feu.Step = 0x03;}
  3222  0010F2  0100               	movlb	0	; () banked
  3223  0010F4  A399               	btfss	(_Bouton+11)& (0+255),1,b
  3224  0010F6  D046               	goto	l1151
  3225                           
  3226                           ; BSR set to: 0
  3227  0010F8  0100               	movlb	0	; () banked
  3228  0010FA  6FC1               	movwf	??_feu_process& (0+255),b
  3229  0010FC  0E03               	movlw	3
  3230  0010FE  D019               	goto	L28
  3231  001100                     l1147:
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;feu.c: 158: if (Feu.SaveTime == 0)
  3235  001100  0100               	movlb	0	; () banked
  3236  001102  B38D               	btfsc	(_Feu+13)& (0+255),1,b
  3237  001104  D03F               	goto	l1151
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;feu.c: 159: {
  3241                           ;feu.c: 160: Feu.Decompte = Decompte;
  3242  001106  C051  F082         	movff	_Decompte,_Feu+2	;volatile
  3243                           
  3244                           ;feu.c: 161: Feu.SavedTime = Cpt1Sur20s;
  3245  00110A  C04D  F083         	movff	_Cpt1Sur20s,_Feu+3	;volatile
  3246  00110E  C04E  F084         	movff	_Cpt1Sur20s+1,_Feu+4	;volatile
  3247                           
  3248                           ;feu.c: 163: Feu.SaveTime = 1;
  3249  001112  0100               	movlb	0	; () banked
  3250  001114  0100               	movlb	0	; () banked
  3251  001116  838D               	bsf	(_Feu+13)& (0+255),1,b
  3252  001118  D035               	goto	l1151
  3253  00111A                     l1149:
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;feu.c: 167: Decompte = Feu.Decompte;
  3257  00111A  C082  F051         	movff	_Feu+2,_Decompte	;volatile
  3258                           
  3259                           ;feu.c: 168: Cpt1Sur20s = Feu.SavedTime;
  3260  00111E  C083  F04D         	movff	_Feu+3,_Cpt1Sur20s	;volatile
  3261  001122  C084  F04E         	movff	_Feu+4,_Cpt1Sur20s+1	;volatile
  3262                           
  3263                           ;feu.c: 170: Feu.SaveTime = 0;
  3264  001126  0100               	movlb	0	; () banked
  3265  001128  0100               	movlb	0	; () banked
  3266  00112A  938D               	bcf	(_Feu+13)& (0+255),1,b
  3267  00112C                     L30:
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;feu.c: 172: Feu.Step = 0x01;
  3271  00112C  0100               	movlb	0	; () banked
  3272  00112E  6FC1               	movwf	??_feu_process& (0+255),b
  3273  001130  0E01               	movlw	1
  3274  001132                     L28:
  3275  001132  0100               	movlb	0	; () banked
  3276  001134  0100               	movlb	0	; () banked
  3277  001136  6F80               	movwf	_Feu& (0+255),b
  3278  001138  D004               	goto	L29
  3279  00113A                     l6621:
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;feu.c: 175: Micro.State = 0x08;
  3283  00113A  0100               	movlb	0	; () banked
  3284  00113C  6FC1               	movwf	??_feu_process& (0+255),b
  3285  00113E  0E08               	movlw	8
  3286  001140  6E56               	movwf	_Micro+4,c
  3287  001142                     L29:
  3288  001142  0100               	movlb	0	; () banked
  3289  001144  51C1               	movf	??_feu_process& (0+255),w,b
  3290                           
  3291                           ;feu.c: 176: break;
  3292  001146  D01E               	goto	l1151
  3293  001148                     l6625:
  3294  001148  0100               	movlb	0	; () banked
  3295  00114A  0100               	movlb	0	; () banked
  3296  00114C  5180               	movf	_Feu& (0+255),w,b
  3297                           
  3298                           ; Switch size 1, requested type "space"
  3299                           ; Number of cases is 9, Range of values is 0 to 8
  3300                           ; switch strategies available:
  3301                           ; Name         Instructions Cycles
  3302                           ; simple_byte           28    15 (average)
  3303                           ;	Chosen strategy is simple_byte
  3304  00114E  0A00               	xorlw	0	; case 0
  3305  001150  B4D8               	btfsc	status,2,c
  3306  001152  D6E7               	goto	l1126
  3307  001154  0A01               	xorlw	1	; case 1
  3308  001156  B4D8               	btfsc	status,2,c
  3309  001158  D711               	goto	l6579
  3310  00115A  0A03               	xorlw	3	; case 2
  3311  00115C  B4D8               	btfsc	status,2,c
  3312  00115E  D75C               	goto	l6589
  3313  001160  0A01               	xorlw	1	; case 3
  3314  001162  B4D8               	btfsc	status,2,c
  3315  001164  D76B               	goto	l1136
  3316  001166  0A07               	xorlw	7	; case 4
  3317  001168  B4D8               	btfsc	status,2,c
  3318  00116A  D78C               	goto	l1142
  3319  00116C  0A01               	xorlw	1	; case 5
  3320  00116E  B4D8               	btfsc	status,2,c
  3321  001170  D7A7               	goto	l6611
  3322  001172  0A03               	xorlw	3	; case 6
  3323  001174  B4D8               	btfsc	status,2,c
  3324  001176  D7C4               	goto	l1147
  3325  001178  0A01               	xorlw	1	; case 7
  3326  00117A  B4D8               	btfsc	status,2,c
  3327  00117C  D7CE               	goto	l1149
  3328  00117E  0A0F               	xorlw	15	; case 8
  3329  001180  B4D8               	btfsc	status,2,c
  3330  001182  D7DB               	goto	l6621
  3331  001184                     l1151:
  3332                           
  3333                           ; BSR set to: 0
  3334  001184  0012               	return	
  3335  001186  FFFF               	dw	65535	; errata NOP
  3336  001188                     __end_of_feu_process:
  3337                           	opt stack 0
  3338                           tblptru	equ	0xFF8
  3339                           tblptrh	equ	0xFF7
  3340                           tblptrl	equ	0xFF6
  3341                           tablat	equ	0xFF5
  3342                           prodh	equ	0xFF4
  3343                           prodl	equ	0xFF3
  3344                           intcon	equ	0xFF2
  3345                           intcon2	equ	0xFF1
  3346                           postinc0	equ	0xFEE
  3347                           wreg	equ	0xFE8
  3348                           postdec1	equ	0xFE5
  3349                           fsr1l	equ	0xFE1
  3350                           indf2	equ	0xFDF
  3351                           postinc2	equ	0xFDE
  3352                           postdec2	equ	0xFDD
  3353                           fsr2h	equ	0xFDA
  3354                           fsr2l	equ	0xFD9
  3355                           status	equ	0xFD8
  3356                           
  3357 ;; *************** function _feu_tir *****************
  3358 ;; Defined at:
  3359 ;;		line 9 in file "feu.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  Output          1    wreg     unsigned char 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  Output          1    6[BANK0 ] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;		None               void
  3366 ;; Registers used:
  3367 ;;		wreg, status,2, status,0, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3373 ;;      Params:         0       0       0       0       0       0       0
  3374 ;;      Locals:         0       1       0       0       0       0       0
  3375 ;;      Temps:          0       0       0       0       0       0       0
  3376 ;;      Totals:         0       1       0       0       0       0       0
  3377 ;;Total ram usage:        1 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; Hardware stack levels required when called:    4
  3380 ;; This function calls:
  3381 ;;		_delay_ms
  3382 ;;		_register_write
  3383 ;; This function is called by:
  3384 ;;		_feu_process
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           	psect	text8
  3389  00343E                     __ptext8:
  3390                           	opt stack 0
  3391  00343E                     _feu_tir:
  3392                           	opt stack 25
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;incstack = 0
  3396  00343E  FFFF               	dw	65535
  3397                           
  3398                           ;feu_tir@Output stored from wreg
  3399  003440  CFE8 F0C0          	movff	wreg,feu_tir@Output
  3400                           
  3401                           ;feu.c: 11: PORTAbits.RA5 = 1;
  3402  003444  8A80               	bsf	3968,5,c	;volatile
  3403                           
  3404                           ;feu.c: 12: PORTBbits.RB1 = 1;
  3405  003446  8281               	bsf	3969,1,c	;volatile
  3406                           
  3407                           ;feu.c: 14: register_write(Output);
  3408  003448  0100               	movlb	0	; () banked
  3409  00344A  0100               	movlb	0	; () banked
  3410  00344C  51C0               	movf	feu_tir@Output& (0+255),w,b
  3411  00344E  EC40  F019         	call	_register_write
  3412                           
  3413                           ;feu.c: 15: delay_ms(40);
  3414  003452  0E00               	movlw	0
  3415  003454  0100               	movlb	0	; () banked
  3416  003456  0100               	movlb	0	; () banked
  3417  003458  6FBB               	movwf	(delay_ms@TimeToWait+1)& (0+255),b
  3418  00345A  0E28               	movlw	40
  3419  00345C  0100               	movlb	0	; () banked
  3420  00345E  6FBA               	movwf	delay_ms@TimeToWait& (0+255),b
  3421  003460  ECB4  F019         	call	_delay_ms	;wreg free
  3422                           
  3423                           ;feu.c: 16: register_write(0);
  3424  003464  0E00               	movlw	0
  3425  003466  EC40  F019         	call	_register_write
  3426                           
  3427                           ;feu.c: 18: PORTBbits.RB1 = 0;
  3428  00346A  9281               	bcf	3969,1,c	;volatile
  3429                           
  3430                           ;feu.c: 19: PORTAbits.RA5 = 0;
  3431  00346C  9A80               	bcf	3968,5,c	;volatile
  3432                           
  3433                           ;feu.c: 22: Feu.LastOutput = Feu.NextOutput;
  3434  00346E  C08C  F08B         	movff	_Feu+12,_Feu+11
  3435                           
  3436                           ;feu.c: 23: Feu.Cpt ++;
  3437  003472  0100               	movlb	0	; () banked
  3438  003474  0100               	movlb	0	; () banked
  3439  003476  2B81               	incf	(_Feu+1)& (0+255),f,b
  3440                           
  3441                           ; BSR set to: 0
  3442  003478  0012               	return	
  3443  00347A  FFFF               	dw	65535	; errata NOP
  3444  00347C                     __end_of_feu_tir:
  3445                           	opt stack 0
  3446                           tblptru	equ	0xFF8
  3447                           tblptrh	equ	0xFF7
  3448                           tblptrl	equ	0xFF6
  3449                           tablat	equ	0xFF5
  3450                           prodh	equ	0xFF4
  3451                           prodl	equ	0xFF3
  3452                           intcon	equ	0xFF2
  3453                           intcon2	equ	0xFF1
  3454                           postinc0	equ	0xFEE
  3455                           wreg	equ	0xFE8
  3456                           postdec1	equ	0xFE5
  3457                           fsr1l	equ	0xFE1
  3458                           indf2	equ	0xFDF
  3459                           postinc2	equ	0xFDE
  3460                           postdec2	equ	0xFDD
  3461                           fsr2h	equ	0xFDA
  3462                           fsr2l	equ	0xFD9
  3463                           status	equ	0xFD8
  3464                           
  3465 ;; *************** function _register_write *****************
  3466 ;; Defined at:
  3467 ;;		line 3 in file "register.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;  Output          1    wreg     unsigned char 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  Output          1    1[BANK0 ] unsigned char 
  3472 ;;  i               1    2[BANK0 ] unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;		None               void
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3482 ;;      Params:         0       0       0       0       0       0       0
  3483 ;;      Locals:         0       2       0       0       0       0       0
  3484 ;;      Temps:          0       1       0       0       0       0       0
  3485 ;;      Totals:         0       3       0       0       0       0       0
  3486 ;;Total ram usage:        3 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    3
  3489 ;; This function calls:
  3490 ;;		Nothing
  3491 ;; This function is called by:
  3492 ;;		_test_process
  3493 ;;		_feu_tir
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text9
  3498  003280                     __ptext9:
  3499                           	opt stack 0
  3500  003280                     _register_write:
  3501                           	opt stack 26
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;incstack = 0
  3505  003280  FFFF               	dw	65535
  3506                           
  3507                           ;register_write@Output stored from wreg
  3508  003282  CFE8 F0BB          	movff	wreg,register_write@Output
  3509                           
  3510                           ;register.c: 5: unsigned char i;
  3511                           ;register.c: 8: PORTAbits.RA2 = 0;
  3512  003286  9480               	bcf	3968,2,c	;volatile
  3513                           
  3514                           ;register.c: 11: PORTBbits.RB2 = 0;
  3515  003288  9481               	bcf	3969,2,c	;volatile
  3516                           
  3517                           ;register.c: 12: PORTBbits.RB2 = 1;
  3518  00328A  8481               	bsf	3969,2,c	;volatile
  3519                           
  3520                           ;register.c: 14: PORTBbits.RB3 = 0;
  3521  00328C  9681               	bcf	3969,3,c	;volatile
  3522                           
  3523                           ;register.c: 16: for (i = 32; i > 0; i --)
  3524  00328E  0100               	movlb	0	; () banked
  3525  003290  6FBA               	movwf	??_register_write& (0+255),b
  3526  003292  0E20               	movlw	32
  3527  003294  0100               	movlb	0	; () banked
  3528  003296  0100               	movlb	0	; () banked
  3529  003298  6FBC               	movwf	register_write@i& (0+255),b
  3530  00329A  0100               	movlb	0	; () banked
  3531  00329C  51BA               	movf	??_register_write& (0+255),w,b
  3532  00329E  D00F               	goto	L32
  3533  0032A0                     l915:
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;register.c: 17: {
  3537                           ;register.c: 18: PORTBbits.RB4 = 0;
  3538  0032A0  9881               	bcf	3969,4,c	;volatile
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;register.c: 20: if (Output == i) {PORTBbits.RB5 = 1;}
  3542  0032A2  0100               	movlb	0	; () banked
  3543  0032A4  0100               	movlb	0	; () banked
  3544  0032A6  51BC               	movf	register_write@i& (0+255),w,b
  3545  0032A8  0100               	movlb	0	; () banked
  3546  0032AA  0100               	movlb	0	; () banked
  3547  0032AC  63BB               	cpfseq	register_write@Output& (0+255),b
  3548  0032AE  D002               	goto	l917
  3549                           
  3550                           ; BSR set to: 0
  3551  0032B0  8A81               	bsf	3969,5,c	;volatile
  3552  0032B2  D001               	goto	l918
  3553  0032B4                     l917:
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;register.c: 21: else {PORTBbits.RB5 = 0;}
  3557  0032B4  9A81               	bcf	3969,5,c	;volatile
  3558  0032B6                     l918:
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;register.c: 23: PORTBbits.RB4 = 1;
  3562  0032B6  8881               	bsf	3969,4,c	;volatile
  3563                           
  3564                           ; BSR set to: 0
  3565  0032B8  0100               	movlb	0	; () banked
  3566  0032BA  0100               	movlb	0	; () banked
  3567  0032BC  07BC               	decf	register_write@i& (0+255),f,b
  3568  0032BE                     L32:
  3569                           
  3570                           ; BSR set to: 0
  3571  0032BE  0100               	movlb	0	; () banked
  3572  0032C0  0100               	movlb	0	; () banked
  3573  0032C2  67BC               	tstfsz	register_write@i& (0+255),b
  3574  0032C4  D7ED               	goto	l915
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;register.c: 24: }
  3578                           ;register.c: 26: PORTBbits.RB3 = 1;
  3579  0032C6  8681               	bsf	3969,3,c	;volatile
  3580                           
  3581                           ;register.c: 29: PORTAbits.RA2 = 1;
  3582  0032C8  8480               	bsf	3968,2,c	;volatile
  3583                           
  3584                           ; BSR set to: 0
  3585  0032CA  0012               	return	
  3586  0032CC  FFFF               	dw	65535	; errata NOP
  3587  0032CE                     __end_of_register_write:
  3588                           	opt stack 0
  3589                           tblptru	equ	0xFF8
  3590                           tblptrh	equ	0xFF7
  3591                           tblptrl	equ	0xFF6
  3592                           tablat	equ	0xFF5
  3593                           prodh	equ	0xFF4
  3594                           prodl	equ	0xFF3
  3595                           intcon	equ	0xFF2
  3596                           intcon2	equ	0xFF1
  3597                           postinc0	equ	0xFEE
  3598                           wreg	equ	0xFE8
  3599                           postdec1	equ	0xFE5
  3600                           fsr1l	equ	0xFE1
  3601                           indf2	equ	0xFDF
  3602                           postinc2	equ	0xFDE
  3603                           postdec2	equ	0xFDD
  3604                           fsr2h	equ	0xFDA
  3605                           fsr2l	equ	0xFD9
  3606                           status	equ	0xFD8
  3607                           
  3608 ;; *************** function _feu_check_end *****************
  3609 ;; Defined at:
  3610 ;;		line 3 in file "feu.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      unsigned char 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2, status,0
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3624 ;;      Params:         0       0       0       0       0       0       0
  3625 ;;      Locals:         0       0       0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0       0       0
  3627 ;;      Totals:         0       0       0       0       0       0       0
  3628 ;;Total ram usage:        0 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    3
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_feu_process
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           	psect	text10
  3639  00355A                     __ptext10:
  3640                           	opt stack 0
  3641  00355A                     _feu_check_end:
  3642                           	opt stack 26
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;incstack = 0
  3646  00355A  FFFF               	dw	65535
  3647                           
  3648                           ;feu.c: 5: if ((Feu.Cpt >= 32) || (Feu.NextOutput == 0)) {return 1;}
  3649  00355C  0E20               	movlw	32
  3650  00355E  0100               	movlb	0	; () banked
  3651  003560  0100               	movlb	0	; () banked
  3652  003562  5D81               	subwf	(_Feu+1)& (0+255),w,b
  3653  003564  B0D8               	btfsc	status,0,c
  3654  003566  D004               	goto	l6097
  3655                           
  3656                           ; BSR set to: 0
  3657  003568  0100               	movlb	0	; () banked
  3658  00356A  0100               	movlb	0	; () banked
  3659  00356C  678C               	tstfsz	(_Feu+12)& (0+255),b
  3660  00356E  D002               	goto	l6103
  3661  003570                     l6097:
  3662                           
  3663                           ; BSR set to: 0
  3664  003570  0E01               	movlw	1
  3665  003572  D001               	goto	l1093
  3666  003574                     l6103:
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;feu.c: 6: else {return 0;}
  3670  003574  0E00               	movlw	0
  3671  003576                     l1093:
  3672                           
  3673                           ; BSR set to: 0
  3674  003576  0012               	return	
  3675  003578  FFFF               	dw	65535	; errata NOP
  3676  00357A                     __end_of_feu_check_end:
  3677                           	opt stack 0
  3678                           tblptru	equ	0xFF8
  3679                           tblptrh	equ	0xFF7
  3680                           tblptrl	equ	0xFF6
  3681                           tablat	equ	0xFF5
  3682                           prodh	equ	0xFF4
  3683                           prodl	equ	0xFF3
  3684                           intcon	equ	0xFF2
  3685                           intcon2	equ	0xFF1
  3686                           postinc0	equ	0xFEE
  3687                           wreg	equ	0xFE8
  3688                           postdec1	equ	0xFE5
  3689                           fsr1l	equ	0xFE1
  3690                           indf2	equ	0xFDF
  3691                           postinc2	equ	0xFDE
  3692                           postdec2	equ	0xFDD
  3693                           fsr2h	equ	0xFDA
  3694                           fsr2l	equ	0xFD9
  3695                           status	equ	0xFD8
  3696                           
  3697 ;; *************** function _feu_check_bp *****************
  3698 ;; Defined at:
  3699 ;;		line 26 in file "feu.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;		None
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;		None               void
  3706 ;; Registers used:
  3707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3713 ;;      Params:         0       0       0       0       0       0       0
  3714 ;;      Locals:         0       0       0       0       0       0       0
  3715 ;;      Temps:          0       2       0       0       0       0       0
  3716 ;;      Totals:         0       2       0       0       0       0       0
  3717 ;;Total ram usage:        2 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    6
  3720 ;; This function calls:
  3721 ;;		_ecran_print_num
  3722 ;;		_ecran_print_one_char
  3723 ;; This function is called by:
  3724 ;;		_main
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text11
  3729  001740                     __ptext11:
  3730                           	opt stack 0
  3731  001740                     _feu_check_bp:
  3732                           	opt stack 24
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;incstack = 0
  3736  001740  FFFF               	dw	65535
  3737                           
  3738                           ;feu.c: 28: if ( (Micro.Stat.End == 1)
  3739                           ;feu.c: 29: && (Bouton[Bp_On].State == 0))
  3740  001742  A656               	btfss	_Micro+4,3,c
  3741  001744  D009               	goto	l1100
  3742  001746  0100               	movlb	0	; () banked
  3743  001748  B390               	btfsc	(_Bouton+2)& (0+255),1,b
  3744  00174A  D006               	goto	l1100
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;feu.c: 30: {
  3748                           ;feu.c: 31: Ecran.Digits = (char *) Version;
  3749  00174C  0E06               	movlw	high _Version
  3750  00174E  0100               	movlb	0	; () banked
  3751  001750  0100               	movlb	0	; () banked
  3752  001752  6FAF               	movwf	(_Ecran+5)& (0+255),b
  3753  001754  0E10               	movlw	low _Version
  3754  001756  D07E               	goto	L35
  3755  001758                     l1100:
  3756                           
  3757                           ;feu.c: 34: else if ( (Bouton[Bp_Start].State == 1)
  3758                           ;feu.c: 35: && (Feu.CanStopStart == 0))
  3759  001758  0100               	movlb	0	; () banked
  3760  00175A  A399               	btfss	(_Bouton+11)& (0+255),1,b
  3761  00175C  D020               	goto	l1102
  3762                           
  3763                           ; BSR set to: 0
  3764  00175E  0100               	movlb	0	; () banked
  3765  001760  B18D               	btfsc	(_Feu+13)& (0+255),0,b
  3766  001762  D01D               	goto	l1102
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;feu.c: 36: {
  3770                           ;feu.c: 37: if ((((unsigned short) (Cptms - Feu.TimeStart) > 5000) ? 1 : 0))
  3771  001764  0100               	movlb	0	; () banked
  3772  001766  EE20  F089         	lfsr	2,_Feu+9
  3773  00176A  CFDE F0CF          	movff	postinc2,??_feu_check_bp
  3774  00176E  CFDD F0D0          	movff	postdec2,??_feu_check_bp+1
  3775  001772  0100               	movlb	0	; () banked
  3776  001774  1FCF               	comf	??_feu_check_bp& (0+255),f,b
  3777  001776  1FD0               	comf	(??_feu_check_bp+1)& (0+255),f,b
  3778  001778  4BCF               	infsnz	??_feu_check_bp& (0+255),f,b
  3779  00177A  2BD0               	incf	(??_feu_check_bp+1)& (0+255),f,b
  3780  00177C  504F               	movf	_Cptms,w,c	;volatile
  3781  00177E  0100               	movlb	0	; () banked
  3782  001780  27CF               	addwf	??_feu_check_bp& (0+255),f,b
  3783  001782  5050               	movf	_Cptms+1,w,c	;volatile
  3784  001784  0100               	movlb	0	; () banked
  3785  001786  23D0               	addwfc	(??_feu_check_bp+1)& (0+255),f,b
  3786  001788  0E89               	movlw	137
  3787  00178A  0100               	movlb	0	; () banked
  3788  00178C  5DCF               	subwf	??_feu_check_bp& (0+255),w,b
  3789  00178E  0E13               	movlw	19
  3790  001790  59D0               	subwfb	(??_feu_check_bp+1)& (0+255),w,b
  3791  001792  A0D8               	btfss	status,0,c
  3792  001794  D0A5               	goto	l1122
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;feu.c: 38: {
  3796                           ;feu.c: 39: Feu.CanStopStart = 1;
  3797  001796  0100               	movlb	0	; () banked
  3798  001798  0100               	movlb	0	; () banked
  3799  00179A  818D               	bsf	(_Feu+13)& (0+255),0,b
  3800  00179C  D0A1               	goto	l1122
  3801  00179E                     l1102:
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;feu.c: 42: else if ( (Micro.Mods == 0)
  3805                           ;feu.c: 43: && (Feu.CanStopStart == 1)
  3806                           ;feu.c: 44: && (Bouton[Bp_Start].State == 0))
  3807  00179E  6657               	tstfsz	_Micro+5,c
  3808  0017A0  D02F               	goto	l1105
  3809                           
  3810                           ; BSR set to: 0
  3811  0017A2  0100               	movlb	0	; () banked
  3812  0017A4  A18D               	btfss	(_Feu+13)& (0+255),0,b
  3813  0017A6  D02C               	goto	l1105
  3814                           
  3815                           ; BSR set to: 0
  3816  0017A8  0100               	movlb	0	; () banked
  3817  0017AA  B399               	btfsc	(_Bouton+11)& (0+255),1,b
  3818  0017AC  D029               	goto	l1105
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;feu.c: 45: {
  3822                           ;feu.c: 46: if (Micro.Stat.Go == 1)
  3823  0017AE  A256               	btfss	_Micro+4,1,c
  3824  0017B0  D00F               	goto	l1106
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;feu.c: 47: {
  3828                           ;feu.c: 48: Feu.Step = 0x06;
  3829  0017B2  0100               	movlb	0	; () banked
  3830  0017B4  6FCF               	movwf	??_feu_check_bp& (0+255),b
  3831  0017B6  0E06               	movlw	6
  3832  0017B8  0100               	movlb	0	; () banked
  3833  0017BA  0100               	movlb	0	; () banked
  3834  0017BC  6F80               	movwf	_Feu& (0+255),b
  3835  0017BE  0100               	movlb	0	; () banked
  3836  0017C0  51CF               	movf	??_feu_check_bp& (0+255),w,b
  3837                           
  3838                           ;feu.c: 49: Micro.State = 0x04;
  3839  0017C2  0100               	movlb	0	; () banked
  3840  0017C4  6FCF               	movwf	??_feu_check_bp& (0+255),b
  3841  0017C6  0E04               	movlw	4
  3842  0017C8  6E56               	movwf	_Micro+4,c
  3843  0017CA  0100               	movlb	0	; () banked
  3844  0017CC  51CF               	movf	??_feu_check_bp& (0+255),w,b
  3845                           
  3846                           ;feu.c: 50: }
  3847  0017CE  D014               	goto	l6653
  3848  0017D0                     l1106:
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;feu.c: 51: else if (Micro.Stat.Stop == 1)
  3852  0017D0  A456               	btfss	_Micro+4,2,c
  3853  0017D2  D012               	goto	l6653
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;feu.c: 52: {
  3857                           ;feu.c: 53: Feu.Step = 0x07;
  3858  0017D4  0100               	movlb	0	; () banked
  3859  0017D6  6FCF               	movwf	??_feu_check_bp& (0+255),b
  3860  0017D8  0E07               	movlw	7
  3861  0017DA  0100               	movlb	0	; () banked
  3862  0017DC  0100               	movlb	0	; () banked
  3863  0017DE  6F80               	movwf	_Feu& (0+255),b
  3864  0017E0  0100               	movlb	0	; () banked
  3865  0017E2  51CF               	movf	??_feu_check_bp& (0+255),w,b
  3866                           
  3867                           ;feu.c: 54: Micro.State = 0x02;
  3868  0017E4  0100               	movlb	0	; () banked
  3869  0017E6  6FCF               	movwf	??_feu_check_bp& (0+255),b
  3870  0017E8  0E02               	movlw	2
  3871  0017EA  6E56               	movwf	_Micro+4,c
  3872  0017EC  0100               	movlb	0	; () banked
  3873  0017EE  51CF               	movf	??_feu_check_bp& (0+255),w,b
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;feu.c: 55: Feu.TimeStart = Cptms;
  3877  0017F0  C04F  F089         	movff	_Cptms,_Feu+9	;volatile
  3878  0017F4  C050  F08A         	movff	_Cptms+1,_Feu+10	;volatile
  3879  0017F8                     l6653:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;feu.c: 56: }
  3883                           ;feu.c: 58: Feu.CanStopStart = 0;
  3884  0017F8  0100               	movlb	0	; () banked
  3885  0017FA  0100               	movlb	0	; () banked
  3886  0017FC  918D               	bcf	(_Feu+13)& (0+255),0,b
  3887                           
  3888                           ;feu.c: 59: }
  3889  0017FE  D070               	goto	l1122
  3890  001800                     l1105:
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;feu.c: 60: else if (Bouton[Comu_Test].State == 1)
  3894  001800  0100               	movlb	0	; () banked
  3895  001802  A396               	btfss	(_Bouton+8)& (0+255),1,b
  3896  001804  D006               	goto	l1110
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;feu.c: 61: {
  3900                           ;feu.c: 62: Ecran.Digits = (char *) ErreurTir;
  3901  001806  0E06               	movlw	high _ErreurTir
  3902  001808  0100               	movlb	0	; () banked
  3903  00180A  0100               	movlb	0	; () banked
  3904  00180C  6FAF               	movwf	(_Ecran+5)& (0+255),b
  3905  00180E  0E0B               	movlw	low _ErreurTir
  3906  001810  D021               	goto	L35
  3907  001812                     l1110:
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;feu.c: 65: else if (Bouton[Bp_IdTest].State == 0)
  3911  001812  0100               	movlb	0	; () banked
  3912  001814  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  3913  001816  D025               	goto	l1112
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;feu.c: 66: {
  3917                           ;feu.c: 67: ecran_print_num(Feu.LastOutput);
  3918  001818  0100               	movlb	0	; () banked
  3919  00181A  0100               	movlb	0	; () banked
  3920  00181C  518B               	movf	(_Feu+11)& (0+255),w,b
  3921  00181E  EC5E  F014         	call	_ecran_print_num
  3922                           
  3923                           ;feu.c: 69: if (Micro.Stat.Stop == 1)
  3924  001822  A456               	btfss	_Micro+4,2,c
  3925  001824  D01A               	goto	l6667
  3926                           
  3927                           ;feu.c: 70: {
  3928                           ;feu.c: 71: Ecran.Digit[0] = '-';
  3929  001826  0100               	movlb	0	; () banked
  3930  001828  6FCF               	movwf	??_feu_check_bp& (0+255),b
  3931  00182A  0E2D               	movlw	45
  3932  00182C  0100               	movlb	0	; () banked
  3933  00182E  0100               	movlb	0	; () banked
  3934  001830  6FAA               	movwf	_Ecran& (0+255),b
  3935  001832  0100               	movlb	0	; () banked
  3936  001834  51CF               	movf	??_feu_check_bp& (0+255),w,b
  3937                           
  3938                           ;feu.c: 72: Ecran.Digit[1] = '-';
  3939  001836  0100               	movlb	0	; () banked
  3940  001838  6FCF               	movwf	??_feu_check_bp& (0+255),b
  3941  00183A  0E2D               	movlw	45
  3942  00183C  0100               	movlb	0	; () banked
  3943  00183E  0100               	movlb	0	; () banked
  3944  001840  6FAB               	movwf	(_Ecran+1)& (0+255),b
  3945  001842  0100               	movlb	0	; () banked
  3946  001844  51CF               	movf	??_feu_check_bp& (0+255),w,b
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;feu.c: 74: Ecran.Digits = Ecran.Digit;
  3950  001846  0100               	movlb	0	; () banked
  3951  001848  0E00               	movlw	high _Ecran
  3952  00184A  0100               	movlb	0	; () banked
  3953  00184C  0100               	movlb	0	; () banked
  3954  00184E  6FAF               	movwf	(_Ecran+5)& (0+255),b
  3955  001850  0100               	movlb	0	; () banked
  3956  001852  0EAA               	movlw	low _Ecran
  3957  001854                     L35:
  3958  001854  0100               	movlb	0	; () banked
  3959  001856  0100               	movlb	0	; () banked
  3960  001858  6FAE               	movwf	(_Ecran+4)& (0+255),b
  3961  00185A                     l6667:
  3962                           
  3963                           ;feu.c: 75: }
  3964                           ;feu.c: 76: Ecran.Solid = 0;
  3965  00185A  0100               	movlb	0	; () banked
  3966  00185C  6FCF               	movwf	??_feu_check_bp& (0+255),b
  3967  00185E  0E00               	movlw	0
  3968  001860  D03A               	goto	L34
  3969  001862                     l1112:
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;feu.c: 78: else
  3973                           ;feu.c: 79: {
  3974                           ;feu.c: 80: if (Micro.Stat.Armed == 1) {ecran_print_one_char(0,'-');}
  3975  001862  A056               	btfss	_Micro+4,0,c
  3976  001864  D00C               	goto	l1115
  3977                           
  3978                           ; BSR set to: 0
  3979  001866  0100               	movlb	0	; () banked
  3980  001868  6FCF               	movwf	??_feu_check_bp& (0+255),b
  3981  00186A  0E2D               	movlw	45
  3982  00186C  0100               	movlb	0	; () banked
  3983  00186E  0100               	movlb	0	; () banked
  3984  001870  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  3985  001872  0100               	movlb	0	; () banked
  3986  001874  51CF               	movf	??_feu_check_bp& (0+255),w,b
  3987  001876  0E00               	movlw	0
  3988  001878  ECD9  F019         	call	_ecran_print_one_char
  3989  00187C  D029               	goto	l6677
  3990  00187E                     l1115:
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;feu.c: 81: else if (Micro.Stat.Go == 1) {ecran_print_one_char(1,'-');}
  3994  00187E  A256               	btfss	_Micro+4,1,c
  3995  001880  D00C               	goto	l1117
  3996                           
  3997                           ; BSR set to: 0
  3998  001882  0100               	movlb	0	; () banked
  3999  001884  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4000  001886  0E2D               	movlw	45
  4001  001888  0100               	movlb	0	; () banked
  4002  00188A  0100               	movlb	0	; () banked
  4003  00188C  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  4004  00188E  0100               	movlb	0	; () banked
  4005  001890  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4006  001892  0E01               	movlw	1
  4007  001894  ECD9  F019         	call	_ecran_print_one_char
  4008  001898  D01B               	goto	l6677
  4009  00189A                     l1117:
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;feu.c: 82: else if (Micro.Stat.Stop == 1) {ecran_print_one_char(2,'-');}
  4013  00189A  A456               	btfss	_Micro+4,2,c
  4014  00189C  D00C               	goto	l1119
  4015                           
  4016                           ; BSR set to: 0
  4017  00189E  0100               	movlb	0	; () banked
  4018  0018A0  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4019  0018A2  0E2D               	movlw	45
  4020  0018A4  0100               	movlb	0	; () banked
  4021  0018A6  0100               	movlb	0	; () banked
  4022  0018A8  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  4023  0018AA  0100               	movlb	0	; () banked
  4024  0018AC  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4025  0018AE  0E02               	movlw	2
  4026  0018B0  ECD9  F019         	call	_ecran_print_one_char
  4027  0018B4  D00D               	goto	l6677
  4028  0018B6                     l1119:
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;feu.c: 83: else if (Micro.Stat.End == 1) {ecran_print_one_char(3,'-');}
  4032  0018B6  A656               	btfss	_Micro+4,3,c
  4033  0018B8  D00B               	goto	l6677
  4034                           
  4035                           ; BSR set to: 0
  4036  0018BA  0100               	movlb	0	; () banked
  4037  0018BC  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4038  0018BE  0E2D               	movlw	45
  4039  0018C0  0100               	movlb	0	; () banked
  4040  0018C2  0100               	movlb	0	; () banked
  4041  0018C4  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  4042  0018C6  0100               	movlb	0	; () banked
  4043  0018C8  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4044  0018CA  0E03               	movlw	3
  4045  0018CC  ECD9  F019         	call	_ecran_print_one_char
  4046  0018D0                     l6677:
  4047                           
  4048                           ;feu.c: 85: Ecran.Solid = 1;
  4049  0018D0  0100               	movlb	0	; () banked
  4050  0018D2  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4051  0018D4  0E01               	movlw	1
  4052  0018D6                     L34:
  4053  0018D6  0100               	movlb	0	; () banked
  4054  0018D8  0100               	movlb	0	; () banked
  4055  0018DA  6FB9               	movwf	(_Ecran+15)& (0+255),b
  4056  0018DC  0100               	movlb	0	; () banked
  4057  0018DE  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4058  0018E0                     l1122:
  4059                           
  4060                           ; BSR set to: 0
  4061  0018E0  0012               	return	
  4062  0018E2  FFFF               	dw	65535	; errata NOP
  4063  0018E4                     __end_of_feu_check_bp:
  4064                           	opt stack 0
  4065                           tblptru	equ	0xFF8
  4066                           tblptrh	equ	0xFF7
  4067                           tblptrl	equ	0xFF6
  4068                           tablat	equ	0xFF5
  4069                           prodh	equ	0xFF4
  4070                           prodl	equ	0xFF3
  4071                           intcon	equ	0xFF2
  4072                           intcon2	equ	0xFF1
  4073                           postinc0	equ	0xFEE
  4074                           wreg	equ	0xFE8
  4075                           postdec1	equ	0xFE5
  4076                           fsr1l	equ	0xFE1
  4077                           indf2	equ	0xFDF
  4078                           postinc2	equ	0xFDE
  4079                           postdec2	equ	0xFDD
  4080                           fsr2h	equ	0xFDA
  4081                           fsr2l	equ	0xFD9
  4082                           status	equ	0xFD8
  4083                           
  4084 ;; *************** function _ecran_print_num *****************
  4085 ;; Defined at:
  4086 ;;		line 66 in file "ecran.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  Num             1    wreg     unsigned char 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;  Num             1   18[BANK0 ] unsigned char 
  4091 ;;  tempStr         2   19[BANK0 ] PTR unsigned char 
  4092 ;;		 -> PrintTest(5), 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;		None               void
  4095 ;; Registers used:
  4096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4102 ;;      Params:         0       0       0       0       0       0       0
  4103 ;;      Locals:         0       3       0       0       0       0       0
  4104 ;;      Temps:          0       1       0       0       0       0       0
  4105 ;;      Totals:         0       4       0       0       0       0       0
  4106 ;;Total ram usage:        4 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; Hardware stack levels required when called:    5
  4109 ;; This function calls:
  4110 ;;		_DecToStr
  4111 ;; This function is called by:
  4112 ;;		_test_process
  4113 ;;		_feu_check_bp
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           	psect	text12
  4118  0028BC                     __ptext12:
  4119                           	opt stack 0
  4120  0028BC                     _ecran_print_num:
  4121                           	opt stack 24
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;incstack = 0
  4125  0028BC  FFFF               	dw	65535
  4126                           
  4127                           ;ecran_print_num@Num stored from wreg
  4128  0028BE  CFE8 F0CC          	movff	wreg,ecran_print_num@Num
  4129                           
  4130                           ;ecran.c: 68: char * tempStr;
  4131                           ;ecran.c: 70: tempStr = PrintTest;
  4132  0028C2  0100               	movlb	0	; () banked
  4133  0028C4  0E00               	movlw	high _PrintTest
  4134  0028C6  0100               	movlb	0	; () banked
  4135  0028C8  0100               	movlb	0	; () banked
  4136  0028CA  6FCE               	movwf	(ecran_print_num@tempStr+1)& (0+255),b
  4137  0028CC  0100               	movlb	0	; () banked
  4138  0028CE  0EE5               	movlw	low _PrintTest
  4139  0028D0  0100               	movlb	0	; () banked
  4140  0028D2  0100               	movlb	0	; () banked
  4141  0028D4  6FCD               	movwf	ecran_print_num@tempStr& (0+255),b
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;ecran.c: 72: tempStr = DecToStr(Num, tempStr);
  4145  0028D6  0100               	movlb	0	; () banked
  4146  0028D8  0100               	movlb	0	; () banked
  4147  0028DA  C0CE  F0C2         	movff	ecran_print_num@tempStr+1,DecToStr@result+1
  4148  0028DE  0100               	movlb	0	; () banked
  4149  0028E0  0100               	movlb	0	; () banked
  4150  0028E2  C0CD  F0C1         	movff	ecran_print_num@tempStr,DecToStr@result
  4151  0028E6  0100               	movlb	0	; () banked
  4152  0028E8  0100               	movlb	0	; () banked
  4153  0028EA  51CC               	movf	ecran_print_num@Num& (0+255),w,b
  4154  0028EC  EC63  F00F         	call	_DecToStr
  4155  0028F0  0100               	movlb	0	; () banked
  4156  0028F2  C0C1  F0CD         	movff	?_DecToStr,ecran_print_num@tempStr
  4157  0028F6  0100               	movlb	0	; () banked
  4158  0028F8  C0C2  F0CE         	movff	?_DecToStr+1,ecran_print_num@tempStr+1
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;ecran.c: 74: Ecran.Digit[0] = ' ';
  4162  0028FC  0100               	movlb	0	; () banked
  4163  0028FE  6FCB               	movwf	??_ecran_print_num& (0+255),b
  4164  002900  0E20               	movlw	32
  4165  002902  0100               	movlb	0	; () banked
  4166  002904  0100               	movlb	0	; () banked
  4167  002906  6FAA               	movwf	_Ecran& (0+255),b
  4168  002908  0100               	movlb	0	; () banked
  4169  00290A  51CB               	movf	??_ecran_print_num& (0+255),w,b
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;ecran.c: 75: Ecran.Digit[1] = ' ';
  4173  00290C  0100               	movlb	0	; () banked
  4174  00290E  6FCB               	movwf	??_ecran_print_num& (0+255),b
  4175  002910  0E20               	movlw	32
  4176  002912  0100               	movlb	0	; () banked
  4177  002914  0100               	movlb	0	; () banked
  4178  002916  6FAB               	movwf	(_Ecran+1)& (0+255),b
  4179  002918  0100               	movlb	0	; () banked
  4180  00291A  51CB               	movf	??_ecran_print_num& (0+255),w,b
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;ecran.c: 77: if (Num < 10)
  4184  00291C  0E0A               	movlw	10
  4185  00291E  0100               	movlb	0	; () banked
  4186  002920  0100               	movlb	0	; () banked
  4187  002922  5DCC               	subwf	ecran_print_num@Num& (0+255),w,b
  4188  002924  B0D8               	btfsc	status,0,c
  4189  002926  D011               	goto	l5941
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;ecran.c: 78: {
  4193                           ;ecran.c: 79: Ecran.Digit[3] = tempStr[0];
  4194  002928  C0CD  FFD9         	movff	ecran_print_num@tempStr,fsr2l
  4195  00292C  C0CE  FFDA         	movff	ecran_print_num@tempStr+1,fsr2h
  4196  002930  50DF               	movf	indf2,w,c
  4197  002932  0100               	movlb	0	; () banked
  4198  002934  0100               	movlb	0	; () banked
  4199  002936  6FAD               	movwf	(_Ecran+3)& (0+255),b
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;ecran.c: 80: Ecran.Digit[2] = '0';
  4203  002938  0100               	movlb	0	; () banked
  4204  00293A  6FCB               	movwf	??_ecran_print_num& (0+255),b
  4205  00293C  0E30               	movlw	48
  4206  00293E  0100               	movlb	0	; () banked
  4207  002940  0100               	movlb	0	; () banked
  4208  002942  6FAC               	movwf	(_Ecran+2)& (0+255),b
  4209  002944  0100               	movlb	0	; () banked
  4210  002946  51CB               	movf	??_ecran_print_num& (0+255),w,b
  4211                           
  4212                           ;ecran.c: 81: }
  4213  002948  D015               	goto	l5945
  4214  00294A                     l5941:
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;ecran.c: 82: else
  4218                           ;ecran.c: 83: {
  4219                           ;ecran.c: 84: Ecran.Digit[3] = tempStr[1];
  4220  00294A  0100               	movlb	0	; () banked
  4221  00294C  EE20 F001          	lfsr	2,1
  4222  002950  0100               	movlb	0	; () banked
  4223  002952  51CD               	movf	ecran_print_num@tempStr& (0+255),w,b
  4224  002954  26D9               	addwf	fsr2l,f,c
  4225  002956  0100               	movlb	0	; () banked
  4226  002958  51CE               	movf	(ecran_print_num@tempStr+1)& (0+255),w,b
  4227  00295A  22DA               	addwfc	fsr2h,f,c
  4228  00295C  50DF               	movf	indf2,w,c
  4229  00295E  0100               	movlb	0	; () banked
  4230  002960  0100               	movlb	0	; () banked
  4231  002962  6FAD               	movwf	(_Ecran+3)& (0+255),b
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;ecran.c: 85: Ecran.Digit[2] = tempStr[0];
  4235  002964  C0CD  FFD9         	movff	ecran_print_num@tempStr,fsr2l
  4236  002968  C0CE  FFDA         	movff	ecran_print_num@tempStr+1,fsr2h
  4237  00296C  50DF               	movf	indf2,w,c
  4238  00296E  0100               	movlb	0	; () banked
  4239  002970  0100               	movlb	0	; () banked
  4240  002972  6FAC               	movwf	(_Ecran+2)& (0+255),b
  4241  002974                     l5945:
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;ecran.c: 86: }
  4245                           ;ecran.c: 88: Ecran.Digits = Ecran.Digit;
  4246  002974  0100               	movlb	0	; () banked
  4247  002976  0E00               	movlw	high _Ecran
  4248  002978  0100               	movlb	0	; () banked
  4249  00297A  0100               	movlb	0	; () banked
  4250  00297C  6FAF               	movwf	(_Ecran+5)& (0+255),b
  4251  00297E  0100               	movlb	0	; () banked
  4252  002980  0EAA               	movlw	low _Ecran
  4253  002982  0100               	movlb	0	; () banked
  4254  002984  0100               	movlb	0	; () banked
  4255  002986  6FAE               	movwf	(_Ecran+4)& (0+255),b
  4256                           
  4257                           ; BSR set to: 0
  4258  002988  0012               	return	
  4259  00298A  FFFF               	dw	65535	; errata NOP
  4260  00298C                     __end_of_ecran_print_num:
  4261                           	opt stack 0
  4262                           tblptru	equ	0xFF8
  4263                           tblptrh	equ	0xFF7
  4264                           tblptrl	equ	0xFF6
  4265                           tablat	equ	0xFF5
  4266                           prodh	equ	0xFF4
  4267                           prodl	equ	0xFF3
  4268                           intcon	equ	0xFF2
  4269                           intcon2	equ	0xFF1
  4270                           postinc0	equ	0xFEE
  4271                           wreg	equ	0xFE8
  4272                           postdec1	equ	0xFE5
  4273                           fsr1l	equ	0xFE1
  4274                           indf2	equ	0xFDF
  4275                           postinc2	equ	0xFDE
  4276                           postdec2	equ	0xFDD
  4277                           fsr2h	equ	0xFDA
  4278                           fsr2l	equ	0xFD9
  4279                           status	equ	0xFD8
  4280                           
  4281 ;; *************** function _DecToStr *****************
  4282 ;; Defined at:
  4283 ;;		line 3 in file "utils.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;  value           1    wreg     unsigned char 
  4286 ;;  result          2    7[BANK0 ] PTR unsigned char 
  4287 ;;		 -> PrintTest(5), 
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;  value           1   15[BANK0 ] unsigned char 
  4290 ;;  compareValue    2   13[BANK0 ] unsigned short 
  4291 ;;  power10         1   16[BANK0 ] unsigned char 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  2    7[BANK0 ] PTR unsigned char 
  4294 ;; Registers used:
  4295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4301 ;;      Params:         0       2       0       0       0       0       0
  4302 ;;      Locals:         0       4       0       0       0       0       0
  4303 ;;      Temps:          0       4       0       0       0       0       0
  4304 ;;      Totals:         0      10       0       0       0       0       0
  4305 ;;Total ram usage:       10 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    4
  4308 ;; This function calls:
  4309 ;;		___awmod
  4310 ;;		___lbdiv
  4311 ;;		___wmul
  4312 ;; This function is called by:
  4313 ;;		_ecran_print_num
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text13
  4318  001EC6                     __ptext13:
  4319                           	opt stack 0
  4320  001EC6                     _DecToStr:
  4321                           	opt stack 24
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;incstack = 0
  4325  001EC6  FFFF               	dw	65535
  4326                           
  4327                           ;DecToStr@value stored from wreg
  4328  001EC8  CFE8 F0C9          	movff	wreg,DecToStr@value
  4329                           
  4330                           ;utils.c: 5: unsigned char power10;
  4331                           ;utils.c: 6: unsigned short compareValue;
  4332                           ;utils.c: 8: compareValue = 1;
  4333  001ECC  0E00               	movlw	0
  4334  001ECE  0100               	movlb	0	; () banked
  4335  001ED0  0100               	movlb	0	; () banked
  4336  001ED2  6FC8               	movwf	(DecToStr@compareValue+1)& (0+255),b
  4337  001ED4  0E01               	movlw	1
  4338  001ED6  0100               	movlb	0	; () banked
  4339  001ED8  6FC7               	movwf	DecToStr@compareValue& (0+255),b
  4340                           
  4341                           ;utils.c: 10: for (power10 = 0; compareValue <= value; power10 ++)
  4342  001EDA  0100               	movlb	0	; () banked
  4343  001EDC  6FC3               	movwf	??_DecToStr& (0+255),b
  4344  001EDE  0E00               	movlw	0
  4345  001EE0  0100               	movlb	0	; () banked
  4346  001EE2  0100               	movlb	0	; () banked
  4347  001EE4  6FCA               	movwf	DecToStr@power10& (0+255),b
  4348  001EE6  0100               	movlb	0	; () banked
  4349  001EE8  51C3               	movf	??_DecToStr& (0+255),w,b
  4350  001EEA  D016               	goto	l5675
  4351  001EEC                     l5671:
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;utils.c: 11: {
  4355                           ;utils.c: 12: compareValue *= 10;
  4356  001EEC  C0C7  F0BA         	movff	DecToStr@compareValue,___wmul@multiplier
  4357  001EF0  C0C8  F0BB         	movff	DecToStr@compareValue+1,___wmul@multiplier+1
  4358  001EF4  0E00               	movlw	0
  4359  001EF6  0100               	movlb	0	; () banked
  4360  001EF8  0100               	movlb	0	; () banked
  4361  001EFA  6FBD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4362  001EFC  0E0A               	movlw	10
  4363  001EFE  0100               	movlb	0	; () banked
  4364  001F00  6FBC               	movwf	___wmul@multiplicand& (0+255),b
  4365  001F02  ECB0  F017         	call	___wmul	;wreg free
  4366  001F06  0100               	movlb	0	; () banked
  4367  001F08  C0BA  F0C7         	movff	?___wmul,DecToStr@compareValue
  4368  001F0C  0100               	movlb	0	; () banked
  4369  001F0E  C0BB  F0C8         	movff	?___wmul+1,DecToStr@compareValue+1
  4370                           
  4371                           ; BSR set to: 0
  4372  001F12  0100               	movlb	0	; () banked
  4373  001F14  0100               	movlb	0	; () banked
  4374  001F16  2BCA               	incf	DecToStr@power10& (0+255),f,b
  4375  001F18                     l5675:
  4376                           
  4377                           ; BSR set to: 0
  4378  001F18  0100               	movlb	0	; () banked
  4379  001F1A  0100               	movlb	0	; () banked
  4380  001F1C  51C9               	movf	DecToStr@value& (0+255),w,b
  4381  001F1E  0100               	movlb	0	; () banked
  4382  001F20  6FC3               	movwf	??_DecToStr& (0+255),b
  4383  001F22  6BC4               	clrf	(??_DecToStr+1)& (0+255),b
  4384  001F24  0100               	movlb	0	; () banked
  4385  001F26  0100               	movlb	0	; () banked
  4386  001F28  51C7               	movf	DecToStr@compareValue& (0+255),w,b
  4387  001F2A  0100               	movlb	0	; () banked
  4388  001F2C  5DC3               	subwf	??_DecToStr& (0+255),w,b
  4389  001F2E  0100               	movlb	0	; () banked
  4390  001F30  0100               	movlb	0	; () banked
  4391  001F32  51C8               	movf	(DecToStr@compareValue+1)& (0+255),w,b
  4392  001F34  0100               	movlb	0	; () banked
  4393  001F36  59C4               	subwfb	(??_DecToStr+1)& (0+255),w,b
  4394  001F38  B0D8               	btfsc	status,0,c
  4395  001F3A  D7D8               	goto	l5671
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;utils.c: 13: }
  4399                           ;utils.c: 15: if (value == 0) {power10 = 1;}
  4400  001F3C  0100               	movlb	0	; () banked
  4401  001F3E  0100               	movlb	0	; () banked
  4402  001F40  67C9               	tstfsz	DecToStr@value& (0+255),b
  4403  001F42  D008               	goto	l5679
  4404                           
  4405                           ; BSR set to: 0
  4406  001F44  0100               	movlb	0	; () banked
  4407  001F46  6FC3               	movwf	??_DecToStr& (0+255),b
  4408  001F48  0E01               	movlw	1
  4409  001F4A  0100               	movlb	0	; () banked
  4410  001F4C  0100               	movlb	0	; () banked
  4411  001F4E  6FCA               	movwf	DecToStr@power10& (0+255),b
  4412  001F50  0100               	movlb	0	; () banked
  4413  001F52  51C3               	movf	??_DecToStr& (0+255),w,b
  4414  001F54                     l5679:
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;utils.c: 17: result[power10] = '\0';
  4418  001F54  0100               	movlb	0	; () banked
  4419  001F56  0100               	movlb	0	; () banked
  4420  001F58  51CA               	movf	DecToStr@power10& (0+255),w,b
  4421  001F5A  0D01               	mullw	1
  4422  001F5C  50F3               	movf	prodl,w,c
  4423  001F5E  0100               	movlb	0	; () banked
  4424  001F60  0100               	movlb	0	; () banked
  4425  001F62  25C1               	addwf	DecToStr@result& (0+255),w,b
  4426  001F64  6ED9               	movwf	fsr2l,c
  4427  001F66  50F4               	movf	prodh,w,c
  4428  001F68  0100               	movlb	0	; () banked
  4429  001F6A  0100               	movlb	0	; () banked
  4430  001F6C  21C2               	addwfc	(DecToStr@result+1)& (0+255),w,b
  4431  001F6E  6EDA               	movwf	fsr2h,c
  4432  001F70  0E00               	movlw	0
  4433  001F72  6EDF               	movwf	indf2,c
  4434  001F74  D047               	goto	L36
  4435  001F76                     l5685:
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;utils.c: 20: {
  4439                           ;utils.c: 21: result[power10 - 1] = (value % 10) + '0';
  4440  001F76  0EFF               	movlw	255
  4441  001F78  0100               	movlb	0	; () banked
  4442  001F7A  6FC3               	movwf	??_DecToStr& (0+255),b
  4443  001F7C  0EFF               	movlw	255
  4444  001F7E  6FC4               	movwf	(??_DecToStr+1)& (0+255),b
  4445  001F80  0100               	movlb	0	; () banked
  4446  001F82  0100               	movlb	0	; () banked
  4447  001F84  51CA               	movf	DecToStr@power10& (0+255),w,b
  4448  001F86  0100               	movlb	0	; () banked
  4449  001F88  6FC5               	movwf	(??_DecToStr+2)& (0+255),b
  4450  001F8A  6BC6               	clrf	(??_DecToStr+3)& (0+255),b
  4451  001F8C  0100               	movlb	0	; () banked
  4452  001F8E  51C3               	movf	??_DecToStr& (0+255),w,b
  4453  001F90  0100               	movlb	0	; () banked
  4454  001F92  27C5               	addwf	(??_DecToStr+2)& (0+255),f,b
  4455  001F94  0100               	movlb	0	; () banked
  4456  001F96  51C4               	movf	(??_DecToStr+1)& (0+255),w,b
  4457  001F98  0100               	movlb	0	; () banked
  4458  001F9A  23C6               	addwfc	(??_DecToStr+3)& (0+255),f,b
  4459  001F9C  0100               	movlb	0	; () banked
  4460  001F9E  51C5               	movf	(??_DecToStr+2)& (0+255),w,b
  4461  001FA0  0100               	movlb	0	; () banked
  4462  001FA2  0100               	movlb	0	; () banked
  4463  001FA4  25C1               	addwf	DecToStr@result& (0+255),w,b
  4464  001FA6  6ED9               	movwf	fsr2l,c
  4465  001FA8  0100               	movlb	0	; () banked
  4466  001FAA  51C6               	movf	(??_DecToStr+3)& (0+255),w,b
  4467  001FAC  0100               	movlb	0	; () banked
  4468  001FAE  0100               	movlb	0	; () banked
  4469  001FB0  21C2               	addwfc	(DecToStr@result+1)& (0+255),w,b
  4470  001FB2  6EDA               	movwf	fsr2h,c
  4471  001FB4  0100               	movlb	0	; () banked
  4472  001FB6  0100               	movlb	0	; () banked
  4473  001FB8  C0C9  F0BA         	movff	DecToStr@value,___awmod@dividend
  4474  001FBC  0100               	movlb	0	; () banked
  4475  001FBE  0100               	movlb	0	; () banked
  4476  001FC0  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
  4477  001FC2  0E00               	movlw	0
  4478  001FC4  0100               	movlb	0	; () banked
  4479  001FC6  0100               	movlb	0	; () banked
  4480  001FC8  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  4481  001FCA  0E0A               	movlw	10
  4482  001FCC  0100               	movlb	0	; () banked
  4483  001FCE  6FBC               	movwf	___awmod@divisor& (0+255),b
  4484  001FD0  ECD0  F011         	call	___awmod	;wreg free
  4485  001FD4  0100               	movlb	0	; () banked
  4486  001FD6  0100               	movlb	0	; () banked
  4487  001FD8  51BA               	movf	?___awmod& (0+255),w,b
  4488  001FDA  0F30               	addlw	48
  4489  001FDC  6EDF               	movwf	indf2,c
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;utils.c: 22: value /= 10;
  4493  001FDE  0100               	movlb	0	; () banked
  4494  001FE0  6FC3               	movwf	??_DecToStr& (0+255),b
  4495  001FE2  0E0A               	movlw	10
  4496  001FE4  0100               	movlb	0	; () banked
  4497  001FE6  0100               	movlb	0	; () banked
  4498  001FE8  6FBA               	movwf	___lbdiv@divisor& (0+255),b
  4499  001FEA  0100               	movlb	0	; () banked
  4500  001FEC  51C3               	movf	??_DecToStr& (0+255),w,b
  4501  001FEE  0100               	movlb	0	; () banked
  4502  001FF0  0100               	movlb	0	; () banked
  4503  001FF2  51C9               	movf	DecToStr@value& (0+255),w,b
  4504  001FF4  ECC3  F016         	call	___lbdiv
  4505  001FF8  0100               	movlb	0	; () banked
  4506  001FFA  0100               	movlb	0	; () banked
  4507  001FFC  6FC9               	movwf	DecToStr@value& (0+255),b
  4508                           
  4509                           ; BSR set to: 0
  4510  001FFE  0100               	movlb	0	; () banked
  4511  002000  0100               	movlb	0	; () banked
  4512  002002  07CA               	decf	DecToStr@power10& (0+255),f,b
  4513  002004                     L36:
  4514                           
  4515                           ; BSR set to: 0
  4516  002004  0100               	movlb	0	; () banked
  4517  002006  0100               	movlb	0	; () banked
  4518  002008  67CA               	tstfsz	DecToStr@power10& (0+255),b
  4519  00200A  D7B5               	goto	l5685
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;utils.c: 23: }
  4523                           ;utils.c: 25: return result;
  4524                           
  4525                           ; BSR set to: 0
  4526  00200C  0100               	movlb	0	; () banked
  4527  00200E  0100               	movlb	0	; () banked
  4528  002010  C0C2  F0C2         	movff	DecToStr@result+1,?_DecToStr+1
  4529  002014  0100               	movlb	0	; () banked
  4530  002016  0100               	movlb	0	; () banked
  4531  002018  C0C1  F0C1         	movff	DecToStr@result,?_DecToStr
  4532                           
  4533                           ; BSR set to: 0
  4534                           
  4535                           ; BSR set to: 0
  4536  00201C  0012               	return	
  4537  00201E  FFFF               	dw	65535	; errata NOP
  4538  002020                     __end_of_DecToStr:
  4539                           	opt stack 0
  4540                           tblptru	equ	0xFF8
  4541                           tblptrh	equ	0xFF7
  4542                           tblptrl	equ	0xFF6
  4543                           tablat	equ	0xFF5
  4544                           prodh	equ	0xFF4
  4545                           prodl	equ	0xFF3
  4546                           intcon	equ	0xFF2
  4547                           intcon2	equ	0xFF1
  4548                           postinc0	equ	0xFEE
  4549                           wreg	equ	0xFE8
  4550                           postdec1	equ	0xFE5
  4551                           fsr1l	equ	0xFE1
  4552                           indf2	equ	0xFDF
  4553                           postinc2	equ	0xFDE
  4554                           postdec2	equ	0xFDD
  4555                           fsr2h	equ	0xFDA
  4556                           fsr2l	equ	0xFD9
  4557                           status	equ	0xFD8
  4558                           
  4559 ;; *************** function ___lbdiv *****************
  4560 ;; Defined at:
  4561 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lbdiv.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  dividend        1    wreg     unsigned char 
  4564 ;;  divisor         1    0[BANK0 ] unsigned char 
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;  dividend        1    2[BANK0 ] unsigned char 
  4567 ;;  quotient        1    4[BANK0 ] unsigned char 
  4568 ;;  counter         1    3[BANK0 ] unsigned char 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  1    wreg      unsigned char 
  4571 ;; Registers used:
  4572 ;;		wreg, status,2, status,0
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4578 ;;      Params:         0       1       0       0       0       0       0
  4579 ;;      Locals:         0       3       0       0       0       0       0
  4580 ;;      Temps:          0       1       0       0       0       0       0
  4581 ;;      Totals:         0       5       0       0       0       0       0
  4582 ;;Total ram usage:        5 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    3
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_DecToStr
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text14
  4593  002D86                     __ptext14:
  4594                           	opt stack 0
  4595  002D86                     ___lbdiv:
  4596                           	opt stack 24
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;incstack = 0
  4600  002D86  FFFF               	dw	65535
  4601                           
  4602                           ;___lbdiv@dividend stored from wreg
  4603  002D88  CFE8 F0BC          	movff	wreg,___lbdiv@dividend
  4604  002D8C  0100               	movlb	0	; () banked
  4605  002D8E  6FBB               	movwf	??___lbdiv& (0+255),b
  4606  002D90  0E00               	movlw	0
  4607  002D92  0100               	movlb	0	; () banked
  4608  002D94  0100               	movlb	0	; () banked
  4609  002D96  6FBE               	movwf	___lbdiv@quotient& (0+255),b
  4610  002D98  0100               	movlb	0	; () banked
  4611  002D9A  51BB               	movf	??___lbdiv& (0+255),w,b
  4612  002D9C  0100               	movlb	0	; () banked
  4613  002D9E  0100               	movlb	0	; () banked
  4614  002DA0  51BA               	movf	___lbdiv@divisor& (0+255),w,b
  4615  002DA2  B4D8               	btfsc	status,2,c
  4616  002DA4  D02E               	goto	l5615
  4617                           
  4618                           ; BSR set to: 0
  4619  002DA6  0100               	movlb	0	; () banked
  4620  002DA8  6FBB               	movwf	??___lbdiv& (0+255),b
  4621  002DAA  0E01               	movlw	1
  4622  002DAC  0100               	movlb	0	; () banked
  4623  002DAE  0100               	movlb	0	; () banked
  4624  002DB0  6FBD               	movwf	___lbdiv@counter& (0+255),b
  4625  002DB2  0100               	movlb	0	; () banked
  4626  002DB4  51BB               	movf	??___lbdiv& (0+255),w,b
  4627  002DB6  D006               	goto	l5603
  4628  002DB8                     l5599:
  4629                           
  4630                           ; BSR set to: 0
  4631  002DB8  0100               	movlb	0	; () banked
  4632  002DBA  90D8               	bcf	status,0,c
  4633  002DBC  37BA               	rlcf	___lbdiv@divisor& (0+255),f,b
  4634                           
  4635                           ; BSR set to: 0
  4636  002DBE  0100               	movlb	0	; () banked
  4637  002DC0  0100               	movlb	0	; () banked
  4638  002DC2  2BBD               	incf	___lbdiv@counter& (0+255),f,b
  4639  002DC4                     l5603:
  4640                           
  4641                           ; BSR set to: 0
  4642  002DC4  0100               	movlb	0	; () banked
  4643  002DC6  0100               	movlb	0	; () banked
  4644  002DC8  AFBA               	btfss	___lbdiv@divisor& (0+255),7,b
  4645  002DCA  D7F6               	goto	l5599
  4646  002DCC                     l5605:
  4647                           
  4648                           ; BSR set to: 0
  4649  002DCC  0100               	movlb	0	; () banked
  4650  002DCE  90D8               	bcf	status,0,c
  4651  002DD0  37BE               	rlcf	___lbdiv@quotient& (0+255),f,b
  4652  002DD2  0100               	movlb	0	; () banked
  4653  002DD4  0100               	movlb	0	; () banked
  4654  002DD6  51BA               	movf	___lbdiv@divisor& (0+255),w,b
  4655  002DD8  0100               	movlb	0	; () banked
  4656  002DDA  0100               	movlb	0	; () banked
  4657  002DDC  5DBC               	subwf	___lbdiv@dividend& (0+255),w,b
  4658  002DDE  A0D8               	btfss	status,0,c
  4659  002DE0  D009               	goto	l5611
  4660                           
  4661                           ; BSR set to: 0
  4662  002DE2  0100               	movlb	0	; () banked
  4663  002DE4  0100               	movlb	0	; () banked
  4664  002DE6  51BA               	movf	___lbdiv@divisor& (0+255),w,b
  4665  002DE8  0100               	movlb	0	; () banked
  4666  002DEA  0100               	movlb	0	; () banked
  4667  002DEC  5FBC               	subwf	___lbdiv@dividend& (0+255),f,b
  4668                           
  4669                           ; BSR set to: 0
  4670  002DEE  0100               	movlb	0	; () banked
  4671  002DF0  0100               	movlb	0	; () banked
  4672  002DF2  81BE               	bsf	___lbdiv@quotient& (0+255),0,b
  4673  002DF4                     l5611:
  4674                           
  4675                           ; BSR set to: 0
  4676  002DF4  0100               	movlb	0	; () banked
  4677  002DF6  90D8               	bcf	status,0,c
  4678  002DF8  33BA               	rrcf	___lbdiv@divisor& (0+255),f,b
  4679                           
  4680                           ; BSR set to: 0
  4681  002DFA  0100               	movlb	0	; () banked
  4682  002DFC  0100               	movlb	0	; () banked
  4683  002DFE  2FBD               	decfsz	___lbdiv@counter& (0+255),f,b
  4684  002E00  D7E5               	goto	l5605
  4685  002E02                     l5615:
  4686                           
  4687                           ; BSR set to: 0
  4688  002E02  0100               	movlb	0	; () banked
  4689  002E04  0100               	movlb	0	; () banked
  4690  002E06  51BE               	movf	___lbdiv@quotient& (0+255),w,b
  4691                           
  4692                           ; BSR set to: 0
  4693                           
  4694                           ; BSR set to: 0
  4695  002E08  0012               	return	
  4696  002E0A  FFFF               	dw	65535	; errata NOP
  4697  002E0C                     __end_of___lbdiv:
  4698                           	opt stack 0
  4699                           tblptru	equ	0xFF8
  4700                           tblptrh	equ	0xFF7
  4701                           tblptrl	equ	0xFF6
  4702                           tablat	equ	0xFF5
  4703                           prodh	equ	0xFF4
  4704                           prodl	equ	0xFF3
  4705                           intcon	equ	0xFF2
  4706                           intcon2	equ	0xFF1
  4707                           postinc0	equ	0xFEE
  4708                           wreg	equ	0xFE8
  4709                           postdec1	equ	0xFE5
  4710                           fsr1l	equ	0xFE1
  4711                           indf2	equ	0xFDF
  4712                           postinc2	equ	0xFDE
  4713                           postdec2	equ	0xFDD
  4714                           fsr2h	equ	0xFDA
  4715                           fsr2l	equ	0xFD9
  4716                           status	equ	0xFD8
  4717                           
  4718 ;; *************** function ___awmod *****************
  4719 ;; Defined at:
  4720 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awmod.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  dividend        2    0[BANK0 ] int 
  4723 ;;  divisor         2    2[BANK0 ] int 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  sign            1    6[BANK0 ] unsigned char 
  4726 ;;  counter         1    5[BANK0 ] unsigned char 
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  2    0[BANK0 ] int 
  4729 ;; Registers used:
  4730 ;;		wreg, status,2, status,0, prodl
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4736 ;;      Params:         0       4       0       0       0       0       0
  4737 ;;      Locals:         0       2       0       0       0       0       0
  4738 ;;      Temps:          0       1       0       0       0       0       0
  4739 ;;      Totals:         0       7       0       0       0       0       0
  4740 ;;Total ram usage:        7 bytes
  4741 ;; Hardware stack levels used:    1
  4742 ;; Hardware stack levels required when called:    3
  4743 ;; This function calls:
  4744 ;;		Nothing
  4745 ;; This function is called by:
  4746 ;;		_DecToStr
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text15
  4751  0023A0                     __ptext15:
  4752                           	opt stack 0
  4753  0023A0                     ___awmod:
  4754                           	opt stack 24
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;incstack = 0
  4758  0023A0  FFFF               	dw	65535
  4759  0023A2  0100               	movlb	0	; () banked
  4760  0023A4  6FBE               	movwf	??___awmod& (0+255),b
  4761  0023A6  0E00               	movlw	0
  4762  0023A8  0100               	movlb	0	; () banked
  4763  0023AA  0100               	movlb	0	; () banked
  4764  0023AC  6FC0               	movwf	___awmod@sign& (0+255),b
  4765  0023AE  0100               	movlb	0	; () banked
  4766  0023B0  51BE               	movf	??___awmod& (0+255),w,b
  4767                           
  4768                           ; BSR set to: 0
  4769  0023B2  0100               	movlb	0	; () banked
  4770  0023B4  0100               	movlb	0	; () banked
  4771  0023B6  51BB               	movf	(___awmod@dividend+1)& (0+255),w,b
  4772  0023B8  0A80               	xorlw	128
  4773  0023BA  6EF3               	movwf	prodl,c
  4774  0023BC  0E80               	movlw	128
  4775  0023BE  5CF3               	subwf	prodl,w,c
  4776  0023C0  0E00               	movlw	0
  4777  0023C2  B4D8               	btfsc	status,2,c
  4778  0023C4  5DBA               	subwf	___awmod@dividend& (0+255),w,b
  4779  0023C6  B0D8               	btfsc	status,0,c
  4780  0023C8  D00F               	goto	l5567
  4781                           
  4782                           ; BSR set to: 0
  4783  0023CA  0100               	movlb	0	; () banked
  4784  0023CC  0100               	movlb	0	; () banked
  4785  0023CE  6DBA               	negf	___awmod@dividend& (0+255),b
  4786  0023D0  0100               	movlb	0	; () banked
  4787  0023D2  1FBB               	comf	(___awmod@dividend+1)& (0+255),f,b
  4788  0023D4  B0D8               	btfsc	status,0,c
  4789  0023D6  2BBB               	incf	(___awmod@dividend+1)& (0+255),f,b
  4790                           
  4791                           ; BSR set to: 0
  4792  0023D8  0100               	movlb	0	; () banked
  4793  0023DA  6FBE               	movwf	??___awmod& (0+255),b
  4794  0023DC  0E01               	movlw	1
  4795  0023DE  0100               	movlb	0	; () banked
  4796  0023E0  0100               	movlb	0	; () banked
  4797  0023E2  6FC0               	movwf	___awmod@sign& (0+255),b
  4798  0023E4  0100               	movlb	0	; () banked
  4799  0023E6  51BE               	movf	??___awmod& (0+255),w,b
  4800  0023E8                     l5567:
  4801                           
  4802                           ; BSR set to: 0
  4803  0023E8  0100               	movlb	0	; () banked
  4804  0023EA  0100               	movlb	0	; () banked
  4805  0023EC  51BD               	movf	(___awmod@divisor+1)& (0+255),w,b
  4806  0023EE  0A80               	xorlw	128
  4807  0023F0  6EF3               	movwf	prodl,c
  4808  0023F2  0E80               	movlw	128
  4809  0023F4  5CF3               	subwf	prodl,w,c
  4810  0023F6  0E00               	movlw	0
  4811  0023F8  B4D8               	btfsc	status,2,c
  4812  0023FA  5DBC               	subwf	___awmod@divisor& (0+255),w,b
  4813  0023FC  B0D8               	btfsc	status,0,c
  4814  0023FE  D007               	goto	l5571
  4815                           
  4816                           ; BSR set to: 0
  4817  002400  0100               	movlb	0	; () banked
  4818  002402  0100               	movlb	0	; () banked
  4819  002404  6DBC               	negf	___awmod@divisor& (0+255),b
  4820  002406  0100               	movlb	0	; () banked
  4821  002408  1FBD               	comf	(___awmod@divisor+1)& (0+255),f,b
  4822  00240A  B0D8               	btfsc	status,0,c
  4823  00240C  2BBD               	incf	(___awmod@divisor+1)& (0+255),f,b
  4824  00240E                     l5571:
  4825                           
  4826                           ; BSR set to: 0
  4827  00240E  0100               	movlb	0	; () banked
  4828  002410  0100               	movlb	0	; () banked
  4829  002412  51BD               	movf	(___awmod@divisor+1)& (0+255),w,b
  4830  002414  11BC               	iorwf	___awmod@divisor& (0+255),w,b
  4831  002416  B4D8               	btfsc	status,2,c
  4832  002418  D03A               	goto	l5587
  4833                           
  4834                           ; BSR set to: 0
  4835  00241A  0100               	movlb	0	; () banked
  4836  00241C  6FBE               	movwf	??___awmod& (0+255),b
  4837  00241E  0E01               	movlw	1
  4838  002420  0100               	movlb	0	; () banked
  4839  002422  0100               	movlb	0	; () banked
  4840  002424  6FBF               	movwf	___awmod@counter& (0+255),b
  4841  002426  0100               	movlb	0	; () banked
  4842  002428  51BE               	movf	??___awmod& (0+255),w,b
  4843  00242A  D009               	goto	l5577
  4844  00242C                     l5575:
  4845                           
  4846                           ; BSR set to: 0
  4847  00242C  0100               	movlb	0	; () banked
  4848  00242E  0100               	movlb	0	; () banked
  4849  002430  0100               	movlb	0	; () banked
  4850  002432  90D8               	bcf	status,0,c
  4851  002434  37BC               	rlcf	___awmod@divisor& (0+255),f,b
  4852  002436  37BD               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4853  002438  0100               	movlb	0	; () banked
  4854  00243A  0100               	movlb	0	; () banked
  4855  00243C  2BBF               	incf	___awmod@counter& (0+255),f,b
  4856  00243E                     l5577:
  4857                           
  4858                           ; BSR set to: 0
  4859  00243E  0100               	movlb	0	; () banked
  4860  002440  0100               	movlb	0	; () banked
  4861  002442  AFBD               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4862  002444  D7F3               	goto	l5575
  4863  002446                     l5579:
  4864                           
  4865                           ; BSR set to: 0
  4866  002446  0100               	movlb	0	; () banked
  4867  002448  0100               	movlb	0	; () banked
  4868  00244A  51BC               	movf	___awmod@divisor& (0+255),w,b
  4869  00244C  0100               	movlb	0	; () banked
  4870  00244E  0100               	movlb	0	; () banked
  4871  002450  5DBA               	subwf	___awmod@dividend& (0+255),w,b
  4872  002452  0100               	movlb	0	; () banked
  4873  002454  0100               	movlb	0	; () banked
  4874  002456  51BD               	movf	(___awmod@divisor+1)& (0+255),w,b
  4875  002458  0100               	movlb	0	; () banked
  4876  00245A  0100               	movlb	0	; () banked
  4877  00245C  59BB               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4878  00245E  A0D8               	btfss	status,0,c
  4879  002460  D00C               	goto	l5583
  4880                           
  4881                           ; BSR set to: 0
  4882  002462  0100               	movlb	0	; () banked
  4883  002464  0100               	movlb	0	; () banked
  4884  002466  51BC               	movf	___awmod@divisor& (0+255),w,b
  4885  002468  0100               	movlb	0	; () banked
  4886  00246A  0100               	movlb	0	; () banked
  4887  00246C  5FBA               	subwf	___awmod@dividend& (0+255),f,b
  4888  00246E  0100               	movlb	0	; () banked
  4889  002470  0100               	movlb	0	; () banked
  4890  002472  51BD               	movf	(___awmod@divisor+1)& (0+255),w,b
  4891  002474  0100               	movlb	0	; () banked
  4892  002476  0100               	movlb	0	; () banked
  4893  002478  5BBB               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4894  00247A                     l5583:
  4895                           
  4896                           ; BSR set to: 0
  4897  00247A  0100               	movlb	0	; () banked
  4898  00247C  0100               	movlb	0	; () banked
  4899  00247E  0100               	movlb	0	; () banked
  4900  002480  90D8               	bcf	status,0,c
  4901  002482  33BD               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4902  002484  33BC               	rrcf	___awmod@divisor& (0+255),f,b
  4903                           
  4904                           ; BSR set to: 0
  4905  002486  0100               	movlb	0	; () banked
  4906  002488  0100               	movlb	0	; () banked
  4907  00248A  2FBF               	decfsz	___awmod@counter& (0+255),f,b
  4908  00248C  D7DC               	goto	l5579
  4909  00248E                     l5587:
  4910                           
  4911                           ; BSR set to: 0
  4912  00248E  0100               	movlb	0	; () banked
  4913  002490  0100               	movlb	0	; () banked
  4914  002492  51C0               	movf	___awmod@sign& (0+255),w,b
  4915  002494  B4D8               	btfsc	status,2,c
  4916  002496  D007               	goto	l5591
  4917                           
  4918                           ; BSR set to: 0
  4919  002498  0100               	movlb	0	; () banked
  4920  00249A  0100               	movlb	0	; () banked
  4921  00249C  6DBA               	negf	___awmod@dividend& (0+255),b
  4922  00249E  0100               	movlb	0	; () banked
  4923  0024A0  1FBB               	comf	(___awmod@dividend+1)& (0+255),f,b
  4924  0024A2  B0D8               	btfsc	status,0,c
  4925  0024A4  2BBB               	incf	(___awmod@dividend+1)& (0+255),f,b
  4926  0024A6                     l5591:
  4927                           
  4928                           ; BSR set to: 0
  4929  0024A6  C0BA  F0BA         	movff	___awmod@dividend,?___awmod
  4930  0024AA  C0BB  F0BB         	movff	___awmod@dividend+1,?___awmod+1
  4931                           
  4932                           ; BSR set to: 0
  4933                           
  4934                           ; BSR set to: 0
  4935  0024AE  0012               	return	
  4936  0024B0  FFFF               	dw	65535	; errata NOP
  4937  0024B2                     __end_of___awmod:
  4938                           	opt stack 0
  4939                           tblptru	equ	0xFF8
  4940                           tblptrh	equ	0xFF7
  4941                           tblptrl	equ	0xFF6
  4942                           tablat	equ	0xFF5
  4943                           prodh	equ	0xFF4
  4944                           prodl	equ	0xFF3
  4945                           intcon	equ	0xFF2
  4946                           intcon2	equ	0xFF1
  4947                           postinc0	equ	0xFEE
  4948                           wreg	equ	0xFE8
  4949                           postdec1	equ	0xFE5
  4950                           fsr1l	equ	0xFE1
  4951                           indf2	equ	0xFDF
  4952                           postinc2	equ	0xFDE
  4953                           postdec2	equ	0xFDD
  4954                           fsr2h	equ	0xFDA
  4955                           fsr2l	equ	0xFD9
  4956                           status	equ	0xFD8
  4957                           
  4958 ;; *************** function _check_program_0 *****************
  4959 ;; Defined at:
  4960 ;;		line 19 in file "test.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;		None
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;  ret             1    6[BANK0 ] unsigned char 
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      unsigned char 
  4967 ;; Registers used:
  4968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4974 ;;      Params:         0       0       0       0       0       0       0
  4975 ;;      Locals:         0       1       0       0       0       0       0
  4976 ;;      Temps:          0       1       0       0       0       0       0
  4977 ;;      Totals:         0       2       0       0       0       0       0
  4978 ;;Total ram usage:        2 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; Hardware stack levels required when called:    6
  4981 ;; This function calls:
  4982 ;;		_ecran_blank
  4983 ;;		_ecran_refresh
  4984 ;;		_ecran_wait
  4985 ;; This function is called by:
  4986 ;;		_main
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           	psect	text16
  4991  0030E8                     __ptext16:
  4992                           	opt stack 0
  4993  0030E8                     _check_program_0:
  4994                           	opt stack 24
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;incstack = 0
  4998  0030E8  FFFF               	dw	65535
  4999                           
  5000                           ;test.c: 21: unsigned char ret = 0;
  5001  0030EA  0100               	movlb	0	; () banked
  5002  0030EC  6FBF               	movwf	??_check_program_0& (0+255),b
  5003  0030EE  0E00               	movlw	0
  5004  0030F0  0100               	movlb	0	; () banked
  5005  0030F2  0100               	movlb	0	; () banked
  5006  0030F4  6FC0               	movwf	check_program_0@ret& (0+255),b
  5007  0030F6  0100               	movlb	0	; () banked
  5008  0030F8  51BF               	movf	??_check_program_0& (0+255),w,b
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;test.c: 23: if ((PORTEbits.RE1 == 0) && (PORTEbits.RE0 == 0))
  5012  0030FA  A284               	btfss	3972,1,c	;volatile
  5013                           
  5014                           ; BSR set to: 0
  5015  0030FC  B084               	btfsc	3972,0,c	;volatile
  5016  0030FE  D019               	goto	l6219
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;test.c: 24: {
  5020                           ;test.c: 25: ecran_blank();
  5021  003100  ECE3  F017         	call	_ecran_blank	;wreg free
  5022                           
  5023                           ;test.c: 26: while ((PORTEbits.RE1 == 0) || (PORTEbits.RE0 == 0)) {ecran_refresh();}
  5024  003104  D002               	goto	l6211
  5025  003106                     l6209:
  5026  003106  EC84  F015         	call	_ecran_refresh	;wreg free
  5027  00310A                     l6211:
  5028  00310A  B284               	btfsc	3972,1,c	;volatile
  5029  00310C  A084               	btfss	3972,0,c	;volatile
  5030  00310E  D7FB               	goto	l6209
  5031                           
  5032                           ;test.c: 28: Micro.Mod.P_0 = 1;
  5033  003110  8057               	bsf	_Micro+5,0,c
  5034                           
  5035                           ;test.c: 30: ret = 1;
  5036  003112  0100               	movlb	0	; () banked
  5037  003114  6FBF               	movwf	??_check_program_0& (0+255),b
  5038  003116  0E01               	movlw	1
  5039  003118  0100               	movlb	0	; () banked
  5040  00311A  0100               	movlb	0	; () banked
  5041  00311C  6FC0               	movwf	check_program_0@ret& (0+255),b
  5042  00311E  0100               	movlb	0	; () banked
  5043  003120  51BF               	movf	??_check_program_0& (0+255),w,b
  5044                           
  5045                           ;test.c: 32: Micro.Step = 0x03;
  5046  003122  0100               	movlb	0	; () banked
  5047  003124  6FBF               	movwf	??_check_program_0& (0+255),b
  5048  003126  0E03               	movlw	3
  5049  003128  6E55               	movwf	_Micro+3,c
  5050  00312A  0100               	movlb	0	; () banked
  5051  00312C  51BF               	movf	??_check_program_0& (0+255),w,b
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;test.c: 34: ecran_wait();
  5055  00312E  EC9C  F01A         	call	_ecran_wait	;wreg free
  5056  003132                     l6219:
  5057                           
  5058                           ;test.c: 35: }
  5059                           ;test.c: 37: return ret;
  5060  003132  0100               	movlb	0	; () banked
  5061  003134  0100               	movlb	0	; () banked
  5062  003136  51C0               	movf	check_program_0@ret& (0+255),w,b
  5063                           
  5064                           ; BSR set to: 0
  5065                           
  5066                           ; BSR set to: 0
  5067  003138  0012               	return	
  5068  00313A  FFFF               	dw	65535	; errata NOP
  5069  00313C                     __end_of_check_program_0:
  5070                           	opt stack 0
  5071                           tblptru	equ	0xFF8
  5072                           tblptrh	equ	0xFF7
  5073                           tblptrl	equ	0xFF6
  5074                           tablat	equ	0xFF5
  5075                           prodh	equ	0xFF4
  5076                           prodl	equ	0xFF3
  5077                           intcon	equ	0xFF2
  5078                           intcon2	equ	0xFF1
  5079                           postinc0	equ	0xFEE
  5080                           wreg	equ	0xFE8
  5081                           postdec1	equ	0xFE5
  5082                           fsr1l	equ	0xFE1
  5083                           indf2	equ	0xFDF
  5084                           postinc2	equ	0xFDE
  5085                           postdec2	equ	0xFDD
  5086                           fsr2h	equ	0xFDA
  5087                           fsr2l	equ	0xFD9
  5088                           status	equ	0xFD8
  5089                           
  5090 ;; *************** function _check_idtest *****************
  5091 ;; Defined at:
  5092 ;;		line 41 in file "test.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;		None
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;		None
  5097 ;; Return value:  Size  Location     Type
  5098 ;;		None               void
  5099 ;; Registers used:
  5100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5106 ;;      Params:         0       0       0       0       0       0       0
  5107 ;;      Locals:         0       0       0       0       0       0       0
  5108 ;;      Temps:          0       1       0       0       0       0       0
  5109 ;;      Totals:         0       1       0       0       0       0       0
  5110 ;;Total ram usage:        1 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:    7
  5113 ;; This function calls:
  5114 ;;		_cf_rcv
  5115 ;;		_ecran_print_one_char
  5116 ;;		_micro_config_rs
  5117 ;; This function is called by:
  5118 ;;		_main
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text17
  5123  0034E0                     __ptext17:
  5124                           	opt stack 0
  5125  0034E0                     _check_idtest:
  5126                           	opt stack 23
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;incstack = 0
  5130  0034E0  FFFF               	dw	65535
  5131                           
  5132                           ;test.c: 43: if ((PORTEbits.RE1 == 0) && (PORTEbits.RE0 == 1))
  5133  0034E2  A284               	btfss	3972,1,c	;volatile
  5134  0034E4  A084               	btfss	3972,0,c	;volatile
  5135  0034E6  D010               	goto	l544
  5136                           
  5137                           ;test.c: 44: {
  5138                           ;test.c: 45: micro_config_rs();
  5139  0034E8  ECBD  F01A         	call	_micro_config_rs	;wreg free
  5140                           
  5141                           ;test.c: 46: ecran_print_one_char(3, 'P');
  5142  0034EC  0100               	movlb	0	; () banked
  5143  0034EE  6FD2               	movwf	??_check_idtest& (0+255),b
  5144  0034F0  0E50               	movlw	80
  5145  0034F2  0100               	movlb	0	; () banked
  5146  0034F4  0100               	movlb	0	; () banked
  5147  0034F6  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  5148  0034F8  0100               	movlb	0	; () banked
  5149  0034FA  51D2               	movf	??_check_idtest& (0+255),w,b
  5150  0034FC  0E03               	movlw	3
  5151  0034FE  ECD9  F019         	call	_ecran_print_one_char
  5152  003502                     l6231:
  5153  003502  ECC0  F00A         	call	_cf_rcv	;wreg free
  5154  003506  D7FD               	goto	l6231
  5155  003508                     l544:
  5156  003508  0012               	return	
  5157  00350A  FFFF               	dw	65535	; errata NOP
  5158  00350C                     __end_of_check_idtest:
  5159                           	opt stack 0
  5160                           tblptru	equ	0xFF8
  5161                           tblptrh	equ	0xFF7
  5162                           tblptrl	equ	0xFF6
  5163                           tablat	equ	0xFF5
  5164                           prodh	equ	0xFF4
  5165                           prodl	equ	0xFF3
  5166                           intcon	equ	0xFF2
  5167                           intcon2	equ	0xFF1
  5168                           postinc0	equ	0xFEE
  5169                           wreg	equ	0xFE8
  5170                           postdec1	equ	0xFE5
  5171                           fsr1l	equ	0xFE1
  5172                           indf2	equ	0xFDF
  5173                           postinc2	equ	0xFDE
  5174                           postdec2	equ	0xFDD
  5175                           fsr2h	equ	0xFDA
  5176                           fsr2l	equ	0xFD9
  5177                           status	equ	0xFD8
  5178                           
  5179 ;; *************** function _micro_config_rs *****************
  5180 ;; Defined at:
  5181 ;;		line 3 in file "micro.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;		None
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;		None
  5186 ;; Return value:  Size  Location     Type
  5187 ;;		None               void
  5188 ;; Registers used:
  5189 ;;		wreg, status,2
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5195 ;;      Params:         0       0       0       0       0       0       0
  5196 ;;      Locals:         0       0       0       0       0       0       0
  5197 ;;      Temps:          0       0       0       0       0       0       0
  5198 ;;      Totals:         0       0       0       0       0       0       0
  5199 ;;Total ram usage:        0 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    3
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_check_idtest
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text18
  5210  00357A                     __ptext18:
  5211                           	opt stack 0
  5212  00357A                     _micro_config_rs:
  5213                           	opt stack 26
  5214                           
  5215                           ;incstack = 0
  5216  00357A  FFFF               	dw	65535
  5217                           
  5218                           ;micro.c: 5: PORTEbits.RE2 = 0;
  5219  00357C  9484               	bcf	3972,2,c	;volatile
  5220                           
  5221                           ;micro.c: 9: SPBRG = 207;
  5222  00357E  0ECF               	movlw	207
  5223  003580  6EAF               	movwf	4015,c	;volatile
  5224                           
  5225                           ;micro.c: 14: TXSTA = 0x20;
  5226  003582  0E20               	movlw	32
  5227  003584  6EAC               	movwf	4012,c	;volatile
  5228                           
  5229                           ;micro.c: 22: RCSTA = 0x90;
  5230  003586  0E90               	movlw	144
  5231  003588  6EAB               	movwf	4011,c	;volatile
  5232                           
  5233                           ;micro.c: 34: RCIP = 0;
  5234  00358A  9A9F               	bcf	3999,5,c	;volatile
  5235                           
  5236                           ;micro.c: 35: RCIE = 1;
  5237  00358C  8A9D               	bsf	3997,5,c	;volatile
  5238                           
  5239                           ;micro.c: 36: PEIE = 1;
  5240  00358E  8CF2               	bsf	intcon,6,c	;volatile
  5241  003590  0012               	return	
  5242  003592  FFFF               	dw	65535	; errata NOP
  5243  003594                     __end_of_micro_config_rs:
  5244                           	opt stack 0
  5245                           tblptru	equ	0xFF8
  5246                           tblptrh	equ	0xFF7
  5247                           tblptrl	equ	0xFF6
  5248                           tablat	equ	0xFF5
  5249                           prodh	equ	0xFF4
  5250                           prodl	equ	0xFF3
  5251                           intcon	equ	0xFF2
  5252                           intcon2	equ	0xFF1
  5253                           postinc0	equ	0xFEE
  5254                           wreg	equ	0xFE8
  5255                           postdec1	equ	0xFE5
  5256                           fsr1l	equ	0xFE1
  5257                           indf2	equ	0xFDF
  5258                           postinc2	equ	0xFDE
  5259                           postdec2	equ	0xFDD
  5260                           fsr2h	equ	0xFDA
  5261                           fsr2l	equ	0xFD9
  5262                           status	equ	0xFD8
  5263                           
  5264 ;; *************** function _cf_rcv *****************
  5265 ;; Defined at:
  5266 ;;		line 132 in file "config.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;		None
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;  i               1   23[BANK0 ] unsigned char 
  5271 ;;  temp            1   22[BANK0 ] unsigned char 
  5272 ;; Return value:  Size  Location     Type
  5273 ;;		None               void
  5274 ;; Registers used:
  5275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5276 ;; Tracked objects:
  5277 ;;		On entry : 0/0
  5278 ;;		On exit  : 0/0
  5279 ;;		Unchanged: 0/0
  5280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5281 ;;      Params:         0       0       0       0       0       0       0
  5282 ;;      Locals:         0       2       0       0       0       0       0
  5283 ;;      Temps:          0       2       0       0       0       0       0
  5284 ;;      Totals:         0       4       0       0       0       0       0
  5285 ;;Total ram usage:        4 bytes
  5286 ;; Hardware stack levels used:    1
  5287 ;; Hardware stack levels required when called:    6
  5288 ;; This function calls:
  5289 ;;		_cf_check
  5290 ;;		_ecran_print_one_char
  5291 ;;		_eeprom_read_array
  5292 ;;		_eeprom_write_array
  5293 ;; This function is called by:
  5294 ;;		_check_idtest
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           	psect	text19
  5299  001580                     __ptext19:
  5300                           	opt stack 0
  5301  001580                     _cf_rcv:
  5302                           	opt stack 23
  5303                           
  5304                           ;incstack = 0
  5305  001580  FFFF               	dw	65535
  5306                           
  5307                           ;config.c: 134: unsigned char i, temp = 0;
  5308  001582  0100               	movlb	0	; () banked
  5309  001584  6FCE               	movwf	??_cf_rcv& (0+255),b
  5310  001586  0E00               	movlw	0
  5311  001588  0100               	movlb	0	; () banked
  5312  00158A  0100               	movlb	0	; () banked
  5313  00158C  6FD0               	movwf	cf_rcv@temp& (0+255),b
  5314  00158E  0100               	movlb	0	; () banked
  5315  001590  51CE               	movf	??_cf_rcv& (0+255),w,b
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;config.c: 136: if ((((unsigned short) (Cptms - Cf.Time2) > 100) ? 1 : 0))
  5319  001592  0101               	movlb	1	; () banked
  5320  001594  EE21  F068         	lfsr	2,_Cf+104	;volatile
  5321  001598  CFDE F0CE          	movff	postinc2,??_cf_rcv
  5322  00159C  CFDD F0CF          	movff	postdec2,??_cf_rcv+1
  5323  0015A0  0100               	movlb	0	; () banked
  5324  0015A2  1FCE               	comf	??_cf_rcv& (0+255),f,b
  5325  0015A4  1FCF               	comf	(??_cf_rcv+1)& (0+255),f,b
  5326  0015A6  4BCE               	infsnz	??_cf_rcv& (0+255),f,b
  5327  0015A8  2BCF               	incf	(??_cf_rcv+1)& (0+255),f,b
  5328  0015AA  504F               	movf	_Cptms,w,c	;volatile
  5329  0015AC  0100               	movlb	0	; () banked
  5330  0015AE  27CE               	addwf	??_cf_rcv& (0+255),f,b
  5331  0015B0  5050               	movf	_Cptms+1,w,c	;volatile
  5332  0015B2  0100               	movlb	0	; () banked
  5333  0015B4  23CF               	addwfc	(??_cf_rcv+1)& (0+255),f,b
  5334  0015B6  0E65               	movlw	101
  5335  0015B8  0100               	movlb	0	; () banked
  5336  0015BA  5DCE               	subwf	??_cf_rcv& (0+255),w,b
  5337  0015BC  0E00               	movlw	0
  5338  0015BE  59CF               	subwfb	(??_cf_rcv+1)& (0+255),w,b
  5339  0015C0  A0D8               	btfss	status,0,c
  5340  0015C2  D024               	goto	l5975
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;config.c: 137: {
  5344                           ;config.c: 138: Cf.Time2 = Cptms;
  5345  0015C4  C04F  F168         	movff	_Cptms,_Cf+104	;volatile
  5346  0015C8  C050  F169         	movff	_Cptms+1,_Cf+105	;volatile
  5347                           
  5348                           ;config.c: 140: (INTCONbits.GIE = 0);
  5349  0015CC  9EF2               	bcf	intcon,7,c	;volatile
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;config.c: 141: if ((((unsigned short) (Cptms - Cf.Time1) > 100) ? 1 : 0)) {Cf.Index = 0
      +                          ;}
  5353  0015CE  0101               	movlb	1	; () banked
  5354  0015D0  EE21  F066         	lfsr	2,_Cf+102	;volatile
  5355  0015D4  CFDE F0CE          	movff	postinc2,??_cf_rcv
  5356  0015D8  CFDD F0CF          	movff	postdec2,??_cf_rcv+1
  5357  0015DC  0100               	movlb	0	; () banked
  5358  0015DE  1FCE               	comf	??_cf_rcv& (0+255),f,b
  5359  0015E0  1FCF               	comf	(??_cf_rcv+1)& (0+255),f,b
  5360  0015E2  4BCE               	infsnz	??_cf_rcv& (0+255),f,b
  5361  0015E4  2BCF               	incf	(??_cf_rcv+1)& (0+255),f,b
  5362  0015E6  504F               	movf	_Cptms,w,c	;volatile
  5363  0015E8  0100               	movlb	0	; () banked
  5364  0015EA  27CE               	addwf	??_cf_rcv& (0+255),f,b
  5365  0015EC  5050               	movf	_Cptms+1,w,c	;volatile
  5366  0015EE  0100               	movlb	0	; () banked
  5367  0015F0  23CF               	addwfc	(??_cf_rcv+1)& (0+255),f,b
  5368  0015F2  0E65               	movlw	101
  5369  0015F4  0100               	movlb	0	; () banked
  5370  0015F6  5DCE               	subwf	??_cf_rcv& (0+255),w,b
  5371  0015F8  0E00               	movlw	0
  5372  0015FA  59CF               	subwfb	(??_cf_rcv+1)& (0+255),w,b
  5373  0015FC  A0D8               	btfss	status,0,c
  5374  0015FE  D004               	goto	l5973
  5375                           
  5376                           ; BSR set to: 0
  5377  001600  0E00               	movlw	0
  5378  001602  0101               	movlb	1	; () banked
  5379  001604  0101               	movlb	1	; () banked
  5380  001606  6F65               	movwf	(_Cf+101)& (0+255),b	;volatile
  5381  001608                     l5973:
  5382                           
  5383                           ;config.c: 142: (INTCONbits.GIE = 1);
  5384  001608  8EF2               	bsf	intcon,7,c	;volatile
  5385                           
  5386                           ;config.c: 143: }
  5387  00160A  D098               	goto	l461
  5388  00160C                     l5975:
  5389                           
  5390                           ;config.c: 144: else if (Cf.Index == (32 * 3 + 5))
  5391  00160C  0101               	movlb	1	; () banked
  5392  00160E  0101               	movlb	1	; () banked
  5393  001610  5165               	movf	(_Cf+101)& (0+255),w,b	;volatile
  5394  001612  0A65               	xorlw	101
  5395  001614  A4D8               	btfss	status,2,c
  5396  001616  D092               	goto	l461
  5397                           
  5398                           ; BSR set to: 1
  5399                           ;config.c: 145: {
  5400                           ;config.c: 146: RCIE = 0;
  5401  001618  9A9D               	bcf	3997,5,c	;volatile
  5402                           
  5403                           ; BSR set to: 1
  5404                           ;config.c: 148: temp = cf_check();
  5405  00161A  ECFD  F019         	call	_cf_check	;wreg free
  5406  00161E  0100               	movlb	0	; () banked
  5407  001620  0100               	movlb	0	; () banked
  5408  001622  6FD0               	movwf	cf_rcv@temp& (0+255),b
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;config.c: 150: if (temp == 0)
  5412  001624  0100               	movlb	0	; () banked
  5413  001626  0100               	movlb	0	; () banked
  5414  001628  67D0               	tstfsz	cf_rcv@temp& (0+255),b
  5415  00162A  D00C               	goto	l5985
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;config.c: 151: {
  5419                           ;config.c: 152: ecran_print_one_char(3, 'E');
  5420  00162C  0100               	movlb	0	; () banked
  5421  00162E  6FCE               	movwf	??_cf_rcv& (0+255),b
  5422  001630  0E45               	movlw	69
  5423  001632  0100               	movlb	0	; () banked
  5424  001634  0100               	movlb	0	; () banked
  5425  001636  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  5426  001638  0100               	movlb	0	; () banked
  5427  00163A  51CE               	movf	??_cf_rcv& (0+255),w,b
  5428  00163C  0E03               	movlw	3
  5429  00163E  ECD9  F019         	call	_ecran_print_one_char
  5430                           
  5431                           ;config.c: 153: }
  5432  001642  D077               	goto	l6009
  5433  001644                     l5985:
  5434                           
  5435                           ;config.c: 154: else
  5436                           ;config.c: 155: {
  5437                           ;config.c: 157: eeprom_write_array(&Cf.Data[0], 0, (32 * 3 + 5));
  5438  001644  0101               	movlb	1	; () banked
  5439  001646  0E01               	movlw	high _Cf	;volatile
  5440  001648  0100               	movlb	0	; () banked
  5441  00164A  0100               	movlb	0	; () banked
  5442  00164C  6FBD               	movwf	(eeprom_write_array@pData+1)& (0+255),b
  5443  00164E  0101               	movlb	1	; () banked
  5444  001650  0E00               	movlw	low _Cf	;volatile
  5445  001652  0100               	movlb	0	; () banked
  5446  001654  0100               	movlb	0	; () banked
  5447  001656  6FBC               	movwf	eeprom_write_array@pData& (0+255),b
  5448  001658  0100               	movlb	0	; () banked
  5449  00165A  6FCE               	movwf	??_cf_rcv& (0+255),b
  5450  00165C  0E00               	movlw	0
  5451  00165E  0100               	movlb	0	; () banked
  5452  001660  0100               	movlb	0	; () banked
  5453  001662  6FBE               	movwf	eeprom_write_array@Address& (0+255),b
  5454  001664  0100               	movlb	0	; () banked
  5455  001666  51CE               	movf	??_cf_rcv& (0+255),w,b
  5456  001668  0100               	movlb	0	; () banked
  5457  00166A  6FCF               	movwf	(??_cf_rcv+1)& (0+255),b
  5458  00166C  0E65               	movlw	101
  5459  00166E  0100               	movlb	0	; () banked
  5460  001670  0100               	movlb	0	; () banked
  5461  001672  6FBF               	movwf	eeprom_write_array@NbData& (0+255),b
  5462  001674  0100               	movlb	0	; () banked
  5463  001676  51CF               	movf	(??_cf_rcv+1)& (0+255),w,b
  5464  001678  ECF1  F018         	call	_eeprom_write_array	;wreg free
  5465                           
  5466                           ;config.c: 159: for (i = 0; i < (32 * 3 + 5); i ++)
  5467  00167C  0100               	movlb	0	; () banked
  5468  00167E  6FCE               	movwf	??_cf_rcv& (0+255),b
  5469  001680  0E00               	movlw	0
  5470  001682  0100               	movlb	0	; () banked
  5471  001684  0100               	movlb	0	; () banked
  5472  001686  6FD1               	movwf	cf_rcv@i& (0+255),b
  5473  001688  0100               	movlb	0	; () banked
  5474  00168A  51CE               	movf	??_cf_rcv& (0+255),w,b
  5475  00168C  D011               	goto	L37
  5476  00168E                     l5993:
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;config.c: 160: {
  5480                           ;config.c: 161: Cf.Data[i] = 0;
  5481  00168E  0100               	movlb	0	; () banked
  5482  001690  0100               	movlb	0	; () banked
  5483  001692  51D1               	movf	cf_rcv@i& (0+255),w,b
  5484  001694  0D01               	mullw	1
  5485  001696  0101               	movlb	1	; () banked
  5486  001698  0E00               	movlw	low _Cf	;volatile
  5487  00169A  24F3               	addwf	prodl,w,c
  5488  00169C  6ED9               	movwf	fsr2l,c
  5489  00169E  0101               	movlb	1	; () banked
  5490  0016A0  0E01               	movlw	high _Cf	;volatile
  5491  0016A2  20F4               	addwfc	prodh,w,c
  5492  0016A4  6EDA               	movwf	fsr2h,c
  5493  0016A6  0E00               	movlw	0
  5494  0016A8  6EDF               	movwf	indf2,c
  5495                           
  5496                           ; BSR set to: 1
  5497  0016AA  0100               	movlb	0	; () banked
  5498  0016AC  0100               	movlb	0	; () banked
  5499  0016AE  2BD1               	incf	cf_rcv@i& (0+255),f,b
  5500  0016B0                     L37:
  5501                           
  5502                           ; BSR set to: 0
  5503  0016B0  0E64               	movlw	100
  5504  0016B2  0100               	movlb	0	; () banked
  5505  0016B4  0100               	movlb	0	; () banked
  5506  0016B6  65D1               	cpfsgt	cf_rcv@i& (0+255),b
  5507  0016B8  D7EA               	goto	l5993
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;config.c: 162: }
  5511                           ;config.c: 164: eeprom_read_array(&Cf.Data[0], 0, (32 * 3 + 5));
  5512                           
  5513                           ; BSR set to: 0
  5514  0016BA  0101               	movlb	1	; () banked
  5515  0016BC  0E01               	movlw	high _Cf	;volatile
  5516  0016BE  0100               	movlb	0	; () banked
  5517  0016C0  0100               	movlb	0	; () banked
  5518  0016C2  6FBC               	movwf	(eeprom_read_array@pData+1)& (0+255),b
  5519  0016C4  0101               	movlb	1	; () banked
  5520  0016C6  0E00               	movlw	low _Cf	;volatile
  5521  0016C8  0100               	movlb	0	; () banked
  5522  0016CA  0100               	movlb	0	; () banked
  5523  0016CC  6FBB               	movwf	eeprom_read_array@pData& (0+255),b
  5524  0016CE  0100               	movlb	0	; () banked
  5525  0016D0  6FCE               	movwf	??_cf_rcv& (0+255),b
  5526  0016D2  0E00               	movlw	0
  5527  0016D4  0100               	movlb	0	; () banked
  5528  0016D6  0100               	movlb	0	; () banked
  5529  0016D8  6FBD               	movwf	eeprom_read_array@Address& (0+255),b
  5530  0016DA  0100               	movlb	0	; () banked
  5531  0016DC  51CE               	movf	??_cf_rcv& (0+255),w,b
  5532  0016DE  0100               	movlb	0	; () banked
  5533  0016E0  6FCF               	movwf	(??_cf_rcv+1)& (0+255),b
  5534  0016E2  0E65               	movlw	101
  5535  0016E4  0100               	movlb	0	; () banked
  5536  0016E6  0100               	movlb	0	; () banked
  5537  0016E8  6FBE               	movwf	eeprom_read_array@NbData& (0+255),b
  5538  0016EA  0100               	movlb	0	; () banked
  5539  0016EC  51CF               	movf	(??_cf_rcv+1)& (0+255),w,b
  5540  0016EE  ECC8  F018         	call	_eeprom_read_array	;wreg free
  5541                           
  5542                           ;config.c: 166: temp = cf_check();
  5543  0016F2  ECFD  F019         	call	_cf_check	;wreg free
  5544  0016F6  0100               	movlb	0	; () banked
  5545  0016F8  0100               	movlb	0	; () banked
  5546  0016FA  6FD0               	movwf	cf_rcv@temp& (0+255),b
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;config.c: 168: if (temp == 0)
  5550  0016FC  0100               	movlb	0	; () banked
  5551  0016FE  0100               	movlb	0	; () banked
  5552  001700  67D0               	tstfsz	cf_rcv@temp& (0+255),b
  5553  001702  D00C               	goto	l6007
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;config.c: 169: {
  5557                           ;config.c: 170: ecran_print_one_char(3, 'E');
  5558  001704  0100               	movlb	0	; () banked
  5559  001706  6FCE               	movwf	??_cf_rcv& (0+255),b
  5560  001708  0E45               	movlw	69
  5561  00170A  0100               	movlb	0	; () banked
  5562  00170C  0100               	movlb	0	; () banked
  5563  00170E  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  5564  001710  0100               	movlb	0	; () banked
  5565  001712  51CE               	movf	??_cf_rcv& (0+255),w,b
  5566  001714  0E03               	movlw	3
  5567  001716  ECD9  F019         	call	_ecran_print_one_char
  5568                           
  5569                           ;config.c: 171: }
  5570  00171A  D00B               	goto	l6009
  5571  00171C                     l6007:
  5572                           
  5573                           ;config.c: 172: else
  5574                           ;config.c: 173: {
  5575                           ;config.c: 174: ecran_print_one_char(3, 'P');
  5576  00171C  0100               	movlb	0	; () banked
  5577  00171E  6FCE               	movwf	??_cf_rcv& (0+255),b
  5578  001720  0E50               	movlw	80
  5579  001722  0100               	movlb	0	; () banked
  5580  001724  0100               	movlb	0	; () banked
  5581  001726  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  5582  001728  0100               	movlb	0	; () banked
  5583  00172A  51CE               	movf	??_cf_rcv& (0+255),w,b
  5584  00172C  0E03               	movlw	3
  5585  00172E  ECD9  F019         	call	_ecran_print_one_char
  5586  001732                     l6009:
  5587                           
  5588                           ;config.c: 175: }
  5589                           ;config.c: 176: }
  5590                           ;config.c: 178: Cf.Index = 0;
  5591  001732  0E00               	movlw	0
  5592  001734  0101               	movlb	1	; () banked
  5593  001736  0101               	movlb	1	; () banked
  5594  001738  6F65               	movwf	(_Cf+101)& (0+255),b	;volatile
  5595                           
  5596                           ; BSR set to: 1
  5597                           ;config.c: 180: RCIE = 1;
  5598  00173A  8A9D               	bsf	3997,5,c	;volatile
  5599  00173C                     l461:
  5600  00173C  0012               	return	
  5601  00173E  FFFF               	dw	65535	; errata NOP
  5602  001740                     __end_of_cf_rcv:
  5603                           	opt stack 0
  5604                           tblptru	equ	0xFF8
  5605                           tblptrh	equ	0xFF7
  5606                           tblptrl	equ	0xFF6
  5607                           tablat	equ	0xFF5
  5608                           prodh	equ	0xFF4
  5609                           prodl	equ	0xFF3
  5610                           intcon	equ	0xFF2
  5611                           intcon2	equ	0xFF1
  5612                           postinc0	equ	0xFEE
  5613                           wreg	equ	0xFE8
  5614                           postdec1	equ	0xFE5
  5615                           fsr1l	equ	0xFE1
  5616                           indf2	equ	0xFDF
  5617                           postinc2	equ	0xFDE
  5618                           postdec2	equ	0xFDD
  5619                           fsr2h	equ	0xFDA
  5620                           fsr2l	equ	0xFD9
  5621                           status	equ	0xFD8
  5622                           
  5623 ;; *************** function _eeprom_write_array *****************
  5624 ;; Defined at:
  5625 ;;		line 52 in file "eeprom.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  pData           2    2[BANK0 ] PTR unsigned char 
  5628 ;;		 -> Cf(107), 
  5629 ;;  Address         1    4[BANK0 ] unsigned char 
  5630 ;;  NbData          1    5[BANK0 ] unsigned char 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  i               1    7[BANK0 ] unsigned char 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;		None               void
  5635 ;; Registers used:
  5636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5642 ;;      Params:         0       4       0       0       0       0       0
  5643 ;;      Locals:         0       1       0       0       0       0       0
  5644 ;;      Temps:          0       1       0       0       0       0       0
  5645 ;;      Totals:         0       6       0       0       0       0       0
  5646 ;;Total ram usage:        6 bytes
  5647 ;; Hardware stack levels used:    1
  5648 ;; Hardware stack levels required when called:    4
  5649 ;; This function calls:
  5650 ;;		_eeprom_write
  5651 ;; This function is called by:
  5652 ;;		_cf_rcv
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text20
  5657  0031E2                     __ptext20:
  5658                           	opt stack 0
  5659  0031E2                     _eeprom_write_array:
  5660                           	opt stack 24
  5661                           
  5662                           ;incstack = 0
  5663  0031E2  FFFF               	dw	65535
  5664                           
  5665                           ;eeprom.c: 54: unsigned char i;
  5666                           ;eeprom.c: 56: for (i = 0; i < NbData; i ++)
  5667  0031E4  0100               	movlb	0	; () banked
  5668  0031E6  6FC0               	movwf	??_eeprom_write_array& (0+255),b
  5669  0031E8  0E00               	movlw	0
  5670  0031EA  0100               	movlb	0	; () banked
  5671  0031EC  0100               	movlb	0	; () banked
  5672  0031EE  6FC1               	movwf	eeprom_write_array@i& (0+255),b
  5673  0031F0  0100               	movlb	0	; () banked
  5674  0031F2  51C0               	movf	??_eeprom_write_array& (0+255),w,b
  5675  0031F4  D013               	goto	l5731
  5676  0031F6                     l5723:
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;eeprom.c: 57: {
  5680                           ;eeprom.c: 58: eeprom_write(*pData, Address);
  5681  0031F6  C0BE  F0BA         	movff	eeprom_write_array@Address,eeprom_write@Address
  5682  0031FA  C0BC  FFD9         	movff	eeprom_write_array@pData,fsr2l
  5683  0031FE  C0BD  FFDA         	movff	eeprom_write_array@pData+1,fsr2h
  5684  003202  50DF               	movf	indf2,w,c
  5685  003204  EC86  F01A         	call	_eeprom_write
  5686                           
  5687                           ;eeprom.c: 59: pData ++;
  5688  003208  0100               	movlb	0	; () banked
  5689  00320A  0100               	movlb	0	; () banked
  5690  00320C  4BBC               	infsnz	eeprom_write_array@pData& (0+255),f,b
  5691  00320E  2BBD               	incf	(eeprom_write_array@pData+1)& (0+255),f,b
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;eeprom.c: 60: Address ++;
  5695  003210  0100               	movlb	0	; () banked
  5696  003212  0100               	movlb	0	; () banked
  5697  003214  2BBE               	incf	eeprom_write_array@Address& (0+255),f,b
  5698                           
  5699                           ; BSR set to: 0
  5700  003216  0100               	movlb	0	; () banked
  5701  003218  0100               	movlb	0	; () banked
  5702  00321A  2BC1               	incf	eeprom_write_array@i& (0+255),f,b
  5703  00321C                     l5731:
  5704                           
  5705                           ; BSR set to: 0
  5706  00321C  0100               	movlb	0	; () banked
  5707  00321E  0100               	movlb	0	; () banked
  5708  003220  51BF               	movf	eeprom_write_array@NbData& (0+255),w,b
  5709  003222  0100               	movlb	0	; () banked
  5710  003224  0100               	movlb	0	; () banked
  5711  003226  5DC1               	subwf	eeprom_write_array@i& (0+255),w,b
  5712  003228  B0D8               	btfsc	status,0,c
  5713                           
  5714                           ; BSR set to: 0
  5715                           
  5716                           ; BSR set to: 0
  5717  00322A  0012               	return	
  5718  00322C  FFFF               	dw	65535	; assembler added errata NOP
  5719  00322E  D7E3               	goto	l5723
  5720  003230  FFFF               	dw	65535	; errata NOP
  5721  003232                     __end_of_eeprom_write_array:
  5722                           	opt stack 0
  5723                           tblptru	equ	0xFF8
  5724                           tblptrh	equ	0xFF7
  5725                           tblptrl	equ	0xFF6
  5726                           tablat	equ	0xFF5
  5727                           prodh	equ	0xFF4
  5728                           prodl	equ	0xFF3
  5729                           intcon	equ	0xFF2
  5730                           intcon2	equ	0xFF1
  5731                           postinc0	equ	0xFEE
  5732                           wreg	equ	0xFE8
  5733                           postdec1	equ	0xFE5
  5734                           fsr1l	equ	0xFE1
  5735                           indf2	equ	0xFDF
  5736                           postinc2	equ	0xFDE
  5737                           postdec2	equ	0xFDD
  5738                           fsr2h	equ	0xFDA
  5739                           fsr2l	equ	0xFD9
  5740                           status	equ	0xFD8
  5741                           
  5742 ;; *************** function _eeprom_write *****************
  5743 ;; Defined at:
  5744 ;;		line 18 in file "eeprom.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;  Data            1    wreg     unsigned char 
  5747 ;;  Address         1    0[BANK0 ] unsigned char 
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;  Data            1    1[BANK0 ] unsigned char 
  5750 ;; Return value:  Size  Location     Type
  5751 ;;		None               void
  5752 ;; Registers used:
  5753 ;;		wreg, status,2
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5759 ;;      Params:         0       1       0       0       0       0       0
  5760 ;;      Locals:         0       1       0       0       0       0       0
  5761 ;;      Temps:          0       0       0       0       0       0       0
  5762 ;;      Totals:         0       2       0       0       0       0       0
  5763 ;;Total ram usage:        2 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:    3
  5766 ;; This function calls:
  5767 ;;		Nothing
  5768 ;; This function is called by:
  5769 ;;		_eeprom_write_array
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           	psect	text21
  5774  00350C                     __ptext21:
  5775                           	opt stack 0
  5776  00350C                     _eeprom_write:
  5777                           	opt stack 24
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;incstack = 0
  5781  00350C  FFFF               	dw	65535
  5782                           
  5783                           ;eeprom_write@Data stored from wreg
  5784  00350E  CFE8 F0BB          	movff	wreg,eeprom_write@Data
  5785                           
  5786                           ;eeprom.c: 20: EEADR = Address;
  5787  003512  C0BA  FFA9         	movff	eeprom_write@Address,4009	;volatile
  5788                           
  5789                           ;eeprom.c: 21: EEDATA = Data;
  5790  003516  C0BB  FFA8         	movff	eeprom_write@Data,4008	;volatile
  5791                           
  5792                           ;eeprom.c: 23: EEPGD = 0;
  5793  00351A  9EA6               	bcf	4006,7,c	;volatile
  5794                           
  5795                           ;eeprom.c: 24: CFGS = 0;
  5796  00351C  9CA6               	bcf	4006,6,c	;volatile
  5797                           
  5798                           ;eeprom.c: 25: WREN = 1;
  5799  00351E  84A6               	bsf	4006,2,c	;volatile
  5800                           
  5801                           ;eeprom.c: 27: (INTCONbits.GIE = 0);
  5802  003520  9EF2               	bcf	intcon,7,c	;volatile
  5803                           
  5804                           ;eeprom.c: 29: EECON2 = 0x55;
  5805  003522  0E55               	movlw	85
  5806  003524  6EA7               	movwf	4007,c	;volatile
  5807                           
  5808                           ;eeprom.c: 30: EECON2 = 0xAA;
  5809  003526  0EAA               	movlw	170
  5810  003528  6EA7               	movwf	4007,c	;volatile
  5811                           
  5812                           ;eeprom.c: 32: WR = 1;
  5813  00352A  82A6               	bsf	4006,1,c	;volatile
  5814  00352C                     l340:
  5815  00352C  B2A6               	btfsc	4006,1,c	;volatile
  5816  00352E  D7FE               	goto	l340
  5817                           
  5818                           ;eeprom.c: 35: (INTCONbits.GIE = 1);
  5819  003530  8EF2               	bsf	intcon,7,c	;volatile
  5820                           
  5821                           ;eeprom.c: 37: WREN = 0;
  5822  003532  94A6               	bcf	4006,2,c	;volatile
  5823  003534  0012               	return	
  5824  003536  FFFF               	dw	65535	; errata NOP
  5825  003538                     __end_of_eeprom_write:
  5826                           	opt stack 0
  5827                           tblptru	equ	0xFF8
  5828                           tblptrh	equ	0xFF7
  5829                           tblptrl	equ	0xFF6
  5830                           tablat	equ	0xFF5
  5831                           prodh	equ	0xFF4
  5832                           prodl	equ	0xFF3
  5833                           intcon	equ	0xFF2
  5834                           intcon2	equ	0xFF1
  5835                           postinc0	equ	0xFEE
  5836                           wreg	equ	0xFE8
  5837                           postdec1	equ	0xFE5
  5838                           fsr1l	equ	0xFE1
  5839                           indf2	equ	0xFDF
  5840                           postinc2	equ	0xFDE
  5841                           postdec2	equ	0xFDD
  5842                           fsr2h	equ	0xFDA
  5843                           fsr2l	equ	0xFD9
  5844                           status	equ	0xFD8
  5845                           
  5846 ;; *************** function _check_bpon *****************
  5847 ;; Defined at:
  5848 ;;		line 52 in file "test.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;		None
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;		None
  5853 ;; Return value:  Size  Location     Type
  5854 ;;		None               void
  5855 ;; Registers used:
  5856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5862 ;;      Params:         0       0       0       0       0       0       0
  5863 ;;      Locals:         0       0       0       0       0       0       0
  5864 ;;      Temps:          0       2       0       0       0       0       0
  5865 ;;      Totals:         0       2       0       0       0       0       0
  5866 ;;Total ram usage:        2 bytes
  5867 ;; Hardware stack levels used:    1
  5868 ;; Hardware stack levels required when called:    5
  5869 ;; This function calls:
  5870 ;;		_ecran_print_one_char
  5871 ;; This function is called by:
  5872 ;;		_main
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876                           	psect	text22
  5877  00308C                     __ptext22:
  5878                           	opt stack 0
  5879  00308C                     _check_bpon:
  5880                           	opt stack 25
  5881                           
  5882                           ;incstack = 0
  5883  00308C  FFFF               	dw	65535
  5884                           
  5885                           ;test.c: 54: Test.Time = Cptms;
  5886  00308E  C04F  F030         	movff	_Cptms,_Test+2	;volatile
  5887  003092  C050  F031         	movff	_Cptms+1,_Test+3	;volatile
  5888                           
  5889                           ;test.c: 56: if (PORTEbits.RE0 == 0)
  5890  003096  B084               	btfsc	3972,0,c	;volatile
  5891  003098  D025               	goto	l553
  5892                           
  5893                           ;test.c: 57: {
  5894                           ;test.c: 58: ecran_print_one_char(3, 'A');
  5895  00309A  0100               	movlb	0	; () banked
  5896  00309C  6FBD               	movwf	??_check_bpon& (0+255),b
  5897  00309E  0E41               	movlw	65
  5898  0030A0  0100               	movlb	0	; () banked
  5899  0030A2  0100               	movlb	0	; () banked
  5900  0030A4  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  5901  0030A6  0100               	movlb	0	; () banked
  5902  0030A8  51BD               	movf	??_check_bpon& (0+255),w,b
  5903  0030AA  0E03               	movlw	3
  5904  0030AC  ECD9  F019         	call	_ecran_print_one_char
  5905  0030B0                     l548:
  5906  0030B0  B084               	btfsc	3972,0,c	;volatile
  5907  0030B2  D018               	goto	l553
  5908  0030B4  EE20  F030         	lfsr	2,_Test+2
  5909  0030B8  CFDE F0BD          	movff	postinc2,??_check_bpon
  5910  0030BC  CFDD F0BE          	movff	postdec2,??_check_bpon+1
  5911  0030C0  0100               	movlb	0	; () banked
  5912  0030C2  1FBD               	comf	??_check_bpon& (0+255),f,b
  5913  0030C4  1FBE               	comf	(??_check_bpon+1)& (0+255),f,b
  5914  0030C6  4BBD               	infsnz	??_check_bpon& (0+255),f,b
  5915  0030C8  2BBE               	incf	(??_check_bpon+1)& (0+255),f,b
  5916  0030CA  504F               	movf	_Cptms,w,c	;volatile
  5917  0030CC  0100               	movlb	0	; () banked
  5918  0030CE  27BD               	addwf	??_check_bpon& (0+255),f,b
  5919  0030D0  5050               	movf	_Cptms+1,w,c	;volatile
  5920  0030D2  0100               	movlb	0	; () banked
  5921  0030D4  23BE               	addwfc	(??_check_bpon+1)& (0+255),f,b
  5922  0030D6  0EE8               	movlw	232
  5923  0030D8  0100               	movlb	0	; () banked
  5924  0030DA  5DBD               	subwf	??_check_bpon& (0+255),w,b
  5925  0030DC  0E03               	movlw	3
  5926  0030DE  59BE               	subwfb	(??_check_bpon+1)& (0+255),w,b
  5927  0030E0  A0D8               	btfss	status,0,c
  5928  0030E2  D7E6               	goto	l548
  5929  0030E4                     l553:
  5930  0030E4  0012               	return	
  5931  0030E6  FFFF               	dw	65535	; errata NOP
  5932  0030E8                     __end_of_check_bpon:
  5933                           	opt stack 0
  5934                           tblptru	equ	0xFF8
  5935                           tblptrh	equ	0xFF7
  5936                           tblptrl	equ	0xFF6
  5937                           tablat	equ	0xFF5
  5938                           prodh	equ	0xFF4
  5939                           prodl	equ	0xFF3
  5940                           intcon	equ	0xFF2
  5941                           intcon2	equ	0xFF1
  5942                           postinc0	equ	0xFEE
  5943                           wreg	equ	0xFE8
  5944                           postdec1	equ	0xFE5
  5945                           fsr1l	equ	0xFE1
  5946                           indf2	equ	0xFDF
  5947                           postinc2	equ	0xFDE
  5948                           postdec2	equ	0xFDD
  5949                           fsr2h	equ	0xFDA
  5950                           fsr2l	equ	0xFD9
  5951                           status	equ	0xFD8
  5952                           
  5953 ;; *************** function _cf_check_and_display *****************
  5954 ;; Defined at:
  5955 ;;		line 92 in file "config.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;		None
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;  temp            2   22[BANK0 ] unsigned short 
  5960 ;;  configOk        1   24[BANK0 ] unsigned char 
  5961 ;; Return value:  Size  Location     Type
  5962 ;;		None               void
  5963 ;; Registers used:
  5964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5970 ;;      Params:         0       0       0       0       0       0       0
  5971 ;;      Locals:         0       3       0       0       0       0       0
  5972 ;;      Temps:          0       2       0       0       0       0       0
  5973 ;;      Totals:         0       5       0       0       0       0       0
  5974 ;;Total ram usage:        5 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; Hardware stack levels required when called:    6
  5977 ;; This function calls:
  5978 ;;		_HexToAscii
  5979 ;;		_cf_check
  5980 ;;		_ecran_print_one_char
  5981 ;;		_ecran_refresh
  5982 ;;		_eeprom_read_array
  5983 ;; This function is called by:
  5984 ;;		_main
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text23
  5989  001A7A                     __ptext23:
  5990                           	opt stack 0
  5991  001A7A                     _cf_check_and_display:
  5992                           	opt stack 24
  5993                           
  5994                           ;incstack = 0
  5995  001A7A  FFFF               	dw	65535
  5996                           
  5997                           ;config.c: 94: unsigned char configOk = 0;
  5998  001A7C  0100               	movlb	0	; () banked
  5999  001A7E  6FCE               	movwf	??_cf_check_and_display& (0+255),b
  6000  001A80  0E00               	movlw	0
  6001  001A82  0100               	movlb	0	; () banked
  6002  001A84  0100               	movlb	0	; () banked
  6003  001A86  6FD2               	movwf	cf_check_and_display@configOk& (0+255),b
  6004  001A88  0100               	movlb	0	; () banked
  6005  001A8A  51CE               	movf	??_cf_check_and_display& (0+255),w,b
  6006                           
  6007                           ; BSR set to: 0
  6008                           ;config.c: 95: unsigned short temp;
  6009                           ;config.c: 97: eeprom_read_array(&Cf.Data[0], 0, (32 * 3 + 5));
  6010  001A8C  0101               	movlb	1	; () banked
  6011  001A8E  0E01               	movlw	high _Cf	;volatile
  6012  001A90  0100               	movlb	0	; () banked
  6013  001A92  0100               	movlb	0	; () banked
  6014  001A94  6FBC               	movwf	(eeprom_read_array@pData+1)& (0+255),b
  6015  001A96  0101               	movlb	1	; () banked
  6016  001A98  0E00               	movlw	low _Cf	;volatile
  6017  001A9A  0100               	movlb	0	; () banked
  6018  001A9C  0100               	movlb	0	; () banked
  6019  001A9E  6FBB               	movwf	eeprom_read_array@pData& (0+255),b
  6020  001AA0  0100               	movlb	0	; () banked
  6021  001AA2  6FCE               	movwf	??_cf_check_and_display& (0+255),b
  6022  001AA4  0E00               	movlw	0
  6023  001AA6  0100               	movlb	0	; () banked
  6024  001AA8  0100               	movlb	0	; () banked
  6025  001AAA  6FBD               	movwf	eeprom_read_array@Address& (0+255),b
  6026  001AAC  0100               	movlb	0	; () banked
  6027  001AAE  51CE               	movf	??_cf_check_and_display& (0+255),w,b
  6028  001AB0  0100               	movlb	0	; () banked
  6029  001AB2  6FCF               	movwf	(??_cf_check_and_display+1)& (0+255),b
  6030  001AB4  0E65               	movlw	101
  6031  001AB6  0100               	movlb	0	; () banked
  6032  001AB8  0100               	movlb	0	; () banked
  6033  001ABA  6FBE               	movwf	eeprom_read_array@NbData& (0+255),b
  6034  001ABC  0100               	movlb	0	; () banked
  6035  001ABE  51CF               	movf	(??_cf_check_and_display+1)& (0+255),w,b
  6036  001AC0  ECC8  F018         	call	_eeprom_read_array	;wreg free
  6037                           
  6038                           ;config.c: 99: configOk = cf_check();
  6039  001AC4  ECFD  F019         	call	_cf_check	;wreg free
  6040  001AC8  0100               	movlb	0	; () banked
  6041  001ACA  0100               	movlb	0	; () banked
  6042  001ACC  6FD2               	movwf	cf_check_and_display@configOk& (0+255),b
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;config.c: 101: if (configOk == 1)
  6046  001ACE  0100               	movlb	0	; () banked
  6047  001AD0  0100               	movlb	0	; () banked
  6048  001AD2  05D2               	decf	cf_check_and_display@configOk& (0+255),w,b
  6049  001AD4  A4D8               	btfss	status,2,c
  6050  001AD6  D080               	goto	l6267
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;config.c: 102: {
  6054                           ;config.c: 104: if (Cf.IsLong == 1)
  6055  001AD8  0101               	movlb	1	; () banked
  6056  001ADA  A16A               	btfss	(_Cf+106)& (0+255),0,b	;volatile
  6057  001ADC  D04C               	goto	l6263
  6058                           
  6059                           ; BSR set to: 1
  6060                           ;config.c: 105: {
  6061                           ;config.c: 106: Ecran.Digit[0] = ' ';
  6062  001ADE  0100               	movlb	0	; () banked
  6063  001AE0  6FCE               	movwf	??_cf_check_and_display& (0+255),b
  6064  001AE2  0E20               	movlw	32
  6065  001AE4  0100               	movlb	0	; () banked
  6066  001AE6  0100               	movlb	0	; () banked
  6067  001AE8  6FAA               	movwf	_Ecran& (0+255),b
  6068  001AEA  0100               	movlb	0	; () banked
  6069  001AEC  51CE               	movf	??_cf_check_and_display& (0+255),w,b
  6070                           
  6071                           ;config.c: 107: Ecran.Digit[1] = ' ';
  6072  001AEE  0100               	movlb	0	; () banked
  6073  001AF0  6FCE               	movwf	??_cf_check_and_display& (0+255),b
  6074  001AF2  0E20               	movlw	32
  6075  001AF4  0100               	movlb	0	; () banked
  6076  001AF6  0100               	movlb	0	; () banked
  6077  001AF8  6FAB               	movwf	(_Ecran+1)& (0+255),b
  6078  001AFA  0100               	movlb	0	; () banked
  6079  001AFC  51CE               	movf	??_cf_check_and_display& (0+255),w,b
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;config.c: 108: Ecran.Digit[2] = HexToAscii(((unsigned char) ((unsigned char) ((Cf.Data[
      +                          98]) & 0xF0) >> 4)));
  6083  001AFE  0101               	movlb	1	; () banked
  6084  001B00  0101               	movlb	1	; () banked
  6085  001B02  3962               	swapf	(_Cf+98)& (0+255),w,b	;volatile
  6086  001B04  0B0F               	andlw	15
  6087  001B06  0B0F               	andlw	15
  6088  001B08  EC3E  F01A         	call	_HexToAscii
  6089  001B0C  0100               	movlb	0	; () banked
  6090  001B0E  0100               	movlb	0	; () banked
  6091  001B10  6FAC               	movwf	(_Ecran+2)& (0+255),b
  6092                           
  6093                           ; BSR set to: 0
  6094                           ;config.c: 109: Ecran.Digit[3] = HexToAscii(((unsigned char) ((Cf.Data[98]) & 0x0F)));
  6095  001B12  0101               	movlb	1	; () banked
  6096  001B14  0101               	movlb	1	; () banked
  6097  001B16  5162               	movf	(_Cf+98)& (0+255),w,b	;volatile
  6098  001B18  0B0F               	andlw	15
  6099  001B1A  EC3E  F01A         	call	_HexToAscii
  6100  001B1E  0100               	movlb	0	; () banked
  6101  001B20  0100               	movlb	0	; () banked
  6102  001B22  6FAD               	movwf	(_Ecran+3)& (0+255),b
  6103                           
  6104                           ; BSR set to: 0
  6105                           ;config.c: 111: Ecran.Digits = Ecran.Digit;
  6106  001B24  0100               	movlb	0	; () banked
  6107  001B26  0E00               	movlw	high _Ecran
  6108  001B28  0100               	movlb	0	; () banked
  6109  001B2A  0100               	movlb	0	; () banked
  6110  001B2C  6FAF               	movwf	(_Ecran+5)& (0+255),b
  6111  001B2E  0100               	movlb	0	; () banked
  6112  001B30  0EAA               	movlw	low _Ecran
  6113  001B32  0100               	movlb	0	; () banked
  6114  001B34  0100               	movlb	0	; () banked
  6115  001B36  6FAE               	movwf	(_Ecran+4)& (0+255),b
  6116                           
  6117                           ; BSR set to: 0
  6118                           ;config.c: 113: temp = Cptms;
  6119  001B38  C04F  F0D0         	movff	_Cptms,cf_check_and_display@temp	;volatile
  6120  001B3C  C050  F0D1         	movff	_Cptms+1,cf_check_and_display@temp+1	;volatile
  6121                           
  6122                           ;config.c: 115: while((((unsigned short) (Cptms - temp) < 1000) ? 1 : 0)) {ecran_refresh
      +                          ();}
  6123  001B40  D002               	goto	l6261
  6124  001B42                     l6259:
  6125                           
  6126                           ; BSR set to: 0
  6127  001B42  EC84  F015         	call	_ecran_refresh	;wreg free
  6128  001B46                     l6261:
  6129  001B46  0100               	movlb	0	; () banked
  6130  001B48  C0D0  F0CE         	movff	cf_check_and_display@temp,??_cf_check_and_display
  6131  001B4C  0100               	movlb	0	; () banked
  6132  001B4E  C0D1  F0CF         	movff	cf_check_and_display@temp+1,??_cf_check_and_display+1
  6133  001B52  0100               	movlb	0	; () banked
  6134  001B54  1FCE               	comf	??_cf_check_and_display& (0+255),f,b
  6135  001B56  1FCF               	comf	(??_cf_check_and_display+1)& (0+255),f,b
  6136  001B58  4BCE               	infsnz	??_cf_check_and_display& (0+255),f,b
  6137  001B5A  2BCF               	incf	(??_cf_check_and_display+1)& (0+255),f,b
  6138  001B5C  504F               	movf	_Cptms,w,c	;volatile
  6139  001B5E  0100               	movlb	0	; () banked
  6140  001B60  27CE               	addwf	??_cf_check_and_display& (0+255),f,b
  6141  001B62  5050               	movf	_Cptms+1,w,c	;volatile
  6142  001B64  0100               	movlb	0	; () banked
  6143  001B66  23CF               	addwfc	(??_cf_check_and_display+1)& (0+255),f,b
  6144  001B68  0EE8               	movlw	232
  6145  001B6A  0100               	movlb	0	; () banked
  6146  001B6C  5DCE               	subwf	??_cf_check_and_display& (0+255),w,b
  6147  001B6E  0E03               	movlw	3
  6148  001B70  59CF               	subwfb	(??_cf_check_and_display+1)& (0+255),w,b
  6149  001B72  A0D8               	btfss	status,0,c
  6150  001B74  D7E6               	goto	l6259
  6151  001B76                     l6263:
  6152                           
  6153                           ;config.c: 116: }
  6154                           ;config.c: 118: Ecran.Digit[0] = HexToAscii(((unsigned char) ((unsigned char) ((Cf.Data[
      +                          99]) & 0xF0) >> 4)));
  6155  001B76  0101               	movlb	1	; () banked
  6156  001B78  0101               	movlb	1	; () banked
  6157  001B7A  3963               	swapf	(_Cf+99)& (0+255),w,b	;volatile
  6158  001B7C  0B0F               	andlw	15
  6159  001B7E  0B0F               	andlw	15
  6160  001B80  EC3E  F01A         	call	_HexToAscii
  6161  001B84  0100               	movlb	0	; () banked
  6162  001B86  0100               	movlb	0	; () banked
  6163  001B88  6FAA               	movwf	_Ecran& (0+255),b
  6164                           
  6165                           ;config.c: 119: Ecran.Digit[1] = HexToAscii(((unsigned char) ((Cf.Data[99]) & 0x0F)));
  6166  001B8A  0101               	movlb	1	; () banked
  6167  001B8C  0101               	movlb	1	; () banked
  6168  001B8E  5163               	movf	(_Cf+99)& (0+255),w,b	;volatile
  6169  001B90  0B0F               	andlw	15
  6170  001B92  EC3E  F01A         	call	_HexToAscii
  6171  001B96  0100               	movlb	0	; () banked
  6172  001B98  0100               	movlb	0	; () banked
  6173  001B9A  6FAB               	movwf	(_Ecran+1)& (0+255),b
  6174                           
  6175                           ;config.c: 120: Ecran.Digit[2] = HexToAscii(((unsigned char) ((unsigned char) ((Cf.Data[
      +                          100]) & 0xF0) >> 4)));
  6176  001B9C  0101               	movlb	1	; () banked
  6177  001B9E  0101               	movlb	1	; () banked
  6178  001BA0  3964               	swapf	(_Cf+100)& (0+255),w,b	;volatile
  6179  001BA2  0B0F               	andlw	15
  6180  001BA4  0B0F               	andlw	15
  6181  001BA6  EC3E  F01A         	call	_HexToAscii
  6182  001BAA  0100               	movlb	0	; () banked
  6183  001BAC  0100               	movlb	0	; () banked
  6184  001BAE  6FAC               	movwf	(_Ecran+2)& (0+255),b
  6185                           
  6186                           ;config.c: 121: Ecran.Digit[3] = HexToAscii(((unsigned char) ((Cf.Data[100]) & 0x0F)));
  6187  001BB0  0101               	movlb	1	; () banked
  6188  001BB2  0101               	movlb	1	; () banked
  6189  001BB4  5164               	movf	(_Cf+100)& (0+255),w,b	;volatile
  6190  001BB6  0B0F               	andlw	15
  6191  001BB8  EC3E  F01A         	call	_HexToAscii
  6192  001BBC  0100               	movlb	0	; () banked
  6193  001BBE  0100               	movlb	0	; () banked
  6194  001BC0  6FAD               	movwf	(_Ecran+3)& (0+255),b
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;config.c: 123: Ecran.Digits = Ecran.Digit;
  6198  001BC2  0100               	movlb	0	; () banked
  6199  001BC4  0E00               	movlw	high _Ecran
  6200  001BC6  0100               	movlb	0	; () banked
  6201  001BC8  0100               	movlb	0	; () banked
  6202  001BCA  6FAF               	movwf	(_Ecran+5)& (0+255),b
  6203  001BCC  0100               	movlb	0	; () banked
  6204  001BCE  0EAA               	movlw	low _Ecran
  6205  001BD0  0100               	movlb	0	; () banked
  6206  001BD2  0100               	movlb	0	; () banked
  6207  001BD4  6FAE               	movwf	(_Ecran+4)& (0+255),b
  6208                           
  6209                           ;config.c: 124: }
  6210  001BD6  D00C               	goto	l448
  6211  001BD8                     l6267:
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;config.c: 125: else
  6215                           ;config.c: 126: {
  6216                           ;config.c: 127: ecran_print_one_char(3, 'E');
  6217  001BD8  0100               	movlb	0	; () banked
  6218  001BDA  6FCE               	movwf	??_cf_check_and_display& (0+255),b
  6219  001BDC  0E45               	movlw	69
  6220  001BDE  0100               	movlb	0	; () banked
  6221  001BE0  0100               	movlb	0	; () banked
  6222  001BE2  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  6223  001BE4  0100               	movlb	0	; () banked
  6224  001BE6  51CE               	movf	??_cf_check_and_display& (0+255),w,b
  6225  001BE8  0E03               	movlw	3
  6226  001BEA  ECD9  F019         	call	_ecran_print_one_char
  6227  001BEE                     l445:
  6228  001BEE  D7FF               	goto	l445
  6229  001BF0                     l448:
  6230  001BF0  0012               	return	
  6231  001BF2  FFFF               	dw	65535	; errata NOP
  6232  001BF4                     __end_of_cf_check_and_display:
  6233                           	opt stack 0
  6234                           tblptru	equ	0xFF8
  6235                           tblptrh	equ	0xFF7
  6236                           tblptrl	equ	0xFF6
  6237                           tablat	equ	0xFF5
  6238                           prodh	equ	0xFF4
  6239                           prodl	equ	0xFF3
  6240                           intcon	equ	0xFF2
  6241                           intcon2	equ	0xFF1
  6242                           postinc0	equ	0xFEE
  6243                           wreg	equ	0xFE8
  6244                           postdec1	equ	0xFE5
  6245                           fsr1l	equ	0xFE1
  6246                           indf2	equ	0xFDF
  6247                           postinc2	equ	0xFDE
  6248                           postdec2	equ	0xFDD
  6249                           fsr2h	equ	0xFDA
  6250                           fsr2l	equ	0xFD9
  6251                           status	equ	0xFD8
  6252                           
  6253 ;; *************** function _eeprom_read_array *****************
  6254 ;; Defined at:
  6255 ;;		line 40 in file "eeprom.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;  pData           2    1[BANK0 ] PTR unsigned char 
  6258 ;;		 -> Cf(107), 
  6259 ;;  Address         1    3[BANK0 ] unsigned char 
  6260 ;;  NbData          1    4[BANK0 ] unsigned char 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  i               1    6[BANK0 ] unsigned char 
  6263 ;; Return value:  Size  Location     Type
  6264 ;;		None               void
  6265 ;; Registers used:
  6266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6272 ;;      Params:         0       4       0       0       0       0       0
  6273 ;;      Locals:         0       1       0       0       0       0       0
  6274 ;;      Temps:          0       1       0       0       0       0       0
  6275 ;;      Totals:         0       6       0       0       0       0       0
  6276 ;;Total ram usage:        6 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:    4
  6279 ;; This function calls:
  6280 ;;		_eeprom_read
  6281 ;; This function is called by:
  6282 ;;		_cf_check_and_display
  6283 ;;		_cf_rcv
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           	psect	text24
  6288  003190                     __ptext24:
  6289                           	opt stack 0
  6290  003190                     _eeprom_read_array:
  6291                           	opt stack 24
  6292                           
  6293                           ;incstack = 0
  6294  003190  FFFF               	dw	65535
  6295                           
  6296                           ;eeprom.c: 42: unsigned char i;
  6297                           ;eeprom.c: 44: for (i = 0; i < NbData; i ++)
  6298  003192  0100               	movlb	0	; () banked
  6299  003194  6FBF               	movwf	??_eeprom_read_array& (0+255),b
  6300  003196  0E00               	movlw	0
  6301  003198  0100               	movlb	0	; () banked
  6302  00319A  0100               	movlb	0	; () banked
  6303  00319C  6FC0               	movwf	eeprom_read_array@i& (0+255),b
  6304  00319E  0100               	movlb	0	; () banked
  6305  0031A0  51BF               	movf	??_eeprom_read_array& (0+255),w,b
  6306  0031A2  D014               	goto	l5719
  6307  0031A4                     l5711:
  6308                           
  6309                           ; BSR set to: 0
  6310                           ;eeprom.c: 45: {
  6311                           ;eeprom.c: 46: *pData = eeprom_read(Address);
  6312  0031A4  0100               	movlb	0	; () banked
  6313  0031A6  0100               	movlb	0	; () banked
  6314  0031A8  51BD               	movf	eeprom_read_array@Address& (0+255),w,b
  6315  0031AA  ECCA  F01A         	call	_eeprom_read
  6316  0031AE  C0BB  FFD9         	movff	eeprom_read_array@pData,fsr2l
  6317  0031B2  C0BC  FFDA         	movff	eeprom_read_array@pData+1,fsr2h
  6318  0031B6  6EDF               	movwf	indf2,c
  6319                           
  6320                           ;eeprom.c: 47: pData ++;
  6321  0031B8  0100               	movlb	0	; () banked
  6322  0031BA  0100               	movlb	0	; () banked
  6323  0031BC  4BBB               	infsnz	eeprom_read_array@pData& (0+255),f,b
  6324  0031BE  2BBC               	incf	(eeprom_read_array@pData+1)& (0+255),f,b
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;eeprom.c: 48: Address ++;
  6328  0031C0  0100               	movlb	0	; () banked
  6329  0031C2  0100               	movlb	0	; () banked
  6330  0031C4  2BBD               	incf	eeprom_read_array@Address& (0+255),f,b
  6331                           
  6332                           ; BSR set to: 0
  6333  0031C6  0100               	movlb	0	; () banked
  6334  0031C8  0100               	movlb	0	; () banked
  6335  0031CA  2BC0               	incf	eeprom_read_array@i& (0+255),f,b
  6336  0031CC                     l5719:
  6337                           
  6338                           ; BSR set to: 0
  6339  0031CC  0100               	movlb	0	; () banked
  6340  0031CE  0100               	movlb	0	; () banked
  6341  0031D0  51BE               	movf	eeprom_read_array@NbData& (0+255),w,b
  6342  0031D2  0100               	movlb	0	; () banked
  6343  0031D4  0100               	movlb	0	; () banked
  6344  0031D6  5DC0               	subwf	eeprom_read_array@i& (0+255),w,b
  6345  0031D8  B0D8               	btfsc	status,0,c
  6346                           
  6347                           ; BSR set to: 0
  6348                           
  6349                           ; BSR set to: 0
  6350  0031DA  0012               	return	
  6351  0031DC  FFFF               	dw	65535	; assembler added errata NOP
  6352  0031DE  D7E2               	goto	l5711
  6353  0031E0  FFFF               	dw	65535	; errata NOP
  6354  0031E2                     __end_of_eeprom_read_array:
  6355                           	opt stack 0
  6356                           tblptru	equ	0xFF8
  6357                           tblptrh	equ	0xFF7
  6358                           tblptrl	equ	0xFF6
  6359                           tablat	equ	0xFF5
  6360                           prodh	equ	0xFF4
  6361                           prodl	equ	0xFF3
  6362                           intcon	equ	0xFF2
  6363                           intcon2	equ	0xFF1
  6364                           postinc0	equ	0xFEE
  6365                           wreg	equ	0xFE8
  6366                           postdec1	equ	0xFE5
  6367                           fsr1l	equ	0xFE1
  6368                           indf2	equ	0xFDF
  6369                           postinc2	equ	0xFDE
  6370                           postdec2	equ	0xFDD
  6371                           fsr2h	equ	0xFDA
  6372                           fsr2l	equ	0xFD9
  6373                           status	equ	0xFD8
  6374                           
  6375 ;; *************** function _eeprom_read *****************
  6376 ;; Defined at:
  6377 ;;		line 3 in file "eeprom.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  Address         1    wreg     unsigned char 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  Address         1    0[BANK0 ] unsigned char 
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  1    wreg      unsigned char 
  6384 ;; Registers used:
  6385 ;;		wreg, status,2
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6391 ;;      Params:         0       0       0       0       0       0       0
  6392 ;;      Locals:         0       1       0       0       0       0       0
  6393 ;;      Temps:          0       0       0       0       0       0       0
  6394 ;;      Totals:         0       1       0       0       0       0       0
  6395 ;;Total ram usage:        1 bytes
  6396 ;; Hardware stack levels used:    1
  6397 ;; Hardware stack levels required when called:    3
  6398 ;; This function calls:
  6399 ;;		Nothing
  6400 ;; This function is called by:
  6401 ;;		_eeprom_read_array
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           	psect	text25
  6406  003594                     __ptext25:
  6407                           	opt stack 0
  6408  003594                     _eeprom_read:
  6409                           	opt stack 24
  6410                           
  6411                           ; BSR set to: 0
  6412                           ;incstack = 0
  6413  003594  FFFF               	dw	65535
  6414                           
  6415                           ;eeprom_read@Address stored from wreg
  6416  003596  CFE8 F0BA          	movff	wreg,eeprom_read@Address
  6417                           
  6418                           ;eeprom.c: 5: EEADR = Address;
  6419  00359A  C0BA  FFA9         	movff	eeprom_read@Address,4009	;volatile
  6420                           
  6421                           ;eeprom.c: 7: EEPGD = 0;
  6422  00359E  9EA6               	bcf	4006,7,c	;volatile
  6423                           
  6424                           ;eeprom.c: 8: CFGS = 0;
  6425  0035A0  9CA6               	bcf	4006,6,c	;volatile
  6426                           
  6427                           ;eeprom.c: 9: RD = 1;
  6428  0035A2  80A6               	bsf	4006,0,c	;volatile
  6429                           
  6430                           ;eeprom.c: 11: __nop();
  6431  0035A4  F000               	nop	
  6432                           
  6433                           ;eeprom.c: 12: __nop();
  6434  0035A6  F000               	nop	
  6435                           
  6436                           ;eeprom.c: 14: return EEDATA;
  6437  0035A8  50A8               	movf	4008,w,c	;volatile
  6438  0035AA  0012               	return	
  6439  0035AC  FFFF               	dw	65535	; errata NOP
  6440  0035AE                     __end_of_eeprom_read:
  6441                           	opt stack 0
  6442                           tblptru	equ	0xFF8
  6443                           tblptrh	equ	0xFF7
  6444                           tblptrl	equ	0xFF6
  6445                           tablat	equ	0xFF5
  6446                           prodh	equ	0xFF4
  6447                           prodl	equ	0xFF3
  6448                           intcon	equ	0xFF2
  6449                           intcon2	equ	0xFF1
  6450                           postinc0	equ	0xFEE
  6451                           wreg	equ	0xFE8
  6452                           postdec1	equ	0xFE5
  6453                           fsr1l	equ	0xFE1
  6454                           indf2	equ	0xFDF
  6455                           postinc2	equ	0xFDE
  6456                           postdec2	equ	0xFDD
  6457                           fsr2h	equ	0xFDA
  6458                           fsr2l	equ	0xFD9
  6459                           status	equ	0xFD8
  6460                           
  6461 ;; *************** function _cf_check *****************
  6462 ;; Defined at:
  6463 ;;		line 79 in file "config.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;		None
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;  valid           1   19[BANK0 ] unsigned char 
  6468 ;; Return value:  Size  Location     Type
  6469 ;;                  1    wreg      unsigned char 
  6470 ;; Registers used:
  6471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6472 ;; Tracked objects:
  6473 ;;		On entry : 0/0
  6474 ;;		On exit  : 0/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6477 ;;      Params:         0       0       0       0       0       0       0
  6478 ;;      Locals:         0       1       0       0       0       0       0
  6479 ;;      Temps:          0       1       0       0       0       0       0
  6480 ;;      Totals:         0       2       0       0       0       0       0
  6481 ;;Total ram usage:        2 bytes
  6482 ;; Hardware stack levels used:    1
  6483 ;; Hardware stack levels required when called:    5
  6484 ;; This function calls:
  6485 ;;		_cf_checkout
  6486 ;;		_cf_checkrange
  6487 ;;		_cf_checksum
  6488 ;; This function is called by:
  6489 ;;		_cf_check_and_display
  6490 ;;		_cf_rcv
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494                           	psect	text26
  6495  0033FA                     __ptext26:
  6496                           	opt stack 0
  6497  0033FA                     _cf_check:
  6498                           	opt stack 23
  6499                           
  6500                           ;incstack = 0
  6501  0033FA  FFFF               	dw	65535
  6502                           
  6503                           ;config.c: 81: unsigned char valid = 0;
  6504  0033FC  0100               	movlb	0	; () banked
  6505  0033FE  6FCC               	movwf	??_cf_check& (0+255),b
  6506  003400  0E00               	movlw	0
  6507  003402  0100               	movlb	0	; () banked
  6508  003404  0100               	movlb	0	; () banked
  6509  003406  6FCD               	movwf	cf_check@valid& (0+255),b
  6510  003408  0100               	movlb	0	; () banked
  6511  00340A  51CC               	movf	??_cf_check& (0+255),w,b
  6512                           
  6513                           ; BSR set to: 0
  6514                           ;config.c: 83: if (cf_checksum() && cf_checkout() && cf_checkrange())
  6515  00340C  ECEF  F005         	call	_cf_checksum	;wreg free
  6516  003410  A0D8               	btfss	status,0,c
  6517  003412  D010               	goto	l5743
  6518  003414  ECAF  F010         	call	_cf_checkout	;wreg free
  6519  003418  A0D8               	btfss	status,0,c
  6520  00341A  D00C               	goto	l5743
  6521  00341C  EC44  F017         	call	_cf_checkrange	;wreg free
  6522  003420  A0D8               	btfss	status,0,c
  6523  003422  D008               	goto	l5743
  6524                           
  6525                           ;config.c: 84: {
  6526                           ;config.c: 85: valid = 1;
  6527  003424  0100               	movlb	0	; () banked
  6528  003426  6FCC               	movwf	??_cf_check& (0+255),b
  6529  003428  0E01               	movlw	1
  6530  00342A  0100               	movlb	0	; () banked
  6531  00342C  0100               	movlb	0	; () banked
  6532  00342E  6FCD               	movwf	cf_check@valid& (0+255),b
  6533  003430  0100               	movlb	0	; () banked
  6534  003432  51CC               	movf	??_cf_check& (0+255),w,b
  6535  003434                     l5743:
  6536                           
  6537                           ;config.c: 86: }
  6538                           ;config.c: 88: return valid;
  6539  003434  0100               	movlb	0	; () banked
  6540  003436  0100               	movlb	0	; () banked
  6541  003438  51CD               	movf	cf_check@valid& (0+255),w,b
  6542                           
  6543                           ; BSR set to: 0
  6544                           
  6545                           ; BSR set to: 0
  6546  00343A  0012               	return	
  6547  00343C  FFFF               	dw	65535	; errata NOP
  6548  00343E                     __end_of_cf_check:
  6549                           	opt stack 0
  6550                           tblptru	equ	0xFF8
  6551                           tblptrh	equ	0xFF7
  6552                           tblptrl	equ	0xFF6
  6553                           tablat	equ	0xFF5
  6554                           prodh	equ	0xFF4
  6555                           prodl	equ	0xFF3
  6556                           intcon	equ	0xFF2
  6557                           intcon2	equ	0xFF1
  6558                           postinc0	equ	0xFEE
  6559                           wreg	equ	0xFE8
  6560                           postdec1	equ	0xFE5
  6561                           fsr1l	equ	0xFE1
  6562                           indf2	equ	0xFDF
  6563                           postinc2	equ	0xFDE
  6564                           postdec2	equ	0xFDD
  6565                           fsr2h	equ	0xFDA
  6566                           fsr2l	equ	0xFD9
  6567                           status	equ	0xFD8
  6568                           
  6569 ;; *************** function _cf_checksum *****************
  6570 ;; Defined at:
  6571 ;;		line 4 in file "config.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;		None
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;  calcul          4   14[BANK0 ] unsigned long 
  6576 ;;  i               1   13[BANK0 ] unsigned char 
  6577 ;;  valid           1   12[BANK0 ] unsigned char 
  6578 ;; Return value:  Size  Location     Type
  6579 ;;		None               void
  6580 ;; Registers used:
  6581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6587 ;;      Params:         0       0       0       0       0       0       0
  6588 ;;      Locals:         0       6       0       0       0       0       0
  6589 ;;      Temps:          0      12       0       0       0       0       0
  6590 ;;      Totals:         0      18       0       0       0       0       0
  6591 ;;Total ram usage:       18 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; Hardware stack levels required when called:    3
  6594 ;; This function calls:
  6595 ;;		Nothing
  6596 ;; This function is called by:
  6597 ;;		_cf_check
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           	psect	text27
  6602  000BDE                     __ptext27:
  6603                           	opt stack 0
  6604  000BDE                     _cf_checksum:
  6605                           	opt stack 24
  6606                           
  6607                           ; BSR set to: 0
  6608                           ;incstack = 0
  6609  000BDE  FFFF               	dw	65535
  6610                           
  6611                           ;config.c: 6: unsigned long calcul;
  6612                           ;config.c: 7: unsigned char i, valid = 0;
  6613  000BE0  0100               	movlb	0	; () banked
  6614  000BE2  6FBA               	movwf	??_cf_checksum& (0+255),b
  6615  000BE4  0E00               	movlw	0
  6616  000BE6  0100               	movlb	0	; () banked
  6617  000BE8  0100               	movlb	0	; () banked
  6618  000BEA  6FC6               	movwf	cf_checksum@valid& (0+255),b
  6619  000BEC  0100               	movlb	0	; () banked
  6620  000BEE  51BA               	movf	??_cf_checksum& (0+255),w,b
  6621                           
  6622                           ;config.c: 9: for (i = 0, calcul = 0; i < 32; i ++)
  6623  000BF0  0100               	movlb	0	; () banked
  6624  000BF2  6FBA               	movwf	??_cf_checksum& (0+255),b
  6625  000BF4  0E00               	movlw	0
  6626  000BF6  0100               	movlb	0	; () banked
  6627  000BF8  0100               	movlb	0	; () banked
  6628  000BFA  6FC7               	movwf	cf_checksum@i& (0+255),b
  6629  000BFC  0100               	movlb	0	; () banked
  6630  000BFE  51BA               	movf	??_cf_checksum& (0+255),w,b
  6631                           
  6632                           ; BSR set to: 0
  6633  000C00  0E00               	movlw	0
  6634  000C02  0100               	movlb	0	; () banked
  6635  000C04  0100               	movlb	0	; () banked
  6636  000C06  6FC8               	movwf	cf_checksum@calcul& (0+255),b
  6637  000C08  0E00               	movlw	0
  6638  000C0A  0100               	movlb	0	; () banked
  6639  000C0C  6FC9               	movwf	(cf_checksum@calcul+1)& (0+255),b
  6640  000C0E  0E00               	movlw	0
  6641  000C10  0100               	movlb	0	; () banked
  6642  000C12  6FCA               	movwf	(cf_checksum@calcul+2)& (0+255),b
  6643  000C14  0E00               	movlw	0
  6644  000C16  0100               	movlb	0	; () banked
  6645  000C18  6FCB               	movwf	(cf_checksum@calcul+3)& (0+255),b
  6646  000C1A  D046               	goto	L38
  6647  000C1C                     l5427:
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;config.c: 10: {
  6651                           ;config.c: 11: calcul += (unsigned long) ((unsigned short) (Cf.Data[i*3+1] << 8) + Cf.Da
      +                          ta[i*3+2]);
  6652  000C1C  0100               	movlb	0	; () banked
  6653  000C1E  0100               	movlb	0	; () banked
  6654  000C20  51C7               	movf	cf_checksum@i& (0+255),w,b
  6655  000C22  0D03               	mullw	3
  6656  000C24  0E01               	movlw	1
  6657  000C26  26F3               	addwf	prodl,f,c
  6658  000C28  0E00               	movlw	0
  6659  000C2A  22F4               	addwfc	prodh,f,c
  6660  000C2C  0101               	movlb	1	; () banked
  6661  000C2E  0E00               	movlw	low _Cf	;volatile
  6662  000C30  24F3               	addwf	prodl,w,c
  6663  000C32  6ED9               	movwf	fsr2l,c
  6664  000C34  0101               	movlb	1	; () banked
  6665  000C36  0E01               	movlw	high _Cf	;volatile
  6666  000C38  20F4               	addwfc	prodh,w,c
  6667  000C3A  6EDA               	movwf	fsr2h,c
  6668  000C3C  50DF               	movf	indf2,w,c
  6669  000C3E  0100               	movlb	0	; () banked
  6670  000C40  6FBA               	movwf	??_cf_checksum& (0+255),b
  6671  000C42  0100               	movlb	0	; () banked
  6672  000C44  51BA               	movf	??_cf_checksum& (0+255),w,b
  6673  000C46  0100               	movlb	0	; () banked
  6674  000C48  6FBC               	movwf	(??_cf_checksum+2)& (0+255),b
  6675  000C4A  6BBB               	clrf	(??_cf_checksum+1)& (0+255),b
  6676  000C4C  0100               	movlb	0	; () banked
  6677  000C4E  0100               	movlb	0	; () banked
  6678  000C50  51C7               	movf	cf_checksum@i& (0+255),w,b
  6679  000C52  0D03               	mullw	3
  6680  000C54  0E02               	movlw	2
  6681  000C56  26F3               	addwf	prodl,f,c
  6682  000C58  0E00               	movlw	0
  6683  000C5A  22F4               	addwfc	prodh,f,c
  6684  000C5C  0101               	movlb	1	; () banked
  6685  000C5E  0E00               	movlw	low _Cf	;volatile
  6686  000C60  24F3               	addwf	prodl,w,c
  6687  000C62  6ED9               	movwf	fsr2l,c
  6688  000C64  0101               	movlb	1	; () banked
  6689  000C66  0E01               	movlw	high _Cf	;volatile
  6690  000C68  20F4               	addwfc	prodh,w,c
  6691  000C6A  6EDA               	movwf	fsr2h,c
  6692  000C6C  50DF               	movf	indf2,w,c
  6693  000C6E  0100               	movlb	0	; () banked
  6694  000C70  6FBD               	movwf	(??_cf_checksum+3)& (0+255),b
  6695  000C72  0100               	movlb	0	; () banked
  6696  000C74  51BD               	movf	(??_cf_checksum+3)& (0+255),w,b
  6697  000C76  0100               	movlb	0	; () banked
  6698  000C78  27BB               	addwf	(??_cf_checksum+1)& (0+255),f,b
  6699  000C7A  0E00               	movlw	0
  6700  000C7C  23BC               	addwfc	(??_cf_checksum+2)& (0+255),f,b
  6701  000C7E  0100               	movlb	0	; () banked
  6702  000C80  51BB               	movf	(??_cf_checksum+1)& (0+255),w,b
  6703  000C82  0100               	movlb	0	; () banked
  6704  000C84  0100               	movlb	0	; () banked
  6705  000C86  27C8               	addwf	cf_checksum@calcul& (0+255),f,b
  6706  000C88  0100               	movlb	0	; () banked
  6707  000C8A  51BC               	movf	(??_cf_checksum+2)& (0+255),w,b
  6708  000C8C  0100               	movlb	0	; () banked
  6709  000C8E  0100               	movlb	0	; () banked
  6710  000C90  23C9               	addwfc	(cf_checksum@calcul+1)& (0+255),f,b
  6711  000C92  0E00               	movlw	0
  6712  000C94  0100               	movlb	0	; () banked
  6713  000C96  0100               	movlb	0	; () banked
  6714  000C98  23CA               	addwfc	(cf_checksum@calcul+2)& (0+255),f,b
  6715  000C9A  0E00               	movlw	0
  6716  000C9C  0100               	movlb	0	; () banked
  6717  000C9E  0100               	movlb	0	; () banked
  6718  000CA0  23CB               	addwfc	(cf_checksum@calcul+3)& (0+255),f,b
  6719                           
  6720                           ; BSR set to: 0
  6721  000CA2  0100               	movlb	0	; () banked
  6722  000CA4  0100               	movlb	0	; () banked
  6723  000CA6  2BC7               	incf	cf_checksum@i& (0+255),f,b
  6724  000CA8                     L38:
  6725                           
  6726                           ; BSR set to: 0
  6727  000CA8  0E1F               	movlw	31
  6728  000CAA  0100               	movlb	0	; () banked
  6729  000CAC  0100               	movlb	0	; () banked
  6730  000CAE  65C7               	cpfsgt	cf_checksum@i& (0+255),b
  6731  000CB0  D7B5               	goto	l5427
  6732                           
  6733                           ; BSR set to: 0
  6734                           ;config.c: 12: }
  6735                           ;config.c: 14: if ( (((calcul >> 24) & 0x000000FF) == Cf.Data[97])
  6736                           ;config.c: 15: && (((calcul >> 16) & 0x000000FF) == Cf.Data[98])
  6737                           ;config.c: 16: && (((calcul >> 8) & 0x000000FF) == Cf.Data[99])
  6738                           ;config.c: 17: && ((calcul & 0x000000FF) == Cf.Data[100]))
  6739                           
  6740                           ; BSR set to: 0
  6741  000CB2  0101               	movlb	1	; () banked
  6742  000CB4  C161  F0BA         	movff	_Cf+97,??_cf_checksum	;volatile
  6743  000CB8  0100               	movlb	0	; () banked
  6744  000CBA  6BBB               	clrf	(??_cf_checksum+1)& (0+255),b
  6745  000CBC  6BBC               	clrf	(??_cf_checksum+2)& (0+255),b
  6746  000CBE  6BBD               	clrf	(??_cf_checksum+3)& (0+255),b
  6747  000CC0  0100               	movlb	0	; () banked
  6748  000CC2  C0C8  F0BE         	movff	cf_checksum@calcul,??_cf_checksum+4
  6749  000CC6  0100               	movlb	0	; () banked
  6750  000CC8  C0C9  F0BF         	movff	cf_checksum@calcul+1,??_cf_checksum+5
  6751  000CCC  0100               	movlb	0	; () banked
  6752  000CCE  C0CA  F0C0         	movff	cf_checksum@calcul+2,??_cf_checksum+6
  6753  000CD2  0100               	movlb	0	; () banked
  6754  000CD4  C0CB  F0C1         	movff	cf_checksum@calcul+3,??_cf_checksum+7
  6755  000CD8  0E19               	movlw	25
  6756  000CDA  D006               	goto	u4390
  6757  000CDC                     u4395:
  6758  000CDC  0100               	movlb	0	; () banked
  6759  000CDE  90D8               	bcf	status,0,c
  6760  000CE0  33C1               	rrcf	(??_cf_checksum+7)& (0+255),f,b
  6761  000CE2  33C0               	rrcf	(??_cf_checksum+6)& (0+255),f,b
  6762  000CE4  33BF               	rrcf	(??_cf_checksum+5)& (0+255),f,b
  6763  000CE6  33BE               	rrcf	(??_cf_checksum+4)& (0+255),f,b
  6764  000CE8                     u4390:
  6765  000CE8  2EE8               	decfsz	wreg,f,c
  6766  000CEA  D7F8               	goto	u4395
  6767  000CEC  0EFF               	movlw	255
  6768  000CEE  0100               	movlb	0	; () banked
  6769  000CF0  15BE               	andwf	(??_cf_checksum+4)& (0+255),w,b
  6770  000CF2  0100               	movlb	0	; () banked
  6771  000CF4  6FC2               	movwf	(??_cf_checksum+8)& (0+255),b
  6772  000CF6  0E00               	movlw	0
  6773  000CF8  0100               	movlb	0	; () banked
  6774  000CFA  15BF               	andwf	(??_cf_checksum+5)& (0+255),w,b
  6775  000CFC  0100               	movlb	0	; () banked
  6776  000CFE  6FC3               	movwf	(??_cf_checksum+9)& (0+255),b
  6777  000D00  0E00               	movlw	0
  6778  000D02  0100               	movlb	0	; () banked
  6779  000D04  15C0               	andwf	(??_cf_checksum+6)& (0+255),w,b
  6780  000D06  0100               	movlb	0	; () banked
  6781  000D08  6FC4               	movwf	(??_cf_checksum+10)& (0+255),b
  6782  000D0A  0E00               	movlw	0
  6783  000D0C  0100               	movlb	0	; () banked
  6784  000D0E  15C1               	andwf	(??_cf_checksum+7)& (0+255),w,b
  6785  000D10  0100               	movlb	0	; () banked
  6786  000D12  6FC5               	movwf	(??_cf_checksum+11)& (0+255),b
  6787  000D14  0100               	movlb	0	; () banked
  6788  000D16  51BD               	movf	(??_cf_checksum+3)& (0+255),w,b
  6789  000D18  0100               	movlb	0	; () banked
  6790  000D1A  19C5               	xorwf	(??_cf_checksum+11)& (0+255),w,b
  6791  000D1C  E10E               	bnz	u4405
  6792  000D1E  0100               	movlb	0	; () banked
  6793  000D20  51BC               	movf	(??_cf_checksum+2)& (0+255),w,b
  6794  000D22  0100               	movlb	0	; () banked
  6795  000D24  19C4               	xorwf	(??_cf_checksum+10)& (0+255),w,b
  6796  000D26  E109               	bnz	u4405
  6797  000D28  0100               	movlb	0	; () banked
  6798  000D2A  51BB               	movf	(??_cf_checksum+1)& (0+255),w,b
  6799  000D2C  0100               	movlb	0	; () banked
  6800  000D2E  19C3               	xorwf	(??_cf_checksum+9)& (0+255),w,b
  6801  000D30  E104               	bnz	u4405
  6802  000D32  0100               	movlb	0	; () banked
  6803  000D34  51BA               	movf	??_cf_checksum& (0+255),w,b
  6804  000D36  0100               	movlb	0	; () banked
  6805  000D38  19C2               	xorwf	(??_cf_checksum+8)& (0+255),w,b
  6806  000D3A                     u4405:
  6807  000D3A  A4D8               	btfss	status,2,c
  6808  000D3C  D0C6               	goto	l5443
  6809                           
  6810                           ; BSR set to: 0
  6811  000D3E  0101               	movlb	1	; () banked
  6812  000D40  C162  F0BA         	movff	_Cf+98,??_cf_checksum	;volatile
  6813  000D44  0100               	movlb	0	; () banked
  6814  000D46  6BBB               	clrf	(??_cf_checksum+1)& (0+255),b
  6815  000D48  6BBC               	clrf	(??_cf_checksum+2)& (0+255),b
  6816  000D4A  6BBD               	clrf	(??_cf_checksum+3)& (0+255),b
  6817  000D4C  0100               	movlb	0	; () banked
  6818  000D4E  C0C8  F0BE         	movff	cf_checksum@calcul,??_cf_checksum+4
  6819  000D52  0100               	movlb	0	; () banked
  6820  000D54  C0C9  F0BF         	movff	cf_checksum@calcul+1,??_cf_checksum+5
  6821  000D58  0100               	movlb	0	; () banked
  6822  000D5A  C0CA  F0C0         	movff	cf_checksum@calcul+2,??_cf_checksum+6
  6823  000D5E  0100               	movlb	0	; () banked
  6824  000D60  C0CB  F0C1         	movff	cf_checksum@calcul+3,??_cf_checksum+7
  6825  000D64  0E11               	movlw	17
  6826  000D66  D006               	goto	u4410
  6827  000D68                     u4415:
  6828  000D68  0100               	movlb	0	; () banked
  6829  000D6A  90D8               	bcf	status,0,c
  6830  000D6C  33C1               	rrcf	(??_cf_checksum+7)& (0+255),f,b
  6831  000D6E  33C0               	rrcf	(??_cf_checksum+6)& (0+255),f,b
  6832  000D70  33BF               	rrcf	(??_cf_checksum+5)& (0+255),f,b
  6833  000D72  33BE               	rrcf	(??_cf_checksum+4)& (0+255),f,b
  6834  000D74                     u4410:
  6835  000D74  2EE8               	decfsz	wreg,f,c
  6836  000D76  D7F8               	goto	u4415
  6837  000D78  0EFF               	movlw	255
  6838  000D7A  0100               	movlb	0	; () banked
  6839  000D7C  15BE               	andwf	(??_cf_checksum+4)& (0+255),w,b
  6840  000D7E  0100               	movlb	0	; () banked
  6841  000D80  6FC2               	movwf	(??_cf_checksum+8)& (0+255),b
  6842  000D82  0E00               	movlw	0
  6843  000D84  0100               	movlb	0	; () banked
  6844  000D86  15BF               	andwf	(??_cf_checksum+5)& (0+255),w,b
  6845  000D88  0100               	movlb	0	; () banked
  6846  000D8A  6FC3               	movwf	(??_cf_checksum+9)& (0+255),b
  6847  000D8C  0E00               	movlw	0
  6848  000D8E  0100               	movlb	0	; () banked
  6849  000D90  15C0               	andwf	(??_cf_checksum+6)& (0+255),w,b
  6850  000D92  0100               	movlb	0	; () banked
  6851  000D94  6FC4               	movwf	(??_cf_checksum+10)& (0+255),b
  6852  000D96  0E00               	movlw	0
  6853  000D98  0100               	movlb	0	; () banked
  6854  000D9A  15C1               	andwf	(??_cf_checksum+7)& (0+255),w,b
  6855  000D9C  0100               	movlb	0	; () banked
  6856  000D9E  6FC5               	movwf	(??_cf_checksum+11)& (0+255),b
  6857  000DA0  0100               	movlb	0	; () banked
  6858  000DA2  51BD               	movf	(??_cf_checksum+3)& (0+255),w,b
  6859  000DA4  0100               	movlb	0	; () banked
  6860  000DA6  19C5               	xorwf	(??_cf_checksum+11)& (0+255),w,b
  6861  000DA8  E10E               	bnz	u4425
  6862  000DAA  0100               	movlb	0	; () banked
  6863  000DAC  51BC               	movf	(??_cf_checksum+2)& (0+255),w,b
  6864  000DAE  0100               	movlb	0	; () banked
  6865  000DB0  19C4               	xorwf	(??_cf_checksum+10)& (0+255),w,b
  6866  000DB2  E109               	bnz	u4425
  6867  000DB4  0100               	movlb	0	; () banked
  6868  000DB6  51BB               	movf	(??_cf_checksum+1)& (0+255),w,b
  6869  000DB8  0100               	movlb	0	; () banked
  6870  000DBA  19C3               	xorwf	(??_cf_checksum+9)& (0+255),w,b
  6871  000DBC  E104               	bnz	u4425
  6872  000DBE  0100               	movlb	0	; () banked
  6873  000DC0  51BA               	movf	??_cf_checksum& (0+255),w,b
  6874  000DC2  0100               	movlb	0	; () banked
  6875  000DC4  19C2               	xorwf	(??_cf_checksum+8)& (0+255),w,b
  6876  000DC6                     u4425:
  6877  000DC6  A4D8               	btfss	status,2,c
  6878  000DC8  D080               	goto	l5443
  6879                           
  6880                           ; BSR set to: 0
  6881  000DCA  0101               	movlb	1	; () banked
  6882  000DCC  C163  F0BA         	movff	_Cf+99,??_cf_checksum	;volatile
  6883  000DD0  0100               	movlb	0	; () banked
  6884  000DD2  6BBB               	clrf	(??_cf_checksum+1)& (0+255),b
  6885  000DD4  6BBC               	clrf	(??_cf_checksum+2)& (0+255),b
  6886  000DD6  6BBD               	clrf	(??_cf_checksum+3)& (0+255),b
  6887  000DD8  0EFF               	movlw	255
  6888  000DDA  0100               	movlb	0	; () banked
  6889  000DDC  C0C8  F0BE         	movff	cf_checksum@calcul,??_cf_checksum+4
  6890  000DE0  0100               	movlb	0	; () banked
  6891  000DE2  C0C9  F0BF         	movff	cf_checksum@calcul+1,??_cf_checksum+5
  6892  000DE6  0100               	movlb	0	; () banked
  6893  000DE8  C0CA  F0C0         	movff	cf_checksum@calcul+2,??_cf_checksum+6
  6894  000DEC  0100               	movlb	0	; () banked
  6895  000DEE  C0CB  F0C1         	movff	cf_checksum@calcul+3,??_cf_checksum+7
  6896  000DF2  C0BF  F0BE         	movff	??_cf_checksum+5,??_cf_checksum+4
  6897  000DF6  C0C0  F0BF         	movff	??_cf_checksum+6,??_cf_checksum+5
  6898  000DFA  C0C1  F0C0         	movff	??_cf_checksum+7,??_cf_checksum+6
  6899  000DFE  0100               	movlb	0	; () banked
  6900  000E00  6BC1               	clrf	(??_cf_checksum+7)& (0+255),b
  6901  000E02  0100               	movlb	0	; () banked
  6902  000E04  15BE               	andwf	(??_cf_checksum+4)& (0+255),w,b
  6903  000E06  0100               	movlb	0	; () banked
  6904  000E08  6FC2               	movwf	(??_cf_checksum+8)& (0+255),b
  6905  000E0A  0E00               	movlw	0
  6906  000E0C  0100               	movlb	0	; () banked
  6907  000E0E  15BF               	andwf	(??_cf_checksum+5)& (0+255),w,b
  6908  000E10  0100               	movlb	0	; () banked
  6909  000E12  6FC3               	movwf	(??_cf_checksum+9)& (0+255),b
  6910  000E14  0E00               	movlw	0
  6911  000E16  0100               	movlb	0	; () banked
  6912  000E18  15C0               	andwf	(??_cf_checksum+6)& (0+255),w,b
  6913  000E1A  0100               	movlb	0	; () banked
  6914  000E1C  6FC4               	movwf	(??_cf_checksum+10)& (0+255),b
  6915  000E1E  0E00               	movlw	0
  6916  000E20  0100               	movlb	0	; () banked
  6917  000E22  15C1               	andwf	(??_cf_checksum+7)& (0+255),w,b
  6918  000E24  0100               	movlb	0	; () banked
  6919  000E26  6FC5               	movwf	(??_cf_checksum+11)& (0+255),b
  6920  000E28  0100               	movlb	0	; () banked
  6921  000E2A  51BD               	movf	(??_cf_checksum+3)& (0+255),w,b
  6922  000E2C  0100               	movlb	0	; () banked
  6923  000E2E  19C5               	xorwf	(??_cf_checksum+11)& (0+255),w,b
  6924  000E30  E10E               	bnz	u4435
  6925  000E32  0100               	movlb	0	; () banked
  6926  000E34  51BC               	movf	(??_cf_checksum+2)& (0+255),w,b
  6927  000E36  0100               	movlb	0	; () banked
  6928  000E38  19C4               	xorwf	(??_cf_checksum+10)& (0+255),w,b
  6929  000E3A  E109               	bnz	u4435
  6930  000E3C  0100               	movlb	0	; () banked
  6931  000E3E  51BB               	movf	(??_cf_checksum+1)& (0+255),w,b
  6932  000E40  0100               	movlb	0	; () banked
  6933  000E42  19C3               	xorwf	(??_cf_checksum+9)& (0+255),w,b
  6934  000E44  E104               	bnz	u4435
  6935  000E46  0100               	movlb	0	; () banked
  6936  000E48  51BA               	movf	??_cf_checksum& (0+255),w,b
  6937  000E4A  0100               	movlb	0	; () banked
  6938  000E4C  19C2               	xorwf	(??_cf_checksum+8)& (0+255),w,b
  6939  000E4E                     u4435:
  6940  000E4E  A4D8               	btfss	status,2,c
  6941  000E50  D03C               	goto	l5443
  6942                           
  6943                           ; BSR set to: 0
  6944  000E52  0101               	movlb	1	; () banked
  6945  000E54  C164  F0BA         	movff	_Cf+100,??_cf_checksum	;volatile
  6946  000E58  0100               	movlb	0	; () banked
  6947  000E5A  6BBB               	clrf	(??_cf_checksum+1)& (0+255),b
  6948  000E5C  6BBC               	clrf	(??_cf_checksum+2)& (0+255),b
  6949  000E5E  6BBD               	clrf	(??_cf_checksum+3)& (0+255),b
  6950  000E60  0EFF               	movlw	255
  6951  000E62  0100               	movlb	0	; () banked
  6952  000E64  0100               	movlb	0	; () banked
  6953  000E66  15C8               	andwf	cf_checksum@calcul& (0+255),w,b
  6954  000E68  0100               	movlb	0	; () banked
  6955  000E6A  6FBE               	movwf	(??_cf_checksum+4)& (0+255),b
  6956  000E6C  0E00               	movlw	0
  6957  000E6E  0100               	movlb	0	; () banked
  6958  000E70  0100               	movlb	0	; () banked
  6959  000E72  15C9               	andwf	(cf_checksum@calcul+1)& (0+255),w,b
  6960  000E74  0100               	movlb	0	; () banked
  6961  000E76  6FBF               	movwf	(??_cf_checksum+5)& (0+255),b
  6962  000E78  0E00               	movlw	0
  6963  000E7A  0100               	movlb	0	; () banked
  6964  000E7C  0100               	movlb	0	; () banked
  6965  000E7E  15CA               	andwf	(cf_checksum@calcul+2)& (0+255),w,b
  6966  000E80  0100               	movlb	0	; () banked
  6967  000E82  6FC0               	movwf	(??_cf_checksum+6)& (0+255),b
  6968  000E84  0E00               	movlw	0
  6969  000E86  0100               	movlb	0	; () banked
  6970  000E88  0100               	movlb	0	; () banked
  6971  000E8A  15CB               	andwf	(cf_checksum@calcul+3)& (0+255),w,b
  6972  000E8C  0100               	movlb	0	; () banked
  6973  000E8E  6FC1               	movwf	(??_cf_checksum+7)& (0+255),b
  6974  000E90  0100               	movlb	0	; () banked
  6975  000E92  51BD               	movf	(??_cf_checksum+3)& (0+255),w,b
  6976  000E94  0100               	movlb	0	; () banked
  6977  000E96  19C1               	xorwf	(??_cf_checksum+7)& (0+255),w,b
  6978  000E98  E10E               	bnz	u4445
  6979  000E9A  0100               	movlb	0	; () banked
  6980  000E9C  51BC               	movf	(??_cf_checksum+2)& (0+255),w,b
  6981  000E9E  0100               	movlb	0	; () banked
  6982  000EA0  19C0               	xorwf	(??_cf_checksum+6)& (0+255),w,b
  6983  000EA2  E109               	bnz	u4445
  6984  000EA4  0100               	movlb	0	; () banked
  6985  000EA6  51BB               	movf	(??_cf_checksum+1)& (0+255),w,b
  6986  000EA8  0100               	movlb	0	; () banked
  6987  000EAA  19BF               	xorwf	(??_cf_checksum+5)& (0+255),w,b
  6988  000EAC  E104               	bnz	u4445
  6989  000EAE  0100               	movlb	0	; () banked
  6990  000EB0  51BA               	movf	??_cf_checksum& (0+255),w,b
  6991  000EB2  0100               	movlb	0	; () banked
  6992  000EB4  19BE               	xorwf	(??_cf_checksum+4)& (0+255),w,b
  6993  000EB6                     u4445:
  6994  000EB6  A4D8               	btfss	status,2,c
  6995  000EB8  D008               	goto	l5443
  6996                           
  6997                           ; BSR set to: 0
  6998                           ;config.c: 18: {
  6999                           ;config.c: 19: valid = 1;
  7000  000EBA  0100               	movlb	0	; () banked
  7001  000EBC  6FBA               	movwf	??_cf_checksum& (0+255),b
  7002  000EBE  0E01               	movlw	1
  7003  000EC0  0100               	movlb	0	; () banked
  7004  000EC2  0100               	movlb	0	; () banked
  7005  000EC4  6FC6               	movwf	cf_checksum@valid& (0+255),b
  7006  000EC6  0100               	movlb	0	; () banked
  7007  000EC8  51BA               	movf	??_cf_checksum& (0+255),w,b
  7008  000ECA                     l5443:
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;config.c: 20: }
  7012                           ;config.c: 22: if ((Cf.Data[97] == 0) && (Cf.Data[98] == 0) && (Cf.Data[99] == 0) && (Cf
      +                          .Data[100] == 0))
  7013  000ECA  0101               	movlb	1	; () banked
  7014  000ECC  0101               	movlb	1	; () banked
  7015  000ECE  6761               	tstfsz	(_Cf+97)& (0+255),b	;volatile
  7016  000ED0  D00D               	goto	l5453
  7017                           
  7018                           ; BSR set to: 1
  7019  000ED2  0101               	movlb	1	; () banked
  7020  000ED4  0101               	movlb	1	; () banked
  7021  000ED6  6762               	tstfsz	(_Cf+98)& (0+255),b	;volatile
  7022  000ED8  D009               	goto	l5453
  7023                           
  7024                           ; BSR set to: 1
  7025  000EDA  0101               	movlb	1	; () banked
  7026  000EDC  0101               	movlb	1	; () banked
  7027  000EDE  6763               	tstfsz	(_Cf+99)& (0+255),b	;volatile
  7028  000EE0  D005               	goto	l5453
  7029                           
  7030                           ; BSR set to: 1
  7031  000EE2  0101               	movlb	1	; () banked
  7032  000EE4  0101               	movlb	1	; () banked
  7033  000EE6  6764               	tstfsz	(_Cf+100)& (0+255),b	;volatile
  7034  000EE8  D001               	goto	l5453
  7035                           
  7036                           ; BSR set to: 1
  7037                           ;config.c: 23: {
  7038                           ;config.c: 24: Micro.Mod.P_00 = 1;
  7039  000EEA  8257               	bsf	_Micro+5,1,c
  7040  000EEC                     l5453:
  7041                           
  7042                           ; BSR set to: 1
  7043                           ;config.c: 25: }
  7044                           ;config.c: 27: if (calcul > 0x0000FFFF) {Cf.IsLong = 1;}
  7045  000EEC  0E00               	movlw	0
  7046  000EEE  0100               	movlb	0	; () banked
  7047  000EF0  0100               	movlb	0	; () banked
  7048  000EF2  5DC8               	subwf	cf_checksum@calcul& (0+255),w,b
  7049  000EF4  0E00               	movlw	0
  7050  000EF6  0100               	movlb	0	; () banked
  7051  000EF8  59C9               	subwfb	(cf_checksum@calcul+1)& (0+255),w,b
  7052  000EFA  0E01               	movlw	1
  7053  000EFC  0100               	movlb	0	; () banked
  7054  000EFE  59CA               	subwfb	(cf_checksum@calcul+2)& (0+255),w,b
  7055  000F00  0E00               	movlw	0
  7056  000F02  0100               	movlb	0	; () banked
  7057  000F04  0100               	movlb	0	; () banked
  7058  000F06  59CB               	subwfb	(cf_checksum@calcul+3)& (0+255),w,b
  7059  000F08  A0D8               	btfss	status,0,c
  7060  000F0A  D003               	goto	l5457
  7061                           
  7062                           ; BSR set to: 0
  7063  000F0C  0101               	movlb	1	; () banked
  7064  000F0E  0101               	movlb	1	; () banked
  7065  000F10  816A               	bsf	(_Cf+106)& (0+255),0,b	;volatile
  7066  000F12                     l5457:
  7067                           
  7068                           ;config.c: 29: return valid;
  7069  000F12  C0C6  F0BA         	movff	cf_checksum@valid,??_cf_checksum
  7070  000F16  0100               	movlb	0	; () banked
  7071  000F18  31BA               	rrcf	??_cf_checksum& (0+255),w,b
  7072                           
  7073                           ; BSR set to: 0
  7074                           
  7075                           ; BSR set to: 0
  7076  000F1A  0012               	return	
  7077  000F1C  FFFF               	dw	65535	; errata NOP
  7078  000F1E                     __end_of_cf_checksum:
  7079                           	opt stack 0
  7080                           tblptru	equ	0xFF8
  7081                           tblptrh	equ	0xFF7
  7082                           tblptrl	equ	0xFF6
  7083                           tablat	equ	0xFF5
  7084                           prodh	equ	0xFF4
  7085                           prodl	equ	0xFF3
  7086                           intcon	equ	0xFF2
  7087                           intcon2	equ	0xFF1
  7088                           postinc0	equ	0xFEE
  7089                           wreg	equ	0xFE8
  7090                           postdec1	equ	0xFE5
  7091                           fsr1l	equ	0xFE1
  7092                           indf2	equ	0xFDF
  7093                           postinc2	equ	0xFDE
  7094                           postdec2	equ	0xFDD
  7095                           fsr2h	equ	0xFDA
  7096                           fsr2l	equ	0xFD9
  7097                           status	equ	0xFD8
  7098                           
  7099 ;; *************** function _cf_checkrange *****************
  7100 ;; Defined at:
  7101 ;;		line 65 in file "config.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;		None
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;  i               1    2[BANK0 ] unsigned char 
  7106 ;;  valid           1    1[BANK0 ] unsigned char 
  7107 ;; Return value:  Size  Location     Type
  7108 ;;		None               void
  7109 ;; Registers used:
  7110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/0
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7116 ;;      Params:         0       0       0       0       0       0       0
  7117 ;;      Locals:         0       2       0       0       0       0       0
  7118 ;;      Temps:          0       1       0       0       0       0       0
  7119 ;;      Totals:         0       3       0       0       0       0       0
  7120 ;;Total ram usage:        3 bytes
  7121 ;; Hardware stack levels used:    1
  7122 ;; Hardware stack levels required when called:    3
  7123 ;; This function calls:
  7124 ;;		Nothing
  7125 ;; This function is called by:
  7126 ;;		_cf_check
  7127 ;; This function uses a non-reentrant model
  7128 ;;
  7129                           
  7130                           	psect	text28
  7131  002E88                     __ptext28:
  7132                           	opt stack 0
  7133  002E88                     _cf_checkrange:
  7134                           	opt stack 24
  7135                           
  7136                           ; BSR set to: 0
  7137                           ;incstack = 0
  7138  002E88  FFFF               	dw	65535
  7139                           
  7140                           ;config.c: 67: unsigned char i, valid = 0;
  7141  002E8A  0100               	movlb	0	; () banked
  7142  002E8C  6FBA               	movwf	??_cf_checkrange& (0+255),b
  7143  002E8E  0E00               	movlw	0
  7144  002E90  0100               	movlb	0	; () banked
  7145  002E92  0100               	movlb	0	; () banked
  7146  002E94  6FBB               	movwf	cf_checkrange@valid& (0+255),b
  7147  002E96  0100               	movlb	0	; () banked
  7148  002E98  51BA               	movf	??_cf_checkrange& (0+255),w,b
  7149                           
  7150                           ;config.c: 69: for (i = 0; i < 32; i ++)
  7151  002E9A  0100               	movlb	0	; () banked
  7152  002E9C  6FBA               	movwf	??_cf_checkrange& (0+255),b
  7153  002E9E  0E00               	movlw	0
  7154  002EA0  0100               	movlb	0	; () banked
  7155  002EA2  0100               	movlb	0	; () banked
  7156  002EA4  6FBC               	movwf	cf_checkrange@i& (0+255),b
  7157  002EA6  0100               	movlb	0	; () banked
  7158  002EA8  51BA               	movf	??_cf_checkrange& (0+255),w,b
  7159  002EAA  D013               	goto	L40
  7160  002EAC                     l5505:
  7161                           
  7162                           ; BSR set to: 0
  7163                           ;config.c: 70: {
  7164                           ;config.c: 71: if (Cf.Data[i*3] > 32) {return valid;}
  7165  002EAC  0100               	movlb	0	; () banked
  7166  002EAE  0100               	movlb	0	; () banked
  7167  002EB0  51BC               	movf	cf_checkrange@i& (0+255),w,b
  7168  002EB2  0D03               	mullw	3
  7169  002EB4  0101               	movlb	1	; () banked
  7170  002EB6  0E00               	movlw	low _Cf	;volatile
  7171  002EB8  24F3               	addwf	prodl,w,c
  7172  002EBA  6ED9               	movwf	fsr2l,c
  7173  002EBC  0101               	movlb	1	; () banked
  7174  002EBE  0E01               	movlw	high _Cf	;volatile
  7175  002EC0  20F4               	addwfc	prodh,w,c
  7176  002EC2  6EDA               	movwf	fsr2h,c
  7177  002EC4  0E20               	movlw	32
  7178  002EC6  64DF               	cpfsgt	indf2,c
  7179  002EC8  D001               	goto	l5511
  7180  002ECA  D010               	goto	L39
  7181  002ECC                     l5511:
  7182  002ECC  0100               	movlb	0	; () banked
  7183  002ECE  0100               	movlb	0	; () banked
  7184  002ED0  2BBC               	incf	cf_checkrange@i& (0+255),f,b
  7185  002ED2                     L40:
  7186                           
  7187                           ; BSR set to: 0
  7188  002ED2  0E1F               	movlw	31
  7189  002ED4  0100               	movlb	0	; () banked
  7190  002ED6  0100               	movlb	0	; () banked
  7191  002ED8  65BC               	cpfsgt	cf_checkrange@i& (0+255),b
  7192  002EDA  D7E8               	goto	l5505
  7193                           
  7194                           ; BSR set to: 0
  7195                           ;config.c: 72: }
  7196                           ;config.c: 74: valid = 1;
  7197                           
  7198                           ; BSR set to: 0
  7199  002EDC  0100               	movlb	0	; () banked
  7200  002EDE  6FBA               	movwf	??_cf_checkrange& (0+255),b
  7201  002EE0  0E01               	movlw	1
  7202  002EE2  0100               	movlb	0	; () banked
  7203  002EE4  0100               	movlb	0	; () banked
  7204  002EE6  6FBB               	movwf	cf_checkrange@valid& (0+255),b
  7205  002EE8  0100               	movlb	0	; () banked
  7206  002EEA  51BA               	movf	??_cf_checkrange& (0+255),w,b
  7207  002EEC                     L39:
  7208                           
  7209                           ; BSR set to: 0
  7210                           ;config.c: 76: return valid;
  7211  002EEC  C0BB  F0BA         	movff	cf_checkrange@valid,??_cf_checkrange
  7212  002EF0  0100               	movlb	0	; () banked
  7213  002EF2  31BA               	rrcf	??_cf_checkrange& (0+255),w,b
  7214                           
  7215                           ; BSR set to: 0
  7216                           
  7217                           ; BSR set to: 0
  7218  002EF4  0012               	return	
  7219  002EF6  FFFF               	dw	65535	; errata NOP
  7220  002EF8                     __end_of_cf_checkrange:
  7221                           	opt stack 0
  7222                           tblptru	equ	0xFF8
  7223                           tblptrh	equ	0xFF7
  7224                           tblptrl	equ	0xFF6
  7225                           tablat	equ	0xFF5
  7226                           prodh	equ	0xFF4
  7227                           prodl	equ	0xFF3
  7228                           intcon	equ	0xFF2
  7229                           intcon2	equ	0xFF1
  7230                           postinc0	equ	0xFEE
  7231                           wreg	equ	0xFE8
  7232                           postdec1	equ	0xFE5
  7233                           fsr1l	equ	0xFE1
  7234                           indf2	equ	0xFDF
  7235                           postinc2	equ	0xFDE
  7236                           postdec2	equ	0xFDD
  7237                           fsr2h	equ	0xFDA
  7238                           fsr2l	equ	0xFD9
  7239                           status	equ	0xFD8
  7240                           
  7241 ;; *************** function _cf_checkout *****************
  7242 ;; Defined at:
  7243 ;;		line 33 in file "config.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;		None
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;  i               1    9[BANK0 ] unsigned char 
  7248 ;;  last_out        1    8[BANK0 ] unsigned char 
  7249 ;;  valid           1    7[BANK0 ] unsigned char 
  7250 ;; Return value:  Size  Location     Type
  7251 ;;		None               void
  7252 ;; Registers used:
  7253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7254 ;; Tracked objects:
  7255 ;;		On entry : 0/0
  7256 ;;		On exit  : 0/0
  7257 ;;		Unchanged: 0/0
  7258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7259 ;;      Params:         0       0       0       0       0       0       0
  7260 ;;      Locals:         0       3       0       0       0       0       0
  7261 ;;      Temps:          0       1       0       0       0       0       0
  7262 ;;      Totals:         0       4       0       0       0       0       0
  7263 ;;Total ram usage:        4 bytes
  7264 ;; Hardware stack levels used:    1
  7265 ;; Hardware stack levels required when called:    4
  7266 ;; This function calls:
  7267 ;;		___wmul
  7268 ;; This function is called by:
  7269 ;;		_cf_check
  7270 ;; This function uses a non-reentrant model
  7271 ;;
  7272                           
  7273                           	psect	text29
  7274  00215E                     __ptext29:
  7275                           	opt stack 0
  7276  00215E                     _cf_checkout:
  7277                           	opt stack 23
  7278                           
  7279                           ; BSR set to: 0
  7280                           ;incstack = 0
  7281  00215E  FFFF               	dw	65535
  7282                           
  7283                           ;config.c: 35: unsigned char i, valid = 0;
  7284  002160  0100               	movlb	0	; () banked
  7285  002162  6FC0               	movwf	??_cf_checkout& (0+255),b
  7286  002164  0E00               	movlw	0
  7287  002166  0100               	movlb	0	; () banked
  7288  002168  0100               	movlb	0	; () banked
  7289  00216A  6FC1               	movwf	cf_checkout@valid& (0+255),b
  7290  00216C  0100               	movlb	0	; () banked
  7291  00216E  51C0               	movf	??_cf_checkout& (0+255),w,b
  7292                           
  7293                           ;config.c: 36: unsigned char last_out = 0;
  7294  002170  0100               	movlb	0	; () banked
  7295  002172  6FC0               	movwf	??_cf_checkout& (0+255),b
  7296  002174  0E00               	movlw	0
  7297  002176  0100               	movlb	0	; () banked
  7298  002178  0100               	movlb	0	; () banked
  7299  00217A  6FC2               	movwf	cf_checkout@last_out& (0+255),b
  7300  00217C  0100               	movlb	0	; () banked
  7301  00217E  51C0               	movf	??_cf_checkout& (0+255),w,b
  7302                           
  7303                           ;config.c: 38: for (i = 0; i < 32; i ++)
  7304  002180  0100               	movlb	0	; () banked
  7305  002182  6FC0               	movwf	??_cf_checkout& (0+255),b
  7306  002184  0E00               	movlw	0
  7307  002186  0100               	movlb	0	; () banked
  7308  002188  0100               	movlb	0	; () banked
  7309  00218A  6FC3               	movwf	cf_checkout@i& (0+255),b
  7310  00218C  0100               	movlb	0	; () banked
  7311  00218E  51C0               	movf	??_cf_checkout& (0+255),w,b
  7312  002190  D046               	goto	L41
  7313  002192                     l5467:
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;config.c: 39: {
  7317                           ;config.c: 40: if (Cf.Data[i*3] == 0)
  7318  002192  0100               	movlb	0	; () banked
  7319  002194  0100               	movlb	0	; () banked
  7320  002196  51C3               	movf	cf_checkout@i& (0+255),w,b
  7321  002198  0D03               	mullw	3
  7322  00219A  0101               	movlb	1	; () banked
  7323  00219C  0E00               	movlw	low _Cf	;volatile
  7324  00219E  24F3               	addwf	prodl,w,c
  7325  0021A0  6ED9               	movwf	fsr2l,c
  7326  0021A2  0101               	movlb	1	; () banked
  7327  0021A4  0E01               	movlw	high _Cf	;volatile
  7328  0021A6  20F4               	addwfc	prodh,w,c
  7329  0021A8  6EDA               	movwf	fsr2h,c
  7330  0021AA  50DF               	movf	indf2,w,c
  7331  0021AC  A4D8               	btfss	status,2,c
  7332  0021AE  D02F               	goto	l5477
  7333                           
  7334                           ; BSR set to: 1
  7335                           ;config.c: 41: {
  7336                           ;config.c: 42: if (i == 0) {return valid;}
  7337  0021B0  0100               	movlb	0	; () banked
  7338  0021B2  0100               	movlb	0	; () banked
  7339  0021B4  67C3               	tstfsz	cf_checkout@i& (0+255),b
  7340  0021B6  D001               	goto	l417
  7341  0021B8  D061               	goto	l5495
  7342  0021BA                     l417:
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;config.c: 44: if (last_out == 0)
  7346  0021BA  0100               	movlb	0	; () banked
  7347  0021BC  0100               	movlb	0	; () banked
  7348  0021BE  67C2               	tstfsz	cf_checkout@last_out& (0+255),b
  7349  0021C0  D02B               	goto	l5483
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;config.c: 45: {
  7353                           ;config.c: 46: last_out = Cf.Data[(i - 1) * 3];
  7354  0021C2  0EFF               	movlw	255
  7355  0021C4  0100               	movlb	0	; () banked
  7356  0021C6  0100               	movlb	0	; () banked
  7357  0021C8  25C3               	addwf	cf_checkout@i& (0+255),w,b
  7358  0021CA  0100               	movlb	0	; () banked
  7359  0021CC  0100               	movlb	0	; () banked
  7360  0021CE  6FBA               	movwf	___wmul@multiplier& (0+255),b
  7361  0021D0  0100               	movlb	0	; () banked
  7362  0021D2  0100               	movlb	0	; () banked
  7363  0021D4  6BBB               	clrf	(___wmul@multiplier+1)& (0+255),b
  7364  0021D6  0EFF               	movlw	255
  7365  0021D8  23BB               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  7366  0021DA  0E00               	movlw	0
  7367  0021DC  0100               	movlb	0	; () banked
  7368  0021DE  0100               	movlb	0	; () banked
  7369  0021E0  6FBD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7370  0021E2  0E03               	movlw	3
  7371  0021E4  0100               	movlb	0	; () banked
  7372  0021E6  6FBC               	movwf	___wmul@multiplicand& (0+255),b
  7373  0021E8  ECB0  F017         	call	___wmul	;wreg free
  7374  0021EC  0101               	movlb	1	; () banked
  7375  0021EE  0E00               	movlw	low _Cf	;volatile
  7376  0021F0  0100               	movlb	0	; () banked
  7377  0021F2  0100               	movlb	0	; () banked
  7378  0021F4  25BA               	addwf	?___wmul& (0+255),w,b
  7379  0021F6  6ED9               	movwf	fsr2l,c
  7380  0021F8  0101               	movlb	1	; () banked
  7381  0021FA  0E01               	movlw	high _Cf	;volatile
  7382  0021FC  0100               	movlb	0	; () banked
  7383  0021FE  0100               	movlb	0	; () banked
  7384  002200  21BB               	addwfc	(?___wmul+1)& (0+255),w,b
  7385  002202  6EDA               	movwf	fsr2h,c
  7386  002204  50DF               	movf	indf2,w,c
  7387  002206  0100               	movlb	0	; () banked
  7388  002208  0100               	movlb	0	; () banked
  7389  00220A  6FC2               	movwf	cf_checkout@last_out& (0+255),b
  7390  00220C  D005               	goto	l5483
  7391  00220E                     l5477:
  7392                           
  7393                           ;config.c: 49: else
  7394                           ;config.c: 50: {
  7395                           ;config.c: 51: if (last_out != 0) {return valid;}
  7396  00220E  0100               	movlb	0	; () banked
  7397  002210  0100               	movlb	0	; () banked
  7398  002212  51C2               	movf	cf_checkout@last_out& (0+255),w,b
  7399  002214  A4D8               	btfss	status,2,c
  7400  002216  D032               	goto	l5495
  7401  002218                     l5483:
  7402                           
  7403                           ; BSR set to: 0
  7404  002218  0100               	movlb	0	; () banked
  7405  00221A  0100               	movlb	0	; () banked
  7406  00221C  2BC3               	incf	cf_checkout@i& (0+255),f,b
  7407  00221E                     L41:
  7408                           
  7409                           ; BSR set to: 0
  7410  00221E  0E1F               	movlw	31
  7411  002220  0100               	movlb	0	; () banked
  7412  002222  0100               	movlb	0	; () banked
  7413  002224  65C3               	cpfsgt	cf_checkout@i& (0+255),b
  7414  002226  D7B5               	goto	l5467
  7415                           
  7416                           ; BSR set to: 0
  7417                           ;config.c: 52: }
  7418                           ;config.c: 53: }
  7419                           ;config.c: 55: if ( ((last_out != 0) && (last_out == Cf.Data[96]))
  7420                           ;config.c: 56: || ((last_out == 0) && (Cf.Data[i*3] == Cf.Data[96])))
  7421                           
  7422                           ; BSR set to: 0
  7423  002228  0100               	movlb	0	; () banked
  7424  00222A  0100               	movlb	0	; () banked
  7425  00222C  51C2               	movf	cf_checkout@last_out& (0+255),w,b
  7426  00222E  B4D8               	btfsc	status,2,c
  7427  002230  D008               	goto	l426
  7428                           
  7429                           ; BSR set to: 0
  7430  002232  0101               	movlb	1	; () banked
  7431  002234  0101               	movlb	1	; () banked
  7432  002236  5160               	movf	(_Cf+96)& (0+255),w,b	;volatile
  7433  002238  0100               	movlb	0	; () banked
  7434  00223A  0100               	movlb	0	; () banked
  7435  00223C  19C2               	xorwf	cf_checkout@last_out& (0+255),w,b
  7436  00223E  B4D8               	btfsc	status,2,c
  7437  002240  D015               	goto	l5493
  7438  002242                     l426:
  7439                           
  7440                           ; BSR set to: 0
  7441  002242  0100               	movlb	0	; () banked
  7442  002244  0100               	movlb	0	; () banked
  7443  002246  67C2               	tstfsz	cf_checkout@last_out& (0+255),b
  7444  002248  D019               	goto	l5495
  7445                           
  7446                           ; BSR set to: 0
  7447  00224A  0100               	movlb	0	; () banked
  7448  00224C  0100               	movlb	0	; () banked
  7449  00224E  51C3               	movf	cf_checkout@i& (0+255),w,b
  7450  002250  0D03               	mullw	3
  7451  002252  0101               	movlb	1	; () banked
  7452  002254  0E00               	movlw	low _Cf	;volatile
  7453  002256  24F3               	addwf	prodl,w,c
  7454  002258  6ED9               	movwf	fsr2l,c
  7455  00225A  0101               	movlb	1	; () banked
  7456  00225C  0E01               	movlw	high _Cf	;volatile
  7457  00225E  20F4               	addwfc	prodh,w,c
  7458  002260  6EDA               	movwf	fsr2h,c
  7459  002262  0101               	movlb	1	; () banked
  7460  002264  0101               	movlb	1	; () banked
  7461  002266  5160               	movf	(_Cf+96)& (0+255),w,b	;volatile
  7462  002268  62DF               	cpfseq	indf2,c
  7463  00226A  D008               	goto	l5495
  7464  00226C                     l5493:
  7465                           
  7466                           ;config.c: 57: {
  7467                           ;config.c: 58: valid = 1;
  7468  00226C  0100               	movlb	0	; () banked
  7469  00226E  6FC0               	movwf	??_cf_checkout& (0+255),b
  7470  002270  0E01               	movlw	1
  7471  002272  0100               	movlb	0	; () banked
  7472  002274  0100               	movlb	0	; () banked
  7473  002276  6FC1               	movwf	cf_checkout@valid& (0+255),b
  7474  002278  0100               	movlb	0	; () banked
  7475  00227A  51C0               	movf	??_cf_checkout& (0+255),w,b
  7476  00227C                     l5495:
  7477                           
  7478                           ;config.c: 59: }
  7479                           ;config.c: 61: return valid;
  7480  00227C  C0C1  F0C0         	movff	cf_checkout@valid,??_cf_checkout
  7481  002280  0100               	movlb	0	; () banked
  7482  002282  31C0               	rrcf	??_cf_checkout& (0+255),w,b
  7483                           
  7484                           ; BSR set to: 0
  7485                           
  7486                           ; BSR set to: 0
  7487  002284  0012               	return	
  7488  002286  FFFF               	dw	65535	; errata NOP
  7489  002288                     __end_of_cf_checkout:
  7490                           	opt stack 0
  7491                           tblptru	equ	0xFF8
  7492                           tblptrh	equ	0xFF7
  7493                           tblptrl	equ	0xFF6
  7494                           tablat	equ	0xFF5
  7495                           prodh	equ	0xFF4
  7496                           prodl	equ	0xFF3
  7497                           intcon	equ	0xFF2
  7498                           intcon2	equ	0xFF1
  7499                           postinc0	equ	0xFEE
  7500                           wreg	equ	0xFE8
  7501                           postdec1	equ	0xFE5
  7502                           fsr1l	equ	0xFE1
  7503                           indf2	equ	0xFDF
  7504                           postinc2	equ	0xFDE
  7505                           postdec2	equ	0xFDD
  7506                           fsr2h	equ	0xFDA
  7507                           fsr2l	equ	0xFD9
  7508                           status	equ	0xFD8
  7509                           
  7510 ;; *************** function ___wmul *****************
  7511 ;; Defined at:
  7512 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\wmul.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7515 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;  product         2    4[BANK0 ] unsigned int 
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  2    0[BANK0 ] unsigned int 
  7520 ;; Registers used:
  7521 ;;		wreg, status,2, status,0, prodl, prodh
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7527 ;;      Params:         0       4       0       0       0       0       0
  7528 ;;      Locals:         0       2       0       0       0       0       0
  7529 ;;      Temps:          0       0       0       0       0       0       0
  7530 ;;      Totals:         0       6       0       0       0       0       0
  7531 ;;Total ram usage:        6 bytes
  7532 ;; Hardware stack levels used:    1
  7533 ;; Hardware stack levels required when called:    3
  7534 ;; This function calls:
  7535 ;;		Nothing
  7536 ;; This function is called by:
  7537 ;;		_cf_checkout
  7538 ;;		_DecToStr
  7539 ;;		_delay_s
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           	psect	text30
  7544  002F60                     __ptext30:
  7545                           	opt stack 0
  7546  002F60                     ___wmul:
  7547                           	opt stack 24
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;incstack = 0
  7551  002F60  FFFF               	dw	65535
  7552  002F62  0100               	movlb	0	; () banked
  7553  002F64  0100               	movlb	0	; () banked
  7554  002F66  51BA               	movf	___wmul@multiplier& (0+255),w,b
  7555  002F68  0100               	movlb	0	; () banked
  7556  002F6A  0100               	movlb	0	; () banked
  7557  002F6C  03BC               	mulwf	___wmul@multiplicand& (0+255),b
  7558  002F6E  CFF3 F0BE          	movff	prodl,___wmul@product
  7559  002F72  CFF4 F0BF          	movff	prodh,___wmul@product+1
  7560  002F76  0100               	movlb	0	; () banked
  7561  002F78  0100               	movlb	0	; () banked
  7562  002F7A  51BA               	movf	___wmul@multiplier& (0+255),w,b
  7563  002F7C  0100               	movlb	0	; () banked
  7564  002F7E  0100               	movlb	0	; () banked
  7565  002F80  03BD               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7566  002F82  CFF3 FFF4          	movff	prodl,prodh
  7567  002F86  6AF3               	clrf	prodl,c
  7568  002F88  50F3               	movf	prodl,w,c
  7569  002F8A  0100               	movlb	0	; () banked
  7570  002F8C  0100               	movlb	0	; () banked
  7571  002F8E  27BE               	addwf	___wmul@product& (0+255),f,b
  7572  002F90  50F4               	movf	prodh,w,c
  7573  002F92  0100               	movlb	0	; () banked
  7574  002F94  0100               	movlb	0	; () banked
  7575  002F96  23BF               	addwfc	(___wmul@product+1)& (0+255),f,b
  7576  002F98  0100               	movlb	0	; () banked
  7577  002F9A  0100               	movlb	0	; () banked
  7578  002F9C  51BB               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7579  002F9E  0100               	movlb	0	; () banked
  7580  002FA0  0100               	movlb	0	; () banked
  7581  002FA2  03BC               	mulwf	___wmul@multiplicand& (0+255),b
  7582  002FA4  CFF3 FFF4          	movff	prodl,prodh
  7583  002FA8  6AF3               	clrf	prodl,c
  7584  002FAA  50F3               	movf	prodl,w,c
  7585  002FAC  0100               	movlb	0	; () banked
  7586  002FAE  0100               	movlb	0	; () banked
  7587  002FB0  27BE               	addwf	___wmul@product& (0+255),f,b
  7588  002FB2  50F4               	movf	prodh,w,c
  7589  002FB4  0100               	movlb	0	; () banked
  7590  002FB6  0100               	movlb	0	; () banked
  7591  002FB8  23BF               	addwfc	(___wmul@product+1)& (0+255),f,b
  7592                           
  7593                           ; BSR set to: 0
  7594  002FBA  C0BE  F0BA         	movff	___wmul@product,?___wmul
  7595  002FBE  C0BF  F0BB         	movff	___wmul@product+1,?___wmul+1
  7596                           
  7597                           ; BSR set to: 0
  7598                           
  7599                           ; BSR set to: 0
  7600  002FC2  0012               	return	
  7601  002FC4  FFFF               	dw	65535	; errata NOP
  7602  002FC6                     __end_of___wmul:
  7603                           	opt stack 0
  7604                           tblptru	equ	0xFF8
  7605                           tblptrh	equ	0xFF7
  7606                           tblptrl	equ	0xFF6
  7607                           tablat	equ	0xFF5
  7608                           prodh	equ	0xFF4
  7609                           prodl	equ	0xFF3
  7610                           intcon	equ	0xFF2
  7611                           intcon2	equ	0xFF1
  7612                           postinc0	equ	0xFEE
  7613                           wreg	equ	0xFE8
  7614                           postdec1	equ	0xFE5
  7615                           fsr1l	equ	0xFE1
  7616                           indf2	equ	0xFDF
  7617                           postinc2	equ	0xFDE
  7618                           postdec2	equ	0xFDD
  7619                           fsr2h	equ	0xFDA
  7620                           fsr2l	equ	0xFD9
  7621                           status	equ	0xFD8
  7622                           
  7623 ;; *************** function _HexToAscii *****************
  7624 ;; Defined at:
  7625 ;;		line 28 in file "utils.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;  Value           1    wreg     unsigned char 
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;  Value           1    1[BANK0 ] unsigned char 
  7630 ;;  character       1    0[BANK0 ] unsigned char 
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  1    wreg      unsigned char 
  7633 ;; Registers used:
  7634 ;;		wreg, status,2, status,0
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7640 ;;      Params:         0       0       0       0       0       0       0
  7641 ;;      Locals:         0       2       0       0       0       0       0
  7642 ;;      Temps:          0       0       0       0       0       0       0
  7643 ;;      Totals:         0       2       0       0       0       0       0
  7644 ;;Total ram usage:        2 bytes
  7645 ;; Hardware stack levels used:    1
  7646 ;; Hardware stack levels required when called:    3
  7647 ;; This function calls:
  7648 ;;		Nothing
  7649 ;; This function is called by:
  7650 ;;		_cf_check_and_display
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text31
  7655  00347C                     __ptext31:
  7656                           	opt stack 0
  7657  00347C                     _HexToAscii:
  7658                           	opt stack 26
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;incstack = 0
  7662  00347C  FFFF               	dw	65535
  7663                           
  7664                           ;HexToAscii@Value stored from wreg
  7665  00347E  CFE8 F0BB          	movff	wreg,HexToAscii@Value
  7666                           
  7667                           ;utils.c: 30: char character;
  7668                           ;utils.c: 32: if (Value < 10)
  7669  003482  0E0A               	movlw	10
  7670  003484  0100               	movlb	0	; () banked
  7671  003486  0100               	movlb	0	; () banked
  7672  003488  5DBB               	subwf	HexToAscii@Value& (0+255),w,b
  7673  00348A  B0D8               	btfsc	status,0,c
  7674  00348C  D005               	goto	l5957
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;utils.c: 33: {
  7678                           ;utils.c: 34: character = Value + 0x30;
  7679  00348E  0100               	movlb	0	; () banked
  7680  003490  0100               	movlb	0	; () banked
  7681  003492  51BB               	movf	HexToAscii@Value& (0+255),w,b
  7682  003494  0F30               	addlw	48
  7683  003496  D004               	goto	L42
  7684  003498                     l5957:
  7685                           
  7686                           ; BSR set to: 0
  7687                           ;utils.c: 36: else
  7688                           ;utils.c: 37: {
  7689                           ;utils.c: 38: character = Value - 9 + 0x40;
  7690  003498  0100               	movlb	0	; () banked
  7691  00349A  0100               	movlb	0	; () banked
  7692  00349C  51BB               	movf	HexToAscii@Value& (0+255),w,b
  7693  00349E  0F37               	addlw	55
  7694  0034A0                     L42:
  7695  0034A0  0100               	movlb	0	; () banked
  7696  0034A2  0100               	movlb	0	; () banked
  7697  0034A4  6FBA               	movwf	HexToAscii@character& (0+255),b
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;utils.c: 39: }
  7701                           ;utils.c: 41: return character;
  7702                           
  7703                           ; BSR set to: 0
  7704  0034A6  0100               	movlb	0	; () banked
  7705  0034A8  0100               	movlb	0	; () banked
  7706  0034AA  51BA               	movf	HexToAscii@character& (0+255),w,b
  7707                           
  7708                           ; BSR set to: 0
  7709                           
  7710                           ; BSR set to: 0
  7711  0034AC  0012               	return	
  7712  0034AE  FFFF               	dw	65535	; errata NOP
  7713  0034B0                     __end_of_HexToAscii:
  7714                           	opt stack 0
  7715                           tblptru	equ	0xFF8
  7716                           tblptrh	equ	0xFF7
  7717                           tblptrl	equ	0xFF6
  7718                           tablat	equ	0xFF5
  7719                           prodh	equ	0xFF4
  7720                           prodl	equ	0xFF3
  7721                           intcon	equ	0xFF2
  7722                           intcon2	equ	0xFF1
  7723                           postinc0	equ	0xFEE
  7724                           wreg	equ	0xFE8
  7725                           postdec1	equ	0xFE5
  7726                           fsr1l	equ	0xFE1
  7727                           indf2	equ	0xFDF
  7728                           postinc2	equ	0xFDE
  7729                           postdec2	equ	0xFDD
  7730                           fsr2h	equ	0xFDA
  7731                           fsr2l	equ	0xFD9
  7732                           status	equ	0xFD8
  7733                           
  7734 ;; *************** function _bouton_refresh *****************
  7735 ;; Defined at:
  7736 ;;		line 11 in file "bouton.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;		None
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;  temp            1    4[BANK0 ] unsigned char 
  7741 ;;  i               1    5[BANK0 ] unsigned char 
  7742 ;; Return value:  Size  Location     Type
  7743 ;;		None               void
  7744 ;; Registers used:
  7745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7751 ;;      Params:         0       0       0       0       0       0       0
  7752 ;;      Locals:         0       4       0       0       0       0       0
  7753 ;;      Temps:          0       2       0       0       0       0       0
  7754 ;;      Totals:         0       6       0       0       0       0       0
  7755 ;;Total ram usage:        6 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    3
  7758 ;; This function calls:
  7759 ;;		Nothing
  7760 ;; This function is called by:
  7761 ;;		_main
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           	psect	text32
  7766  001188                     __ptext32:
  7767                           	opt stack 0
  7768  001188                     _bouton_refresh:
  7769                           	opt stack 27
  7770                           
  7771                           ; BSR set to: 0
  7772                           ;incstack = 0
  7773  001188  FFFF               	dw	65535
  7774                           
  7775                           ;bouton.c: 13: unsigned char i;
  7776                           ;bouton.c: 15: for (i = 0; i < Bp_Max; i++)
  7777  00118A  0100               	movlb	0	; () banked
  7778  00118C  6FBA               	movwf	??_bouton_refresh& (0+255),b
  7779  00118E  0E00               	movlw	0
  7780  001190  0100               	movlb	0	; () banked
  7781  001192  0100               	movlb	0	; () banked
  7782  001194  6FBF               	movwf	bouton_refresh@i& (0+255),b
  7783  001196  0100               	movlb	0	; () banked
  7784  001198  51BA               	movf	??_bouton_refresh& (0+255),w,b
  7785  00119A  D109               	goto	L44
  7786  00119C                     l6277:
  7787                           
  7788                           ; BSR set to: 0
  7789  00119C  0E00               	movlw	0
  7790  00119E  B084               	btfsc	3972,0,c	;volatile
  7791  0011A0  0E01               	movlw	1
  7792  0011A2  0100               	movlb	0	; () banked
  7793  0011A4  0100               	movlb	0	; () banked
  7794  0011A6  6FBE               	movwf	bouton_refresh@temp& (0+255),b
  7795  0011A8  D024               	goto	l6289
  7796  0011AA                     l6279:
  7797                           
  7798                           ; BSR set to: 0
  7799  0011AA  0E00               	movlw	0
  7800  0011AC  B284               	btfsc	3972,1,c	;volatile
  7801  0011AE  0E01               	movlw	1
  7802  0011B0  0100               	movlb	0	; () banked
  7803  0011B2  0100               	movlb	0	; () banked
  7804  0011B4  6FBE               	movwf	bouton_refresh@temp& (0+255),b
  7805  0011B6  D01D               	goto	l6289
  7806  0011B8                     l6281:
  7807                           
  7808                           ; BSR set to: 0
  7809  0011B8  0E00               	movlw	0
  7810  0011BA  BA82               	btfsc	3970,5,c	;volatile
  7811  0011BC  0E01               	movlw	1
  7812  0011BE  0100               	movlb	0	; () banked
  7813  0011C0  0100               	movlb	0	; () banked
  7814  0011C2  6FBE               	movwf	bouton_refresh@temp& (0+255),b
  7815  0011C4  D016               	goto	l6289
  7816  0011C6                     l6283:
  7817                           
  7818                           ; BSR set to: 0
  7819  0011C6  0E00               	movlw	0
  7820  0011C8  B081               	btfsc	3969,0,c	;volatile
  7821  0011CA  0E01               	movlw	1
  7822  0011CC  0100               	movlb	0	; () banked
  7823  0011CE  0100               	movlb	0	; () banked
  7824  0011D0  6FBE               	movwf	bouton_refresh@temp& (0+255),b
  7825  0011D2  D00F               	goto	l6289
  7826  0011D4                     l6287:
  7827                           
  7828                           ; BSR set to: 0
  7829  0011D4  0100               	movlb	0	; () banked
  7830  0011D6  0100               	movlb	0	; () banked
  7831  0011D8  51BF               	movf	bouton_refresh@i& (0+255),w,b
  7832                           
  7833                           ; Switch size 1, requested type "space"
  7834                           ; Number of cases is 4, Range of values is 0 to 3
  7835                           ; switch strategies available:
  7836                           ; Name         Instructions Cycles
  7837                           ; simple_byte           13     7 (average)
  7838                           ;	Chosen strategy is simple_byte
  7839  0011DA  0A00               	xorlw	0	; case 0
  7840  0011DC  B4D8               	btfsc	status,2,c
  7841  0011DE  D7DE               	goto	l6277
  7842  0011E0  0A01               	xorlw	1	; case 1
  7843  0011E2  B4D8               	btfsc	status,2,c
  7844  0011E4  D7E2               	goto	l6279
  7845  0011E6  0A03               	xorlw	3	; case 2
  7846  0011E8  B4D8               	btfsc	status,2,c
  7847  0011EA  D7E6               	goto	l6281
  7848  0011EC  0A01               	xorlw	1	; case 3
  7849  0011EE  B4D8               	btfsc	status,2,c
  7850  0011F0  D7EA               	goto	l6283
  7851  0011F2                     l6289:
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;bouton.c: 28: if (temp == Bouton[i].Memo)
  7855  0011F2  0100               	movlb	0	; () banked
  7856  0011F4  0100               	movlb	0	; () banked
  7857  0011F6  51BF               	movf	bouton_refresh@i& (0+255),w,b
  7858  0011F8  0D03               	mullw	3
  7859  0011FA  0E02               	movlw	2
  7860  0011FC  26F3               	addwf	prodl,f,c
  7861  0011FE  0E00               	movlw	0
  7862  001200  22F4               	addwfc	prodh,f,c
  7863  001202  0100               	movlb	0	; () banked
  7864  001204  0E8E               	movlw	low _Bouton
  7865  001206  24F3               	addwf	prodl,w,c
  7866  001208  6ED9               	movwf	fsr2l,c
  7867  00120A  0100               	movlb	0	; () banked
  7868  00120C  0E00               	movlw	high _Bouton
  7869  00120E  20F4               	addwfc	prodh,w,c
  7870  001210  6EDA               	movwf	fsr2h,c
  7871  001212  A0DF               	btfss	indf2,0,c
  7872  001214  D002               	goto	u5570
  7873  001216  0E01               	movlw	1
  7874  001218  D001               	goto	u5576
  7875  00121A                     u5570:
  7876  00121A  0E00               	movlw	0
  7877  00121C                     u5576:
  7878  00121C  0100               	movlb	0	; () banked
  7879  00121E  0100               	movlb	0	; () banked
  7880  001220  19BE               	xorwf	bouton_refresh@temp& (0+255),w,b
  7881  001222  A4D8               	btfss	status,2,c
  7882  001224  D098               	goto	l6305
  7883                           
  7884                           ; BSR set to: 0
  7885                           ;bouton.c: 29: {
  7886                           ;bouton.c: 30: if (Bouton[i].State != Bouton[i].Memo)
  7887  001226  0100               	movlb	0	; () banked
  7888  001228  0100               	movlb	0	; () banked
  7889  00122A  51BF               	movf	bouton_refresh@i& (0+255),w,b
  7890  00122C  0D03               	mullw	3
  7891  00122E  0E02               	movlw	2
  7892  001230  26F3               	addwf	prodl,f,c
  7893  001232  0E00               	movlw	0
  7894  001234  22F4               	addwfc	prodh,f,c
  7895  001236  0100               	movlb	0	; () banked
  7896  001238  0E8E               	movlw	low _Bouton
  7897  00123A  24F3               	addwf	prodl,w,c
  7898  00123C  6ED9               	movwf	fsr2l,c
  7899  00123E  0100               	movlb	0	; () banked
  7900  001240  0E00               	movlw	high _Bouton
  7901  001242  20F4               	addwfc	prodh,w,c
  7902  001244  6EDA               	movwf	fsr2h,c
  7903  001246  A0DF               	btfss	indf2,0,c
  7904  001248  D002               	goto	u5590
  7905  00124A  0E01               	movlw	1
  7906  00124C  D001               	goto	u5592
  7907  00124E                     u5590:
  7908  00124E  0E00               	movlw	0
  7909  001250                     u5592:
  7910  001250  0100               	movlb	0	; () banked
  7911  001252  6FBA               	movwf	??_bouton_refresh& (0+255),b
  7912  001254  0100               	movlb	0	; () banked
  7913  001256  0100               	movlb	0	; () banked
  7914  001258  51BF               	movf	bouton_refresh@i& (0+255),w,b
  7915  00125A  0D03               	mullw	3
  7916  00125C  0E02               	movlw	2
  7917  00125E  26F3               	addwf	prodl,f,c
  7918  001260  0E00               	movlw	0
  7919  001262  22F4               	addwfc	prodh,f,c
  7920  001264  0100               	movlb	0	; () banked
  7921  001266  0E8E               	movlw	low _Bouton
  7922  001268  24F3               	addwf	prodl,w,c
  7923  00126A  6ED9               	movwf	fsr2l,c
  7924  00126C  0100               	movlb	0	; () banked
  7925  00126E  0E00               	movlw	high _Bouton
  7926  001270  20F4               	addwfc	prodh,w,c
  7927  001272  6EDA               	movwf	fsr2h,c
  7928  001274  A2DF               	btfss	indf2,1,c
  7929  001276  D002               	goto	u5600
  7930  001278  0E01               	movlw	1
  7931  00127A  D001               	goto	u5602
  7932  00127C                     u5600:
  7933  00127C  0E00               	movlw	0
  7934  00127E                     u5602:
  7935  00127E  0100               	movlb	0	; () banked
  7936  001280  1BBA               	xorwf	??_bouton_refresh& (0+255),f,b
  7937  001282  B4D8               	btfsc	status,2,c
  7938  001284  D091               	goto	l6307
  7939                           
  7940                           ; BSR set to: 0
  7941                           ;bouton.c: 31: {
  7942                           ;bouton.c: 32: if ((((unsigned short) (Cptms - Bouton[i].Time) > (((i == Bp_Start) && (M
      +                          icro.Mods == 1)) ? 5 : 100)) ? 1 : 0))
  7943  001286  0100               	movlb	0	; () banked
  7944  001288  0100               	movlb	0	; () banked
  7945  00128A  51BF               	movf	bouton_refresh@i& (0+255),w,b
  7946  00128C  0A03               	xorlw	3
  7947  00128E  A4D8               	btfss	status,2,c
  7948  001290  D003               	goto	l6297
  7949                           
  7950                           ; BSR set to: 0
  7951  001292  0457               	decf	_Micro+5,w,c
  7952  001294  B4D8               	btfsc	status,2,c
  7953  001296  D006               	goto	l6299
  7954  001298                     l6297:
  7955                           
  7956                           ; BSR set to: 0
  7957  001298  0E00               	movlw	0
  7958  00129A  0100               	movlb	0	; () banked
  7959  00129C  0100               	movlb	0	; () banked
  7960  00129E  6FBD               	movwf	(_bouton_refresh$2134+1)& (0+255),b
  7961  0012A0  0E64               	movlw	100
  7962  0012A2  D005               	goto	L43
  7963  0012A4                     l6299:
  7964                           
  7965                           ; BSR set to: 0
  7966  0012A4  0E00               	movlw	0
  7967  0012A6  0100               	movlb	0	; () banked
  7968  0012A8  0100               	movlb	0	; () banked
  7969  0012AA  6FBD               	movwf	(_bouton_refresh$2134+1)& (0+255),b
  7970  0012AC  0E05               	movlw	5
  7971  0012AE                     L43:
  7972  0012AE  0100               	movlb	0	; () banked
  7973  0012B0  6FBC               	movwf	_bouton_refresh$2134& (0+255),b
  7974                           
  7975                           ; BSR set to: 0
  7976                           
  7977                           ; BSR set to: 0
  7978  0012B2  0100               	movlb	0	; () banked
  7979  0012B4  0100               	movlb	0	; () banked
  7980  0012B6  51BF               	movf	bouton_refresh@i& (0+255),w,b
  7981  0012B8  0D03               	mullw	3
  7982  0012BA  0100               	movlb	0	; () banked
  7983  0012BC  0E8E               	movlw	low _Bouton
  7984  0012BE  24F3               	addwf	prodl,w,c
  7985  0012C0  6ED9               	movwf	fsr2l,c
  7986  0012C2  0100               	movlb	0	; () banked
  7987  0012C4  0E00               	movlw	high _Bouton
  7988  0012C6  20F4               	addwfc	prodh,w,c
  7989  0012C8  6EDA               	movwf	fsr2h,c
  7990  0012CA  CFDE F0BA          	movff	postinc2,??_bouton_refresh
  7991  0012CE  CFDD F0BB          	movff	postdec2,??_bouton_refresh+1
  7992  0012D2  0100               	movlb	0	; () banked
  7993  0012D4  1FBA               	comf	??_bouton_refresh& (0+255),f,b
  7994  0012D6  1FBB               	comf	(??_bouton_refresh+1)& (0+255),f,b
  7995  0012D8  4BBA               	infsnz	??_bouton_refresh& (0+255),f,b
  7996  0012DA  2BBB               	incf	(??_bouton_refresh+1)& (0+255),f,b
  7997  0012DC  504F               	movf	_Cptms,w,c	;volatile
  7998  0012DE  0100               	movlb	0	; () banked
  7999  0012E0  27BA               	addwf	??_bouton_refresh& (0+255),f,b
  8000  0012E2  5050               	movf	_Cptms+1,w,c	;volatile
  8001  0012E4  0100               	movlb	0	; () banked
  8002  0012E6  23BB               	addwfc	(??_bouton_refresh+1)& (0+255),f,b
  8003  0012E8  0100               	movlb	0	; () banked
  8004  0012EA  51BA               	movf	??_bouton_refresh& (0+255),w,b
  8005  0012EC  0100               	movlb	0	; () banked
  8006  0012EE  0100               	movlb	0	; () banked
  8007  0012F0  5DBC               	subwf	_bouton_refresh$2134& (0+255),w,b
  8008  0012F2  0100               	movlb	0	; () banked
  8009  0012F4  51BB               	movf	(??_bouton_refresh+1)& (0+255),w,b
  8010  0012F6  0100               	movlb	0	; () banked
  8011  0012F8  0100               	movlb	0	; () banked
  8012  0012FA  59BD               	subwfb	(_bouton_refresh$2134+1)& (0+255),w,b
  8013  0012FC  B0D8               	btfsc	status,0,c
  8014  0012FE  D054               	goto	l6307
  8015                           
  8016                           ; BSR set to: 0
  8017                           ;bouton.c: 33: {
  8018                           ;bouton.c: 34: Bouton[i].State = Bouton[i].Memo;
  8019  001300  0100               	movlb	0	; () banked
  8020  001302  0100               	movlb	0	; () banked
  8021  001304  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8022  001306  0D03               	mullw	3
  8023  001308  0E02               	movlw	2
  8024  00130A  26F3               	addwf	prodl,f,c
  8025  00130C  0E00               	movlw	0
  8026  00130E  22F4               	addwfc	prodh,f,c
  8027  001310  0100               	movlb	0	; () banked
  8028  001312  0E8E               	movlw	low _Bouton
  8029  001314  24F3               	addwf	prodl,w,c
  8030  001316  6ED9               	movwf	fsr2l,c
  8031  001318  0100               	movlb	0	; () banked
  8032  00131A  0E00               	movlw	high _Bouton
  8033  00131C  20F4               	addwfc	prodh,w,c
  8034  00131E  6EDA               	movwf	fsr2h,c
  8035  001320  0100               	movlb	0	; () banked
  8036  001322  0100               	movlb	0	; () banked
  8037  001324  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8038  001326  0D03               	mullw	3
  8039  001328  0E02               	movlw	2
  8040  00132A  26F3               	addwf	prodl,f,c
  8041  00132C  0E00               	movlw	0
  8042  00132E  22F4               	addwfc	prodh,f,c
  8043  001330  0100               	movlb	0	; () banked
  8044  001332  0E8E               	movlw	low _Bouton
  8045  001334  24F3               	addwf	prodl,w,c
  8046  001336  6EE1               	movwf	fsr1l,c
  8047  001338  0100               	movlb	0	; () banked
  8048  00133A  0E00               	movlw	high _Bouton
  8049  00133C  20F4               	addwfc	prodh,w,c
  8050  00133E  6EE2               	movwf	fsr1h,c
  8051  001340  0100               	movlb	0	; () banked
  8052  001342  A0DF               	btfss	indf2,0,c
  8053  001344  D002               	bra	u5655
  8054  001346  0100               	movlb	0	; () banked
  8055  001348  82E7               	bsf	indf1,1,c
  8056  00134A                     u5655:
  8057  00134A  0100               	movlb	0	; () banked
  8058  00134C  B0DF               	btfsc	indf2,0,c
  8059  00134E  D002               	bra	u5656
  8060  001350  0100               	movlb	0	; () banked
  8061  001352  92E7               	bcf	indf1,1,c
  8062  001354                     u5656:
  8063  001354  D029               	goto	l6307
  8064  001356                     l6305:
  8065                           
  8066                           ; BSR set to: 0
  8067                           ;bouton.c: 38: else
  8068                           ;bouton.c: 39: {
  8069                           ;bouton.c: 40: Bouton[i].Memo = temp;
  8070  001356  0100               	movlb	0	; () banked
  8071  001358  0100               	movlb	0	; () banked
  8072  00135A  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8073  00135C  0D03               	mullw	3
  8074  00135E  0E02               	movlw	2
  8075  001360  26F3               	addwf	prodl,f,c
  8076  001362  0E00               	movlw	0
  8077  001364  22F4               	addwfc	prodh,f,c
  8078  001366  0100               	movlb	0	; () banked
  8079  001368  0E8E               	movlw	low _Bouton
  8080  00136A  24F3               	addwf	prodl,w,c
  8081  00136C  6ED9               	movwf	fsr2l,c
  8082  00136E  0100               	movlb	0	; () banked
  8083  001370  0E00               	movlw	high _Bouton
  8084  001372  20F4               	addwfc	prodh,w,c
  8085  001374  6EDA               	movwf	fsr2h,c
  8086  001376  0100               	movlb	0	; () banked
  8087  001378  0100               	movlb	0	; () banked
  8088  00137A  B1BE               	btfsc	bouton_refresh@temp& (0+255),0,b
  8089  00137C  D003               	bra	u5665
  8090  00137E  0100               	movlb	0	; () banked
  8091  001380  90DF               	bcf	indf2,0,c
  8092  001382  D002               	bra	u5666
  8093  001384                     u5665:
  8094  001384  0100               	movlb	0	; () banked
  8095  001386  80DF               	bsf	indf2,0,c
  8096  001388                     u5666:
  8097                           
  8098                           ;bouton.c: 41: Bouton[i].Time = Cptms;
  8099  001388  0100               	movlb	0	; () banked
  8100  00138A  0100               	movlb	0	; () banked
  8101  00138C  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8102  00138E  0D03               	mullw	3
  8103  001390  0100               	movlb	0	; () banked
  8104  001392  0E8E               	movlw	low _Bouton
  8105  001394  24F3               	addwf	prodl,w,c
  8106  001396  6ED9               	movwf	fsr2l,c
  8107  001398  0100               	movlb	0	; () banked
  8108  00139A  0E00               	movlw	high _Bouton
  8109  00139C  20F4               	addwfc	prodh,w,c
  8110  00139E  6EDA               	movwf	fsr2h,c
  8111  0013A0  C04F  FFDE         	movff	_Cptms,postinc2	;volatile
  8112  0013A4  C050  FFDD         	movff	_Cptms+1,postdec2	;volatile
  8113  0013A8                     l6307:
  8114                           
  8115                           ; BSR set to: 0
  8116  0013A8  0100               	movlb	0	; () banked
  8117  0013AA  0100               	movlb	0	; () banked
  8118  0013AC  2BBF               	incf	bouton_refresh@i& (0+255),f,b
  8119  0013AE                     L44:
  8120                           
  8121                           ; BSR set to: 0
  8122  0013AE  0E03               	movlw	3
  8123  0013B0  0100               	movlb	0	; () banked
  8124  0013B2  0100               	movlb	0	; () banked
  8125  0013B4  65BF               	cpfsgt	bouton_refresh@i& (0+255),b
  8126  0013B6  D70E               	goto	l6287
  8127                           
  8128                           ; BSR set to: 0
  8129                           
  8130                           ; BSR set to: 0
  8131  0013B8  0012               	return	
  8132  0013BA  FFFF               	dw	65535	; errata NOP
  8133  0013BC                     __end_of_bouton_refresh:
  8134                           	opt stack 0
  8135                           tblptru	equ	0xFF8
  8136                           tblptrh	equ	0xFF7
  8137                           tblptrl	equ	0xFF6
  8138                           tablat	equ	0xFF5
  8139                           prodh	equ	0xFF4
  8140                           prodl	equ	0xFF3
  8141                           intcon	equ	0xFF2
  8142                           intcon2	equ	0xFF1
  8143                           postinc0	equ	0xFEE
  8144                           wreg	equ	0xFE8
  8145                           indf1	equ	0xFE7
  8146                           postdec1	equ	0xFE5
  8147                           fsr1h	equ	0xFE2
  8148                           fsr1l	equ	0xFE1
  8149                           indf2	equ	0xFDF
  8150                           postinc2	equ	0xFDE
  8151                           postdec2	equ	0xFDD
  8152                           fsr2h	equ	0xFDA
  8153                           fsr2l	equ	0xFD9
  8154                           status	equ	0xFD8
  8155                           
  8156 ;; *************** function _bouton_init *****************
  8157 ;; Defined at:
  8158 ;;		line 3 in file "bouton.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;		None
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;		None
  8163 ;; Return value:  Size  Location     Type
  8164 ;;		None               void
  8165 ;; Registers used:
  8166 ;;		None
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8172 ;;      Params:         0       0       0       0       0       0       0
  8173 ;;      Locals:         0       0       0       0       0       0       0
  8174 ;;      Temps:          0       0       0       0       0       0       0
  8175 ;;      Totals:         0       0       0       0       0       0       0
  8176 ;;Total ram usage:        0 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; Hardware stack levels required when called:    3
  8179 ;; This function calls:
  8180 ;;		Nothing
  8181 ;; This function is called by:
  8182 ;;		_main
  8183 ;; This function uses a non-reentrant model
  8184 ;;
  8185                           
  8186                           	psect	text33
  8187  0032CE                     __ptext33:
  8188                           	opt stack 0
  8189  0032CE                     _bouton_init:
  8190                           	opt stack 27
  8191                           
  8192                           ; BSR set to: 0
  8193                           ;incstack = 0
  8194  0032CE  FFFF               	dw	65535
  8195                           
  8196                           ;bouton.c: 5: Bouton[Bp_On].State = PORTEbits.RE0;
  8197  0032D0  A084               	btfss	3972,0,c	;volatile
  8198  0032D2  D004               	bra	u5525
  8199  0032D4  0100               	movlb	0	; () banked
  8200  0032D6  0100               	movlb	0	; () banked
  8201  0032D8  8390               	bsf	(_Bouton+2)& (0+255),1,b
  8202  0032DA  D003               	bra	u5527
  8203  0032DC                     u5525:
  8204  0032DC  0100               	movlb	0	; () banked
  8205  0032DE  0100               	movlb	0	; () banked
  8206  0032E0  9390               	bcf	(_Bouton+2)& (0+255),1,b
  8207  0032E2                     u5527:
  8208                           
  8209                           ;bouton.c: 6: Bouton[Bp_IdTest].State = PORTEbits.RE1;
  8210  0032E2  A284               	btfss	3972,1,c	;volatile
  8211  0032E4  D004               	bra	u5535
  8212  0032E6  0100               	movlb	0	; () banked
  8213  0032E8  0100               	movlb	0	; () banked
  8214  0032EA  8393               	bsf	(_Bouton+5)& (0+255),1,b
  8215  0032EC  D003               	bra	u5537
  8216  0032EE                     u5535:
  8217  0032EE  0100               	movlb	0	; () banked
  8218  0032F0  0100               	movlb	0	; () banked
  8219  0032F2  9393               	bcf	(_Bouton+5)& (0+255),1,b
  8220  0032F4                     u5537:
  8221                           
  8222                           ;bouton.c: 7: Bouton[Comu_Test].State = PORTCbits.RC5;
  8223  0032F4  AA82               	btfss	3970,5,c	;volatile
  8224  0032F6  D004               	bra	u5545
  8225  0032F8  0100               	movlb	0	; () banked
  8226  0032FA  0100               	movlb	0	; () banked
  8227  0032FC  8396               	bsf	(_Bouton+8)& (0+255),1,b
  8228  0032FE  D003               	bra	u5547
  8229  003300                     u5545:
  8230  003300  0100               	movlb	0	; () banked
  8231  003302  0100               	movlb	0	; () banked
  8232  003304  9396               	bcf	(_Bouton+8)& (0+255),1,b
  8233  003306                     u5547:
  8234                           
  8235                           ;bouton.c: 8: Bouton[Bp_Start].State = PORTBbits.RB0;
  8236  003306  A081               	btfss	3969,0,c	;volatile
  8237  003308  D004               	bra	u5555
  8238  00330A  0100               	movlb	0	; () banked
  8239  00330C  0100               	movlb	0	; () banked
  8240  00330E  8399               	bsf	(_Bouton+11)& (0+255),1,b
  8241  003310  D003               	bra	u5557
  8242  003312                     u5555:
  8243  003312  0100               	movlb	0	; () banked
  8244  003314  0100               	movlb	0	; () banked
  8245  003316  9399               	bcf	(_Bouton+11)& (0+255),1,b
  8246  003318                     u5557:
  8247                           
  8248                           ; BSR set to: 0
  8249  003318  0012               	return	
  8250  00331A  FFFF               	dw	65535	; errata NOP
  8251  00331C                     __end_of_bouton_init:
  8252                           	opt stack 0
  8253                           tblptru	equ	0xFF8
  8254                           tblptrh	equ	0xFF7
  8255                           tblptrl	equ	0xFF6
  8256                           tablat	equ	0xFF5
  8257                           prodh	equ	0xFF4
  8258                           prodl	equ	0xFF3
  8259                           intcon	equ	0xFF2
  8260                           intcon2	equ	0xFF1
  8261                           postinc0	equ	0xFEE
  8262                           wreg	equ	0xFE8
  8263                           indf1	equ	0xFE7
  8264                           postdec1	equ	0xFE5
  8265                           fsr1h	equ	0xFE2
  8266                           fsr1l	equ	0xFE1
  8267                           indf2	equ	0xFDF
  8268                           postinc2	equ	0xFDE
  8269                           postdec2	equ	0xFDD
  8270                           fsr2h	equ	0xFDA
  8271                           fsr2l	equ	0xFD9
  8272                           status	equ	0xFD8
  8273                           
  8274 ;; *************** function _armement_process *****************
  8275 ;; Defined at:
  8276 ;;		line 24 in file "armement.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;		None
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;  temp            2   38[BANK0 ] unsigned short 
  8281 ;; Return value:  Size  Location     Type
  8282 ;;		None               void
  8283 ;; Registers used:
  8284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8290 ;;      Params:         0       0       0       0       0       0       0
  8291 ;;      Locals:         0       2       0       0       0       0       0
  8292 ;;      Temps:          0       2       0       0       0       0       0
  8293 ;;      Totals:         0       4       0       0       0       0       0
  8294 ;;Total ram usage:        4 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; Hardware stack levels required when called:    7
  8297 ;; This function calls:
  8298 ;;		_arm_UAlim_1A
  8299 ;;		_check_comutest
  8300 ;;		_ecran_blank
  8301 ;;		_ecran_wait
  8302 ;;		_itoa
  8303 ;; This function is called by:
  8304 ;;		_main
  8305 ;; This function uses a non-reentrant model
  8306 ;;
  8307                           
  8308                           	psect	text34
  8309  0018E4                     __ptext34:
  8310                           	opt stack 0
  8311  0018E4                     _armement_process:
  8312                           	opt stack 23
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;incstack = 0
  8316  0018E4  FFFF               	dw	65535
  8317                           
  8318                           ;armement.c: 26: unsigned short temp;
  8319                           ;armement.c: 28: switch(Arm.Step)
  8320  0018E6  D0B8               	goto	l6561
  8321  0018E8                     l1027:
  8322                           
  8323                           ; BSR set to: 0
  8324                           ;armement.c: 31: if (Bouton[Bp_On].State == 1)
  8325  0018E8  0100               	movlb	0	; () banked
  8326  0018EA  A390               	btfss	(_Bouton+2)& (0+255),1,b
  8327  0018EC  D0C4               	goto	l1041
  8328                           
  8329                           ; BSR set to: 0
  8330                           ;armement.c: 32: {
  8331                           ;armement.c: 33: Arm.Step = 0x00;
  8332  0018EE  0100               	movlb	0	; () banked
  8333  0018F0  6FDE               	movwf	??_armement_process& (0+255),b
  8334  0018F2  0E00               	movlw	0
  8335  0018F4  D04D               	goto	L45
  8336  0018F6                     l6521:
  8337                           
  8338                           ; BSR set to: 0
  8339                           ;armement.c: 37: check_comutest(1);
  8340  0018F6  0E01               	movlw	1
  8341  0018F8  EC9E  F018         	call	_check_comutest
  8342                           
  8343                           ;armement.c: 39: temp = arm_UAlim_1A();
  8344  0018FC  EC59  F012         	call	_arm_UAlim_1A	;wreg free
  8345  001900  0100               	movlb	0	; () banked
  8346  001902  C0D6  F0E0         	movff	?_arm_UAlim_1A,armement_process@temp
  8347  001906  0100               	movlb	0	; () banked
  8348  001908  C0D7  F0E1         	movff	?_arm_UAlim_1A+1,armement_process@temp+1
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;armement.c: 41: Ecran.Digits = PrintTest;
  8352  00190C  0100               	movlb	0	; () banked
  8353  00190E  0E00               	movlw	high _PrintTest
  8354  001910  0100               	movlb	0	; () banked
  8355  001912  0100               	movlb	0	; () banked
  8356  001914  6FAF               	movwf	(_Ecran+5)& (0+255),b
  8357  001916  0100               	movlb	0	; () banked
  8358  001918  0EE5               	movlw	low _PrintTest
  8359  00191A  0100               	movlb	0	; () banked
  8360  00191C  0100               	movlb	0	; () banked
  8361  00191E  6FAE               	movwf	(_Ecran+4)& (0+255),b
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;armement.c: 43: itoa(Ecran.Digits,temp,10);
  8365  001920  0100               	movlb	0	; () banked
  8366  001922  0100               	movlb	0	; () banked
  8367  001924  C0AF  F0CC         	movff	_Ecran+5,itoa@buf+1
  8368  001928  0100               	movlb	0	; () banked
  8369  00192A  0100               	movlb	0	; () banked
  8370  00192C  C0AE  F0CB         	movff	_Ecran+4,itoa@buf
  8371  001930  C0E0  F0CD         	movff	armement_process@temp,itoa@val
  8372  001934  C0E1  F0CE         	movff	armement_process@temp+1,itoa@val+1
  8373  001938  0E00               	movlw	0
  8374  00193A  0100               	movlb	0	; () banked
  8375  00193C  0100               	movlb	0	; () banked
  8376  00193E  6FD0               	movwf	(itoa@base+1)& (0+255),b
  8377  001940  0E0A               	movlw	10
  8378  001942  0100               	movlb	0	; () banked
  8379  001944  6FCF               	movwf	itoa@base& (0+255),b
  8380  001946  EC34  F016         	call	_itoa	;wreg free
  8381                           
  8382                           ;armement.c: 45: Ecran.Dot[0] = 0;
  8383  00194A  0100               	movlb	0	; () banked
  8384  00194C  6FDE               	movwf	??_armement_process& (0+255),b
  8385  00194E  0E00               	movlw	0
  8386  001950  0100               	movlb	0	; () banked
  8387  001952  0100               	movlb	0	; () banked
  8388  001954  6FB0               	movwf	(_Ecran+6)& (0+255),b
  8389  001956  0100               	movlb	0	; () banked
  8390  001958  51DE               	movf	??_armement_process& (0+255),w,b
  8391                           
  8392                           ; BSR set to: 0
  8393                           ;armement.c: 46: Ecran.Dot[1] = 1;
  8394  00195A  0100               	movlb	0	; () banked
  8395  00195C  6FDE               	movwf	??_armement_process& (0+255),b
  8396  00195E  0E01               	movlw	1
  8397  001960  0100               	movlb	0	; () banked
  8398  001962  0100               	movlb	0	; () banked
  8399  001964  6FB1               	movwf	(_Ecran+7)& (0+255),b
  8400  001966  0100               	movlb	0	; () banked
  8401  001968  51DE               	movf	??_armement_process& (0+255),w,b
  8402                           
  8403                           ; BSR set to: 0
  8404                           ;armement.c: 47: Ecran.Dot[2] = 0;
  8405  00196A  0100               	movlb	0	; () banked
  8406  00196C  6FDE               	movwf	??_armement_process& (0+255),b
  8407  00196E  0E00               	movlw	0
  8408  001970  0100               	movlb	0	; () banked
  8409  001972  0100               	movlb	0	; () banked
  8410  001974  6FB2               	movwf	(_Ecran+8)& (0+255),b
  8411  001976  0100               	movlb	0	; () banked
  8412  001978  51DE               	movf	??_armement_process& (0+255),w,b
  8413                           
  8414                           ; BSR set to: 0
  8415                           ;armement.c: 48: Ecran.Dot[3] = 0;
  8416  00197A  0100               	movlb	0	; () banked
  8417  00197C  6FDE               	movwf	??_armement_process& (0+255),b
  8418  00197E  0E00               	movlw	0
  8419  001980  0100               	movlb	0	; () banked
  8420  001982  0100               	movlb	0	; () banked
  8421  001984  6FB3               	movwf	(_Ecran+9)& (0+255),b
  8422  001986  0100               	movlb	0	; () banked
  8423  001988  51DE               	movf	??_armement_process& (0+255),w,b
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;armement.c: 50: Arm.Step = 0x02;
  8427  00198A  0100               	movlb	0	; () banked
  8428  00198C  6FDE               	movwf	??_armement_process& (0+255),b
  8429  00198E  0E02               	movlw	2
  8430  001990                     L45:
  8431  001990  0100               	movlb	0	; () banked
  8432  001992  0100               	movlb	0	; () banked
  8433  001994  6F9A               	movwf	_Arm& (0+255),b
  8434  001996  D05D               	goto	L46
  8435  001998                     l1031:
  8436                           
  8437                           ; BSR set to: 0
  8438                           ;armement.c: 53: if (Bouton[Bp_On].State == 0)
  8439  001998  0100               	movlb	0	; () banked
  8440  00199A  B390               	btfsc	(_Bouton+2)& (0+255),1,b
  8441  00199C  D06C               	goto	l1041
  8442                           
  8443                           ; BSR set to: 0
  8444                           ;armement.c: 54: {
  8445                           ;armement.c: 55: Arm.Time = Cptms;
  8446  00199E  C04F  F09C         	movff	_Cptms,_Arm+2	;volatile
  8447  0019A2  C050  F09D         	movff	_Cptms+1,_Arm+3	;volatile
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;armement.c: 56: Arm.Step = 0x03;
  8451  0019A6  0100               	movlb	0	; () banked
  8452  0019A8  6FDE               	movwf	??_armement_process& (0+255),b
  8453  0019AA  0E03               	movlw	3
  8454  0019AC  0100               	movlb	0	; () banked
  8455  0019AE  0100               	movlb	0	; () banked
  8456  0019B0  6F9A               	movwf	_Arm& (0+255),b
  8457  0019B2  0100               	movlb	0	; () banked
  8458  0019B4  51DE               	movf	??_armement_process& (0+255),w,b
  8459                           
  8460                           ; BSR set to: 0
  8461                           ;armement.c: 58: ecran_blank();
  8462  0019B6  ECE3  F017         	call	_ecran_blank	;wreg free
  8463  0019BA  D05D               	goto	l1041
  8464  0019BC                     l1033:
  8465                           
  8466                           ; BSR set to: 0
  8467                           ;armement.c: 62: if (Bouton[Bp_On].State == 1)
  8468  0019BC  0100               	movlb	0	; () banked
  8469  0019BE  A390               	btfss	(_Bouton+2)& (0+255),1,b
  8470  0019C0  D009               	goto	l1034
  8471                           
  8472                           ; BSR set to: 0
  8473                           ;armement.c: 63: {
  8474                           ;armement.c: 64: Micro.Phase = 0x00;
  8475  0019C2  0100               	movlb	0	; () banked
  8476  0019C4  6FDE               	movwf	??_armement_process& (0+255),b
  8477  0019C6  0E00               	movlw	0
  8478  0019C8  6E54               	movwf	_Micro+2,c
  8479  0019CA  0100               	movlb	0	; () banked
  8480  0019CC  51DE               	movf	??_armement_process& (0+255),w,b
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;armement.c: 66: ecran_wait();
  8484  0019CE  EC9C  F01A         	call	_ecran_wait	;wreg free
  8485                           
  8486                           ;armement.c: 67: }
  8487  0019D2  D051               	goto	l1041
  8488  0019D4                     l1034:
  8489                           
  8490                           ; BSR set to: 0
  8491                           ;armement.c: 68: else if (Bouton[Bp_Start].State == 0)
  8492  0019D4  0100               	movlb	0	; () banked
  8493  0019D6  A399               	btfss	(_Bouton+11)& (0+255),1,b
  8494  0019D8  D04E               	goto	l1041
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;armement.c: 72: else if ((((unsigned short) (Cptms - Arm.Time) > 4000) ? 1 : 0))
  8498                           
  8499                           ; BSR set to: 0
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;armement.c: 69: {
  8503                           ;armement.c: 71: }
  8504  0019DA  0100               	movlb	0	; () banked
  8505  0019DC  EE20  F09C         	lfsr	2,_Arm+2
  8506  0019E0  CFDE F0DE          	movff	postinc2,??_armement_process
  8507  0019E4  CFDD F0DF          	movff	postdec2,??_armement_process+1
  8508  0019E8  0100               	movlb	0	; () banked
  8509  0019EA  1FDE               	comf	??_armement_process& (0+255),f,b
  8510  0019EC  1FDF               	comf	(??_armement_process+1)& (0+255),f,b
  8511  0019EE  4BDE               	infsnz	??_armement_process& (0+255),f,b
  8512  0019F0  2BDF               	incf	(??_armement_process+1)& (0+255),f,b
  8513  0019F2  504F               	movf	_Cptms,w,c	;volatile
  8514  0019F4  0100               	movlb	0	; () banked
  8515  0019F6  27DE               	addwf	??_armement_process& (0+255),f,b
  8516  0019F8  5050               	movf	_Cptms+1,w,c	;volatile
  8517  0019FA  0100               	movlb	0	; () banked
  8518  0019FC  23DF               	addwfc	(??_armement_process+1)& (0+255),f,b
  8519  0019FE  0EA1               	movlw	161
  8520  001A00  0100               	movlb	0	; () banked
  8521  001A02  5DDE               	subwf	??_armement_process& (0+255),w,b
  8522  001A04  0E0F               	movlw	15
  8523  001A06  59DF               	subwfb	(??_armement_process+1)& (0+255),w,b
  8524  001A08  B0D8               	btfsc	status,0,c
  8525  001A0A  D035               	goto	l1041
  8526                           
  8527                           ; BSR set to: 0
  8528                           ;armement.c: 76: else if ((((unsigned short) (Cptms - Arm.Time) > 3000) ? 1 : 0))
  8529                           
  8530                           ; BSR set to: 0
  8531                           
  8532                           ; BSR set to: 0
  8533                           ;armement.c: 73: {
  8534                           ;armement.c: 75: }
  8535  001A0C  0100               	movlb	0	; () banked
  8536  001A0E  EE20  F09C         	lfsr	2,_Arm+2
  8537  001A12  CFDE F0DE          	movff	postinc2,??_armement_process
  8538  001A16  CFDD F0DF          	movff	postdec2,??_armement_process+1
  8539  001A1A  0100               	movlb	0	; () banked
  8540  001A1C  1FDE               	comf	??_armement_process& (0+255),f,b
  8541  001A1E  1FDF               	comf	(??_armement_process+1)& (0+255),f,b
  8542  001A20  4BDE               	infsnz	??_armement_process& (0+255),f,b
  8543  001A22  2BDF               	incf	(??_armement_process+1)& (0+255),f,b
  8544  001A24  504F               	movf	_Cptms,w,c	;volatile
  8545  001A26  0100               	movlb	0	; () banked
  8546  001A28  27DE               	addwf	??_armement_process& (0+255),f,b
  8547  001A2A  5050               	movf	_Cptms+1,w,c	;volatile
  8548  001A2C  0100               	movlb	0	; () banked
  8549  001A2E  23DF               	addwfc	(??_armement_process+1)& (0+255),f,b
  8550  001A30  0EB9               	movlw	185
  8551  001A32  0100               	movlb	0	; () banked
  8552  001A34  5DDE               	subwf	??_armement_process& (0+255),w,b
  8553  001A36  0E0B               	movlw	11
  8554  001A38  59DF               	subwfb	(??_armement_process+1)& (0+255),w,b
  8555  001A3A  A0D8               	btfss	status,0,c
  8556  001A3C  D01C               	goto	l1041
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;armement.c: 77: {
  8560                           ;armement.c: 78: Micro.Phase = 0x03;
  8561  001A3E  0100               	movlb	0	; () banked
  8562  001A40  6FDE               	movwf	??_armement_process& (0+255),b
  8563  001A42  0E03               	movlw	3
  8564  001A44  6E54               	movwf	_Micro+2,c
  8565  001A46  0100               	movlb	0	; () banked
  8566  001A48  51DE               	movf	??_armement_process& (0+255),w,b
  8567                           
  8568                           ;armement.c: 79: Micro.State = 0x01;
  8569  001A4A  0100               	movlb	0	; () banked
  8570  001A4C  6FDE               	movwf	??_armement_process& (0+255),b
  8571  001A4E  0E01               	movlw	1
  8572  001A50  6E56               	movwf	_Micro+4,c
  8573  001A52                     L46:
  8574  001A52  0100               	movlb	0	; () banked
  8575  001A54  51DE               	movf	??_armement_process& (0+255),w,b
  8576  001A56  D00F               	goto	l1041
  8577  001A58                     l6561:
  8578  001A58  0100               	movlb	0	; () banked
  8579  001A5A  0100               	movlb	0	; () banked
  8580  001A5C  519A               	movf	_Arm& (0+255),w,b
  8581                           
  8582                           ; Switch size 1, requested type "space"
  8583                           ; Number of cases is 4, Range of values is 0 to 3
  8584                           ; switch strategies available:
  8585                           ; Name         Instructions Cycles
  8586                           ; simple_byte           13     7 (average)
  8587                           ;	Chosen strategy is simple_byte
  8588  001A5E  0A00               	xorlw	0	; case 0
  8589  001A60  B4D8               	btfsc	status,2,c
  8590  001A62  D749               	goto	l6521
  8591  001A64  0A01               	xorlw	1	; case 1
  8592  001A66  B4D8               	btfsc	status,2,c
  8593  001A68  D73F               	goto	l1027
  8594  001A6A  0A03               	xorlw	3	; case 2
  8595  001A6C  B4D8               	btfsc	status,2,c
  8596  001A6E  D794               	goto	l1031
  8597  001A70  0A01               	xorlw	1	; case 3
  8598  001A72  B4D8               	btfsc	status,2,c
  8599  001A74  D7A3               	goto	l1033
  8600  001A76                     l1041:
  8601  001A76  0012               	return	
  8602  001A78  FFFF               	dw	65535	; errata NOP
  8603  001A7A                     __end_of_armement_process:
  8604                           	opt stack 0
  8605                           tblptru	equ	0xFF8
  8606                           tblptrh	equ	0xFF7
  8607                           tblptrl	equ	0xFF6
  8608                           tablat	equ	0xFF5
  8609                           prodh	equ	0xFF4
  8610                           prodl	equ	0xFF3
  8611                           intcon	equ	0xFF2
  8612                           intcon2	equ	0xFF1
  8613                           postinc0	equ	0xFEE
  8614                           wreg	equ	0xFE8
  8615                           indf1	equ	0xFE7
  8616                           postdec1	equ	0xFE5
  8617                           fsr1h	equ	0xFE2
  8618                           fsr1l	equ	0xFE1
  8619                           indf2	equ	0xFDF
  8620                           postinc2	equ	0xFDE
  8621                           postdec2	equ	0xFDD
  8622                           fsr2h	equ	0xFDA
  8623                           fsr2l	equ	0xFD9
  8624                           status	equ	0xFD8
  8625                           
  8626 ;; *************** function _itoa *****************
  8627 ;; Defined at:
  8628 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\itoa.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;  buf             2   17[BANK0 ] PTR unsigned char 
  8631 ;;		 -> Version(5), ErreurTir(5), Blank(5), Ecran.Digit(4), 
  8632 ;;		 -> Ecran(16), PrintTest(5), 
  8633 ;;  val             2   19[BANK0 ] int 
  8634 ;;  base            2   21[BANK0 ] int 
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;  cp              2   23[BANK0 ] PTR unsigned char 
  8637 ;;		 -> Version(5), ErreurTir(5), Blank(5), Ecran.Digit(4), 
  8638 ;;		 -> Ecran(16), PrintTest(5), 
  8639 ;; Return value:  Size  Location     Type
  8640 ;;                  2   17[BANK0 ] PTR unsigned char 
  8641 ;; Registers used:
  8642 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  8643 ;; Tracked objects:
  8644 ;;		On entry : 0/0
  8645 ;;		On exit  : 0/0
  8646 ;;		Unchanged: 0/0
  8647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8648 ;;      Params:         0       6       0       0       0       0       0
  8649 ;;      Locals:         0       2       0       0       0       0       0
  8650 ;;      Temps:          0       0       0       0       0       0       0
  8651 ;;      Totals:         0       8       0       0       0       0       0
  8652 ;;Total ram usage:        8 bytes
  8653 ;; Hardware stack levels used:    1
  8654 ;; Hardware stack levels required when called:    5
  8655 ;; This function calls:
  8656 ;;		_utoa
  8657 ;; This function is called by:
  8658 ;;		_test_process
  8659 ;;		_armement_process
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663                           	psect	text35
  8664  002C68                     __ptext35:
  8665                           	opt stack 0
  8666  002C68                     _itoa:
  8667                           	opt stack 24
  8668                           
  8669                           ;incstack = 0
  8670  002C68  FFFF               	dw	65535
  8671  002C6A  0100               	movlb	0	; () banked
  8672  002C6C  0100               	movlb	0	; () banked
  8673  002C6E  C0CC  F0D2         	movff	itoa@buf+1,itoa@cp+1
  8674  002C72  0100               	movlb	0	; () banked
  8675  002C74  0100               	movlb	0	; () banked
  8676  002C76  C0CB  F0D1         	movff	itoa@buf,itoa@cp
  8677                           
  8678                           ; BSR set to: 0
  8679  002C7A  0100               	movlb	0	; () banked
  8680  002C7C  0100               	movlb	0	; () banked
  8681  002C7E  51CE               	movf	(itoa@val+1)& (0+255),w,b
  8682  002C80  0A80               	xorlw	128
  8683  002C82  6EF3               	movwf	prodl,c
  8684  002C84  0E80               	movlw	128
  8685  002C86  5CF3               	subwf	prodl,w,c
  8686  002C88  0E00               	movlw	0
  8687  002C8A  B4D8               	btfsc	status,2,c
  8688  002C8C  5DCD               	subwf	itoa@val& (0+255),w,b
  8689  002C8E  B0D8               	btfsc	status,0,c
  8690  002C90  D01F               	goto	l6065
  8691                           
  8692                           ; BSR set to: 0
  8693  002C92  0100               	movlb	0	; () banked
  8694  002C94  C0CB  FFF6         	movff	itoa@buf,tblptrl
  8695  002C98  0100               	movlb	0	; () banked
  8696  002C9A  C0CC  FFF7         	movff	itoa@buf+1,tblptrh
  8697  002C9E  6AF8               	clrf	tblptru,c
  8698  002CA0  0E05               	movlw	(high __ramtop+-1)
  8699  002CA2  64F7               	cpfsgt	tblptrh,c
  8700  002CA4  D004               	bra	u5377
  8701  002CA6  0E2D               	movlw	45
  8702  002CA8  6EF5               	movwf	tablat,c
  8703  002CAA  000C               	tblwt		*
  8704  002CAC  D006               	bra	u5370
  8705  002CAE                     u5377:
  8706  002CAE  CFF6 FFE1          	movff	tblptrl,fsr1l
  8707  002CB2  CFF7 FFE2          	movff	tblptrh,fsr1h
  8708  002CB6  0E2D               	movlw	45
  8709  002CB8  6EE7               	movwf	indf1,c
  8710  002CBA                     u5370:
  8711  002CBA  0100               	movlb	0	; () banked
  8712  002CBC  0100               	movlb	0	; () banked
  8713  002CBE  4BCB               	infsnz	itoa@buf& (0+255),f,b
  8714  002CC0  2BCC               	incf	(itoa@buf+1)& (0+255),f,b
  8715                           
  8716                           ; BSR set to: 0
  8717  002CC2  0100               	movlb	0	; () banked
  8718  002CC4  0100               	movlb	0	; () banked
  8719  002CC6  6DCD               	negf	itoa@val& (0+255),b
  8720  002CC8  0100               	movlb	0	; () banked
  8721  002CCA  1FCE               	comf	(itoa@val+1)& (0+255),f,b
  8722  002CCC  B0D8               	btfsc	status,0,c
  8723  002CCE  2BCE               	incf	(itoa@val+1)& (0+255),f,b
  8724  002CD0                     l6065:
  8725                           
  8726                           ; BSR set to: 0
  8727  002CD0  0100               	movlb	0	; () banked
  8728  002CD2  0100               	movlb	0	; () banked
  8729  002CD4  C0CC  F0C3         	movff	itoa@buf+1,utoa@buf+1
  8730  002CD8  0100               	movlb	0	; () banked
  8731  002CDA  0100               	movlb	0	; () banked
  8732  002CDC  C0CB  F0C2         	movff	itoa@buf,utoa@buf
  8733  002CE0  C0CD  F0C4         	movff	itoa@val,utoa@val
  8734  002CE4  C0CE  F0C5         	movff	itoa@val+1,utoa@val+1
  8735  002CE8  C0CF  F0C6         	movff	itoa@base,utoa@base
  8736  002CEC  C0D0  F0C7         	movff	itoa@base+1,utoa@base+1
  8737  002CF0  EC44  F011         	call	_utoa	;wreg free
  8738                           
  8739                           ;	Return value of _itoa is never used
  8740  002CF4  0012               	return	
  8741  002CF6  FFFF               	dw	65535	; errata NOP
  8742  002CF8                     __end_of_itoa:
  8743                           	opt stack 0
  8744                           tblptru	equ	0xFF8
  8745                           tblptrh	equ	0xFF7
  8746                           tblptrl	equ	0xFF6
  8747                           tablat	equ	0xFF5
  8748                           prodh	equ	0xFF4
  8749                           prodl	equ	0xFF3
  8750                           intcon	equ	0xFF2
  8751                           intcon2	equ	0xFF1
  8752                           postinc0	equ	0xFEE
  8753                           wreg	equ	0xFE8
  8754                           indf1	equ	0xFE7
  8755                           postdec1	equ	0xFE5
  8756                           fsr1h	equ	0xFE2
  8757                           fsr1l	equ	0xFE1
  8758                           indf2	equ	0xFDF
  8759                           postinc2	equ	0xFDE
  8760                           postdec2	equ	0xFDD
  8761                           fsr2h	equ	0xFDA
  8762                           fsr2l	equ	0xFD9
  8763                           status	equ	0xFD8
  8764                           
  8765 ;; *************** function _utoa *****************
  8766 ;; Defined at:
  8767 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\itoa.c"
  8768 ;; Parameters:    Size  Location     Type
  8769 ;;  buf             2    8[BANK0 ] PTR unsigned char 
  8770 ;;		 -> Version(5), ErreurTir(5), Blank(5), Ecran.Digit(4), 
  8771 ;;		 -> Ecran(16), PrintTest(5), 
  8772 ;;  val             2   10[BANK0 ] unsigned int 
  8773 ;;  base            2   12[BANK0 ] int 
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;  v               2   14[BANK0 ] unsigned int 
  8776 ;;  c               1   16[BANK0 ] unsigned char 
  8777 ;; Return value:  Size  Location     Type
  8778 ;;                  2    8[BANK0 ] PTR unsigned char 
  8779 ;; Registers used:
  8780 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8781 ;; Tracked objects:
  8782 ;;		On entry : 0/0
  8783 ;;		On exit  : 0/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8786 ;;      Params:         0       6       0       0       0       0       0
  8787 ;;      Locals:         0       3       0       0       0       0       0
  8788 ;;      Temps:          0       0       0       0       0       0       0
  8789 ;;      Totals:         0       9       0       0       0       0       0
  8790 ;;Total ram usage:        9 bytes
  8791 ;; Hardware stack levels used:    1
  8792 ;; Hardware stack levels required when called:    4
  8793 ;; This function calls:
  8794 ;;		___lwdiv
  8795 ;;		___lwmod
  8796 ;; This function is called by:
  8797 ;;		_itoa
  8798 ;; This function uses a non-reentrant model
  8799 ;;
  8800                           
  8801                           	psect	text36
  8802  002288                     __ptext36:
  8803                           	opt stack 0
  8804  002288                     _utoa:
  8805                           	opt stack 24
  8806                           
  8807                           ;incstack = 0
  8808  002288  FFFF               	dw	65535
  8809  00228A  C0C4  F0C8         	movff	utoa@val,utoa@v
  8810  00228E  C0C5  F0C9         	movff	utoa@val+1,utoa@v+1
  8811  002292                     l5879:
  8812  002292  C0C8  F0BA         	movff	utoa@v,___lwdiv@dividend
  8813  002296  C0C9  F0BB         	movff	utoa@v+1,___lwdiv@dividend+1
  8814  00229A  C0C6  F0BC         	movff	utoa@base,___lwdiv@divisor
  8815  00229E  C0C7  F0BD         	movff	utoa@base+1,___lwdiv@divisor+1
  8816  0022A2  ECDD  F015         	call	___lwdiv	;wreg free
  8817  0022A6  0100               	movlb	0	; () banked
  8818  0022A8  C0BA  F0C8         	movff	?___lwdiv,utoa@v
  8819  0022AC  0100               	movlb	0	; () banked
  8820  0022AE  C0BB  F0C9         	movff	?___lwdiv+1,utoa@v+1
  8821                           
  8822                           ; BSR set to: 0
  8823  0022B2  0100               	movlb	0	; () banked
  8824  0022B4  0100               	movlb	0	; () banked
  8825  0022B6  4BC2               	infsnz	utoa@buf& (0+255),f,b
  8826  0022B8  2BC3               	incf	(utoa@buf+1)& (0+255),f,b
  8827                           
  8828                           ; BSR set to: 0
  8829  0022BA  0100               	movlb	0	; () banked
  8830  0022BC  0100               	movlb	0	; () banked
  8831  0022BE  51C9               	movf	(utoa@v+1)& (0+255),w,b
  8832  0022C0  11C8               	iorwf	utoa@v& (0+255),w,b
  8833  0022C2  A4D8               	btfss	status,2,c
  8834  0022C4  D7E6               	goto	l5879
  8835                           
  8836                           ; BSR set to: 0
  8837                           
  8838                           ; BSR set to: 0
  8839  0022C6  0100               	movlb	0	; () banked
  8840  0022C8  C0C2  FFF6         	movff	utoa@buf,tblptrl
  8841  0022CC  0100               	movlb	0	; () banked
  8842  0022CE  C0C3  FFF7         	movff	utoa@buf+1,tblptrh
  8843  0022D2  6AF8               	clrf	tblptru,c
  8844  0022D4  0E05               	movlw	(high __ramtop+-1)
  8845  0022D6  64F7               	cpfsgt	tblptrh,c
  8846  0022D8  D004               	bra	u5187
  8847  0022DA  0E00               	movlw	0
  8848  0022DC  6EF5               	movwf	tablat,c
  8849  0022DE  000C               	tblwt		*
  8850  0022E0  D006               	bra	u5180
  8851  0022E2                     u5187:
  8852  0022E2  CFF6 FFE1          	movff	tblptrl,fsr1l
  8853  0022E6  CFF7 FFE2          	movff	tblptrh,fsr1h
  8854  0022EA  0E00               	movlw	0
  8855  0022EC  6EE7               	movwf	indf1,c
  8856  0022EE                     u5180:
  8857  0022EE  0100               	movlb	0	; () banked
  8858  0022F0  0100               	movlb	0	; () banked
  8859  0022F2  07C2               	decf	utoa@buf& (0+255),f,b
  8860  0022F4  A0D8               	btfss	status,0,c
  8861  0022F6  07C3               	decf	(utoa@buf+1)& (0+255),f,b
  8862  0022F8                     l5889:
  8863                           
  8864                           ; BSR set to: 0
  8865  0022F8  C0C4  F0BA         	movff	utoa@val,___lwmod@dividend
  8866  0022FC  C0C5  F0BB         	movff	utoa@val+1,___lwmod@dividend+1
  8867  002300  C0C6  F0BC         	movff	utoa@base,___lwmod@divisor
  8868  002304  C0C7  F0BD         	movff	utoa@base+1,___lwmod@divisor+1
  8869  002308  EC7C  F016         	call	___lwmod	;wreg free
  8870  00230C  0100               	movlb	0	; () banked
  8871  00230E  0100               	movlb	0	; () banked
  8872  002310  51BA               	movf	?___lwmod& (0+255),w,b
  8873  002312  0100               	movlb	0	; () banked
  8874  002314  0100               	movlb	0	; () banked
  8875  002316  6FCA               	movwf	utoa@c& (0+255),b
  8876                           
  8877                           ; BSR set to: 0
  8878  002318  C0C4  F0BA         	movff	utoa@val,___lwdiv@dividend
  8879  00231C  C0C5  F0BB         	movff	utoa@val+1,___lwdiv@dividend+1
  8880  002320  C0C6  F0BC         	movff	utoa@base,___lwdiv@divisor
  8881  002324  C0C7  F0BD         	movff	utoa@base+1,___lwdiv@divisor+1
  8882  002328  ECDD  F015         	call	___lwdiv	;wreg free
  8883  00232C  0100               	movlb	0	; () banked
  8884  00232E  C0BA  F0C4         	movff	?___lwdiv,utoa@val
  8885  002332  0100               	movlb	0	; () banked
  8886  002334  C0BB  F0C5         	movff	?___lwdiv+1,utoa@val+1
  8887                           
  8888                           ; BSR set to: 0
  8889  002338  0E09               	movlw	9
  8890  00233A  0100               	movlb	0	; () banked
  8891  00233C  0100               	movlb	0	; () banked
  8892  00233E  65CA               	cpfsgt	utoa@c& (0+255),b
  8893  002340  D004               	goto	l1571
  8894                           
  8895                           ; BSR set to: 0
  8896  002342  0E07               	movlw	7
  8897  002344  0100               	movlb	0	; () banked
  8898  002346  0100               	movlb	0	; () banked
  8899  002348  27CA               	addwf	utoa@c& (0+255),f,b
  8900  00234A                     l1571:
  8901                           
  8902                           ; BSR set to: 0
  8903  00234A  0E30               	movlw	48
  8904  00234C  0100               	movlb	0	; () banked
  8905  00234E  0100               	movlb	0	; () banked
  8906  002350  27CA               	addwf	utoa@c& (0+255),f,b
  8907                           
  8908                           ; BSR set to: 0
  8909  002352  0100               	movlb	0	; () banked
  8910  002354  C0C2  FFF6         	movff	utoa@buf,tblptrl
  8911  002358  0100               	movlb	0	; () banked
  8912  00235A  C0C3  FFF7         	movff	utoa@buf+1,tblptrh
  8913  00235E  6AF8               	clrf	tblptru,c
  8914  002360  0E05               	movlw	(high __ramtop+-1)
  8915  002362  64F7               	cpfsgt	tblptrh,c
  8916  002364  D005               	bra	u5207
  8917  002366  0100               	movlb	0	; () banked
  8918  002368  C0CA  FFF5         	movff	utoa@c,tablat
  8919  00236C  000C               	tblwt		*
  8920  00236E  D007               	bra	u5200
  8921  002370                     u5207:
  8922  002370  CFF6 FFE1          	movff	tblptrl,fsr1l
  8923  002374  CFF7 FFE2          	movff	tblptrh,fsr1h
  8924  002378  0100               	movlb	0	; () banked
  8925  00237A  C0CA  FFE7         	movff	utoa@c,indf1
  8926  00237E                     u5200:
  8927  00237E  0100               	movlb	0	; () banked
  8928  002380  0100               	movlb	0	; () banked
  8929  002382  07C2               	decf	utoa@buf& (0+255),f,b
  8930  002384  A0D8               	btfss	status,0,c
  8931  002386  07C3               	decf	(utoa@buf+1)& (0+255),f,b
  8932                           
  8933                           ; BSR set to: 0
  8934  002388  0100               	movlb	0	; () banked
  8935  00238A  0100               	movlb	0	; () banked
  8936  00238C  51C5               	movf	(utoa@val+1)& (0+255),w,b
  8937  00238E  11C4               	iorwf	utoa@val& (0+255),w,b
  8938  002390  A4D8               	btfss	status,2,c
  8939  002392  D7B2               	goto	l5889
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;	Return value of _utoa is never used
  8943                           
  8944                           ; BSR set to: 0
  8945  002394  0100               	movlb	0	; () banked
  8946  002396  0100               	movlb	0	; () banked
  8947  002398  4BC2               	infsnz	utoa@buf& (0+255),f,b
  8948  00239A  2BC3               	incf	(utoa@buf+1)& (0+255),f,b
  8949                           
  8950                           ; BSR set to: 0
  8951                           
  8952                           ; BSR set to: 0
  8953  00239C  0012               	return	
  8954  00239E  FFFF               	dw	65535	; errata NOP
  8955  0023A0                     __end_of_utoa:
  8956                           	opt stack 0
  8957                           tblptru	equ	0xFF8
  8958                           tblptrh	equ	0xFF7
  8959                           tblptrl	equ	0xFF6
  8960                           tablat	equ	0xFF5
  8961                           prodh	equ	0xFF4
  8962                           prodl	equ	0xFF3
  8963                           intcon	equ	0xFF2
  8964                           intcon2	equ	0xFF1
  8965                           postinc0	equ	0xFEE
  8966                           wreg	equ	0xFE8
  8967                           indf1	equ	0xFE7
  8968                           postdec1	equ	0xFE5
  8969                           fsr1h	equ	0xFE2
  8970                           fsr1l	equ	0xFE1
  8971                           indf2	equ	0xFDF
  8972                           postinc2	equ	0xFDE
  8973                           postdec2	equ	0xFDD
  8974                           fsr2h	equ	0xFDA
  8975                           fsr2l	equ	0xFD9
  8976                           status	equ	0xFD8
  8977                           
  8978 ;; *************** function ___lwmod *****************
  8979 ;; Defined at:
  8980 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwmod.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;  dividend        2    0[BANK0 ] unsigned int 
  8983 ;;  divisor         2    2[BANK0 ] unsigned int 
  8984 ;; Auto vars:     Size  Location     Type
  8985 ;;  counter         1    5[BANK0 ] unsigned char 
  8986 ;; Return value:  Size  Location     Type
  8987 ;;                  2    0[BANK0 ] unsigned int 
  8988 ;; Registers used:
  8989 ;;		wreg, status,2, status,0
  8990 ;; Tracked objects:
  8991 ;;		On entry : 0/0
  8992 ;;		On exit  : 0/0
  8993 ;;		Unchanged: 0/0
  8994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8995 ;;      Params:         0       4       0       0       0       0       0
  8996 ;;      Locals:         0       1       0       0       0       0       0
  8997 ;;      Temps:          0       1       0       0       0       0       0
  8998 ;;      Totals:         0       6       0       0       0       0       0
  8999 ;;Total ram usage:        6 bytes
  9000 ;; Hardware stack levels used:    1
  9001 ;; Hardware stack levels required when called:    3
  9002 ;; This function calls:
  9003 ;;		Nothing
  9004 ;; This function is called by:
  9005 ;;		_utoa
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           	psect	text37
  9010  002CF8                     __ptext37:
  9011                           	opt stack 0
  9012  002CF8                     ___lwmod:
  9013                           	opt stack 24
  9014                           
  9015                           ; BSR set to: 0
  9016                           ;incstack = 0
  9017  002CF8  FFFF               	dw	65535
  9018  002CFA  0100               	movlb	0	; () banked
  9019  002CFC  0100               	movlb	0	; () banked
  9020  002CFE  51BD               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9021  002D00  11BC               	iorwf	___lwmod@divisor& (0+255),w,b
  9022  002D02  B4D8               	btfsc	status,2,c
  9023  002D04  D03A               	goto	l1681
  9024                           
  9025                           ; BSR set to: 0
  9026  002D06  0100               	movlb	0	; () banked
  9027  002D08  6FBE               	movwf	??___lwmod& (0+255),b
  9028  002D0A  0E01               	movlw	1
  9029  002D0C  0100               	movlb	0	; () banked
  9030  002D0E  0100               	movlb	0	; () banked
  9031  002D10  6FBF               	movwf	___lwmod@counter& (0+255),b
  9032  002D12  0100               	movlb	0	; () banked
  9033  002D14  51BE               	movf	??___lwmod& (0+255),w,b
  9034  002D16  D009               	goto	l5647
  9035  002D18                     l5645:
  9036                           
  9037                           ; BSR set to: 0
  9038  002D18  0100               	movlb	0	; () banked
  9039  002D1A  0100               	movlb	0	; () banked
  9040  002D1C  0100               	movlb	0	; () banked
  9041  002D1E  90D8               	bcf	status,0,c
  9042  002D20  37BC               	rlcf	___lwmod@divisor& (0+255),f,b
  9043  002D22  37BD               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  9044  002D24  0100               	movlb	0	; () banked
  9045  002D26  0100               	movlb	0	; () banked
  9046  002D28  2BBF               	incf	___lwmod@counter& (0+255),f,b
  9047  002D2A                     l5647:
  9048                           
  9049                           ; BSR set to: 0
  9050  002D2A  0100               	movlb	0	; () banked
  9051  002D2C  0100               	movlb	0	; () banked
  9052  002D2E  AFBD               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  9053  002D30  D7F3               	goto	l5645
  9054  002D32                     l5649:
  9055                           
  9056                           ; BSR set to: 0
  9057  002D32  0100               	movlb	0	; () banked
  9058  002D34  0100               	movlb	0	; () banked
  9059  002D36  51BC               	movf	___lwmod@divisor& (0+255),w,b
  9060  002D38  0100               	movlb	0	; () banked
  9061  002D3A  0100               	movlb	0	; () banked
  9062  002D3C  5DBA               	subwf	___lwmod@dividend& (0+255),w,b
  9063  002D3E  0100               	movlb	0	; () banked
  9064  002D40  0100               	movlb	0	; () banked
  9065  002D42  51BD               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9066  002D44  0100               	movlb	0	; () banked
  9067  002D46  0100               	movlb	0	; () banked
  9068  002D48  59BB               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  9069  002D4A  A0D8               	btfss	status,0,c
  9070  002D4C  D00C               	goto	l5653
  9071                           
  9072                           ; BSR set to: 0
  9073  002D4E  0100               	movlb	0	; () banked
  9074  002D50  0100               	movlb	0	; () banked
  9075  002D52  51BC               	movf	___lwmod@divisor& (0+255),w,b
  9076  002D54  0100               	movlb	0	; () banked
  9077  002D56  0100               	movlb	0	; () banked
  9078  002D58  5FBA               	subwf	___lwmod@dividend& (0+255),f,b
  9079  002D5A  0100               	movlb	0	; () banked
  9080  002D5C  0100               	movlb	0	; () banked
  9081  002D5E  51BD               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9082  002D60  0100               	movlb	0	; () banked
  9083  002D62  0100               	movlb	0	; () banked
  9084  002D64  5BBB               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  9085  002D66                     l5653:
  9086                           
  9087                           ; BSR set to: 0
  9088  002D66  0100               	movlb	0	; () banked
  9089  002D68  0100               	movlb	0	; () banked
  9090  002D6A  0100               	movlb	0	; () banked
  9091  002D6C  90D8               	bcf	status,0,c
  9092  002D6E  33BD               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  9093  002D70  33BC               	rrcf	___lwmod@divisor& (0+255),f,b
  9094                           
  9095                           ; BSR set to: 0
  9096  002D72  0100               	movlb	0	; () banked
  9097  002D74  0100               	movlb	0	; () banked
  9098  002D76  2FBF               	decfsz	___lwmod@counter& (0+255),f,b
  9099  002D78  D7DC               	goto	l5649
  9100  002D7A                     l1681:
  9101                           
  9102                           ; BSR set to: 0
  9103  002D7A  C0BA  F0BA         	movff	___lwmod@dividend,?___lwmod
  9104  002D7E  C0BB  F0BB         	movff	___lwmod@dividend+1,?___lwmod+1
  9105                           
  9106                           ; BSR set to: 0
  9107  002D82  0012               	return	
  9108  002D84  FFFF               	dw	65535	; errata NOP
  9109  002D86                     __end_of___lwmod:
  9110                           	opt stack 0
  9111                           tblptru	equ	0xFF8
  9112                           tblptrh	equ	0xFF7
  9113                           tblptrl	equ	0xFF6
  9114                           tablat	equ	0xFF5
  9115                           prodh	equ	0xFF4
  9116                           prodl	equ	0xFF3
  9117                           intcon	equ	0xFF2
  9118                           intcon2	equ	0xFF1
  9119                           postinc0	equ	0xFEE
  9120                           wreg	equ	0xFE8
  9121                           indf1	equ	0xFE7
  9122                           postdec1	equ	0xFE5
  9123                           fsr1h	equ	0xFE2
  9124                           fsr1l	equ	0xFE1
  9125                           indf2	equ	0xFDF
  9126                           postinc2	equ	0xFDE
  9127                           postdec2	equ	0xFDD
  9128                           fsr2h	equ	0xFDA
  9129                           fsr2l	equ	0xFD9
  9130                           status	equ	0xFD8
  9131                           
  9132 ;; *************** function ___lwdiv *****************
  9133 ;; Defined at:
  9134 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwdiv.c"
  9135 ;; Parameters:    Size  Location     Type
  9136 ;;  dividend        2    0[BANK0 ] unsigned int 
  9137 ;;  divisor         2    2[BANK0 ] unsigned int 
  9138 ;; Auto vars:     Size  Location     Type
  9139 ;;  quotient        2    6[BANK0 ] unsigned int 
  9140 ;;  counter         1    5[BANK0 ] unsigned char 
  9141 ;; Return value:  Size  Location     Type
  9142 ;;                  2    0[BANK0 ] unsigned int 
  9143 ;; Registers used:
  9144 ;;		wreg, status,2, status,0
  9145 ;; Tracked objects:
  9146 ;;		On entry : 0/0
  9147 ;;		On exit  : 0/0
  9148 ;;		Unchanged: 0/0
  9149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9150 ;;      Params:         0       4       0       0       0       0       0
  9151 ;;      Locals:         0       3       0       0       0       0       0
  9152 ;;      Temps:          0       1       0       0       0       0       0
  9153 ;;      Totals:         0       8       0       0       0       0       0
  9154 ;;Total ram usage:        8 bytes
  9155 ;; Hardware stack levels used:    1
  9156 ;; Hardware stack levels required when called:    3
  9157 ;; This function calls:
  9158 ;;		Nothing
  9159 ;; This function is called by:
  9160 ;;		_utoa
  9161 ;; This function uses a non-reentrant model
  9162 ;;
  9163                           
  9164                           	psect	text38
  9165  002BBA                     __ptext38:
  9166                           	opt stack 0
  9167  002BBA                     ___lwdiv:
  9168                           	opt stack 24
  9169                           
  9170                           ; BSR set to: 0
  9171                           ;incstack = 0
  9172  002BBA  FFFF               	dw	65535
  9173  002BBC  0E00               	movlw	0
  9174  002BBE  0100               	movlb	0	; () banked
  9175  002BC0  0100               	movlb	0	; () banked
  9176  002BC2  6FC1               	movwf	(___lwdiv@quotient+1)& (0+255),b
  9177  002BC4  0E00               	movlw	0
  9178  002BC6  0100               	movlb	0	; () banked
  9179  002BC8  6FC0               	movwf	___lwdiv@quotient& (0+255),b
  9180                           
  9181                           ; BSR set to: 0
  9182  002BCA  0100               	movlb	0	; () banked
  9183  002BCC  0100               	movlb	0	; () banked
  9184  002BCE  51BD               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9185  002BD0  11BC               	iorwf	___lwdiv@divisor& (0+255),w,b
  9186  002BD2  B4D8               	btfsc	status,2,c
  9187  002BD4  D043               	goto	l1671
  9188                           
  9189                           ; BSR set to: 0
  9190  002BD6  0100               	movlb	0	; () banked
  9191  002BD8  6FBE               	movwf	??___lwdiv& (0+255),b
  9192  002BDA  0E01               	movlw	1
  9193  002BDC  0100               	movlb	0	; () banked
  9194  002BDE  0100               	movlb	0	; () banked
  9195  002BE0  6FBF               	movwf	___lwdiv@counter& (0+255),b
  9196  002BE2  0100               	movlb	0	; () banked
  9197  002BE4  51BE               	movf	??___lwdiv& (0+255),w,b
  9198  002BE6  D009               	goto	l5627
  9199  002BE8                     l5625:
  9200                           
  9201                           ; BSR set to: 0
  9202  002BE8  0100               	movlb	0	; () banked
  9203  002BEA  0100               	movlb	0	; () banked
  9204  002BEC  0100               	movlb	0	; () banked
  9205  002BEE  90D8               	bcf	status,0,c
  9206  002BF0  37BC               	rlcf	___lwdiv@divisor& (0+255),f,b
  9207  002BF2  37BD               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  9208  002BF4  0100               	movlb	0	; () banked
  9209  002BF6  0100               	movlb	0	; () banked
  9210  002BF8  2BBF               	incf	___lwdiv@counter& (0+255),f,b
  9211  002BFA                     l5627:
  9212                           
  9213                           ; BSR set to: 0
  9214  002BFA  0100               	movlb	0	; () banked
  9215  002BFC  0100               	movlb	0	; () banked
  9216  002BFE  AFBD               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  9217  002C00  D7F3               	goto	l5625
  9218  002C02                     l5629:
  9219                           
  9220                           ; BSR set to: 0
  9221  002C02  0100               	movlb	0	; () banked
  9222  002C04  0100               	movlb	0	; () banked
  9223  002C06  0100               	movlb	0	; () banked
  9224  002C08  90D8               	bcf	status,0,c
  9225  002C0A  37C0               	rlcf	___lwdiv@quotient& (0+255),f,b
  9226  002C0C  37C1               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  9227                           
  9228                           ; BSR set to: 0
  9229  002C0E  0100               	movlb	0	; () banked
  9230  002C10  0100               	movlb	0	; () banked
  9231  002C12  51BC               	movf	___lwdiv@divisor& (0+255),w,b
  9232  002C14  0100               	movlb	0	; () banked
  9233  002C16  0100               	movlb	0	; () banked
  9234  002C18  5DBA               	subwf	___lwdiv@dividend& (0+255),w,b
  9235  002C1A  0100               	movlb	0	; () banked
  9236  002C1C  0100               	movlb	0	; () banked
  9237  002C1E  51BD               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9238  002C20  0100               	movlb	0	; () banked
  9239  002C22  0100               	movlb	0	; () banked
  9240  002C24  59BB               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  9241  002C26  A0D8               	btfss	status,0,c
  9242  002C28  D00F               	goto	l5637
  9243                           
  9244                           ; BSR set to: 0
  9245  002C2A  0100               	movlb	0	; () banked
  9246  002C2C  0100               	movlb	0	; () banked
  9247  002C2E  51BC               	movf	___lwdiv@divisor& (0+255),w,b
  9248  002C30  0100               	movlb	0	; () banked
  9249  002C32  0100               	movlb	0	; () banked
  9250  002C34  5FBA               	subwf	___lwdiv@dividend& (0+255),f,b
  9251  002C36  0100               	movlb	0	; () banked
  9252  002C38  0100               	movlb	0	; () banked
  9253  002C3A  51BD               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9254  002C3C  0100               	movlb	0	; () banked
  9255  002C3E  0100               	movlb	0	; () banked
  9256  002C40  5BBB               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  9257                           
  9258                           ; BSR set to: 0
  9259  002C42  0100               	movlb	0	; () banked
  9260  002C44  0100               	movlb	0	; () banked
  9261  002C46  81C0               	bsf	___lwdiv@quotient& (0+255),0,b
  9262  002C48                     l5637:
  9263                           
  9264                           ; BSR set to: 0
  9265  002C48  0100               	movlb	0	; () banked
  9266  002C4A  0100               	movlb	0	; () banked
  9267  002C4C  0100               	movlb	0	; () banked
  9268  002C4E  90D8               	bcf	status,0,c
  9269  002C50  33BD               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  9270  002C52  33BC               	rrcf	___lwdiv@divisor& (0+255),f,b
  9271                           
  9272                           ; BSR set to: 0
  9273  002C54  0100               	movlb	0	; () banked
  9274  002C56  0100               	movlb	0	; () banked
  9275  002C58  2FBF               	decfsz	___lwdiv@counter& (0+255),f,b
  9276  002C5A  D7D3               	goto	l5629
  9277  002C5C                     l1671:
  9278                           
  9279                           ; BSR set to: 0
  9280  002C5C  C0C0  F0BA         	movff	___lwdiv@quotient,?___lwdiv
  9281  002C60  C0C1  F0BB         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9282                           
  9283                           ; BSR set to: 0
  9284  002C64  0012               	return	
  9285  002C66  FFFF               	dw	65535	; errata NOP
  9286  002C68                     __end_of___lwdiv:
  9287                           	opt stack 0
  9288                           tblptru	equ	0xFF8
  9289                           tblptrh	equ	0xFF7
  9290                           tblptrl	equ	0xFF6
  9291                           tablat	equ	0xFF5
  9292                           prodh	equ	0xFF4
  9293                           prodl	equ	0xFF3
  9294                           intcon	equ	0xFF2
  9295                           intcon2	equ	0xFF1
  9296                           postinc0	equ	0xFEE
  9297                           wreg	equ	0xFE8
  9298                           indf1	equ	0xFE7
  9299                           postdec1	equ	0xFE5
  9300                           fsr1h	equ	0xFE2
  9301                           fsr1l	equ	0xFE1
  9302                           indf2	equ	0xFDF
  9303                           postinc2	equ	0xFDE
  9304                           postdec2	equ	0xFDD
  9305                           fsr2h	equ	0xFDA
  9306                           fsr2l	equ	0xFD9
  9307                           status	equ	0xFD8
  9308                           
  9309 ;; *************** function _ecran_wait *****************
  9310 ;; Defined at:
  9311 ;;		line 91 in file "ecran.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;		None
  9314 ;; Auto vars:     Size  Location     Type
  9315 ;;		None
  9316 ;; Return value:  Size  Location     Type
  9317 ;;		None               void
  9318 ;; Registers used:
  9319 ;;		wreg, status,2, status,0, cstack
  9320 ;; Tracked objects:
  9321 ;;		On entry : 0/0
  9322 ;;		On exit  : 0/0
  9323 ;;		Unchanged: 0/0
  9324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9325 ;;      Params:         0       0       0       0       0       0       0
  9326 ;;      Locals:         0       0       0       0       0       0       0
  9327 ;;      Temps:          0       1       0       0       0       0       0
  9328 ;;      Totals:         0       1       0       0       0       0       0
  9329 ;;Total ram usage:        1 bytes
  9330 ;; Hardware stack levels used:    1
  9331 ;; Hardware stack levels required when called:    4
  9332 ;; This function calls:
  9333 ;;		_ecran_dot
  9334 ;;		_ecran_raz_digit
  9335 ;; This function is called by:
  9336 ;;		_check_program_0
  9337 ;;		_test_process
  9338 ;;		_micro_wait
  9339 ;;		_armement_process
  9340 ;; This function uses a non-reentrant model
  9341 ;;
  9342                           
  9343                           	psect	text39
  9344  003538                     __ptext39:
  9345                           	opt stack 0
  9346  003538                     _ecran_wait:
  9347                           	opt stack 25
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;incstack = 0
  9351  003538  FFFF               	dw	65535
  9352                           
  9353                           ;ecran.c: 94: ecran_raz_digit();
  9354  00353A  ECE1  F01A         	call	_ecran_raz_digit	;wreg free
  9355                           
  9356                           ;ecran.c: 96: ecran_dot(1);
  9357  00353E  0E01               	movlw	1
  9358  003540  ECD7  F01A         	call	_ecran_dot
  9359                           
  9360                           ;ecran.c: 98: PORTCbits.RC2 = 1;
  9361  003544  8482               	bsf	3970,2,c	;volatile
  9362                           
  9363                           ;ecran.c: 100: Ecran.Solid = 1;
  9364  003546  0100               	movlb	0	; () banked
  9365  003548  6FBB               	movwf	??_ecran_wait& (0+255),b
  9366  00354A  0E01               	movlw	1
  9367  00354C  0100               	movlb	0	; () banked
  9368  00354E  0100               	movlb	0	; () banked
  9369  003550  6FB9               	movwf	(_Ecran+15)& (0+255),b
  9370  003552  0100               	movlb	0	; () banked
  9371  003554  51BB               	movf	??_ecran_wait& (0+255),w,b
  9372                           
  9373                           ; BSR set to: 0
  9374  003556  0012               	return	
  9375  003558  FFFF               	dw	65535	; errata NOP
  9376  00355A                     __end_of_ecran_wait:
  9377                           	opt stack 0
  9378                           tblptru	equ	0xFF8
  9379                           tblptrh	equ	0xFF7
  9380                           tblptrl	equ	0xFF6
  9381                           tablat	equ	0xFF5
  9382                           prodh	equ	0xFF4
  9383                           prodl	equ	0xFF3
  9384                           intcon	equ	0xFF2
  9385                           intcon2	equ	0xFF1
  9386                           postinc0	equ	0xFEE
  9387                           wreg	equ	0xFE8
  9388                           indf1	equ	0xFE7
  9389                           postdec1	equ	0xFE5
  9390                           fsr1h	equ	0xFE2
  9391                           fsr1l	equ	0xFE1
  9392                           indf2	equ	0xFDF
  9393                           postinc2	equ	0xFDE
  9394                           postdec2	equ	0xFDD
  9395                           fsr2h	equ	0xFDA
  9396                           fsr2l	equ	0xFD9
  9397                           status	equ	0xFD8
  9398                           
  9399 ;; *************** function _check_comutest *****************
  9400 ;; Defined at:
  9401 ;;		line 3 in file "test.c"
  9402 ;; Parameters:    Size  Location     Type
  9403 ;;  State           1    wreg     unsigned char 
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;  State           1    6[BANK0 ] unsigned char 
  9406 ;; Return value:  Size  Location     Type
  9407 ;;		None               void
  9408 ;; Registers used:
  9409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9410 ;; Tracked objects:
  9411 ;;		On entry : 0/0
  9412 ;;		On exit  : 0/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9415 ;;      Params:         0       0       0       0       0       0       0
  9416 ;;      Locals:         0       1       0       0       0       0       0
  9417 ;;      Temps:          0       1       0       0       0       0       0
  9418 ;;      Totals:         0       2       0       0       0       0       0
  9419 ;;Total ram usage:        2 bytes
  9420 ;; Hardware stack levels used:    1
  9421 ;; Hardware stack levels required when called:    6
  9422 ;; This function calls:
  9423 ;;		_ecran_blank
  9424 ;;		_ecran_refresh
  9425 ;; This function is called by:
  9426 ;;		_main
  9427 ;;		_test_process
  9428 ;;		_micro_wait
  9429 ;;		_armement_process
  9430 ;; This function uses a non-reentrant model
  9431 ;;
  9432                           
  9433                           	psect	text40
  9434  00313C                     __ptext40:
  9435                           	opt stack 0
  9436  00313C                     _check_comutest:
  9437                           	opt stack 23
  9438                           
  9439                           ; BSR set to: 0
  9440                           ;incstack = 0
  9441  00313C  FFFF               	dw	65535
  9442                           
  9443                           ;check_comutest@State stored from wreg
  9444  00313E  CFE8 F0C0          	movff	wreg,check_comutest@State
  9445                           
  9446                           ;test.c: 5: ecran_blank();
  9447  003142  ECE3  F017         	call	_ecran_blank	;wreg free
  9448                           
  9449                           ;test.c: 6: while(PORTCbits.RC5 == State)
  9450  003146  D017               	goto	l5925
  9451  003148                     l5913:
  9452                           
  9453                           ;test.c: 7: {
  9454                           ;test.c: 8: Ecran.Digits = (char *) ErreurTir;
  9455  003148  0E06               	movlw	high _ErreurTir
  9456  00314A  0100               	movlb	0	; () banked
  9457  00314C  0100               	movlb	0	; () banked
  9458  00314E  6FAF               	movwf	(_Ecran+5)& (0+255),b
  9459  003150  0E0B               	movlw	low _ErreurTir
  9460  003152  0100               	movlb	0	; () banked
  9461  003154  0100               	movlb	0	; () banked
  9462  003156  6FAE               	movwf	(_Ecran+4)& (0+255),b
  9463                           
  9464                           ; BSR set to: 0
  9465                           ;test.c: 9: ecran_refresh();
  9466  003158  EC84  F015         	call	_ecran_refresh	;wreg free
  9467                           
  9468                           ;test.c: 11: if ((PORTCbits.RC5 == 0) && (Micro.Phase == 0x01))
  9469  00315C  BA82               	btfsc	3970,5,c	;volatile
  9470  00315E  D00B               	goto	l5925
  9471  003160  0454               	decf	_Micro+2,w,c
  9472  003162  A4D8               	btfss	status,2,c
  9473  003164  D008               	goto	l5925
  9474                           
  9475                           ;test.c: 12: {
  9476                           ;test.c: 13: Test.Step = 0x01;
  9477  003166  0100               	movlb	0	; () banked
  9478  003168  6FBF               	movwf	??_check_comutest& (0+255),b
  9479  00316A  0E01               	movlw	1
  9480  00316C  6E2E               	movwf	_Test,c
  9481  00316E  0100               	movlb	0	; () banked
  9482  003170  51BF               	movf	??_check_comutest& (0+255),w,b
  9483                           
  9484                           ; BSR set to: 0
  9485                           ;test.c: 14: ecran_blank();
  9486  003172  ECE3  F017         	call	_ecran_blank	;wreg free
  9487  003176                     l5925:
  9488  003176  AA82               	btfss	3970,5,c	;volatile
  9489  003178  D002               	goto	u5240
  9490  00317A  0E01               	movlw	1
  9491  00317C  D001               	goto	u5246
  9492  00317E                     u5240:
  9493  00317E  0E00               	movlw	0
  9494  003180                     u5246:
  9495  003180  0100               	movlb	0	; () banked
  9496  003182  0100               	movlb	0	; () banked
  9497  003184  19C0               	xorwf	check_comutest@State& (0+255),w,b
  9498  003186  A4D8               	btfss	status,2,c
  9499                           
  9500                           ; BSR set to: 0
  9501                           
  9502                           ; BSR set to: 0
  9503  003188  0012               	return	
  9504  00318A  FFFF               	dw	65535	; assembler added errata NOP
  9505  00318C  D7DD               	goto	l5913
  9506  00318E  FFFF               	dw	65535	; errata NOP
  9507  003190                     __end_of_check_comutest:
  9508                           	opt stack 0
  9509                           tblptru	equ	0xFF8
  9510                           tblptrh	equ	0xFF7
  9511                           tblptrl	equ	0xFF6
  9512                           tablat	equ	0xFF5
  9513                           prodh	equ	0xFF4
  9514                           prodl	equ	0xFF3
  9515                           intcon	equ	0xFF2
  9516                           intcon2	equ	0xFF1
  9517                           postinc0	equ	0xFEE
  9518                           wreg	equ	0xFE8
  9519                           indf1	equ	0xFE7
  9520                           postdec1	equ	0xFE5
  9521                           fsr1h	equ	0xFE2
  9522                           fsr1l	equ	0xFE1
  9523                           indf2	equ	0xFDF
  9524                           postinc2	equ	0xFDE
  9525                           postdec2	equ	0xFDD
  9526                           fsr2h	equ	0xFDA
  9527                           fsr2l	equ	0xFD9
  9528                           status	equ	0xFD8
  9529                           
  9530 ;; *************** function _ecran_refresh *****************
  9531 ;; Defined at:
  9532 ;;		line 116 in file "ecran.c"
  9533 ;; Parameters:    Size  Location     Type
  9534 ;;		None
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;		None
  9537 ;; Return value:  Size  Location     Type
  9538 ;;		None               void
  9539 ;; Registers used:
  9540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9541 ;; Tracked objects:
  9542 ;;		On entry : 0/0
  9543 ;;		On exit  : 0/0
  9544 ;;		Unchanged: 0/0
  9545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9546 ;;      Params:         0       0       0       0       0       0       0
  9547 ;;      Locals:         0       0       0       0       0       0       0
  9548 ;;      Temps:          0       2       0       0       0       0       0
  9549 ;;      Totals:         0       2       0       0       0       0       0
  9550 ;;Total ram usage:        2 bytes
  9551 ;; Hardware stack levels used:    1
  9552 ;; Hardware stack levels required when called:    5
  9553 ;; This function calls:
  9554 ;;		_ecran_dot
  9555 ;;		_ecran_print_one_char
  9556 ;; This function is called by:
  9557 ;;		_main
  9558 ;;		_cf_check_and_display
  9559 ;;		_check_comutest
  9560 ;;		_check_program_0
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           	psect	text41
  9565  002B08                     __ptext41:
  9566                           	opt stack 0
  9567  002B08                     _ecran_refresh:
  9568                           	opt stack 23
  9569                           
  9570                           ; BSR set to: 0
  9571                           ;incstack = 0
  9572  002B08  FFFF               	dw	65535
  9573                           
  9574                           ;ecran.c: 118: if ( (Ecran.Solid == 0)
  9575                           ;ecran.c: 119: && ((++ Ecran.Cpt) <= Ecran.tRate))
  9576  002B0A  0100               	movlb	0	; () banked
  9577  002B0C  0100               	movlb	0	; () banked
  9578  002B0E  67B9               	tstfsz	(_Ecran+15)& (0+255),b
  9579  002B10  D052               	goto	l280
  9580                           
  9581                           ; BSR set to: 0
  9582  002B12  0100               	movlb	0	; () banked
  9583  002B14  0100               	movlb	0	; () banked
  9584  002B16  2BB5               	incf	(_Ecran+11)& (0+255),f,b
  9585  002B18  0100               	movlb	0	; () banked
  9586  002B1A  51B5               	movf	(_Ecran+11)& (0+255),w,b
  9587  002B1C  0100               	movlb	0	; () banked
  9588  002B1E  0100               	movlb	0	; () banked
  9589  002B20  5DB6               	subwf	(_Ecran+12)& (0+255),w,b
  9590  002B22  A0D8               	btfss	status,0,c
  9591  002B24  D048               	goto	l280
  9592                           
  9593                           ; BSR set to: 0
  9594                           ;ecran.c: 120: {
  9595                           ;ecran.c: 121: ecran_print_one_char(Ecran.Index, Ecran.Digits[Ecran.Index]);
  9596  002B26  0100               	movlb	0	; () banked
  9597  002B28  0100               	movlb	0	; () banked
  9598  002B2A  51B4               	movf	(_Ecran+10)& (0+255),w,b
  9599  002B2C  0D01               	mullw	1
  9600  002B2E  0100               	movlb	0	; () banked
  9601  002B30  EE20  F0AE         	lfsr	2,_Ecran+4
  9602  002B34  CFDE F0BD          	movff	postinc2,??_ecran_refresh
  9603  002B38  CFDD F0BE          	movff	postdec2,??_ecran_refresh+1
  9604  002B3C  50F3               	movf	prodl,w,c
  9605  002B3E  0100               	movlb	0	; () banked
  9606  002B40  27BD               	addwf	??_ecran_refresh& (0+255),f,b
  9607  002B42  50F4               	movf	prodh,w,c
  9608  002B44  0100               	movlb	0	; () banked
  9609  002B46  23BE               	addwfc	(??_ecran_refresh+1)& (0+255),f,b
  9610  002B48  C0BD  FFF6         	movff	??_ecran_refresh,tblptrl
  9611  002B4C  C0BE  FFF7         	movff	??_ecran_refresh+1,tblptrh
  9612  002B50  6AF8               	clrf	tblptru,c
  9613  002B52  0E05               	movlw	(high __ramtop+-1)
  9614  002B54  64F7               	cpfsgt	tblptrh,c
  9615  002B56  D004               	bra	u4887
  9616  002B58  0008               	tblrd		*
  9617  002B5A  FFFF               	dw	65535	; errata NOP
  9618  002B5C  50F5               	movf	tablat,w,c
  9619  002B5E  D005               	bra	u4880
  9620  002B60                     u4887:
  9621  002B60  CFF6 FFE1          	movff	tblptrl,fsr1l
  9622  002B64  CFF7 FFE2          	movff	tblptrh,fsr1h
  9623  002B68  50E7               	movf	indf1,w,c
  9624  002B6A                     u4880:
  9625  002B6A  0100               	movlb	0	; () banked
  9626  002B6C  0100               	movlb	0	; () banked
  9627  002B6E  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  9628  002B70  0100               	movlb	0	; () banked
  9629  002B72  0100               	movlb	0	; () banked
  9630  002B74  51B4               	movf	(_Ecran+10)& (0+255),w,b
  9631  002B76  ECD9  F019         	call	_ecran_print_one_char
  9632                           
  9633                           ;ecran.c: 123: ecran_dot(Ecran.Dot[Ecran.Index]);
  9634  002B7A  0100               	movlb	0	; () banked
  9635  002B7C  0100               	movlb	0	; () banked
  9636  002B7E  51B4               	movf	(_Ecran+10)& (0+255),w,b
  9637  002B80  0D01               	mullw	1
  9638  002B82  0100               	movlb	0	; () banked
  9639  002B84  0EB0               	movlw	low (_Ecran+6)
  9640  002B86  24F3               	addwf	prodl,w,c
  9641  002B88  6ED9               	movwf	fsr2l,c
  9642  002B8A  0100               	movlb	0	; () banked
  9643  002B8C  0E00               	movlw	high (_Ecran+6)
  9644  002B8E  20F4               	addwfc	prodh,w,c
  9645  002B90  6EDA               	movwf	fsr2h,c
  9646  002B92  50DF               	movf	indf2,w,c
  9647  002B94  ECD7  F01A         	call	_ecran_dot
  9648                           
  9649                           ;ecran.c: 125: if (++ Ecran.Index > 3) {Ecran.Index = 0;}
  9650  002B98  0100               	movlb	0	; () banked
  9651  002B9A  EE20  F0B4         	lfsr	2,_Ecran+10
  9652  002B9E  2ADF               	incf	indf2,f,c
  9653  002BA0  0E03               	movlw	3
  9654  002BA2  64DF               	cpfsgt	indf2,c
  9655  002BA4  D008               	goto	l280
  9656                           
  9657                           ; BSR set to: 0
  9658  002BA6  0100               	movlb	0	; () banked
  9659  002BA8  6FBD               	movwf	??_ecran_refresh& (0+255),b
  9660  002BAA  0E00               	movlw	0
  9661  002BAC  0100               	movlb	0	; () banked
  9662  002BAE  0100               	movlb	0	; () banked
  9663  002BB0  6FB4               	movwf	(_Ecran+10)& (0+255),b
  9664  002BB2  0100               	movlb	0	; () banked
  9665  002BB4  51BD               	movf	??_ecran_refresh& (0+255),w,b
  9666  002BB6                     l280:
  9667                           
  9668                           ; BSR set to: 0
  9669  002BB6  0012               	return	
  9670  002BB8  FFFF               	dw	65535	; errata NOP
  9671  002BBA                     __end_of_ecran_refresh:
  9672                           	opt stack 0
  9673                           tblptru	equ	0xFF8
  9674                           tblptrh	equ	0xFF7
  9675                           tblptrl	equ	0xFF6
  9676                           tablat	equ	0xFF5
  9677                           prodh	equ	0xFF4
  9678                           prodl	equ	0xFF3
  9679                           intcon	equ	0xFF2
  9680                           intcon2	equ	0xFF1
  9681                           postinc0	equ	0xFEE
  9682                           wreg	equ	0xFE8
  9683                           indf1	equ	0xFE7
  9684                           postdec1	equ	0xFE5
  9685                           fsr1h	equ	0xFE2
  9686                           fsr1l	equ	0xFE1
  9687                           indf2	equ	0xFDF
  9688                           postinc2	equ	0xFDE
  9689                           postdec2	equ	0xFDD
  9690                           fsr2h	equ	0xFDA
  9691                           fsr2l	equ	0xFD9
  9692                           status	equ	0xFD8
  9693                           
  9694 ;; *************** function _ecran_print_one_char *****************
  9695 ;; Defined at:
  9696 ;;		line 50 in file "ecran.c"
  9697 ;; Parameters:    Size  Location     Type
  9698 ;;  Digit           1    wreg     unsigned char 
  9699 ;;  Character       1    1[BANK0 ] unsigned char 
  9700 ;; Auto vars:     Size  Location     Type
  9701 ;;  Digit           1    2[BANK0 ] unsigned char 
  9702 ;; Return value:  Size  Location     Type
  9703 ;;		None               void
  9704 ;; Registers used:
  9705 ;;		wreg, status,2, status,0, cstack
  9706 ;; Tracked objects:
  9707 ;;		On entry : 0/0
  9708 ;;		On exit  : 0/0
  9709 ;;		Unchanged: 0/0
  9710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9711 ;;      Params:         0       1       0       0       0       0       0
  9712 ;;      Locals:         0       1       0       0       0       0       0
  9713 ;;      Temps:          0       0       0       0       0       0       0
  9714 ;;      Totals:         0       2       0       0       0       0       0
  9715 ;;Total ram usage:        2 bytes
  9716 ;; Hardware stack levels used:    1
  9717 ;; Hardware stack levels required when called:    4
  9718 ;; This function calls:
  9719 ;;		_ecran_digit
  9720 ;;		_ecran_raz_digit
  9721 ;; This function is called by:
  9722 ;;		_ecran_refresh
  9723 ;;		_cf_check_and_display
  9724 ;;		_cf_rcv
  9725 ;;		_check_idtest
  9726 ;;		_check_bpon
  9727 ;;		_micro_wait
  9728 ;;		_feu_check_bp
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           	psect	text42
  9733  0033B2                     __ptext42:
  9734                           	opt stack 0
  9735  0033B2                     _ecran_print_one_char:
  9736                           	opt stack 23
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;incstack = 0
  9740  0033B2  FFFF               	dw	65535
  9741                           
  9742                           ;ecran_print_one_char@Digit stored from wreg
  9743  0033B4  CFE8 F0BC          	movff	wreg,ecran_print_one_char@Digit
  9744                           
  9745                           ;ecran.c: 52: ecran_raz_digit();
  9746  0033B8  ECE1  F01A         	call	_ecran_raz_digit	;wreg free
  9747                           
  9748                           ;ecran.c: 54: ecran_digit(Character);
  9749  0033BC  0100               	movlb	0	; () banked
  9750  0033BE  0100               	movlb	0	; () banked
  9751  0033C0  51BB               	movf	ecran_print_one_char@Character& (0+255),w,b
  9752  0033C2  EC62  F013         	call	_ecran_digit
  9753                           
  9754                           ;ecran.c: 56: switch (Digit)
  9755  0033C6  D008               	goto	l5385
  9756  0033C8                     l258:
  9757                           
  9758                           ; BSR set to: 0
  9759  0033C8  8282               	bsf	3970,1,c	;volatile
  9760  0033CA  D015               	goto	l264
  9761  0033CC                     l260:
  9762                           
  9763                           ; BSR set to: 0
  9764  0033CC  8482               	bsf	3970,2,c	;volatile
  9765  0033CE  D013               	goto	l264
  9766  0033D0                     l261:
  9767                           
  9768                           ; BSR set to: 0
  9769  0033D0  8682               	bsf	3970,3,c	;volatile
  9770  0033D2  D011               	goto	l264
  9771  0033D4                     l262:
  9772                           
  9773                           ; BSR set to: 0
  9774  0033D4  8082               	bsf	3970,0,c	;volatile
  9775  0033D6  D00F               	goto	l264
  9776  0033D8                     l5385:
  9777  0033D8  0100               	movlb	0	; () banked
  9778  0033DA  0100               	movlb	0	; () banked
  9779  0033DC  51BC               	movf	ecran_print_one_char@Digit& (0+255),w,b
  9780                           
  9781                           ; Switch size 1, requested type "space"
  9782                           ; Number of cases is 4, Range of values is 0 to 3
  9783                           ; switch strategies available:
  9784                           ; Name         Instructions Cycles
  9785                           ; simple_byte           13     7 (average)
  9786                           ;	Chosen strategy is simple_byte
  9787  0033DE  0A00               	xorlw	0	; case 0
  9788  0033E0  B4D8               	btfsc	status,2,c
  9789  0033E2  D7F2               	goto	l258
  9790  0033E4  0A01               	xorlw	1	; case 1
  9791  0033E6  B4D8               	btfsc	status,2,c
  9792  0033E8  D7F1               	goto	l260
  9793  0033EA  0A03               	xorlw	3	; case 2
  9794  0033EC  B4D8               	btfsc	status,2,c
  9795  0033EE  D7F0               	goto	l261
  9796  0033F0  0A01               	xorlw	1	; case 3
  9797  0033F2  B4D8               	btfsc	status,2,c
  9798  0033F4  D7EF               	goto	l262
  9799  0033F6                     l264:
  9800                           
  9801                           ; BSR set to: 0
  9802  0033F6  0012               	return	
  9803  0033F8  FFFF               	dw	65535	; errata NOP
  9804  0033FA                     __end_of_ecran_print_one_char:
  9805                           	opt stack 0
  9806                           tblptru	equ	0xFF8
  9807                           tblptrh	equ	0xFF7
  9808                           tblptrl	equ	0xFF6
  9809                           tablat	equ	0xFF5
  9810                           prodh	equ	0xFF4
  9811                           prodl	equ	0xFF3
  9812                           intcon	equ	0xFF2
  9813                           intcon2	equ	0xFF1
  9814                           postinc0	equ	0xFEE
  9815                           wreg	equ	0xFE8
  9816                           indf1	equ	0xFE7
  9817                           postdec1	equ	0xFE5
  9818                           fsr1h	equ	0xFE2
  9819                           fsr1l	equ	0xFE1
  9820                           indf2	equ	0xFDF
  9821                           postinc2	equ	0xFDE
  9822                           postdec2	equ	0xFDD
  9823                           fsr2h	equ	0xFDA
  9824                           fsr2l	equ	0xFD9
  9825                           status	equ	0xFD8
  9826                           
  9827 ;; *************** function _ecran_raz_digit *****************
  9828 ;; Defined at:
  9829 ;;		line 3 in file "ecran.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;		None
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;		None
  9834 ;; Return value:  Size  Location     Type
  9835 ;;		None               void
  9836 ;; Registers used:
  9837 ;;		wreg, status,2, status,0
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9843 ;;      Params:         0       0       0       0       0       0       0
  9844 ;;      Locals:         0       0       0       0       0       0       0
  9845 ;;      Temps:          0       0       0       0       0       0       0
  9846 ;;      Totals:         0       0       0       0       0       0       0
  9847 ;;Total ram usage:        0 bytes
  9848 ;; Hardware stack levels used:    1
  9849 ;; Hardware stack levels required when called:    3
  9850 ;; This function calls:
  9851 ;;		Nothing
  9852 ;; This function is called by:
  9853 ;;		_ecran_print_one_char
  9854 ;;		_ecran_wait
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858                           	psect	text43
  9859  0035C2                     __ptext43:
  9860                           	opt stack 0
  9861  0035C2                     _ecran_raz_digit:
  9862                           	opt stack 25
  9863                           
  9864                           ; BSR set to: 0
  9865                           ;incstack = 0
  9866  0035C2  FFFF               	dw	65535
  9867                           
  9868                           ;ecran.c: 5: PORTD = 0;
  9869  0035C4  0E00               	movlw	0
  9870  0035C6  6E83               	movwf	3971,c	;volatile
  9871                           
  9872                           ;ecran.c: 6: PORTC &= 0xF0;
  9873  0035C8  0EF0               	movlw	240
  9874  0035CA  1682               	andwf	3970,f,c	;volatile
  9875  0035CC  0012               	return	
  9876  0035CE  FFFF               	dw	65535	; errata NOP
  9877  0035D0                     __end_of_ecran_raz_digit:
  9878                           	opt stack 0
  9879                           tblptru	equ	0xFF8
  9880                           tblptrh	equ	0xFF7
  9881                           tblptrl	equ	0xFF6
  9882                           tablat	equ	0xFF5
  9883                           prodh	equ	0xFF4
  9884                           prodl	equ	0xFF3
  9885                           intcon	equ	0xFF2
  9886                           intcon2	equ	0xFF1
  9887                           postinc0	equ	0xFEE
  9888                           wreg	equ	0xFE8
  9889                           indf1	equ	0xFE7
  9890                           postdec1	equ	0xFE5
  9891                           fsr1h	equ	0xFE2
  9892                           fsr1l	equ	0xFE1
  9893                           indf2	equ	0xFDF
  9894                           postinc2	equ	0xFDE
  9895                           postdec2	equ	0xFDD
  9896                           fsr2h	equ	0xFDA
  9897                           fsr2l	equ	0xFD9
  9898                           status	equ	0xFD8
  9899                           
  9900 ;; *************** function _ecran_digit *****************
  9901 ;; Defined at:
  9902 ;;		line 9 in file "ecran.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;  Char            1    wreg     unsigned char 
  9905 ;; Auto vars:     Size  Location     Type
  9906 ;;  Char            1    0[BANK0 ] unsigned char 
  9907 ;; Return value:  Size  Location     Type
  9908 ;;		None               void
  9909 ;; Registers used:
  9910 ;;		wreg, status,2, status,0
  9911 ;; Tracked objects:
  9912 ;;		On entry : 0/0
  9913 ;;		On exit  : 0/0
  9914 ;;		Unchanged: 0/0
  9915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9916 ;;      Params:         0       0       0       0       0       0       0
  9917 ;;      Locals:         0       1       0       0       0       0       0
  9918 ;;      Temps:          0       0       0       0       0       0       0
  9919 ;;      Totals:         0       1       0       0       0       0       0
  9920 ;;Total ram usage:        1 bytes
  9921 ;; Hardware stack levels used:    1
  9922 ;; Hardware stack levels required when called:    3
  9923 ;; This function calls:
  9924 ;;		Nothing
  9925 ;; This function is called by:
  9926 ;;		_ecran_print_one_char
  9927 ;; This function uses a non-reentrant model
  9928 ;;
  9929                           
  9930                           	psect	text44
  9931  0026C4                     __ptext44:
  9932                           	opt stack 0
  9933  0026C4                     _ecran_digit:
  9934                           	opt stack 23
  9935                           
  9936                           ;incstack = 0
  9937  0026C4  FFFF               	dw	65535
  9938                           
  9939                           ;ecran_digit@Char stored from wreg
  9940  0026C6  CFE8 F0BA          	movff	wreg,ecran_digit@Char
  9941                           
  9942                           ;ecran.c: 11: switch (Char)
  9943  0026CA  D02B               	goto	l5369
  9944  0026CC                     l5317:
  9945  0026CC  0E00               	movlw	0
  9946  0026CE  D027               	goto	L70
  9947  0026D0                     l5319:
  9948  0026D0  0EB7               	movlw	183
  9949  0026D2  D025               	goto	L70
  9950  0026D4                     l5327:
  9951  0026D4  0ED6               	movlw	214
  9952  0026D6  D023               	goto	L70
  9953  0026D8                     l5329:
  9954  0026D8  0E96               	movlw	150
  9955  0026DA  D021               	goto	L70
  9956  0026DC                     l5331:
  9957  0026DC  0E97               	movlw	151
  9958  0026DE  D01F               	goto	L70
  9959  0026E0                     l5333:
  9960  0026E0  0EF2               	movlw	242
  9961  0026E2  D01D               	goto	L70
  9962  0026E4                     l5335:
  9963  0026E4  0ED0               	movlw	208
  9964  0026E6  D01B               	goto	L70
  9965  0026E8                     l5337:
  9966  0026E8  0EF1               	movlw	241
  9967  0026EA  D019               	goto	L70
  9968  0026EC                     l5341:
  9969  0026EC  0ED2               	movlw	210
  9970  0026EE  D017               	goto	L70
  9971  0026F0                     l5343:
  9972  0026F0  0E40               	movlw	64
  9973  0026F2  D015               	goto	L70
  9974  0026F4                     l5345:
  9975  0026F4  0E10               	movlw	16
  9976  0026F6  D013               	goto	L70
  9977  0026F8                     l5347:
  9978  0026F8  0EE7               	movlw	231
  9979  0026FA  D011               	goto	L70
  9980  0026FC                     l5349:
  9981  0026FC  0E21               	movlw	33
  9982  0026FE  D00F               	goto	L70
  9983  002700                     l5351:
  9984  002700  0ED5               	movlw	213
  9985  002702  D00D               	goto	L70
  9986  002704                     l5353:
  9987  002704  0E75               	movlw	117
  9988  002706  D00B               	goto	L70
  9989  002708                     l5355:
  9990  002708  0E33               	movlw	51
  9991  00270A  D009               	goto	L70
  9992  00270C                     l5357:
  9993  00270C  0E76               	movlw	118
  9994  00270E  D007               	goto	L70
  9995  002710                     l5359:
  9996  002710  0EF6               	movlw	246
  9997  002712  D005               	goto	L70
  9998  002714                     l5361:
  9999  002714  0E25               	movlw	37
 10000  002716  D003               	goto	L70
 10001  002718                     l5363:
 10002  002718  0EF7               	movlw	247
 10003  00271A  D001               	goto	L70
 10004  00271C                     l5365:
 10005  00271C  0E77               	movlw	119
 10006  00271E                     L70:
 10007  00271E  6E83               	movwf	3971,c	;volatile
 10008  002720  D04E               	goto	l250
 10009  002722                     l5369:
 10010  002722  0100               	movlb	0	; () banked
 10011  002724  0100               	movlb	0	; () banked
 10012  002726  51BA               	movf	ecran_digit@Char& (0+255),w,b
 10013                           
 10014                           ; Switch size 1, requested type "space"
 10015                           ; Number of cases is 25, Range of values is 32 to 116
 10016                           ; switch strategies available:
 10017                           ; Name         Instructions Cycles
 10018                           ; simple_byte           76    39 (average)
 10019                           ;	Chosen strategy is simple_byte
 10020  002728  0A20               	xorlw	32	; case 32
 10021  00272A  B4D8               	btfsc	status,2,c
 10022  00272C  D7CF               	goto	l5317
 10023  00272E  0A0D               	xorlw	13	; case 45
 10024  002730  B4D8               	btfsc	status,2,c
 10025  002732  D7E0               	goto	l5345
 10026  002734  0A1D               	xorlw	29	; case 48
 10027  002736  B4D8               	btfsc	status,2,c
 10028  002738  D7DF               	goto	l5347
 10029  00273A  0A01               	xorlw	1	; case 49
 10030  00273C  B4D8               	btfsc	status,2,c
 10031  00273E  D7DE               	goto	l5349
 10032  002740  0A03               	xorlw	3	; case 50
 10033  002742  B4D8               	btfsc	status,2,c
 10034  002744  D7DD               	goto	l5351
 10035  002746  0A01               	xorlw	1	; case 51
 10036  002748  B4D8               	btfsc	status,2,c
 10037  00274A  D7DC               	goto	l5353
 10038  00274C  0A07               	xorlw	7	; case 52
 10039  00274E  B4D8               	btfsc	status,2,c
 10040  002750  D7DB               	goto	l5355
 10041  002752  0A01               	xorlw	1	; case 53
 10042  002754  B4D8               	btfsc	status,2,c
 10043  002756  D7DA               	goto	l5357
 10044  002758  0A03               	xorlw	3	; case 54
 10045  00275A  B4D8               	btfsc	status,2,c
 10046  00275C  D7D9               	goto	l5359
 10047  00275E  0A01               	xorlw	1	; case 55
 10048  002760  B4D8               	btfsc	status,2,c
 10049  002762  D7D8               	goto	l5361
 10050  002764  0A0F               	xorlw	15	; case 56
 10051  002766  B4D8               	btfsc	status,2,c
 10052  002768  D7D7               	goto	l5363
 10053  00276A  0A01               	xorlw	1	; case 57
 10054  00276C  B4D8               	btfsc	status,2,c
 10055  00276E  D7D6               	goto	l5365
 10056  002770  0A78               	xorlw	120	; case 65
 10057  002772  B4D8               	btfsc	status,2,c
 10058  002774  D7AD               	goto	l5319
 10059  002776  0A03               	xorlw	3	; case 66
 10060  002778  B4D8               	btfsc	status,2,c
 10061  00277A  D7B2               	goto	l5333
 10062  00277C  0A01               	xorlw	1	; case 67
 10063  00277E  B4D8               	btfsc	status,2,c
 10064  002780  D7B1               	goto	l5335
 10065  002782  0A07               	xorlw	7	; case 68
 10066  002784  B4D8               	btfsc	status,2,c
 10067  002786  D7B0               	goto	l5337
 10068  002788  0A01               	xorlw	1	; case 69
 10069  00278A  B4D8               	btfsc	status,2,c
 10070  00278C  D7A3               	goto	l5327
 10071  00278E  0A03               	xorlw	3	; case 70
 10072  002790  B4D8               	btfsc	status,2,c
 10073  002792  D7A2               	goto	l5329
 10074  002794  0A16               	xorlw	22	; case 80
 10075  002796  B4D8               	btfsc	status,2,c
 10076  002798  D7A1               	goto	l5331
 10077  00279A  0A03               	xorlw	3	; case 83
 10078  00279C  B4D8               	btfsc	status,2,c
 10079  00279E  D7B6               	goto	l5357
 10080  0027A0  0A0C               	xorlw	12	; case 95
 10081  0027A2  B4D8               	btfsc	status,2,c
 10082  0027A4  D7A5               	goto	l5343
 10083  0027A6  0A3D               	xorlw	61	; case 98
 10084  0027A8  B4D8               	btfsc	status,2,c
 10085  0027AA  D79A               	goto	l5333
 10086  0027AC  0A01               	xorlw	1	; case 99
 10087  0027AE  B4D8               	btfsc	status,2,c
 10088  0027B0  D799               	goto	l5335
 10089  0027B2  0A07               	xorlw	7	; case 100
 10090  0027B4  B4D8               	btfsc	status,2,c
 10091  0027B6  D798               	goto	l5337
 10092  0027B8  0A10               	xorlw	16	; case 116
 10093  0027BA  B4D8               	btfsc	status,2,c
 10094  0027BC  D797               	goto	l5341
 10095  0027BE                     l250:
 10096  0027BE  0012               	return	
 10097  0027C0  FFFF               	dw	65535	; errata NOP
 10098  0027C2                     __end_of_ecran_digit:
 10099                           	opt stack 0
 10100                           tblptru	equ	0xFF8
 10101                           tblptrh	equ	0xFF7
 10102                           tblptrl	equ	0xFF6
 10103                           tablat	equ	0xFF5
 10104                           prodh	equ	0xFF4
 10105                           prodl	equ	0xFF3
 10106                           intcon	equ	0xFF2
 10107                           intcon2	equ	0xFF1
 10108                           postinc0	equ	0xFEE
 10109                           wreg	equ	0xFE8
 10110                           indf1	equ	0xFE7
 10111                           postdec1	equ	0xFE5
 10112                           fsr1h	equ	0xFE2
 10113                           fsr1l	equ	0xFE1
 10114                           indf2	equ	0xFDF
 10115                           postinc2	equ	0xFDE
 10116                           postdec2	equ	0xFDD
 10117                           fsr2h	equ	0xFDA
 10118                           fsr2l	equ	0xFD9
 10119                           status	equ	0xFD8
 10120                           
 10121 ;; *************** function _ecran_dot *****************
 10122 ;; Defined at:
 10123 ;;		line 42 in file "ecran.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;  Dot             1    wreg     unsigned char 
 10126 ;; Auto vars:     Size  Location     Type
 10127 ;;  Dot             1    0[BANK0 ] unsigned char 
 10128 ;; Return value:  Size  Location     Type
 10129 ;;		None               void
 10130 ;; Registers used:
 10131 ;;		wreg, status,2, status,0
 10132 ;; Tracked objects:
 10133 ;;		On entry : 0/0
 10134 ;;		On exit  : 0/0
 10135 ;;		Unchanged: 0/0
 10136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10137 ;;      Params:         0       0       0       0       0       0       0
 10138 ;;      Locals:         0       1       0       0       0       0       0
 10139 ;;      Temps:          0       0       0       0       0       0       0
 10140 ;;      Totals:         0       1       0       0       0       0       0
 10141 ;;Total ram usage:        1 bytes
 10142 ;; Hardware stack levels used:    1
 10143 ;; Hardware stack levels required when called:    3
 10144 ;; This function calls:
 10145 ;;		Nothing
 10146 ;; This function is called by:
 10147 ;;		_ecran_wait
 10148 ;;		_ecran_refresh
 10149 ;; This function uses a non-reentrant model
 10150 ;;
 10151                           
 10152                           	psect	text45
 10153  0035AE                     __ptext45:
 10154                           	opt stack 0
 10155  0035AE                     _ecran_dot:
 10156                           	opt stack 25
 10157                           
 10158                           ;incstack = 0
 10159  0035AE  FFFF               	dw	65535
 10160                           
 10161                           ;ecran_dot@Dot stored from wreg
 10162  0035B0  CFE8 F0BA          	movff	wreg,ecran_dot@Dot
 10163                           
 10164                           ;ecran.c: 44: if (Dot == 1)
 10165  0035B4  0100               	movlb	0	; () banked
 10166  0035B6  0100               	movlb	0	; () banked
 10167  0035B8  05BA               	decf	ecran_dot@Dot& (0+255),w,b
 10168  0035BA  B4D8               	btfsc	status,2,c
 10169                           
 10170                           ; BSR set to: 0
 10171                           ;ecran.c: 45: {
 10172                           ;ecran.c: 46: PORTD |= 0x08;
 10173  0035BC  8683               	bsf	3971,3,c	;volatile
 10174                           
 10175                           ; BSR set to: 0
 10176                           
 10177                           ; BSR set to: 0
 10178  0035BE  0012               	return	
 10179  0035C0  FFFF               	dw	65535	; errata NOP
 10180  0035C2                     __end_of_ecran_dot:
 10181                           	opt stack 0
 10182                           tblptru	equ	0xFF8
 10183                           tblptrh	equ	0xFF7
 10184                           tblptrl	equ	0xFF6
 10185                           tablat	equ	0xFF5
 10186                           prodh	equ	0xFF4
 10187                           prodl	equ	0xFF3
 10188                           intcon	equ	0xFF2
 10189                           intcon2	equ	0xFF1
 10190                           postinc0	equ	0xFEE
 10191                           wreg	equ	0xFE8
 10192                           indf1	equ	0xFE7
 10193                           postdec1	equ	0xFE5
 10194                           fsr1h	equ	0xFE2
 10195                           fsr1l	equ	0xFE1
 10196                           indf2	equ	0xFDF
 10197                           postinc2	equ	0xFDE
 10198                           postdec2	equ	0xFDD
 10199                           fsr2h	equ	0xFDA
 10200                           fsr2l	equ	0xFD9
 10201                           status	equ	0xFD8
 10202                           
 10203 ;; *************** function _ecran_blank *****************
 10204 ;; Defined at:
 10205 ;;		line 103 in file "ecran.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;		None
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;		None
 10210 ;; Return value:  Size  Location     Type
 10211 ;;		None               void
 10212 ;; Registers used:
 10213 ;;		wreg, status,2, status,0
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10219 ;;      Params:         0       0       0       0       0       0       0
 10220 ;;      Locals:         0       0       0       0       0       0       0
 10221 ;;      Temps:          0       1       0       0       0       0       0
 10222 ;;      Totals:         0       1       0       0       0       0       0
 10223 ;;Total ram usage:        1 bytes
 10224 ;; Hardware stack levels used:    1
 10225 ;; Hardware stack levels required when called:    3
 10226 ;; This function calls:
 10227 ;;		Nothing
 10228 ;; This function is called by:
 10229 ;;		_check_comutest
 10230 ;;		_check_program_0
 10231 ;;		_test_process
 10232 ;;		_micro_wait
 10233 ;;		_armement_process
 10234 ;; This function uses a non-reentrant model
 10235 ;;
 10236                           
 10237                           	psect	text46
 10238  002FC6                     __ptext46:
 10239                           	opt stack 0
 10240  002FC6                     _ecran_blank:
 10241                           	opt stack 26
 10242                           
 10243                           ; BSR set to: 0
 10244                           ;incstack = 0
 10245  002FC6  FFFF               	dw	65535
 10246                           
 10247                           ;ecran.c: 106: Ecran.Digits = (char *) Blank;
 10248  002FC8  0E06               	movlw	high _Blank
 10249  002FCA  0100               	movlb	0	; () banked
 10250  002FCC  0100               	movlb	0	; () banked
 10251  002FCE  6FAF               	movwf	(_Ecran+5)& (0+255),b
 10252  002FD0  0E06               	movlw	low _Blank
 10253  002FD2  0100               	movlb	0	; () banked
 10254  002FD4  0100               	movlb	0	; () banked
 10255  002FD6  6FAE               	movwf	(_Ecran+4)& (0+255),b
 10256                           
 10257                           ; BSR set to: 0
 10258                           ;ecran.c: 108: Ecran.Dot[0] = 0;
 10259  002FD8  0100               	movlb	0	; () banked
 10260  002FDA  6FBA               	movwf	??_ecran_blank& (0+255),b
 10261  002FDC  0E00               	movlw	0
 10262  002FDE  0100               	movlb	0	; () banked
 10263  002FE0  0100               	movlb	0	; () banked
 10264  002FE2  6FB0               	movwf	(_Ecran+6)& (0+255),b
 10265  002FE4  0100               	movlb	0	; () banked
 10266  002FE6  51BA               	movf	??_ecran_blank& (0+255),w,b
 10267                           
 10268                           ; BSR set to: 0
 10269                           ;ecran.c: 109: Ecran.Dot[1] = 0;
 10270  002FE8  0100               	movlb	0	; () banked
 10271  002FEA  6FBA               	movwf	??_ecran_blank& (0+255),b
 10272  002FEC  0E00               	movlw	0
 10273  002FEE  0100               	movlb	0	; () banked
 10274  002FF0  0100               	movlb	0	; () banked
 10275  002FF2  6FB1               	movwf	(_Ecran+7)& (0+255),b
 10276  002FF4  0100               	movlb	0	; () banked
 10277  002FF6  51BA               	movf	??_ecran_blank& (0+255),w,b
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;ecran.c: 110: Ecran.Dot[2] = 0;
 10281  002FF8  0100               	movlb	0	; () banked
 10282  002FFA  6FBA               	movwf	??_ecran_blank& (0+255),b
 10283  002FFC  0E00               	movlw	0
 10284  002FFE  0100               	movlb	0	; () banked
 10285  003000  0100               	movlb	0	; () banked
 10286  003002  6FB2               	movwf	(_Ecran+8)& (0+255),b
 10287  003004  0100               	movlb	0	; () banked
 10288  003006  51BA               	movf	??_ecran_blank& (0+255),w,b
 10289                           
 10290                           ; BSR set to: 0
 10291                           ;ecran.c: 111: Ecran.Dot[3] = 0;
 10292  003008  0100               	movlb	0	; () banked
 10293  00300A  6FBA               	movwf	??_ecran_blank& (0+255),b
 10294  00300C  0E00               	movlw	0
 10295  00300E  0100               	movlb	0	; () banked
 10296  003010  0100               	movlb	0	; () banked
 10297  003012  6FB3               	movwf	(_Ecran+9)& (0+255),b
 10298  003014  0100               	movlb	0	; () banked
 10299  003016  51BA               	movf	??_ecran_blank& (0+255),w,b
 10300                           
 10301                           ; BSR set to: 0
 10302                           ;ecran.c: 113: Ecran.Solid = 0;
 10303  003018  0100               	movlb	0	; () banked
 10304  00301A  6FBA               	movwf	??_ecran_blank& (0+255),b
 10305  00301C  0E00               	movlw	0
 10306  00301E  0100               	movlb	0	; () banked
 10307  003020  0100               	movlb	0	; () banked
 10308  003022  6FB9               	movwf	(_Ecran+15)& (0+255),b
 10309  003024  0100               	movlb	0	; () banked
 10310  003026  51BA               	movf	??_ecran_blank& (0+255),w,b
 10311                           
 10312                           ; BSR set to: 0
 10313  003028  0012               	return	
 10314  00302A  FFFF               	dw	65535	; errata NOP
 10315  00302C                     __end_of_ecran_blank:
 10316                           	opt stack 0
 10317                           tblptru	equ	0xFF8
 10318                           tblptrh	equ	0xFF7
 10319                           tblptrl	equ	0xFF6
 10320                           tablat	equ	0xFF5
 10321                           prodh	equ	0xFF4
 10322                           prodl	equ	0xFF3
 10323                           intcon	equ	0xFF2
 10324                           intcon2	equ	0xFF1
 10325                           postinc0	equ	0xFEE
 10326                           wreg	equ	0xFE8
 10327                           indf1	equ	0xFE7
 10328                           postdec1	equ	0xFE5
 10329                           fsr1h	equ	0xFE2
 10330                           fsr1l	equ	0xFE1
 10331                           indf2	equ	0xFDF
 10332                           postinc2	equ	0xFDE
 10333                           postdec2	equ	0xFDD
 10334                           fsr2h	equ	0xFDA
 10335                           fsr2l	equ	0xFD9
 10336                           status	equ	0xFD8
 10337                           
 10338 ;; *************** function _arm_UAlim_1A *****************
 10339 ;; Defined at:
 10340 ;;		line 3 in file "armement.c"
 10341 ;; Parameters:    Size  Location     Type
 10342 ;;		None
 10343 ;; Auto vars:     Size  Location     Type
 10344 ;;  temp            2   34[BANK0 ] unsigned short 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  2   28[BANK0 ] unsigned short 
 10347 ;; Registers used:
 10348 ;;		wreg, status,2, status,0, cstack
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10354 ;;      Params:         0       2       0       0       0       0       0
 10355 ;;      Locals:         0       2       0       0       0       0       0
 10356 ;;      Temps:          0       4       0       0       0       0       0
 10357 ;;      Totals:         0       8       0       0       0       0       0
 10358 ;;Total ram usage:        8 bytes
 10359 ;; Hardware stack levels used:    1
 10360 ;; Hardware stack levels required when called:    5
 10361 ;; This function calls:
 10362 ;;		___ftmul
 10363 ;;		___fttol
 10364 ;;		___lwtoft
 10365 ;;		_ana_read
 10366 ;;		_delay_ms
 10367 ;; This function is called by:
 10368 ;;		_armement_process
 10369 ;; This function uses a non-reentrant model
 10370 ;;
 10371                           
 10372                           	psect	text47
 10373  0024B2                     __ptext47:
 10374                           	opt stack 0
 10375  0024B2                     _arm_UAlim_1A:
 10376                           	opt stack 24
 10377                           
 10378                           ; BSR set to: 0
 10379                           ;incstack = 0
 10380  0024B2  FFFF               	dw	65535
 10381                           
 10382                           ;armement.c: 5: unsigned short temp = 0;
 10383  0024B4  0E00               	movlw	0
 10384  0024B6  0100               	movlb	0	; () banked
 10385  0024B8  0100               	movlb	0	; () banked
 10386  0024BA  6FDD               	movwf	(arm_UAlim_1A@temp+1)& (0+255),b
 10387  0024BC  0E00               	movlw	0
 10388  0024BE  0100               	movlb	0	; () banked
 10389  0024C0  6FDC               	movwf	arm_UAlim_1A@temp& (0+255),b
 10390                           
 10391                           ; BSR set to: 0
 10392                           ;armement.c: 7: PORTAbits.RA5 = 0;
 10393  0024C2  9A80               	bcf	3968,5,c	;volatile
 10394                           
 10395                           ; BSR set to: 0
 10396                           ;armement.c: 8: PORTBbits.RB1 = 1;
 10397  0024C4  8281               	bsf	3969,1,c	;volatile
 10398                           
 10399                           ; BSR set to: 0
 10400                           ;armement.c: 10: delay_ms(10);
 10401  0024C6  0E00               	movlw	0
 10402  0024C8  0100               	movlb	0	; () banked
 10403  0024CA  0100               	movlb	0	; () banked
 10404  0024CC  6FBB               	movwf	(delay_ms@TimeToWait+1)& (0+255),b
 10405  0024CE  0E0A               	movlw	10
 10406  0024D0  0100               	movlb	0	; () banked
 10407  0024D2  6FBA               	movwf	delay_ms@TimeToWait& (0+255),b
 10408  0024D4  ECB4  F019         	call	_delay_ms	;wreg free
 10409                           
 10410                           ;armement.c: 12: temp = ana_read(0);
 10411  0024D8  0E00               	movlw	0
 10412  0024DA  EC7C  F017         	call	_ana_read
 10413  0024DE  0100               	movlb	0	; () banked
 10414  0024E0  C0C0  F0DC         	movff	?_ana_read,arm_UAlim_1A@temp
 10415  0024E4  0100               	movlb	0	; () banked
 10416  0024E6  C0C1  F0DD         	movff	?_ana_read+1,arm_UAlim_1A@temp+1
 10417                           
 10418                           ; BSR set to: 0
 10419                           ;armement.c: 14: PORTAbits.RA5 = 0;
 10420  0024EA  9A80               	bcf	3968,5,c	;volatile
 10421                           
 10422                           ; BSR set to: 0
 10423                           ;armement.c: 15: PORTBbits.RB1 = 0;
 10424  0024EC  9281               	bcf	3969,1,c	;volatile
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;armement.c: 17: Arm.U_Alim_1A = (float) temp * 0.0049f;
 10428  0024EE  C0DC  F0C2         	movff	arm_UAlim_1A@temp,___lwtoft@c
 10429  0024F2  C0DD  F0C3         	movff	arm_UAlim_1A@temp+1,___lwtoft@c+1
 10430  0024F6  EC8E  F019         	call	___lwtoft	;wreg free
 10431  0024FA  C0C2  F0C7         	movff	?___lwtoft,___ftmul@f1
 10432  0024FE  C0C3  F0C8         	movff	?___lwtoft+1,___ftmul@f1+1
 10433  002502  C0C4  F0C9         	movff	?___lwtoft+2,___ftmul@f1+2
 10434  002506  0E90               	movlw	144
 10435  002508  0100               	movlb	0	; () banked
 10436  00250A  0100               	movlb	0	; () banked
 10437  00250C  6FCA               	movwf	___ftmul@f2& (0+255),b
 10438  00250E  0EA0               	movlw	160
 10439  002510  0100               	movlb	0	; () banked
 10440  002512  0100               	movlb	0	; () banked
 10441  002514  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
 10442  002516  0E3B               	movlw	59
 10443  002518  0100               	movlb	0	; () banked
 10444  00251A  0100               	movlb	0	; () banked
 10445  00251C  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
 10446  00251E  ECDE  F009         	call	___ftmul	;wreg free
 10447  002522  C0C7  F09E         	movff	?___ftmul,_Arm+4
 10448  002526  C0C8  F09F         	movff	?___ftmul+1,_Arm+5
 10449  00252A  C0C9  F0A0         	movff	?___ftmul+2,_Arm+6
 10450                           
 10451                           ;armement.c: 18: Arm.U_Alim_1A = Arm.U_Alim_1A * 11.62f;
 10452  00252E  C09E  F0C7         	movff	_Arm+4,___ftmul@f1
 10453  002532  C09F  F0C8         	movff	_Arm+5,___ftmul@f1+1
 10454  002536  C0A0  F0C9         	movff	_Arm+6,___ftmul@f1+2
 10455  00253A  0EEC               	movlw	236
 10456  00253C  0100               	movlb	0	; () banked
 10457  00253E  0100               	movlb	0	; () banked
 10458  002540  6FCA               	movwf	___ftmul@f2& (0+255),b
 10459  002542  0E39               	movlw	57
 10460  002544  0100               	movlb	0	; () banked
 10461  002546  0100               	movlb	0	; () banked
 10462  002548  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
 10463  00254A  0E41               	movlw	65
 10464  00254C  0100               	movlb	0	; () banked
 10465  00254E  0100               	movlb	0	; () banked
 10466  002550  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
 10467  002552  ECDE  F009         	call	___ftmul	;wreg free
 10468  002556  C0C7  F09E         	movff	?___ftmul,_Arm+4
 10469  00255A  C0C8  F09F         	movff	?___ftmul+1,_Arm+5
 10470  00255E  C0C9  F0A0         	movff	?___ftmul+2,_Arm+6
 10471                           
 10472                           ;armement.c: 19: Arm.U_Alim_1A = Arm.U_Alim_1A * 100.0f;
 10473  002562  C09E  F0C7         	movff	_Arm+4,___ftmul@f1
 10474  002566  C09F  F0C8         	movff	_Arm+5,___ftmul@f1+1
 10475  00256A  C0A0  F0C9         	movff	_Arm+6,___ftmul@f1+2
 10476  00256E  0E00               	movlw	0
 10477  002570  0100               	movlb	0	; () banked
 10478  002572  0100               	movlb	0	; () banked
 10479  002574  6FCA               	movwf	___ftmul@f2& (0+255),b
 10480  002576  0EC8               	movlw	200
 10481  002578  0100               	movlb	0	; () banked
 10482  00257A  0100               	movlb	0	; () banked
 10483  00257C  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
 10484  00257E  0E42               	movlw	66
 10485  002580  0100               	movlb	0	; () banked
 10486  002582  0100               	movlb	0	; () banked
 10487  002584  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
 10488  002586  ECDE  F009         	call	___ftmul	;wreg free
 10489  00258A  C0C7  F09E         	movff	?___ftmul,_Arm+4
 10490  00258E  C0C8  F09F         	movff	?___ftmul+1,_Arm+5
 10491  002592  C0C9  F0A0         	movff	?___ftmul+2,_Arm+6
 10492                           
 10493                           ;armement.c: 21: return (unsigned short) Arm.U_Alim_1A;
 10494  002596  C09E  F0BA         	movff	_Arm+4,___fttol@f1
 10495  00259A  C09F  F0BB         	movff	_Arm+5,___fttol@f1+1
 10496  00259E  C0A0  F0BC         	movff	_Arm+6,___fttol@f1+2
 10497  0025A2  ECFA  F00D         	call	___fttol	;wreg free
 10498  0025A6  C0BA  F0D8         	movff	?___fttol,??_arm_UAlim_1A
 10499  0025AA  C0BB  F0D9         	movff	?___fttol+1,??_arm_UAlim_1A+1
 10500  0025AE  C0BC  F0DA         	movff	?___fttol+2,??_arm_UAlim_1A+2
 10501  0025B2  C0BD  F0DB         	movff	?___fttol+3,??_arm_UAlim_1A+3
 10502  0025B6  C0D8  F0D6         	movff	??_arm_UAlim_1A,?_arm_UAlim_1A
 10503  0025BA  C0D9  F0D7         	movff	??_arm_UAlim_1A+1,?_arm_UAlim_1A+1
 10504  0025BE  0012               	return	
 10505  0025C0  FFFF               	dw	65535	; errata NOP
 10506  0025C2                     __end_of_arm_UAlim_1A:
 10507                           	opt stack 0
 10508                           tblptru	equ	0xFF8
 10509                           tblptrh	equ	0xFF7
 10510                           tblptrl	equ	0xFF6
 10511                           tablat	equ	0xFF5
 10512                           prodh	equ	0xFF4
 10513                           prodl	equ	0xFF3
 10514                           intcon	equ	0xFF2
 10515                           intcon2	equ	0xFF1
 10516                           postinc0	equ	0xFEE
 10517                           wreg	equ	0xFE8
 10518                           indf1	equ	0xFE7
 10519                           postdec1	equ	0xFE5
 10520                           fsr1h	equ	0xFE2
 10521                           fsr1l	equ	0xFE1
 10522                           indf2	equ	0xFDF
 10523                           postinc2	equ	0xFDE
 10524                           postdec2	equ	0xFDD
 10525                           fsr2h	equ	0xFDA
 10526                           fsr2l	equ	0xFD9
 10527                           status	equ	0xFD8
 10528                           
 10529 ;; *************** function _ana_read *****************
 10530 ;; Defined at:
 10531 ;;		line 4 in file "analog.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;  ANx             1    wreg     unsigned char 
 10534 ;; Auto vars:     Size  Location     Type
 10535 ;;  ANx             1    9[BANK0 ] unsigned char 
 10536 ;;  temp            2   10[BANK0 ] unsigned short 
 10537 ;; Return value:  Size  Location     Type
 10538 ;;                  2    6[BANK0 ] unsigned short 
 10539 ;; Registers used:
 10540 ;;		wreg, status,2, status,0, cstack
 10541 ;; Tracked objects:
 10542 ;;		On entry : 0/0
 10543 ;;		On exit  : 0/0
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10546 ;;      Params:         0       2       0       0       0       0       0
 10547 ;;      Locals:         0       3       0       0       0       0       0
 10548 ;;      Temps:          0       1       0       0       0       0       0
 10549 ;;      Totals:         0       6       0       0       0       0       0
 10550 ;;Total ram usage:        6 bytes
 10551 ;; Hardware stack levels used:    1
 10552 ;; Hardware stack levels required when called:    4
 10553 ;; This function calls:
 10554 ;;		_delay_ms
 10555 ;; This function is called by:
 10556 ;;		_check_UAlim
 10557 ;;		_check_UInfla
 10558 ;;		_arm_UAlim_1A
 10559 ;; This function uses a non-reentrant model
 10560 ;;
 10561                           
 10562                           	psect	text48
 10563  002EF8                     __ptext48:
 10564                           	opt stack 0
 10565  002EF8                     _ana_read:
 10566                           	opt stack 24
 10567                           
 10568                           ;incstack = 0
 10569  002EF8  FFFF               	dw	65535
 10570                           
 10571                           ;ana_read@ANx stored from wreg
 10572  002EFA  CFE8 F0C3          	movff	wreg,ana_read@ANx
 10573                           
 10574                           ;analog.c: 6: unsigned short temp = 0;
 10575  002EFE  0E00               	movlw	0
 10576  002F00  0100               	movlb	0	; () banked
 10577  002F02  0100               	movlb	0	; () banked
 10578  002F04  6FC5               	movwf	(ana_read@temp+1)& (0+255),b
 10579  002F06  0E00               	movlw	0
 10580  002F08  0100               	movlb	0	; () banked
 10581  002F0A  6FC4               	movwf	ana_read@temp& (0+255),b
 10582                           
 10583                           ; BSR set to: 0
 10584                           ;analog.c: 8: ADCON0bits.CHS = ANx;
 10585  002F0C  C0C3  F0C2         	movff	ana_read@ANx,??_ana_read
 10586  002F10  0100               	movlb	0	; () banked
 10587  002F12  47C2               	rlncf	??_ana_read& (0+255),f,b
 10588  002F14  47C2               	rlncf	??_ana_read& (0+255),f,b
 10589  002F16  47C2               	rlncf	??_ana_read& (0+255),f,b
 10590  002F18  50C2               	movf	4034,w,c	;volatile
 10591  002F1A  0100               	movlb	0	; () banked
 10592  002F1C  19C2               	xorwf	??_ana_read& (0+255),w,b
 10593  002F1E  0BC7               	andlw	-57
 10594  002F20  19C2               	xorwf	??_ana_read& (0+255),w,b
 10595  002F22  6EC2               	movwf	4034,c	;volatile
 10596                           
 10597                           ; BSR set to: 0
 10598                           ;analog.c: 9: ADCON0bits.ADON = 1;
 10599  002F24  80C2               	bsf	4034,0,c	;volatile
 10600                           
 10601                           ; BSR set to: 0
 10602                           ;analog.c: 11: delay_ms(5);
 10603  002F26  0E00               	movlw	0
 10604  002F28  0100               	movlb	0	; () banked
 10605  002F2A  0100               	movlb	0	; () banked
 10606  002F2C  6FBB               	movwf	(delay_ms@TimeToWait+1)& (0+255),b
 10607  002F2E  0E05               	movlw	5
 10608  002F30  0100               	movlb	0	; () banked
 10609  002F32  6FBA               	movwf	delay_ms@TimeToWait& (0+255),b
 10610  002F34  ECB4  F019         	call	_delay_ms	;wreg free
 10611                           
 10612                           ;analog.c: 13: ADCON0bits.GO_nDONE = 1;
 10613  002F38  84C2               	bsf	4034,2,c	;volatile
 10614  002F3A                     l967:
 10615  002F3A  B4C2               	btfsc	4034,2,c	;volatile
 10616  002F3C  D7FE               	goto	l967
 10617                           
 10618                           ;analog.c: 16: temp = ADRESH << 8;
 10619  002F3E  50C4               	movf	4036,w,c	;volatile
 10620  002F40  0100               	movlb	0	; () banked
 10621  002F42  0100               	movlb	0	; () banked
 10622  002F44  6FC5               	movwf	(ana_read@temp+1)& (0+255),b
 10623  002F46  0100               	movlb	0	; () banked
 10624  002F48  6BC4               	clrf	ana_read@temp& (0+255),b
 10625                           
 10626                           ; BSR set to: 0
 10627                           ;analog.c: 17: temp |= ADRESL;
 10628  002F4A  50C3               	movf	4035,w,c	;volatile
 10629  002F4C  0100               	movlb	0	; () banked
 10630  002F4E  0100               	movlb	0	; () banked
 10631  002F50  13C4               	iorwf	ana_read@temp& (0+255),f,b
 10632                           
 10633                           ; BSR set to: 0
 10634                           ;analog.c: 19: ADCON0bits.ADON = 0;
 10635  002F52  90C2               	bcf	4034,0,c	;volatile
 10636                           
 10637                           ; BSR set to: 0
 10638                           ;analog.c: 21: return temp;
 10639  002F54  C0C4  F0C0         	movff	ana_read@temp,?_ana_read
 10640  002F58  C0C5  F0C1         	movff	ana_read@temp+1,?_ana_read+1
 10641                           
 10642                           ; BSR set to: 0
 10643                           
 10644                           ; BSR set to: 0
 10645  002F5C  0012               	return	
 10646  002F5E  FFFF               	dw	65535	; errata NOP
 10647  002F60                     __end_of_ana_read:
 10648                           	opt stack 0
 10649                           tblptru	equ	0xFF8
 10650                           tblptrh	equ	0xFF7
 10651                           tblptrl	equ	0xFF6
 10652                           tablat	equ	0xFF5
 10653                           prodh	equ	0xFF4
 10654                           prodl	equ	0xFF3
 10655                           intcon	equ	0xFF2
 10656                           intcon2	equ	0xFF1
 10657                           postinc0	equ	0xFEE
 10658                           wreg	equ	0xFE8
 10659                           indf1	equ	0xFE7
 10660                           postdec1	equ	0xFE5
 10661                           fsr1h	equ	0xFE2
 10662                           fsr1l	equ	0xFE1
 10663                           indf2	equ	0xFDF
 10664                           postinc2	equ	0xFDE
 10665                           postdec2	equ	0xFDD
 10666                           fsr2h	equ	0xFDA
 10667                           fsr2l	equ	0xFD9
 10668                           status	equ	0xFD8
 10669                           
 10670 ;; *************** function _delay_ms *****************
 10671 ;; Defined at:
 10672 ;;		line 4 in file "time.c"
 10673 ;; Parameters:    Size  Location     Type
 10674 ;;  TimeToWait      2    0[BANK0 ] unsigned short 
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;  temp            2    4[BANK0 ] unsigned short 
 10677 ;; Return value:  Size  Location     Type
 10678 ;;		None               void
 10679 ;; Registers used:
 10680 ;;		wreg, status,2, status,0
 10681 ;; Tracked objects:
 10682 ;;		On entry : 0/0
 10683 ;;		On exit  : 0/0
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10686 ;;      Params:         0       2       0       0       0       0       0
 10687 ;;      Locals:         0       2       0       0       0       0       0
 10688 ;;      Temps:          0       2       0       0       0       0       0
 10689 ;;      Totals:         0       6       0       0       0       0       0
 10690 ;;Total ram usage:        6 bytes
 10691 ;; Hardware stack levels used:    1
 10692 ;; Hardware stack levels required when called:    3
 10693 ;; This function calls:
 10694 ;;		Nothing
 10695 ;; This function is called by:
 10696 ;;		_ana_read
 10697 ;;		_arm_UAlim_1A
 10698 ;;		_feu_tir
 10699 ;;		_feu_process
 10700 ;; This function uses a non-reentrant model
 10701 ;;
 10702                           
 10703                           	psect	text49
 10704  003368                     __ptext49:
 10705                           	opt stack 0
 10706  003368                     _delay_ms:
 10707                           	opt stack 24
 10708                           
 10709                           ; BSR set to: 0
 10710                           ;incstack = 0
 10711  003368  FFFF               	dw	65535
 10712                           
 10713                           ;time.c: 6: unsigned short temp = Cptms;
 10714  00336A  C04F  F0BE         	movff	_Cptms,delay_ms@temp	;volatile
 10715  00336E  C050  F0BF         	movff	_Cptms+1,delay_ms@temp+1	;volatile
 10716  003372                     l5523:
 10717  003372  0100               	movlb	0	; () banked
 10718  003374  C0BE  F0BC         	movff	delay_ms@temp,??_delay_ms
 10719  003378  0100               	movlb	0	; () banked
 10720  00337A  C0BF  F0BD         	movff	delay_ms@temp+1,??_delay_ms+1
 10721  00337E  0100               	movlb	0	; () banked
 10722  003380  1FBC               	comf	??_delay_ms& (0+255),f,b
 10723  003382  1FBD               	comf	(??_delay_ms+1)& (0+255),f,b
 10724  003384  4BBC               	infsnz	??_delay_ms& (0+255),f,b
 10725  003386  2BBD               	incf	(??_delay_ms+1)& (0+255),f,b
 10726  003388  504F               	movf	_Cptms,w,c	;volatile
 10727  00338A  0100               	movlb	0	; () banked
 10728  00338C  27BC               	addwf	??_delay_ms& (0+255),f,b
 10729  00338E  5050               	movf	_Cptms+1,w,c	;volatile
 10730  003390  0100               	movlb	0	; () banked
 10731  003392  23BD               	addwfc	(??_delay_ms+1)& (0+255),f,b
 10732  003394  0100               	movlb	0	; () banked
 10733  003396  0100               	movlb	0	; () banked
 10734  003398  51BA               	movf	delay_ms@TimeToWait& (0+255),w,b
 10735  00339A  0100               	movlb	0	; () banked
 10736  00339C  5DBC               	subwf	??_delay_ms& (0+255),w,b
 10737  00339E  0100               	movlb	0	; () banked
 10738  0033A0  0100               	movlb	0	; () banked
 10739  0033A2  51BB               	movf	(delay_ms@TimeToWait+1)& (0+255),w,b
 10740  0033A4  0100               	movlb	0	; () banked
 10741  0033A6  59BD               	subwfb	(??_delay_ms+1)& (0+255),w,b
 10742  0033A8  B0D8               	btfsc	status,0,c
 10743                           
 10744                           ; BSR set to: 0
 10745                           
 10746                           ; BSR set to: 0
 10747  0033AA  0012               	return	
 10748  0033AC  FFFF               	dw	65535	; assembler added errata NOP
 10749  0033AE  D7E1               	goto	l5523
 10750  0033B0  FFFF               	dw	65535	; errata NOP
 10751  0033B2                     __end_of_delay_ms:
 10752                           	opt stack 0
 10753                           tblptru	equ	0xFF8
 10754                           tblptrh	equ	0xFF7
 10755                           tblptrl	equ	0xFF6
 10756                           tablat	equ	0xFF5
 10757                           prodh	equ	0xFF4
 10758                           prodl	equ	0xFF3
 10759                           intcon	equ	0xFF2
 10760                           intcon2	equ	0xFF1
 10761                           postinc0	equ	0xFEE
 10762                           wreg	equ	0xFE8
 10763                           indf1	equ	0xFE7
 10764                           postdec1	equ	0xFE5
 10765                           fsr1h	equ	0xFE2
 10766                           fsr1l	equ	0xFE1
 10767                           indf2	equ	0xFDF
 10768                           postinc2	equ	0xFDE
 10769                           postdec2	equ	0xFDD
 10770                           fsr2h	equ	0xFDA
 10771                           fsr2l	equ	0xFD9
 10772                           status	equ	0xFD8
 10773                           
 10774 ;; *************** function ___lwtoft *****************
 10775 ;; Defined at:
 10776 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwtoft.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;  c               2    8[BANK0 ] unsigned int 
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;		None
 10781 ;; Return value:  Size  Location     Type
 10782 ;;                  3    8[BANK0 ] float 
 10783 ;; Registers used:
 10784 ;;		wreg, status,2, status,0, cstack
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 0/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10790 ;;      Params:         0       3       0       0       0       0       0
 10791 ;;      Locals:         0       0       0       0       0       0       0
 10792 ;;      Temps:          0       2       0       0       0       0       0
 10793 ;;      Totals:         0       5       0       0       0       0       0
 10794 ;;Total ram usage:        5 bytes
 10795 ;; Hardware stack levels used:    1
 10796 ;; Hardware stack levels required when called:    4
 10797 ;; This function calls:
 10798 ;;		___ftpack
 10799 ;; This function is called by:
 10800 ;;		_check_UAlim
 10801 ;;		_check_UInfla
 10802 ;;		_arm_UAlim_1A
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           
 10806                           	psect	text50
 10807  00331C                     __ptext50:
 10808                           	opt stack 0
 10809  00331C                     ___lwtoft:
 10810                           	opt stack 24
 10811                           
 10812                           ; BSR set to: 0
 10813                           ;incstack = 0
 10814  00331C  FFFF               	dw	65535
 10815  00331E  0100               	movlb	0	; () banked
 10816  003320  0100               	movlb	0	; () banked
 10817  003322  C0C2  F0BA         	movff	___lwtoft@c,___ftpack@arg
 10818  003326  0100               	movlb	0	; () banked
 10819  003328  0100               	movlb	0	; () banked
 10820  00332A  C0C3  F0BB         	movff	___lwtoft@c+1,___ftpack@arg+1
 10821  00332E  0100               	movlb	0	; () banked
 10822  003330  0100               	movlb	0	; () banked
 10823  003332  6BBC               	clrf	(___ftpack@arg+2)& (0+255),b
 10824  003334  0100               	movlb	0	; () banked
 10825  003336  6FC5               	movwf	??___lwtoft& (0+255),b
 10826  003338  0E8E               	movlw	142
 10827  00333A  0100               	movlb	0	; () banked
 10828  00333C  0100               	movlb	0	; () banked
 10829  00333E  6FBD               	movwf	___ftpack@exp& (0+255),b
 10830  003340  0100               	movlb	0	; () banked
 10831  003342  51C5               	movf	??___lwtoft& (0+255),w,b
 10832  003344  0100               	movlb	0	; () banked
 10833  003346  6FC6               	movwf	(??___lwtoft+1)& (0+255),b
 10834  003348  0E00               	movlw	0
 10835  00334A  0100               	movlb	0	; () banked
 10836  00334C  0100               	movlb	0	; () banked
 10837  00334E  6FBE               	movwf	___ftpack@sign& (0+255),b
 10838  003350  0100               	movlb	0	; () banked
 10839  003352  51C6               	movf	(??___lwtoft+1)& (0+255),w,b
 10840  003354  EC10  F010         	call	___ftpack	;wreg free
 10841  003358  C0BA  F0C2         	movff	?___ftpack,?___lwtoft
 10842  00335C  C0BB  F0C3         	movff	?___ftpack+1,?___lwtoft+1
 10843  003360  C0BC  F0C4         	movff	?___ftpack+2,?___lwtoft+2
 10844  003364  0012               	return	
 10845  003366  FFFF               	dw	65535	; errata NOP
 10846  003368                     __end_of___lwtoft:
 10847                           	opt stack 0
 10848                           tblptru	equ	0xFF8
 10849                           tblptrh	equ	0xFF7
 10850                           tblptrl	equ	0xFF6
 10851                           tablat	equ	0xFF5
 10852                           prodh	equ	0xFF4
 10853                           prodl	equ	0xFF3
 10854                           intcon	equ	0xFF2
 10855                           intcon2	equ	0xFF1
 10856                           postinc0	equ	0xFEE
 10857                           wreg	equ	0xFE8
 10858                           indf1	equ	0xFE7
 10859                           postdec1	equ	0xFE5
 10860                           fsr1h	equ	0xFE2
 10861                           fsr1l	equ	0xFE1
 10862                           indf2	equ	0xFDF
 10863                           postinc2	equ	0xFDE
 10864                           postdec2	equ	0xFDD
 10865                           fsr2h	equ	0xFDA
 10866                           fsr2l	equ	0xFD9
 10867                           status	equ	0xFD8
 10868                           
 10869 ;; *************** function ___fttol *****************
 10870 ;; Defined at:
 10871 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\fttol.c"
 10872 ;; Parameters:    Size  Location     Type
 10873 ;;  f1              3    0[BANK0 ] float 
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;  lval            4   10[BANK0 ] unsigned long 
 10876 ;;  exp1            1   14[BANK0 ] unsigned char 
 10877 ;;  sign1           1    9[BANK0 ] unsigned char 
 10878 ;; Return value:  Size  Location     Type
 10879 ;;                  4    0[BANK0 ] long 
 10880 ;; Registers used:
 10881 ;;		wreg, status,2, status,0
 10882 ;; Tracked objects:
 10883 ;;		On entry : 0/0
 10884 ;;		On exit  : 0/0
 10885 ;;		Unchanged: 0/0
 10886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10887 ;;      Params:         0       4       0       0       0       0       0
 10888 ;;      Locals:         0       6       0       0       0       0       0
 10889 ;;      Temps:          0       5       0       0       0       0       0
 10890 ;;      Totals:         0      15       0       0       0       0       0
 10891 ;;Total ram usage:       15 bytes
 10892 ;; Hardware stack levels used:    1
 10893 ;; Hardware stack levels required when called:    3
 10894 ;; This function calls:
 10895 ;;		Nothing
 10896 ;; This function is called by:
 10897 ;;		_check_UAlim
 10898 ;;		_check_UInfla
 10899 ;;		_arm_UAlim_1A
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903                           	psect	text51
 10904  001BF4                     __ptext51:
 10905                           	opt stack 0
 10906  001BF4                     ___fttol:
 10907                           	opt stack 25
 10908                           
 10909                           ;incstack = 0
 10910  001BF4  FFFF               	dw	65535
 10911  001BF6  0100               	movlb	0	; () banked
 10912  001BF8  C0BC  F0BE         	movff	___fttol@f1+2,??___fttol
 10913  001BFC  0100               	movlb	0	; () banked
 10914  001BFE  6BBF               	clrf	(??___fttol+1)& (0+255),b
 10915  001C00  6BC0               	clrf	(??___fttol+2)& (0+255),b
 10916  001C02  0100               	movlb	0	; () banked
 10917  001C04  0100               	movlb	0	; () banked
 10918  001C06  35BB               	rlcf	(___fttol@f1+1)& (0+255),w,b
 10919  001C08  0100               	movlb	0	; () banked
 10920  001C0A  37BE               	rlcf	??___fttol& (0+255),f,b
 10921  001C0C  E301               	bnc	u5091
 10922  001C0E  81BF               	bsf	(??___fttol+1)& (0+255),0,b
 10923  001C10                     u5091:
 10924  001C10  0100               	movlb	0	; () banked
 10925  001C12  51BE               	movf	??___fttol& (0+255),w,b
 10926  001C14  0100               	movlb	0	; () banked
 10927  001C16  0100               	movlb	0	; () banked
 10928  001C18  6FC8               	movwf	___fttol@exp1& (0+255),b
 10929  001C1A  0100               	movlb	0	; () banked
 10930  001C1C  67C8               	tstfsz	___fttol@exp1& (0+255),b
 10931  001C1E  D001               	goto	l5837
 10932  001C20  D066               	goto	u5140
 10933  001C22                     l5837:
 10934                           
 10935                           ; BSR set to: 0
 10936  001C22  0E17               	movlw	23
 10937  001C24  0100               	movlb	0	; () banked
 10938  001C26  6FBE               	movwf	??___fttol& (0+255),b
 10939  001C28  0100               	movlb	0	; () banked
 10940  001C2A  C0BA  F0BF         	movff	___fttol@f1,??___fttol+1
 10941  001C2E  0100               	movlb	0	; () banked
 10942  001C30  C0BB  F0C0         	movff	___fttol@f1+1,??___fttol+2
 10943  001C34  0100               	movlb	0	; () banked
 10944  001C36  C0BC  F0C1         	movff	___fttol@f1+2,??___fttol+3
 10945  001C3A  0100               	movlb	0	; () banked
 10946  001C3C  29BE               	incf	??___fttol& (0+255),w,b
 10947  001C3E  0100               	movlb	0	; () banked
 10948  001C40  6FC2               	movwf	(??___fttol+4)& (0+255),b
 10949  001C42  D005               	goto	u5110
 10950  001C44                     u5115:
 10951  001C44  0100               	movlb	0	; () banked
 10952  001C46  90D8               	bcf	status,0,c
 10953  001C48  33C1               	rrcf	(??___fttol+3)& (0+255),f,b
 10954  001C4A  33C0               	rrcf	(??___fttol+2)& (0+255),f,b
 10955  001C4C  33BF               	rrcf	(??___fttol+1)& (0+255),f,b
 10956  001C4E                     u5110:
 10957  001C4E  0100               	movlb	0	; () banked
 10958  001C50  2FC2               	decfsz	(??___fttol+4)& (0+255),f,b
 10959  001C52  D7F8               	goto	u5115
 10960  001C54  0100               	movlb	0	; () banked
 10961  001C56  51BF               	movf	(??___fttol+1)& (0+255),w,b
 10962  001C58  0100               	movlb	0	; () banked
 10963  001C5A  0100               	movlb	0	; () banked
 10964  001C5C  6FC3               	movwf	___fttol@sign1& (0+255),b
 10965                           
 10966                           ; BSR set to: 0
 10967  001C5E  0100               	movlb	0	; () banked
 10968  001C60  0100               	movlb	0	; () banked
 10969  001C62  8FBB               	bsf	(___fttol@f1+1)& (0+255),7,b
 10970                           
 10971                           ; BSR set to: 0
 10972  001C64  0EFF               	movlw	255
 10973  001C66  0100               	movlb	0	; () banked
 10974  001C68  0100               	movlb	0	; () banked
 10975  001C6A  17BA               	andwf	___fttol@f1& (0+255),f,b
 10976  001C6C  0EFF               	movlw	255
 10977  001C6E  0100               	movlb	0	; () banked
 10978  001C70  0100               	movlb	0	; () banked
 10979  001C72  17BB               	andwf	(___fttol@f1+1)& (0+255),f,b
 10980  001C74  0E00               	movlw	0
 10981  001C76  0100               	movlb	0	; () banked
 10982  001C78  0100               	movlb	0	; () banked
 10983  001C7A  17BC               	andwf	(___fttol@f1+2)& (0+255),f,b
 10984                           
 10985                           ; BSR set to: 0
 10986  001C7C  0100               	movlb	0	; () banked
 10987  001C7E  0100               	movlb	0	; () banked
 10988  001C80  51BA               	movf	___fttol@f1& (0+255),w,b
 10989  001C82  0100               	movlb	0	; () banked
 10990  001C84  0100               	movlb	0	; () banked
 10991  001C86  6FC4               	movwf	___fttol@lval& (0+255),b
 10992  001C88  0100               	movlb	0	; () banked
 10993  001C8A  0100               	movlb	0	; () banked
 10994  001C8C  51BB               	movf	(___fttol@f1+1)& (0+255),w,b
 10995  001C8E  0100               	movlb	0	; () banked
 10996  001C90  6FC5               	movwf	(___fttol@lval+1)& (0+255),b
 10997  001C92  0100               	movlb	0	; () banked
 10998  001C94  51BC               	movf	(___fttol@f1+2)& (0+255),w,b
 10999  001C96  0100               	movlb	0	; () banked
 11000  001C98  6FC6               	movwf	(___fttol@lval+2)& (0+255),b
 11001  001C9A  0100               	movlb	0	; () banked
 11002  001C9C  6BC7               	clrf	(___fttol@lval+3)& (0+255),b
 11003                           
 11004                           ; BSR set to: 0
 11005  001C9E  0E8E               	movlw	142
 11006  001CA0  0100               	movlb	0	; () banked
 11007  001CA2  0100               	movlb	0	; () banked
 11008  001CA4  5FC8               	subwf	___fttol@exp1& (0+255),f,b
 11009                           
 11010                           ; BSR set to: 0
 11011  001CA6  0100               	movlb	0	; () banked
 11012  001CA8  0100               	movlb	0	; () banked
 11013  001CAA  AFC8               	btfss	___fttol@exp1& (0+255),7,b
 11014  001CAC  D01B               	goto	l5859
 11015                           
 11016                           ; BSR set to: 0
 11017  001CAE  0100               	movlb	0	; () banked
 11018  001CB0  0100               	movlb	0	; () banked
 11019  001CB2  51C8               	movf	___fttol@exp1& (0+255),w,b
 11020  001CB4  0A80               	xorlw	128
 11021  001CB6  0100               	movlb	0	; () banked
 11022  001CB8  6FBE               	movwf	??___fttol& (0+255),b
 11023  001CBA  0EF1               	movlw	241
 11024  001CBC  0A80               	xorlw	128
 11025  001CBE  0100               	movlb	0	; () banked
 11026  001CC0  5DBE               	subwf	??___fttol& (0+255),w,b
 11027  001CC2  A0D8               	btfss	status,0,c
 11028  001CC4  D014               	goto	u5140
 11029  001CC6                     l5855:
 11030                           
 11031                           ; BSR set to: 0
 11032  001CC6  0100               	movlb	0	; () banked
 11033  001CC8  90D8               	bcf	status,0,c
 11034  001CCA  0100               	movlb	0	; () banked
 11035  001CCC  33C7               	rrcf	(___fttol@lval+3)& (0+255),f,b
 11036  001CCE  0100               	movlb	0	; () banked
 11037  001CD0  33C6               	rrcf	(___fttol@lval+2)& (0+255),f,b
 11038  001CD2  0100               	movlb	0	; () banked
 11039  001CD4  33C5               	rrcf	(___fttol@lval+1)& (0+255),f,b
 11040  001CD6  0100               	movlb	0	; () banked
 11041  001CD8  33C4               	rrcf	___fttol@lval& (0+255),f,b
 11042                           
 11043                           ; BSR set to: 0
 11044  001CDA  0100               	movlb	0	; () banked
 11045  001CDC  0100               	movlb	0	; () banked
 11046  001CDE  3FC8               	incfsz	___fttol@exp1& (0+255),f,b
 11047  001CE0  D7F2               	goto	l5855
 11048  001CE2  D024               	goto	l5869
 11049  001CE4                     l5859:
 11050                           
 11051                           ; BSR set to: 0
 11052  001CE4  0E17               	movlw	23
 11053  001CE6  0100               	movlb	0	; () banked
 11054  001CE8  0100               	movlb	0	; () banked
 11055  001CEA  65C8               	cpfsgt	___fttol@exp1& (0+255),b
 11056  001CEC  D01B               	goto	l5867
 11057  001CEE                     u5140:
 11058                           
 11059                           ; BSR set to: 0
 11060  001CEE  0E00               	movlw	0
 11061  001CF0  0100               	movlb	0	; () banked
 11062  001CF2  0100               	movlb	0	; () banked
 11063  001CF4  6FBA               	movwf	?___fttol& (0+255),b
 11064  001CF6  0E00               	movlw	0
 11065  001CF8  0100               	movlb	0	; () banked
 11066  001CFA  6FBB               	movwf	(?___fttol+1)& (0+255),b
 11067  001CFC  0E00               	movlw	0
 11068  001CFE  0100               	movlb	0	; () banked
 11069  001D00  6FBC               	movwf	(?___fttol+2)& (0+255),b
 11070  001D02  0E00               	movlw	0
 11071  001D04  0100               	movlb	0	; () banked
 11072  001D06  6FBD               	movwf	(?___fttol+3)& (0+255),b
 11073  001D08  D02E               	goto	l1549
 11074  001D0A                     l5865:
 11075                           
 11076                           ; BSR set to: 0
 11077  001D0A  0100               	movlb	0	; () banked
 11078  001D0C  90D8               	bcf	status,0,c
 11079  001D0E  0100               	movlb	0	; () banked
 11080  001D10  37C4               	rlcf	___fttol@lval& (0+255),f,b
 11081  001D12  0100               	movlb	0	; () banked
 11082  001D14  37C5               	rlcf	(___fttol@lval+1)& (0+255),f,b
 11083  001D16  0100               	movlb	0	; () banked
 11084  001D18  37C6               	rlcf	(___fttol@lval+2)& (0+255),f,b
 11085  001D1A  0100               	movlb	0	; () banked
 11086  001D1C  37C7               	rlcf	(___fttol@lval+3)& (0+255),f,b
 11087  001D1E  0100               	movlb	0	; () banked
 11088  001D20  0100               	movlb	0	; () banked
 11089  001D22  07C8               	decf	___fttol@exp1& (0+255),f,b
 11090  001D24                     l5867:
 11091                           
 11092                           ; BSR set to: 0
 11093  001D24  0100               	movlb	0	; () banked
 11094  001D26  0100               	movlb	0	; () banked
 11095  001D28  67C8               	tstfsz	___fttol@exp1& (0+255),b
 11096  001D2A  D7EF               	goto	l5865
 11097  001D2C                     l5869:
 11098                           
 11099                           ; BSR set to: 0
 11100  001D2C  0100               	movlb	0	; () banked
 11101  001D2E  0100               	movlb	0	; () banked
 11102  001D30  51C3               	movf	___fttol@sign1& (0+255),w,b
 11103  001D32  B4D8               	btfsc	status,2,c
 11104  001D34  D010               	goto	l5873
 11105                           
 11106                           ; BSR set to: 0
 11107  001D36  0100               	movlb	0	; () banked
 11108  001D38  0100               	movlb	0	; () banked
 11109  001D3A  1FC7               	comf	(___fttol@lval+3)& (0+255),f,b
 11110  001D3C  0100               	movlb	0	; () banked
 11111  001D3E  1FC6               	comf	(___fttol@lval+2)& (0+255),f,b
 11112  001D40  0100               	movlb	0	; () banked
 11113  001D42  1FC5               	comf	(___fttol@lval+1)& (0+255),f,b
 11114  001D44  0100               	movlb	0	; () banked
 11115  001D46  6DC4               	negf	___fttol@lval& (0+255),b
 11116  001D48  0E00               	movlw	0
 11117  001D4A  0100               	movlb	0	; () banked
 11118  001D4C  23C5               	addwfc	(___fttol@lval+1)& (0+255),f,b
 11119  001D4E  0100               	movlb	0	; () banked
 11120  001D50  23C6               	addwfc	(___fttol@lval+2)& (0+255),f,b
 11121  001D52  0100               	movlb	0	; () banked
 11122  001D54  23C7               	addwfc	(___fttol@lval+3)& (0+255),f,b
 11123  001D56                     l5873:
 11124                           
 11125                           ; BSR set to: 0
 11126  001D56  C0C4  F0BA         	movff	___fttol@lval,?___fttol
 11127  001D5A  C0C5  F0BB         	movff	___fttol@lval+1,?___fttol+1
 11128  001D5E  C0C6  F0BC         	movff	___fttol@lval+2,?___fttol+2
 11129  001D62  C0C7  F0BD         	movff	___fttol@lval+3,?___fttol+3
 11130  001D66                     l1549:
 11131                           
 11132                           ; BSR set to: 0
 11133  001D66  0012               	return	
 11134  001D68  FFFF               	dw	65535	; errata NOP
 11135  001D6A                     __end_of___fttol:
 11136                           	opt stack 0
 11137                           tblptru	equ	0xFF8
 11138                           tblptrh	equ	0xFF7
 11139                           tblptrl	equ	0xFF6
 11140                           tablat	equ	0xFF5
 11141                           prodh	equ	0xFF4
 11142                           prodl	equ	0xFF3
 11143                           intcon	equ	0xFF2
 11144                           intcon2	equ	0xFF1
 11145                           postinc0	equ	0xFEE
 11146                           wreg	equ	0xFE8
 11147                           indf1	equ	0xFE7
 11148                           postdec1	equ	0xFE5
 11149                           fsr1h	equ	0xFE2
 11150                           fsr1l	equ	0xFE1
 11151                           indf2	equ	0xFDF
 11152                           postinc2	equ	0xFDE
 11153                           postdec2	equ	0xFDD
 11154                           fsr2h	equ	0xFDA
 11155                           fsr2l	equ	0xFD9
 11156                           status	equ	0xFD8
 11157                           
 11158 ;; *************** function ___ftmul *****************
 11159 ;; Defined at:
 11160 ;;		line 51 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\ftmul.c"
 11161 ;; Parameters:    Size  Location     Type
 11162 ;;  f1              3   13[BANK0 ] float 
 11163 ;;  f2              3   16[BANK0 ] float 
 11164 ;; Auto vars:     Size  Location     Type
 11165 ;;  f3_as_produc    3   23[BANK0 ] unsigned um
 11166 ;;  sign            1   27[BANK0 ] unsigned char 
 11167 ;;  cntr            1   26[BANK0 ] unsigned char 
 11168 ;;  exp             1   22[BANK0 ] unsigned char 
 11169 ;; Return value:  Size  Location     Type
 11170 ;;                  3   13[BANK0 ] float 
 11171 ;; Registers used:
 11172 ;;		wreg, status,2, status,0, cstack
 11173 ;; Tracked objects:
 11174 ;;		On entry : 0/0
 11175 ;;		On exit  : 0/0
 11176 ;;		Unchanged: 0/0
 11177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11178 ;;      Params:         0       6       0       0       0       0       0
 11179 ;;      Locals:         0       6       0       0       0       0       0
 11180 ;;      Temps:          0       3       0       0       0       0       0
 11181 ;;      Totals:         0      15       0       0       0       0       0
 11182 ;;Total ram usage:       15 bytes
 11183 ;; Hardware stack levels used:    1
 11184 ;; Hardware stack levels required when called:    4
 11185 ;; This function calls:
 11186 ;;		___ftpack
 11187 ;; This function is called by:
 11188 ;;		_check_UAlim
 11189 ;;		_check_UInfla
 11190 ;;		_arm_UAlim_1A
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           	psect	text52
 11195  0013BC                     __ptext52:
 11196                           	opt stack 0
 11197  0013BC                     ___ftmul:
 11198                           	opt stack 24
 11199                           
 11200                           ; BSR set to: 0
 11201                           ;incstack = 0
 11202  0013BC  FFFF               	dw	65535
 11203  0013BE  0100               	movlb	0	; () banked
 11204  0013C0  C0C9  F0CD         	movff	___ftmul@f1+2,??___ftmul
 11205  0013C4  0100               	movlb	0	; () banked
 11206  0013C6  6BCE               	clrf	(??___ftmul+1)& (0+255),b
 11207  0013C8  6BCF               	clrf	(??___ftmul+2)& (0+255),b
 11208  0013CA  0100               	movlb	0	; () banked
 11209  0013CC  0100               	movlb	0	; () banked
 11210  0013CE  35C8               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 11211  0013D0  0100               	movlb	0	; () banked
 11212  0013D2  37CD               	rlcf	??___ftmul& (0+255),f,b
 11213  0013D4  E301               	bnc	u5031
 11214  0013D6  81CE               	bsf	(??___ftmul+1)& (0+255),0,b
 11215  0013D8                     u5031:
 11216  0013D8  0100               	movlb	0	; () banked
 11217  0013DA  51CD               	movf	??___ftmul& (0+255),w,b
 11218  0013DC  0100               	movlb	0	; () banked
 11219  0013DE  0100               	movlb	0	; () banked
 11220  0013E0  6FD0               	movwf	___ftmul@exp& (0+255),b
 11221  0013E2  0100               	movlb	0	; () banked
 11222  0013E4  67D0               	tstfsz	___ftmul@exp& (0+255),b
 11223  0013E6  D001               	goto	l5789
 11224  0013E8  D015               	goto	u5060
 11225  0013EA                     l5789:
 11226                           
 11227                           ; BSR set to: 0
 11228  0013EA  0100               	movlb	0	; () banked
 11229  0013EC  C0CC  F0CD         	movff	___ftmul@f2+2,??___ftmul
 11230  0013F0  0100               	movlb	0	; () banked
 11231  0013F2  6BCE               	clrf	(??___ftmul+1)& (0+255),b
 11232  0013F4  6BCF               	clrf	(??___ftmul+2)& (0+255),b
 11233  0013F6  0100               	movlb	0	; () banked
 11234  0013F8  0100               	movlb	0	; () banked
 11235  0013FA  35CB               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 11236  0013FC  0100               	movlb	0	; () banked
 11237  0013FE  37CD               	rlcf	??___ftmul& (0+255),f,b
 11238  001400  E301               	bnc	u5051
 11239  001402  81CE               	bsf	(??___ftmul+1)& (0+255),0,b
 11240  001404                     u5051:
 11241  001404  0100               	movlb	0	; () banked
 11242  001406  51CD               	movf	??___ftmul& (0+255),w,b
 11243  001408  0100               	movlb	0	; () banked
 11244  00140A  0100               	movlb	0	; () banked
 11245  00140C  6FD5               	movwf	___ftmul@sign& (0+255),b
 11246  00140E  0100               	movlb	0	; () banked
 11247  001410  67D5               	tstfsz	___ftmul@sign& (0+255),b
 11248  001412  D00D               	goto	l5795
 11249  001414                     u5060:
 11250                           
 11251                           ; BSR set to: 0
 11252  001414  0E00               	movlw	0
 11253  001416  0100               	movlb	0	; () banked
 11254  001418  0100               	movlb	0	; () banked
 11255  00141A  6FC7               	movwf	?___ftmul& (0+255),b
 11256  00141C  0E00               	movlw	0
 11257  00141E  0100               	movlb	0	; () banked
 11258  001420  0100               	movlb	0	; () banked
 11259  001422  6FC8               	movwf	(?___ftmul+1)& (0+255),b
 11260  001424  0E00               	movlw	0
 11261  001426  0100               	movlb	0	; () banked
 11262  001428  0100               	movlb	0	; () banked
 11263  00142A  6FC9               	movwf	(?___ftmul+2)& (0+255),b
 11264  00142C  D0A7               	goto	l1529
 11265  00142E                     l5795:
 11266                           
 11267                           ; BSR set to: 0
 11268  00142E  0100               	movlb	0	; () banked
 11269  001430  0100               	movlb	0	; () banked
 11270  001432  51D5               	movf	___ftmul@sign& (0+255),w,b
 11271  001434  0F7B               	addlw	123
 11272  001436  0100               	movlb	0	; () banked
 11273  001438  0100               	movlb	0	; () banked
 11274  00143A  27D0               	addwf	___ftmul@exp& (0+255),f,b
 11275                           
 11276                           ; BSR set to: 0
 11277  00143C  C0C9  F0D5         	movff	___ftmul@f1+2,___ftmul@sign
 11278  001440  0100               	movlb	0	; () banked
 11279  001442  0100               	movlb	0	; () banked
 11280  001444  51CC               	movf	(___ftmul@f2+2)& (0+255),w,b
 11281  001446  0100               	movlb	0	; () banked
 11282  001448  0100               	movlb	0	; () banked
 11283  00144A  1BD5               	xorwf	___ftmul@sign& (0+255),f,b
 11284  00144C  0E80               	movlw	128
 11285  00144E  0100               	movlb	0	; () banked
 11286  001450  0100               	movlb	0	; () banked
 11287  001452  17D5               	andwf	___ftmul@sign& (0+255),f,b
 11288                           
 11289                           ; BSR set to: 0
 11290  001454  0100               	movlb	0	; () banked
 11291  001456  0100               	movlb	0	; () banked
 11292  001458  8FC8               	bsf	(___ftmul@f1+1)& (0+255),7,b
 11293                           
 11294                           ; BSR set to: 0
 11295  00145A  0100               	movlb	0	; () banked
 11296  00145C  0100               	movlb	0	; () banked
 11297  00145E  8FCB               	bsf	(___ftmul@f2+1)& (0+255),7,b
 11298                           
 11299                           ; BSR set to: 0
 11300  001460  0EFF               	movlw	255
 11301  001462  0100               	movlb	0	; () banked
 11302  001464  0100               	movlb	0	; () banked
 11303  001466  17CA               	andwf	___ftmul@f2& (0+255),f,b
 11304  001468  0EFF               	movlw	255
 11305  00146A  0100               	movlb	0	; () banked
 11306  00146C  0100               	movlb	0	; () banked
 11307  00146E  17CB               	andwf	(___ftmul@f2+1)& (0+255),f,b
 11308  001470  0E00               	movlw	0
 11309  001472  0100               	movlb	0	; () banked
 11310  001474  0100               	movlb	0	; () banked
 11311  001476  17CC               	andwf	(___ftmul@f2+2)& (0+255),f,b
 11312                           
 11313                           ; BSR set to: 0
 11314  001478  0E00               	movlw	0
 11315  00147A  0100               	movlb	0	; () banked
 11316  00147C  0100               	movlb	0	; () banked
 11317  00147E  6FD1               	movwf	___ftmul@f3_as_product& (0+255),b
 11318  001480  0E00               	movlw	0
 11319  001482  0100               	movlb	0	; () banked
 11320  001484  0100               	movlb	0	; () banked
 11321  001486  6FD2               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 11322  001488  0E00               	movlw	0
 11323  00148A  0100               	movlb	0	; () banked
 11324  00148C  0100               	movlb	0	; () banked
 11325  00148E  6FD3               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 11326                           
 11327                           ; BSR set to: 0
 11328  001490  0100               	movlb	0	; () banked
 11329  001492  6FCD               	movwf	??___ftmul& (0+255),b
 11330  001494  0E07               	movlw	7
 11331  001496  0100               	movlb	0	; () banked
 11332  001498  0100               	movlb	0	; () banked
 11333  00149A  6FD4               	movwf	___ftmul@cntr& (0+255),b
 11334  00149C  0100               	movlb	0	; () banked
 11335  00149E  51CD               	movf	??___ftmul& (0+255),w,b
 11336  0014A0                     l5809:
 11337                           
 11338                           ; BSR set to: 0
 11339  0014A0  0100               	movlb	0	; () banked
 11340  0014A2  0100               	movlb	0	; () banked
 11341  0014A4  A1C7               	btfss	___ftmul@f1& (0+255),0,b
 11342  0014A6  D012               	goto	l5813
 11343                           
 11344                           ; BSR set to: 0
 11345  0014A8  0100               	movlb	0	; () banked
 11346  0014AA  0100               	movlb	0	; () banked
 11347  0014AC  51CA               	movf	___ftmul@f2& (0+255),w,b
 11348  0014AE  0100               	movlb	0	; () banked
 11349  0014B0  0100               	movlb	0	; () banked
 11350  0014B2  27D1               	addwf	___ftmul@f3_as_product& (0+255),f,b
 11351  0014B4  0100               	movlb	0	; () banked
 11352  0014B6  0100               	movlb	0	; () banked
 11353  0014B8  51CB               	movf	(___ftmul@f2+1)& (0+255),w,b
 11354  0014BA  0100               	movlb	0	; () banked
 11355  0014BC  0100               	movlb	0	; () banked
 11356  0014BE  23D2               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 11357  0014C0  0100               	movlb	0	; () banked
 11358  0014C2  0100               	movlb	0	; () banked
 11359  0014C4  51CC               	movf	(___ftmul@f2+2)& (0+255),w,b
 11360  0014C6  0100               	movlb	0	; () banked
 11361  0014C8  0100               	movlb	0	; () banked
 11362  0014CA  23D3               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 11363  0014CC                     l5813:
 11364                           
 11365                           ; BSR set to: 0
 11366  0014CC  0100               	movlb	0	; () banked
 11367  0014CE  90D8               	bcf	status,0,c
 11368  0014D0  0100               	movlb	0	; () banked
 11369  0014D2  33C9               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 11370  0014D4  0100               	movlb	0	; () banked
 11371  0014D6  33C8               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 11372  0014D8  0100               	movlb	0	; () banked
 11373  0014DA  33C7               	rrcf	___ftmul@f1& (0+255),f,b
 11374  0014DC  0100               	movlb	0	; () banked
 11375  0014DE  90D8               	bcf	status,0,c
 11376  0014E0  0100               	movlb	0	; () banked
 11377  0014E2  37CA               	rlcf	___ftmul@f2& (0+255),f,b
 11378  0014E4  0100               	movlb	0	; () banked
 11379  0014E6  37CB               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 11380  0014E8  0100               	movlb	0	; () banked
 11381  0014EA  37CC               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 11382                           
 11383                           ; BSR set to: 0
 11384  0014EC  0100               	movlb	0	; () banked
 11385  0014EE  0100               	movlb	0	; () banked
 11386  0014F0  2FD4               	decfsz	___ftmul@cntr& (0+255),f,b
 11387  0014F2  D7D6               	goto	l5809
 11388                           
 11389                           ; BSR set to: 0
 11390                           
 11391                           ; BSR set to: 0
 11392  0014F4  0100               	movlb	0	; () banked
 11393  0014F6  6FCD               	movwf	??___ftmul& (0+255),b
 11394  0014F8  0E09               	movlw	9
 11395  0014FA  0100               	movlb	0	; () banked
 11396  0014FC  0100               	movlb	0	; () banked
 11397  0014FE  6FD4               	movwf	___ftmul@cntr& (0+255),b
 11398  001500  0100               	movlb	0	; () banked
 11399  001502  51CD               	movf	??___ftmul& (0+255),w,b
 11400  001504                     l5819:
 11401                           
 11402                           ; BSR set to: 0
 11403  001504  0100               	movlb	0	; () banked
 11404  001506  0100               	movlb	0	; () banked
 11405  001508  A1C7               	btfss	___ftmul@f1& (0+255),0,b
 11406  00150A  D012               	goto	l5823
 11407                           
 11408                           ; BSR set to: 0
 11409  00150C  0100               	movlb	0	; () banked
 11410  00150E  0100               	movlb	0	; () banked
 11411  001510  51CA               	movf	___ftmul@f2& (0+255),w,b
 11412  001512  0100               	movlb	0	; () banked
 11413  001514  0100               	movlb	0	; () banked
 11414  001516  27D1               	addwf	___ftmul@f3_as_product& (0+255),f,b
 11415  001518  0100               	movlb	0	; () banked
 11416  00151A  0100               	movlb	0	; () banked
 11417  00151C  51CB               	movf	(___ftmul@f2+1)& (0+255),w,b
 11418  00151E  0100               	movlb	0	; () banked
 11419  001520  0100               	movlb	0	; () banked
 11420  001522  23D2               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 11421  001524  0100               	movlb	0	; () banked
 11422  001526  0100               	movlb	0	; () banked
 11423  001528  51CC               	movf	(___ftmul@f2+2)& (0+255),w,b
 11424  00152A  0100               	movlb	0	; () banked
 11425  00152C  0100               	movlb	0	; () banked
 11426  00152E  23D3               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 11427  001530                     l5823:
 11428                           
 11429                           ; BSR set to: 0
 11430  001530  0100               	movlb	0	; () banked
 11431  001532  90D8               	bcf	status,0,c
 11432  001534  0100               	movlb	0	; () banked
 11433  001536  33C9               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 11434  001538  0100               	movlb	0	; () banked
 11435  00153A  33C8               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 11436  00153C  0100               	movlb	0	; () banked
 11437  00153E  33C7               	rrcf	___ftmul@f1& (0+255),f,b
 11438  001540  0100               	movlb	0	; () banked
 11439  001542  90D8               	bcf	status,0,c
 11440  001544  0100               	movlb	0	; () banked
 11441  001546  33D3               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 11442  001548  0100               	movlb	0	; () banked
 11443  00154A  33D2               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 11444  00154C  0100               	movlb	0	; () banked
 11445  00154E  33D1               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 11446                           
 11447                           ; BSR set to: 0
 11448  001550  0100               	movlb	0	; () banked
 11449  001552  0100               	movlb	0	; () banked
 11450  001554  2FD4               	decfsz	___ftmul@cntr& (0+255),f,b
 11451  001556  D7D6               	goto	l5819
 11452                           
 11453                           ; BSR set to: 0
 11454                           
 11455                           ; BSR set to: 0
 11456  001558  C0D1  F0BA         	movff	___ftmul@f3_as_product,___ftpack@arg
 11457  00155C  C0D2  F0BB         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 11458  001560  C0D3  F0BC         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 11459  001564  C0D0  F0BD         	movff	___ftmul@exp,___ftpack@exp
 11460  001568  C0D5  F0BE         	movff	___ftmul@sign,___ftpack@sign
 11461  00156C  EC10  F010         	call	___ftpack	;wreg free
 11462  001570  C0BA  F0C7         	movff	?___ftpack,?___ftmul
 11463  001574  C0BB  F0C8         	movff	?___ftpack+1,?___ftmul+1
 11464  001578  C0BC  F0C9         	movff	?___ftpack+2,?___ftmul+2
 11465  00157C                     l1529:
 11466  00157C  0012               	return	
 11467  00157E  FFFF               	dw	65535	; errata NOP
 11468  001580                     __end_of___ftmul:
 11469                           	opt stack 0
 11470                           tblptru	equ	0xFF8
 11471                           tblptrh	equ	0xFF7
 11472                           tblptrl	equ	0xFF6
 11473                           tablat	equ	0xFF5
 11474                           prodh	equ	0xFF4
 11475                           prodl	equ	0xFF3
 11476                           intcon	equ	0xFF2
 11477                           intcon2	equ	0xFF1
 11478                           postinc0	equ	0xFEE
 11479                           wreg	equ	0xFE8
 11480                           indf1	equ	0xFE7
 11481                           postdec1	equ	0xFE5
 11482                           fsr1h	equ	0xFE2
 11483                           fsr1l	equ	0xFE1
 11484                           indf2	equ	0xFDF
 11485                           postinc2	equ	0xFDE
 11486                           postdec2	equ	0xFDD
 11487                           fsr2h	equ	0xFDA
 11488                           fsr2l	equ	0xFD9
 11489                           status	equ	0xFD8
 11490                           
 11491 ;; *************** function ___ftpack *****************
 11492 ;; Defined at:
 11493 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\float.c"
 11494 ;; Parameters:    Size  Location     Type
 11495 ;;  arg             3    0[BANK0 ] unsigned um
 11496 ;;  exp             1    3[BANK0 ] unsigned char 
 11497 ;;  sign            1    4[BANK0 ] unsigned char 
 11498 ;; Auto vars:     Size  Location     Type
 11499 ;;		None
 11500 ;; Return value:  Size  Location     Type
 11501 ;;                  3    0[BANK0 ] float 
 11502 ;; Registers used:
 11503 ;;		wreg, status,2, status,0
 11504 ;; Tracked objects:
 11505 ;;		On entry : 0/0
 11506 ;;		On exit  : 0/0
 11507 ;;		Unchanged: 0/0
 11508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11509 ;;      Params:         0       5       0       0       0       0       0
 11510 ;;      Locals:         0       0       0       0       0       0       0
 11511 ;;      Temps:          0       3       0       0       0       0       0
 11512 ;;      Totals:         0       8       0       0       0       0       0
 11513 ;;Total ram usage:        8 bytes
 11514 ;; Hardware stack levels used:    1
 11515 ;; Hardware stack levels required when called:    3
 11516 ;; This function calls:
 11517 ;;		Nothing
 11518 ;; This function is called by:
 11519 ;;		___ftmul
 11520 ;;		___lwtoft
 11521 ;; This function uses a non-reentrant model
 11522 ;;
 11523                           
 11524                           	psect	text53
 11525  002020                     __ptext53:
 11526                           	opt stack 0
 11527  002020                     ___ftpack:
 11528                           	opt stack 24
 11529                           
 11530                           ;incstack = 0
 11531  002020  FFFF               	dw	65535
 11532  002022  0100               	movlb	0	; () banked
 11533  002024  0100               	movlb	0	; () banked
 11534  002026  51BD               	movf	___ftpack@exp& (0+255),w,b
 11535  002028  B4D8               	btfsc	status,2,c
 11536  00202A  D009               	goto	l5529
 11537                           
 11538                           ; BSR set to: 0
 11539  00202C  0100               	movlb	0	; () banked
 11540  00202E  0100               	movlb	0	; () banked
 11541  002030  51BA               	movf	___ftpack@arg& (0+255),w,b
 11542  002032  0100               	movlb	0	; () banked
 11543  002034  11BB               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 11544  002036  0100               	movlb	0	; () banked
 11545  002038  11BC               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 11546  00203A  A4D8               	btfss	status,2,c
 11547  00203C  D018               	goto	l5535
 11548  00203E                     l5529:
 11549                           
 11550                           ; BSR set to: 0
 11551  00203E  0E00               	movlw	0
 11552  002040  0100               	movlb	0	; () banked
 11553  002042  0100               	movlb	0	; () banked
 11554  002044  6FBA               	movwf	?___ftpack& (0+255),b
 11555  002046  0E00               	movlw	0
 11556  002048  0100               	movlb	0	; () banked
 11557  00204A  0100               	movlb	0	; () banked
 11558  00204C  6FBB               	movwf	(?___ftpack+1)& (0+255),b
 11559  00204E  0E00               	movlw	0
 11560  002050  0100               	movlb	0	; () banked
 11561  002052  0100               	movlb	0	; () banked
 11562  002054  6FBC               	movwf	(?___ftpack+2)& (0+255),b
 11563  002056  D081               	goto	l1445
 11564  002058                     l5533:
 11565                           
 11566                           ; BSR set to: 0
 11567  002058  0100               	movlb	0	; () banked
 11568  00205A  0100               	movlb	0	; () banked
 11569  00205C  2BBD               	incf	___ftpack@exp& (0+255),f,b
 11570  00205E  0100               	movlb	0	; () banked
 11571  002060  90D8               	bcf	status,0,c
 11572  002062  0100               	movlb	0	; () banked
 11573  002064  33BC               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 11574  002066  0100               	movlb	0	; () banked
 11575  002068  33BB               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 11576  00206A  0100               	movlb	0	; () banked
 11577  00206C  33BA               	rrcf	___ftpack@arg& (0+255),f,b
 11578  00206E                     l5535:
 11579                           
 11580                           ; BSR set to: 0
 11581  00206E  0E00               	movlw	0
 11582  002070  0100               	movlb	0	; () banked
 11583  002072  0100               	movlb	0	; () banked
 11584  002074  15BA               	andwf	___ftpack@arg& (0+255),w,b
 11585  002076  0100               	movlb	0	; () banked
 11586  002078  6FBF               	movwf	??___ftpack& (0+255),b
 11587  00207A  0E00               	movlw	0
 11588  00207C  0100               	movlb	0	; () banked
 11589  00207E  0100               	movlb	0	; () banked
 11590  002080  15BB               	andwf	(___ftpack@arg+1)& (0+255),w,b
 11591  002082  0100               	movlb	0	; () banked
 11592  002084  6FC0               	movwf	(??___ftpack+1)& (0+255),b
 11593  002086  0EFE               	movlw	254
 11594  002088  0100               	movlb	0	; () banked
 11595  00208A  0100               	movlb	0	; () banked
 11596  00208C  15BC               	andwf	(___ftpack@arg+2)& (0+255),w,b
 11597  00208E  0100               	movlb	0	; () banked
 11598  002090  6FC1               	movwf	(??___ftpack+2)& (0+255),b
 11599  002092  0100               	movlb	0	; () banked
 11600  002094  51BF               	movf	??___ftpack& (0+255),w,b
 11601  002096  11C0               	iorwf	(??___ftpack+1)& (0+255),w,b
 11602  002098  11C1               	iorwf	(??___ftpack+2)& (0+255),w,b
 11603  00209A  B4D8               	btfsc	status,2,c
 11604  00209C  D018               	goto	l5541
 11605  00209E  D7DC               	goto	l5533
 11606  0020A0                     l5537:
 11607                           
 11608                           ; BSR set to: 0
 11609  0020A0  0100               	movlb	0	; () banked
 11610  0020A2  0100               	movlb	0	; () banked
 11611  0020A4  2BBD               	incf	___ftpack@exp& (0+255),f,b
 11612                           
 11613                           ; BSR set to: 0
 11614  0020A6  0E01               	movlw	1
 11615  0020A8  0100               	movlb	0	; () banked
 11616  0020AA  0100               	movlb	0	; () banked
 11617  0020AC  27BA               	addwf	___ftpack@arg& (0+255),f,b
 11618  0020AE  0E00               	movlw	0
 11619  0020B0  0100               	movlb	0	; () banked
 11620  0020B2  0100               	movlb	0	; () banked
 11621  0020B4  23BB               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 11622  0020B6  0E00               	movlw	0
 11623  0020B8  0100               	movlb	0	; () banked
 11624  0020BA  0100               	movlb	0	; () banked
 11625  0020BC  23BC               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 11626  0020BE  0100               	movlb	0	; () banked
 11627  0020C0  90D8               	bcf	status,0,c
 11628  0020C2  0100               	movlb	0	; () banked
 11629  0020C4  33BC               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 11630  0020C6  0100               	movlb	0	; () banked
 11631  0020C8  33BB               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 11632  0020CA  0100               	movlb	0	; () banked
 11633  0020CC  33BA               	rrcf	___ftpack@arg& (0+255),f,b
 11634  0020CE                     l5541:
 11635                           
 11636                           ; BSR set to: 0
 11637  0020CE  0E00               	movlw	0
 11638  0020D0  0100               	movlb	0	; () banked
 11639  0020D2  0100               	movlb	0	; () banked
 11640  0020D4  15BA               	andwf	___ftpack@arg& (0+255),w,b
 11641  0020D6  0100               	movlb	0	; () banked
 11642  0020D8  6FBF               	movwf	??___ftpack& (0+255),b
 11643  0020DA  0E00               	movlw	0
 11644  0020DC  0100               	movlb	0	; () banked
 11645  0020DE  0100               	movlb	0	; () banked
 11646  0020E0  15BB               	andwf	(___ftpack@arg+1)& (0+255),w,b
 11647  0020E2  0100               	movlb	0	; () banked
 11648  0020E4  6FC0               	movwf	(??___ftpack+1)& (0+255),b
 11649  0020E6  0EFF               	movlw	255
 11650  0020E8  0100               	movlb	0	; () banked
 11651  0020EA  0100               	movlb	0	; () banked
 11652  0020EC  15BC               	andwf	(___ftpack@arg+2)& (0+255),w,b
 11653  0020EE  0100               	movlb	0	; () banked
 11654  0020F0  6FC1               	movwf	(??___ftpack+2)& (0+255),b
 11655  0020F2  0100               	movlb	0	; () banked
 11656  0020F4  51BF               	movf	??___ftpack& (0+255),w,b
 11657  0020F6  11C0               	iorwf	(??___ftpack+1)& (0+255),w,b
 11658  0020F8  11C1               	iorwf	(??___ftpack+2)& (0+255),w,b
 11659  0020FA  B4D8               	btfsc	status,2,c
 11660  0020FC  D00C               	goto	l5545
 11661  0020FE  D7D0               	goto	l5537
 11662  002100                     l5543:
 11663                           
 11664                           ; BSR set to: 0
 11665  002100  0100               	movlb	0	; () banked
 11666  002102  0100               	movlb	0	; () banked
 11667  002104  07BD               	decf	___ftpack@exp& (0+255),f,b
 11668  002106  0100               	movlb	0	; () banked
 11669  002108  90D8               	bcf	status,0,c
 11670  00210A  0100               	movlb	0	; () banked
 11671  00210C  37BA               	rlcf	___ftpack@arg& (0+255),f,b
 11672  00210E  0100               	movlb	0	; () banked
 11673  002110  37BB               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 11674  002112  0100               	movlb	0	; () banked
 11675  002114  37BC               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 11676  002116                     l5545:
 11677                           
 11678                           ; BSR set to: 0
 11679  002116  0100               	movlb	0	; () banked
 11680  002118  0100               	movlb	0	; () banked
 11681  00211A  AFBB               	btfss	(___ftpack@arg+1)& (0+255),7,b
 11682  00211C  D7F1               	goto	l5543
 11683                           
 11684                           ; BSR set to: 0
 11685  00211E  0100               	movlb	0	; () banked
 11686  002120  0100               	movlb	0	; () banked
 11687  002122  B1BD               	btfsc	___ftpack@exp& (0+255),0,b
 11688  002124  D003               	goto	l5549
 11689                           
 11690                           ; BSR set to: 0
 11691  002126  0100               	movlb	0	; () banked
 11692  002128  0100               	movlb	0	; () banked
 11693  00212A  9FBB               	bcf	(___ftpack@arg+1)& (0+255),7,b
 11694  00212C                     l5549:
 11695                           
 11696                           ; BSR set to: 0
 11697  00212C  0100               	movlb	0	; () banked
 11698  00212E  90D8               	bcf	status,0,c
 11699  002130  33BD               	rrcf	___ftpack@exp& (0+255),f,b
 11700  002132  0100               	movlb	0	; () banked
 11701  002134  0100               	movlb	0	; () banked
 11702  002136  51BD               	movf	___ftpack@exp& (0+255),w,b
 11703  002138  0100               	movlb	0	; () banked
 11704  00213A  0100               	movlb	0	; () banked
 11705  00213C  13BC               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 11706                           
 11707                           ; BSR set to: 0
 11708  00213E  0100               	movlb	0	; () banked
 11709  002140  0100               	movlb	0	; () banked
 11710  002142  51BE               	movf	___ftpack@sign& (0+255),w,b
 11711  002144  B4D8               	btfsc	status,2,c
 11712  002146  D003               	goto	l5555
 11713                           
 11714                           ; BSR set to: 0
 11715  002148  0100               	movlb	0	; () banked
 11716  00214A  0100               	movlb	0	; () banked
 11717  00214C  8FBC               	bsf	(___ftpack@arg+2)& (0+255),7,b
 11718  00214E                     l5555:
 11719                           
 11720                           ; BSR set to: 0
 11721  00214E  C0BA  F0BA         	movff	___ftpack@arg,?___ftpack
 11722  002152  C0BB  F0BB         	movff	___ftpack@arg+1,?___ftpack+1
 11723  002156  C0BC  F0BC         	movff	___ftpack@arg+2,?___ftpack+2
 11724  00215A                     l1445:
 11725                           
 11726                           ; BSR set to: 0
 11727  00215A  0012               	return	
 11728  00215C  FFFF               	dw	65535	; errata NOP
 11729  00215E                     __end_of___ftpack:
 11730                           	opt stack 0
 11731                           tblptru	equ	0xFF8
 11732                           tblptrh	equ	0xFF7
 11733                           tblptrl	equ	0xFF6
 11734                           tablat	equ	0xFF5
 11735                           prodh	equ	0xFF4
 11736                           prodl	equ	0xFF3
 11737                           intcon	equ	0xFF2
 11738                           intcon2	equ	0xFF1
 11739                           postinc0	equ	0xFEE
 11740                           wreg	equ	0xFE8
 11741                           indf1	equ	0xFE7
 11742                           postdec1	equ	0xFE5
 11743                           fsr1h	equ	0xFE2
 11744                           fsr1l	equ	0xFE1
 11745                           indf2	equ	0xFDF
 11746                           postinc2	equ	0xFDE
 11747                           postdec2	equ	0xFDD
 11748                           fsr2h	equ	0xFDA
 11749                           fsr2l	equ	0xFD9
 11750                           status	equ	0xFD8
 11751                           
 11752 ;; *************** function _Low_priority *****************
 11753 ;; Defined at:
 11754 ;;		line 51 in file "main.c"
 11755 ;; Parameters:    Size  Location     Type
 11756 ;;		None
 11757 ;; Auto vars:     Size  Location     Type
 11758 ;;		None
 11759 ;; Return value:  Size  Location     Type
 11760 ;;		None               void
 11761 ;; Registers used:
 11762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11763 ;; Tracked objects:
 11764 ;;		On entry : 0/0
 11765 ;;		On exit  : 0/0
 11766 ;;		Unchanged: 0/0
 11767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11768 ;;      Params:         0       0       0       0       0       0       0
 11769 ;;      Locals:         0       0       0       0       0       0       0
 11770 ;;      Temps:         17       0       0       0       0       0       0
 11771 ;;      Totals:        17       0       0       0       0       0       0
 11772 ;;Total ram usage:       17 bytes
 11773 ;; Hardware stack levels used:    1
 11774 ;; Hardware stack levels required when called:    2
 11775 ;; This function calls:
 11776 ;;		Nothing
 11777 ;; This function is called by:
 11778 ;;		Interrupt level 1
 11779 ;; This function uses a non-reentrant model
 11780 ;;
 11781                           
 11782                           	psect	intcodelo
 11783  000018                     __pintcodelo:
 11784                           	opt stack 0
 11785  000018                     _Low_priority:
 11786                           	opt stack 23
 11787                           
 11788                           ; BSR set to: 0
 11789                           ;incstack = 0
 11790  000018  FFFF               	dw	65535	; errata NOP
 11791  00001A  CFD8 F01D          	movff	status,??_Low_priority
 11792  00001E  CFE8 F01E          	movff	wreg,??_Low_priority+1
 11793  000022  CFE0 F01F          	movff	bsr,??_Low_priority+2
 11794  000026  CFFA F020          	movff	pclath,??_Low_priority+3
 11795  00002A  CFFB F021          	movff	pclatu,??_Low_priority+4
 11796  00002E  CFE9 F022          	movff	fsr0l,??_Low_priority+5
 11797  000032  CFEA F023          	movff	fsr0h,??_Low_priority+6
 11798  000036  CFE1 F024          	movff	fsr1l,??_Low_priority+7
 11799  00003A  CFE2 F025          	movff	fsr1h,??_Low_priority+8
 11800  00003E  CFD9 F026          	movff	fsr2l,??_Low_priority+9
 11801  000042  CFDA F027          	movff	fsr2h,??_Low_priority+10
 11802  000046  CFF3 F028          	movff	prodl,??_Low_priority+11
 11803  00004A  CFF4 F029          	movff	prodh,??_Low_priority+12
 11804  00004E  CFF6 F02A          	movff	tblptrl,??_Low_priority+13
 11805  000052  CFF7 F02B          	movff	tblptrh,??_Low_priority+14
 11806  000056  CFF8 F02C          	movff	tblptru,??_Low_priority+15
 11807  00005A  CFF5 F02D          	movff	tablat,??_Low_priority+16
 11808                           
 11809                           ;main.c: 53: if (RCIE && RCIF)
 11810  00005E  BA9D               	btfsc	3997,5,c	;volatile
 11811  000060  AA9E               	btfss	3998,5,c	;volatile
 11812  000062  D023               	goto	i1l86
 11813                           
 11814                           ;main.c: 54: {
 11815                           ;main.c: 55: Cf.Data[Cf.Index] = RCREG;
 11816  000064  0101               	movlb	1	; () banked
 11817  000066  0101               	movlb	1	; () banked
 11818  000068  5165               	movf	(_Cf+101)& (0+255),w,b	;volatile
 11819  00006A  0D01               	mullw	1
 11820  00006C  0101               	movlb	1	; () banked
 11821  00006E  0E00               	movlw	low _Cf	;volatile
 11822  000070  24F3               	addwf	prodl,w,c
 11823  000072  6ED9               	movwf	fsr2l,c
 11824  000074  0101               	movlb	1	; () banked
 11825  000076  0E01               	movlw	high _Cf	;volatile
 11826  000078  20F4               	addwfc	prodh,w,c
 11827  00007A  6EDA               	movwf	fsr2h,c
 11828  00007C  CFAE FFDF          	movff	4014,indf2	;volatile
 11829                           
 11830                           ;main.c: 56: TXREG = Cf.Data[Cf.Index];
 11831  000080  0101               	movlb	1	; () banked
 11832  000082  0101               	movlb	1	; () banked
 11833  000084  5165               	movf	(_Cf+101)& (0+255),w,b	;volatile
 11834  000086  0D01               	mullw	1
 11835  000088  0101               	movlb	1	; () banked
 11836  00008A  0E00               	movlw	low _Cf	;volatile
 11837  00008C  24F3               	addwf	prodl,w,c
 11838  00008E  6ED9               	movwf	fsr2l,c
 11839  000090  0101               	movlb	1	; () banked
 11840  000092  0E01               	movlw	high _Cf	;volatile
 11841  000094  20F4               	addwfc	prodh,w,c
 11842  000096  6EDA               	movwf	fsr2h,c
 11843  000098  50DF               	movf	indf2,w,c
 11844  00009A  6EAD               	movwf	4013,c	;volatile
 11845                           
 11846                           ; BSR set to: 1
 11847                           ;main.c: 58: Cf.Index ++;
 11848  00009C  0101               	movlb	1	; () banked
 11849  00009E  0101               	movlb	1	; () banked
 11850  0000A0  2B65               	incf	(_Cf+101)& (0+255),f,b	;volatile
 11851                           
 11852                           ; BSR set to: 1
 11853                           ;main.c: 60: Cf.Time1 = Cptms;
 11854  0000A2  C04F  F166         	movff	_Cptms,_Cf+102	;volatile
 11855  0000A6  C050  F167         	movff	_Cptms+1,_Cf+103	;volatile
 11856  0000AA                     i1l86:
 11857  0000AA  C02D  FFF5         	movff	??_Low_priority+16,tablat
 11858  0000AE  C02C  FFF8         	movff	??_Low_priority+15,tblptru
 11859  0000B2  C02B  FFF7         	movff	??_Low_priority+14,tblptrh
 11860  0000B6  C02A  FFF6         	movff	??_Low_priority+13,tblptrl
 11861  0000BA  C029  FFF4         	movff	??_Low_priority+12,prodh
 11862  0000BE  C028  FFF3         	movff	??_Low_priority+11,prodl
 11863  0000C2  C027  FFDA         	movff	??_Low_priority+10,fsr2h
 11864  0000C6  C026  FFD9         	movff	??_Low_priority+9,fsr2l
 11865  0000CA  C025  FFE2         	movff	??_Low_priority+8,fsr1h
 11866  0000CE  C024  FFE1         	movff	??_Low_priority+7,fsr1l
 11867  0000D2  C023  FFEA         	movff	??_Low_priority+6,fsr0h
 11868  0000D6  C022  FFE9         	movff	??_Low_priority+5,fsr0l
 11869  0000DA  C021  FFFB         	movff	??_Low_priority+4,pclatu
 11870  0000DE  C020  FFFA         	movff	??_Low_priority+3,pclath
 11871  0000E2  C01F  FFE0         	movff	??_Low_priority+2,bsr
 11872  0000E6  C01E  FFE8         	movff	??_Low_priority+1,wreg
 11873  0000EA  C01D  FFD8         	movff	??_Low_priority,status
 11874  0000EE  0010               	retfie	
 11875  0000F0  FFFF               	dw	65535	; errata NOP
 11876  0000F2                     __end_of_Low_priority:
 11877                           	opt stack 0
 11878                           pclatu	equ	0xFFB
 11879                           pclath	equ	0xFFA
 11880                           tblptru	equ	0xFF8
 11881                           tblptrh	equ	0xFF7
 11882                           tblptrl	equ	0xFF6
 11883                           tablat	equ	0xFF5
 11884                           prodh	equ	0xFF4
 11885                           prodl	equ	0xFF3
 11886                           intcon	equ	0xFF2
 11887                           intcon2	equ	0xFF1
 11888                           postinc0	equ	0xFEE
 11889                           fsr0h	equ	0xFEA
 11890                           fsr0l	equ	0xFE9
 11891                           wreg	equ	0xFE8
 11892                           indf1	equ	0xFE7
 11893                           postdec1	equ	0xFE5
 11894                           fsr1h	equ	0xFE2
 11895                           fsr1l	equ	0xFE1
 11896                           bsr	equ	0xFE0
 11897                           indf2	equ	0xFDF
 11898                           postinc2	equ	0xFDE
 11899                           postdec2	equ	0xFDD
 11900                           fsr2h	equ	0xFDA
 11901                           fsr2l	equ	0xFD9
 11902                           status	equ	0xFD8
 11903                           
 11904 ;; *************** function _High_priority *****************
 11905 ;; Defined at:
 11906 ;;		line 66 in file "main.c"
 11907 ;; Parameters:    Size  Location     Type
 11908 ;;		None
 11909 ;; Auto vars:     Size  Location     Type
 11910 ;;		None
 11911 ;; Return value:  Size  Location     Type
 11912 ;;		None               void
 11913 ;; Registers used:
 11914 ;;		wreg, status,2, status,0, prodl, cstack
 11915 ;; Tracked objects:
 11916 ;;		On entry : 0/0
 11917 ;;		On exit  : 0/0
 11918 ;;		Unchanged: 0/0
 11919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11920 ;;      Params:         0       0       0       0       0       0       0
 11921 ;;      Locals:         0       0       0       0       0       0       0
 11922 ;;      Temps:         19       0       0       0       0       0       0
 11923 ;;      Totals:        19       0       0       0       0       0       0
 11924 ;;Total ram usage:       19 bytes
 11925 ;; Hardware stack levels used:    1
 11926 ;; Hardware stack levels required when called:    1
 11927 ;; This function calls:
 11928 ;;		___awdiv
 11929 ;; This function is called by:
 11930 ;;		Interrupt level 2
 11931 ;; This function uses a non-reentrant model
 11932 ;;
 11933                           
 11934                           	psect	intcode
 11935  000008                     __pintcode:
 11936                           	opt stack 0
 11937  000008                     _High_priority:
 11938                           	opt stack 23
 11939                           
 11940                           ;incstack = 0
 11941  000008  FFFF               	dw	65535	; errata NOP
 11942  00000A  CFFA F00F          	movff	pclath,??_High_priority+5
 11943  00000E  CFFB F010          	movff	pclatu,??_High_priority+6
 11944  000012  EFB5  F00E         	goto	int_func
 11945                           pclatu	equ	0xFFB
 11946                           pclath	equ	0xFFA
 11947                           tblptru	equ	0xFF8
 11948                           tblptrh	equ	0xFF7
 11949                           tblptrl	equ	0xFF6
 11950                           tablat	equ	0xFF5
 11951                           prodh	equ	0xFF4
 11952                           prodl	equ	0xFF3
 11953                           intcon	equ	0xFF2
 11954                           intcon2	equ	0xFF1
 11955                           postinc0	equ	0xFEE
 11956                           fsr0h	equ	0xFEA
 11957                           fsr0l	equ	0xFE9
 11958                           wreg	equ	0xFE8
 11959                           indf1	equ	0xFE7
 11960                           postdec1	equ	0xFE5
 11961                           fsr1h	equ	0xFE2
 11962                           fsr1l	equ	0xFE1
 11963                           bsr	equ	0xFE0
 11964                           indf2	equ	0xFDF
 11965                           postinc2	equ	0xFDE
 11966                           postdec2	equ	0xFDD
 11967                           fsr2h	equ	0xFDA
 11968                           fsr2l	equ	0xFD9
 11969                           status	equ	0xFD8
 11970                           
 11971                           	psect	intcode_body
 11972  001D6A                     __pintcode_body:
 11973                           	opt stack 23
 11974  001D6A                     int_func:
 11975                           	opt stack 23
 11976  001D6A  FFFF               	dw	65535	; errata NOP
 11977  001D6C  CFE9 F011          	movff	fsr0l,??_High_priority+7
 11978  001D70  CFEA F012          	movff	fsr0h,??_High_priority+8
 11979  001D74  CFE1 F013          	movff	fsr1l,??_High_priority+9
 11980  001D78  CFE2 F014          	movff	fsr1h,??_High_priority+10
 11981  001D7C  CFD9 F015          	movff	fsr2l,??_High_priority+11
 11982  001D80  CFDA F016          	movff	fsr2h,??_High_priority+12
 11983  001D84  CFF3 F017          	movff	prodl,??_High_priority+13
 11984  001D88  CFF4 F018          	movff	prodh,??_High_priority+14
 11985  001D8C  CFF6 F019          	movff	tblptrl,??_High_priority+15
 11986  001D90  CFF7 F01A          	movff	tblptrh,??_High_priority+16
 11987  001D94  CFF8 F01B          	movff	tblptru,??_High_priority+17
 11988  001D98  CFF5 F01C          	movff	tablat,??_High_priority+18
 11989                           
 11990                           ;main.c: 68: if (TMR0IE && TMR0IF)
 11991  001D9C  BAF2               	btfsc	intcon,5,c	;volatile
 11992  001D9E  A4F2               	btfss	intcon,2,c	;volatile
 11993  001DA0  D074               	goto	i2l102
 11994                           
 11995                           ;main.c: 69: {
 11996                           ;main.c: 70: TMR0IF = 0;
 11997  001DA2  94F2               	bcf	intcon,2,c	;volatile
 11998                           
 11999                           ;main.c: 72: TMR0H = 0xF0;
 12000  001DA4  0EF0               	movlw	240
 12001  001DA6  6ED7               	movwf	4055,c	;volatile
 12002                           
 12003                           ;main.c: 73: TMR0L = 0x8C;
 12004  001DA8  0E8C               	movlw	140
 12005  001DAA  6ED6               	movwf	4054,c	;volatile
 12006                           
 12007                           ;main.c: 75: Cptms ++;
 12008  001DAC  4A4F               	infsnz	_Cptms,f,c	;volatile
 12009  001DAE  2A50               	incf	_Cptms+1,f,c	;volatile
 12010                           
 12011                           ;main.c: 77: if (-- Decompte == 0)
 12012  001DB0  2E51               	decfsz	_Decompte,f,c	;volatile
 12013  001DB2  D004               	goto	i2l5191
 12014                           
 12015                           ;main.c: 78: {
 12016                           ;main.c: 79: Decompte = 50;
 12017  001DB4  0E32               	movlw	50
 12018  001DB6  6E51               	movwf	_Decompte,c	;volatile
 12019                           
 12020                           ;main.c: 80: Cpt1Sur20s ++;
 12021  001DB8  4A4D               	infsnz	_Cpt1Sur20s,f,c	;volatile
 12022  001DBA  2A4E               	incf	_Cpt1Sur20s+1,f,c	;volatile
 12023  001DBC                     i2l5191:
 12024                           
 12025                           ;main.c: 81: }
 12026                           ;main.c: 83: if (Micro.State)
 12027  001DBC  5056               	movf	_Micro+4,w,c
 12028  001DBE  B4D8               	btfsc	status,2,c
 12029  001DC0  D05C               	goto	i2l91
 12030                           
 12031                           ;main.c: 84: {
 12032                           ;main.c: 85: if (Feedback.Period == 0)
 12033  001DC2  0100               	movlb	0	; () banked
 12034  001DC4  0100               	movlb	0	; () banked
 12035  001DC6  51A2               	movf	(_Feedback+1)& (0+255),w,b
 12036  001DC8  11A1               	iorwf	_Feedback& (0+255),w,b
 12037  001DCA  A4D8               	btfss	status,2,c
 12038  001DCC  D010               	goto	i2l5201
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;main.c: 86: {
 12042                           ;main.c: 87: Feedback.State = Micro.State;
 12043  001DCE  C056  F0A4         	movff	_Micro+4,_Feedback+3
 12044                           
 12045                           ; BSR set to: 0
 12046                           ;main.c: 88: Feedback.Period = 500;
 12047  001DD2  0E01               	movlw	1
 12048  001DD4  0100               	movlb	0	; () banked
 12049  001DD6  0100               	movlb	0	; () banked
 12050  001DD8  6FA2               	movwf	(_Feedback+1)& (0+255),b
 12051  001DDA  0EF4               	movlw	244
 12052  001DDC  0100               	movlb	0	; () banked
 12053  001DDE  6FA1               	movwf	_Feedback& (0+255),b
 12054                           
 12055                           ; BSR set to: 0
 12056                           ;main.c: 89: Feedback.Step = 0;
 12057  001DE0  6E0A               	movwf	??_High_priority& (0+255),c
 12058  001DE2  0E00               	movlw	0
 12059  001DE4  0100               	movlb	0	; () banked
 12060  001DE6  0100               	movlb	0	; () banked
 12061  001DE8  6FA5               	movwf	(_Feedback+4)& (0+255),b
 12062  001DEA  500A               	movf	??_High_priority& (0+255),w,c
 12063                           
 12064                           ;main.c: 90: }
 12065  001DEC  D005               	goto	i2l5203
 12066  001DEE                     i2l5201:
 12067                           
 12068                           ; BSR set to: 0
 12069                           ;main.c: 91: else
 12070                           ;main.c: 92: {
 12071                           ;main.c: 93: Feedback.Period --;
 12072  001DEE  0100               	movlb	0	; () banked
 12073  001DF0  0100               	movlb	0	; () banked
 12074  001DF2  07A1               	decf	_Feedback& (0+255),f,b
 12075  001DF4  A0D8               	btfss	status,0,c
 12076  001DF6  07A2               	decf	(_Feedback+1)& (0+255),f,b
 12077  001DF8                     i2l5203:
 12078                           
 12079                           ; BSR set to: 0
 12080                           ;main.c: 94: }
 12081                           ;main.c: 96: if ((0x01 << (unsigned char) (Feedback.Step / 2)) <= Feedback.State)
 12082  001DF8  0100               	movlb	0	; () banked
 12083  001DFA  C0A5  F001         	movff	_Feedback+4,___awdiv@dividend
 12084  001DFE  6A02               	clrf	___awdiv@dividend+1,c
 12085  001E00  0E00               	movlw	0
 12086  001E02  6E04               	movwf	___awdiv@divisor+1,c
 12087  001E04  0E02               	movlw	2
 12088  001E06  6E03               	movwf	___awdiv@divisor,c
 12089  001E08  EC2A  F015         	call	___awdiv	;wreg free
 12090  001E0C  0E01               	movlw	1
 12091  001E0E  6E0A               	movwf	??_High_priority& (0+255),c
 12092  001E10  6A0B               	clrf	(??_High_priority+1)& (0+255),c
 12093  001E12  2A01               	incf	?___awdiv,f,c
 12094  001E14  D003               	goto	i2u429_44
 12095  001E16                     i2u429_45:
 12096  001E16  90D8               	bcf	status,0,c
 12097  001E18  360A               	rlcf	??_High_priority,f,c
 12098  001E1A  360B               	rlcf	??_High_priority+1,f,c
 12099  001E1C                     i2u429_44:
 12100  001E1C  2E01               	decfsz	?___awdiv,f,c
 12101  001E1E  D7FB               	goto	i2u429_45
 12102  001E20  0100               	movlb	0	; () banked
 12103  001E22  0100               	movlb	0	; () banked
 12104  001E24  51A4               	movf	(_Feedback+3)& (0+255),w,b
 12105  001E26  6E0C               	movwf	(??_High_priority+2)& (0+255),c
 12106  001E28  6A0D               	clrf	(??_High_priority+3)& (0+255),c
 12107  001E2A  500D               	movf	??_High_priority+3,w,c
 12108  001E2C  0A80               	xorlw	128
 12109  001E2E  6E0E               	movwf	(??_High_priority+4)& (0+255),c
 12110  001E30  500A               	movf	??_High_priority,w,c
 12111  001E32  5C0C               	subwf	??_High_priority+2,w,c
 12112  001E34  500B               	movf	??_High_priority+1,w,c
 12113  001E36  0A80               	xorlw	128
 12114  001E38  580E               	subwfb	(??_High_priority+4)& (0+255),w,c
 12115  001E3A  A0D8               	btfss	status,0,c
 12116  001E3C  D026               	goto	i2l102
 12117                           
 12118                           ; BSR set to: 0
 12119                           ;main.c: 97: {
 12120                           ;main.c: 98: if ((Feedback.Step & 0x01) == 0)
 12121  001E3E  0100               	movlb	0	; () banked
 12122  001E40  0100               	movlb	0	; () banked
 12123  001E42  B1A5               	btfsc	(_Feedback+4)& (0+255),0,b
 12124  001E44  D00B               	goto	i2l95
 12125                           
 12126                           ; BSR set to: 0
 12127                           ;main.c: 99: {
 12128                           ;main.c: 100: if ((Feedback.Step == 0) || (-- Feedback.Pulse == 0))
 12129  001E46  0100               	movlb	0	; () banked
 12130  001E48  0100               	movlb	0	; () banked
 12131  001E4A  51A5               	movf	(_Feedback+4)& (0+255),w,b
 12132  001E4C  B4D8               	btfsc	status,2,c
 12133  001E4E  D004               	goto	i2l98
 12134                           
 12135                           ; BSR set to: 0
 12136  001E50  0100               	movlb	0	; () banked
 12137  001E52  0100               	movlb	0	; () banked
 12138  001E54  2FA3               	decfsz	(_Feedback+2)& (0+255),f,b
 12139  001E56  D019               	goto	i2l102
 12140  001E58                     i2l98:
 12141                           
 12142                           ; BSR set to: 0
 12143                           ;main.c: 101: {
 12144                           ;main.c: 102: PORTCbits.RC4 = 1;
 12145  001E58  8882               	bsf	3970,4,c	;volatile
 12146  001E5A  D005               	goto	L71
 12147  001E5C                     i2l95:
 12148                           
 12149                           ; BSR set to: 0
 12150                           ;main.c: 107: else
 12151                           ;main.c: 108: {
 12152                           ;main.c: 109: if (-- Feedback.Pulse == 0)
 12153  001E5C  0100               	movlb	0	; () banked
 12154  001E5E  0100               	movlb	0	; () banked
 12155  001E60  2FA3               	decfsz	(_Feedback+2)& (0+255),f,b
 12156  001E62  D013               	goto	i2l102
 12157                           
 12158                           ; BSR set to: 0
 12159                           ;main.c: 110: {
 12160                           ;main.c: 111: PORTCbits.RC4 = 0;
 12161  001E64  9882               	bcf	3970,4,c	;volatile
 12162  001E66                     L71:
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;main.c: 112: Feedback.Pulse = 50;
 12166  001E66  6E0A               	movwf	??_High_priority& (0+255),c
 12167  001E68  0E32               	movlw	50
 12168  001E6A  0100               	movlb	0	; () banked
 12169  001E6C  0100               	movlb	0	; () banked
 12170  001E6E  6FA3               	movwf	(_Feedback+2)& (0+255),b
 12171  001E70  500A               	movf	??_High_priority& (0+255),w,c
 12172                           
 12173                           ; BSR set to: 0
 12174                           ;main.c: 113: Feedback.Step ++;
 12175  001E72  0100               	movlb	0	; () banked
 12176  001E74  0100               	movlb	0	; () banked
 12177  001E76  2BA5               	incf	(_Feedback+4)& (0+255),f,b
 12178  001E78  D008               	goto	i2l102
 12179  001E7A                     i2l91:
 12180                           
 12181                           ;main.c: 118: else
 12182                           ;main.c: 119: {
 12183                           ;main.c: 120: PORTCbits.RC4 = 0;
 12184  001E7A  9882               	bcf	3970,4,c	;volatile
 12185                           
 12186                           ;main.c: 121: Feedback.Period = 0;
 12187  001E7C  0E00               	movlw	0
 12188  001E7E  0100               	movlb	0	; () banked
 12189  001E80  0100               	movlb	0	; () banked
 12190  001E82  6FA2               	movwf	(_Feedback+1)& (0+255),b
 12191  001E84  0E00               	movlw	0
 12192  001E86  0100               	movlb	0	; () banked
 12193  001E88  6FA1               	movwf	_Feedback& (0+255),b
 12194  001E8A                     i2l102:
 12195  001E8A  C01C  FFF5         	movff	??_High_priority+18,tablat
 12196  001E8E  C01B  FFF8         	movff	??_High_priority+17,tblptru
 12197  001E92  C01A  FFF7         	movff	??_High_priority+16,tblptrh
 12198  001E96  C019  FFF6         	movff	??_High_priority+15,tblptrl
 12199  001E9A  C018  FFF4         	movff	??_High_priority+14,prodh
 12200  001E9E  C017  FFF3         	movff	??_High_priority+13,prodl
 12201  001EA2  C016  FFDA         	movff	??_High_priority+12,fsr2h
 12202  001EA6  C015  FFD9         	movff	??_High_priority+11,fsr2l
 12203  001EAA  C014  FFE2         	movff	??_High_priority+10,fsr1h
 12204  001EAE  C013  FFE1         	movff	??_High_priority+9,fsr1l
 12205  001EB2  C012  FFEA         	movff	??_High_priority+8,fsr0h
 12206  001EB6  C011  FFE9         	movff	??_High_priority+7,fsr0l
 12207  001EBA  C010  FFFB         	movff	??_High_priority+6,pclatu
 12208  001EBE  C00F  FFFA         	movff	??_High_priority+5,pclath
 12209  001EC2  0011               	retfie		f
 12210  001EC4  FFFF               	dw	65535	; errata NOP
 12211  001EC6                     __end_of_High_priority:
 12212                           	opt stack 0
 12213                           pclatu	equ	0xFFB
 12214                           pclath	equ	0xFFA
 12215                           tblptru	equ	0xFF8
 12216                           tblptrh	equ	0xFF7
 12217                           tblptrl	equ	0xFF6
 12218                           tablat	equ	0xFF5
 12219                           prodh	equ	0xFF4
 12220                           prodl	equ	0xFF3
 12221                           intcon	equ	0xFF2
 12222                           intcon2	equ	0xFF1
 12223                           postinc0	equ	0xFEE
 12224                           fsr0h	equ	0xFEA
 12225                           fsr0l	equ	0xFE9
 12226                           wreg	equ	0xFE8
 12227                           indf1	equ	0xFE7
 12228                           postdec1	equ	0xFE5
 12229                           fsr1h	equ	0xFE2
 12230                           fsr1l	equ	0xFE1
 12231                           bsr	equ	0xFE0
 12232                           indf2	equ	0xFDF
 12233                           postinc2	equ	0xFDE
 12234                           postdec2	equ	0xFDD
 12235                           fsr2h	equ	0xFDA
 12236                           fsr2l	equ	0xFD9
 12237                           status	equ	0xFD8
 12238                           
 12239 ;; *************** function ___awdiv *****************
 12240 ;; Defined at:
 12241 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awdiv.c"
 12242 ;; Parameters:    Size  Location     Type
 12243 ;;  dividend        2    0[COMRAM] int 
 12244 ;;  divisor         2    2[COMRAM] int 
 12245 ;; Auto vars:     Size  Location     Type
 12246 ;;  quotient        2    7[COMRAM] int 
 12247 ;;  sign            1    6[COMRAM] unsigned char 
 12248 ;;  counter         1    5[COMRAM] unsigned char 
 12249 ;; Return value:  Size  Location     Type
 12250 ;;                  2    0[COMRAM] int 
 12251 ;; Registers used:
 12252 ;;		wreg, status,2, status,0, prodl
 12253 ;; Tracked objects:
 12254 ;;		On entry : 0/0
 12255 ;;		On exit  : 0/0
 12256 ;;		Unchanged: 0/0
 12257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12258 ;;      Params:         4       0       0       0       0       0       0
 12259 ;;      Locals:         4       0       0       0       0       0       0
 12260 ;;      Temps:          1       0       0       0       0       0       0
 12261 ;;      Totals:         9       0       0       0       0       0       0
 12262 ;;Total ram usage:        9 bytes
 12263 ;; Hardware stack levels used:    1
 12264 ;; This function calls:
 12265 ;;		Nothing
 12266 ;; This function is called by:
 12267 ;;		_High_priority
 12268 ;; This function uses a non-reentrant model
 12269 ;;
 12270                           
 12271                           	psect	text56
 12272  002A54                     __ptext56:
 12273                           	opt stack 0
 12274  002A54                     ___awdiv:
 12275                           	opt stack 23
 12276                           
 12277                           ;incstack = 0
 12278  002A54  FFFF               	dw	65535
 12279  002A56  6E05               	movwf	??___awdiv& (0+255),c
 12280  002A58  0E00               	movlw	0
 12281  002A5A  6E07               	movwf	___awdiv@sign,c
 12282  002A5C  5005               	movf	??___awdiv& (0+255),w,c
 12283  002A5E  5004               	movf	___awdiv@divisor+1,w,c
 12284  002A60  0A80               	xorlw	128
 12285  002A62  6EF3               	movwf	prodl,c
 12286  002A64  0E80               	movlw	128
 12287  002A66  5CF3               	subwf	prodl,w,c
 12288  002A68  0E00               	movlw	0
 12289  002A6A  B4D8               	btfsc	status,2,c
 12290  002A6C  5C03               	subwf	___awdiv@divisor,w,c
 12291  002A6E  B0D8               	btfsc	status,0,c
 12292  002A70  D008               	goto	i2l5127
 12293  002A72  6C03               	negf	___awdiv@divisor,c
 12294  002A74  1E04               	comf	___awdiv@divisor+1,f,c
 12295  002A76  B0D8               	btfsc	status,0,c
 12296  002A78  2A04               	incf	___awdiv@divisor+1,f,c
 12297  002A7A  6E05               	movwf	??___awdiv& (0+255),c
 12298  002A7C  0E01               	movlw	1
 12299  002A7E  6E07               	movwf	___awdiv@sign,c
 12300  002A80  5005               	movf	??___awdiv& (0+255),w,c
 12301  002A82                     i2l5127:
 12302  002A82  5002               	movf	___awdiv@dividend+1,w,c
 12303  002A84  0A80               	xorlw	128
 12304  002A86  6EF3               	movwf	prodl,c
 12305  002A88  0E80               	movlw	128
 12306  002A8A  5CF3               	subwf	prodl,w,c
 12307  002A8C  0E00               	movlw	0
 12308  002A8E  B4D8               	btfsc	status,2,c
 12309  002A90  5C01               	subwf	___awdiv@dividend,w,c
 12310  002A92  B0D8               	btfsc	status,0,c
 12311  002A94  D006               	goto	i2l5133
 12312  002A96  6C01               	negf	___awdiv@dividend,c
 12313  002A98  1E02               	comf	___awdiv@dividend+1,f,c
 12314  002A9A  B0D8               	btfsc	status,0,c
 12315  002A9C  2A02               	incf	___awdiv@dividend+1,f,c
 12316  002A9E  0E01               	movlw	1
 12317  002AA0  1A07               	xorwf	___awdiv@sign,f,c
 12318  002AA2                     i2l5133:
 12319  002AA2  0E00               	movlw	0
 12320  002AA4  6E09               	movwf	___awdiv@quotient+1,c
 12321  002AA6  0E00               	movlw	0
 12322  002AA8  6E08               	movwf	___awdiv@quotient,c
 12323  002AAA  5004               	movf	___awdiv@divisor+1,w,c
 12324  002AAC  1003               	iorwf	___awdiv@divisor,w,c
 12325  002AAE  B4D8               	btfsc	status,2,c
 12326  002AB0  D01E               	goto	i2l5155
 12327  002AB2  6E05               	movwf	??___awdiv& (0+255),c
 12328  002AB4  0E01               	movlw	1
 12329  002AB6  6E06               	movwf	___awdiv@counter,c
 12330  002AB8  5005               	movf	??___awdiv& (0+255),w,c
 12331  002ABA  D004               	goto	i2l5141
 12332  002ABC                     i2l5139:
 12333  002ABC  90D8               	bcf	status,0,c
 12334  002ABE  3603               	rlcf	___awdiv@divisor,f,c
 12335  002AC0  3604               	rlcf	___awdiv@divisor+1,f,c
 12336  002AC2  2A06               	incf	___awdiv@counter,f,c
 12337  002AC4                     i2l5141:
 12338  002AC4  AE04               	btfss	___awdiv@divisor+1,7,c
 12339  002AC6  D7FA               	goto	i2l5139
 12340  002AC8                     i2l5143:
 12341  002AC8  90D8               	bcf	status,0,c
 12342  002ACA  3608               	rlcf	___awdiv@quotient,f,c
 12343  002ACC  3609               	rlcf	___awdiv@quotient+1,f,c
 12344  002ACE  5003               	movf	___awdiv@divisor,w,c
 12345  002AD0  5C01               	subwf	___awdiv@dividend,w,c
 12346  002AD2  5004               	movf	___awdiv@divisor+1,w,c
 12347  002AD4  5802               	subwfb	___awdiv@dividend+1,w,c
 12348  002AD6  A0D8               	btfss	status,0,c
 12349  002AD8  D005               	goto	i2l5151
 12350  002ADA  5003               	movf	___awdiv@divisor,w,c
 12351  002ADC  5E01               	subwf	___awdiv@dividend,f,c
 12352  002ADE  5004               	movf	___awdiv@divisor+1,w,c
 12353  002AE0  5A02               	subwfb	___awdiv@dividend+1,f,c
 12354  002AE2  8008               	bsf	___awdiv@quotient,0,c
 12355  002AE4                     i2l5151:
 12356  002AE4  90D8               	bcf	status,0,c
 12357  002AE6  3204               	rrcf	___awdiv@divisor+1,f,c
 12358  002AE8  3203               	rrcf	___awdiv@divisor,f,c
 12359  002AEA  2E06               	decfsz	___awdiv@counter,f,c
 12360  002AEC  D7ED               	goto	i2l5143
 12361  002AEE                     i2l5155:
 12362  002AEE  5007               	movf	___awdiv@sign,w,c
 12363  002AF0  B4D8               	btfsc	status,2,c
 12364  002AF2  D004               	goto	i2l5159
 12365  002AF4  6C08               	negf	___awdiv@quotient,c
 12366  002AF6  1E09               	comf	___awdiv@quotient+1,f,c
 12367  002AF8  B0D8               	btfsc	status,0,c
 12368  002AFA  2A09               	incf	___awdiv@quotient+1,f,c
 12369  002AFC                     i2l5159:
 12370  002AFC  C008  F001         	movff	___awdiv@quotient,?___awdiv
 12371  002B00  C009  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12372  002B04  0012               	return	
 12373  002B06  FFFF               	dw	65535	; errata NOP
 12374  002B08                     __end_of___awdiv:
 12375                           	opt stack 0
 12376                           pclatu	equ	0xFFB
 12377                           pclath	equ	0xFFA
 12378                           tblptru	equ	0xFF8
 12379                           tblptrh	equ	0xFF7
 12380                           tblptrl	equ	0xFF6
 12381                           tablat	equ	0xFF5
 12382                           prodh	equ	0xFF4
 12383                           prodl	equ	0xFF3
 12384                           intcon	equ	0xFF2
 12385                           intcon2	equ	0xFF1
 12386                           postinc0	equ	0xFEE
 12387                           fsr0h	equ	0xFEA
 12388                           fsr0l	equ	0xFE9
 12389                           wreg	equ	0xFE8
 12390                           indf1	equ	0xFE7
 12391                           postdec1	equ	0xFE5
 12392                           fsr1h	equ	0xFE2
 12393                           fsr1l	equ	0xFE1
 12394                           bsr	equ	0xFE0
 12395                           indf2	equ	0xFDF
 12396                           postinc2	equ	0xFDE
 12397                           postdec2	equ	0xFDD
 12398                           fsr2h	equ	0xFDA
 12399                           fsr2l	equ	0xFD9
 12400                           status	equ	0xFD8
 12401                           pclatu	equ	0xFFB
 12402                           pclath	equ	0xFFA
 12403                           tblptru	equ	0xFF8
 12404                           tblptrh	equ	0xFF7
 12405                           tblptrl	equ	0xFF6
 12406                           tablat	equ	0xFF5
 12407                           prodh	equ	0xFF4
 12408                           prodl	equ	0xFF3
 12409                           intcon	equ	0xFF2
 12410                           intcon2	equ	0xFF1
 12411                           postinc0	equ	0xFEE
 12412                           fsr0h	equ	0xFEA
 12413                           fsr0l	equ	0xFE9
 12414                           wreg	equ	0xFE8
 12415                           indf1	equ	0xFE7
 12416                           postdec1	equ	0xFE5
 12417                           fsr1h	equ	0xFE2
 12418                           fsr1l	equ	0xFE1
 12419                           bsr	equ	0xFE0
 12420                           indf2	equ	0xFDF
 12421                           postinc2	equ	0xFDE
 12422                           postdec2	equ	0xFDD
 12423                           fsr2h	equ	0xFDA
 12424                           fsr2l	equ	0xFD9
 12425                           status	equ	0xFD8
 12426                           
 12427                           	psect	rparam
 12428  0000                     pclatu	equ	0xFFB
 12429                           pclath	equ	0xFFA
 12430                           tblptru	equ	0xFF8
 12431                           tblptrh	equ	0xFF7
 12432                           tblptrl	equ	0xFF6
 12433                           tablat	equ	0xFF5
 12434                           prodh	equ	0xFF4
 12435                           prodl	equ	0xFF3
 12436                           intcon	equ	0xFF2
 12437                           intcon2	equ	0xFF1
 12438                           postinc0	equ	0xFEE
 12439                           fsr0h	equ	0xFEA
 12440                           fsr0l	equ	0xFE9
 12441                           wreg	equ	0xFE8
 12442                           indf1	equ	0xFE7
 12443                           postdec1	equ	0xFE5
 12444                           fsr1h	equ	0xFE2
 12445                           fsr1l	equ	0xFE1
 12446                           bsr	equ	0xFE0
 12447                           indf2	equ	0xFDF
 12448                           postinc2	equ	0xFDE
 12449                           postdec2	equ	0xFDD
 12450                           fsr2h	equ	0xFDA
 12451                           fsr2l	equ	0xFD9
 12452                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    20
    Data        5
    BSS         201
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     45      87
    BANK0           128     43     106
    BANK1           256      0     107
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    DecToStr@result	PTR unsigned char  size(2) Largest target is 5
		 -> PrintTest(BANK0[5]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    eeprom_write_array@pData	PTR unsigned char  size(2) Largest target is 107
		 -> Cf(BANK1[107]), 

    eeprom_read_array@pData	PTR unsigned char  size(2) Largest target is 107
		 -> Cf(BANK1[107]), 

    sp__DecToStr	PTR unsigned char  size(2) Largest target is 5
		 -> PrintTest(BANK0[5]), 

    ecran_print_num@tempStr	PTR unsigned char  size(2) Largest target is 5
		 -> PrintTest(BANK0[5]), 

    S58StructEcran$Digits	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran(BANK0[16]), 
		 -> PrintTest(BANK0[5]), 

    Ecran.Digits	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Low_priority in COMRAM

    None.

Critical Paths under _High_priority in COMRAM

    _High_priority->___awdiv

Critical Paths under _main in BANK0

    _main->_test_process
    _test_process->_check_UAlim
    _test_process->_check_UInfla
    _check_UInfla->___ftmul
    _check_UAlim->___ftmul
    _micro_wait->_check_comutest
    _feu_process->_feu_tir
    _feu_tir->_delay_ms
    _feu_check_bp->_ecran_print_num
    _ecran_print_num->_DecToStr
    _DecToStr->___awmod
    _check_program_0->_ecran_refresh
    _check_idtest->_cf_rcv
    _cf_rcv->_cf_check
    _eeprom_write_array->_eeprom_write
    _check_bpon->_ecran_print_one_char
    _cf_check_and_display->_cf_check
    _eeprom_read_array->_eeprom_read
    _cf_check->_cf_checksum
    _cf_checkout->___wmul
    _armement_process->_arm_UAlim_1A
    _itoa->_utoa
    _utoa->___lwdiv
    _ecran_wait->_ecran_dot
    _check_comutest->_ecran_refresh
    _ecran_refresh->_ecran_print_one_char
    _ecran_print_one_char->_ecran_digit
    _arm_UAlim_1A->___ftmul
    _ana_read->_delay_ms
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft

Critical Paths under _Low_priority in BANK0

    None.

Critical Paths under _High_priority in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Low_priority in BANK1

    None.

Critical Paths under _High_priority in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Low_priority in BANK2

    None.

Critical Paths under _High_priority in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Low_priority in BANK3

    None.

Critical Paths under _High_priority in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Low_priority in BANK4

    None.

Critical Paths under _High_priority in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Low_priority in BANK5

    None.

Critical Paths under _High_priority in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   54325
                                             41 BANK0      2     2      0
                   _armement_process
                        _bouton_init
                     _bouton_refresh
               _cf_check_and_display
                         _check_bpon
                     _check_comutest
                       _check_idtest
                    _check_program_0
                      _ecran_refresh
                       _feu_check_bp
                        _feu_process
                          _hw_config
                       _micro_config
                         _micro_wait
                       _test_process
 ---------------------------------------------------------------------------------
 (1) _test_process                                         6     6      0   21863
                                             36 BANK0      5     5      0
                        _check_UAlim
                       _check_UInfla
                     _check_comutest
                        _ecran_blank
                    _ecran_print_num
                         _ecran_wait
                               _itoa
                     _register_write
 ---------------------------------------------------------------------------------
 (2) _check_UInfla                                         8     6      2    7959
                                             28 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
                           _ana_read
 ---------------------------------------------------------------------------------
 (2) _check_UAlim                                          8     6      2    7959
                                             28 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
                           _ana_read
 ---------------------------------------------------------------------------------
 (1) _micro_wait                                           1     1      0    2127
                                              7 BANK0      1     1      0
                     _check_comutest
                        _ecran_blank
               _ecran_print_one_char
                         _ecran_wait
 ---------------------------------------------------------------------------------
 (1) _micro_config                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hw_config                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _feu_process                                          2     2      0     907
                                              7 BANK0      2     2      0
                           _delay_ms
                      _feu_check_end
                            _feu_tir
 ---------------------------------------------------------------------------------
 (2) _feu_tir                                              1     1      0     534
                                              6 BANK0      1     1      0
                           _delay_ms
                     _register_write
 ---------------------------------------------------------------------------------
 (2) _register_write                                       3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _feu_check_end                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _feu_check_bp                                         2     2      0    3309
                                             21 BANK0      2     2      0
                    _ecran_print_num
               _ecran_print_one_char
 ---------------------------------------------------------------------------------
 (2) _ecran_print_num                                      4     4      0    2292
                                             17 BANK0      4     4      0
                           _DecToStr
 ---------------------------------------------------------------------------------
 (3) _DecToStr                                            10     8      2    2100
                                              7 BANK0     10     8      2
                            ___awmod
                            ___lbdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              5     4      1     318
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     587
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _check_program_0                                      2     2      0    1116
                                              5 BANK0      2     2      0
                        _ecran_blank
                      _ecran_refresh
                         _ecran_wait
 ---------------------------------------------------------------------------------
 (1) _check_idtest                                         1     1      0    5017
                                             24 BANK0      1     1      0
                             _cf_rcv
               _ecran_print_one_char
                    _micro_config_rs
 ---------------------------------------------------------------------------------
 (2) _micro_config_rs                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cf_rcv                                               4     4      0    4000
                                             20 BANK0      4     4      0
                           _cf_check
               _ecran_print_one_char
                  _eeprom_read_array
                 _eeprom_write_array
 ---------------------------------------------------------------------------------
 (3) _eeprom_write_array                                   6     2      4     506
                                              2 BANK0      6     2      4
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (4) _eeprom_write                                         2     1      1     139
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _check_bpon                                           2     2      0    1017
                                              3 BANK0      2     2      0
               _ecran_print_one_char
 ---------------------------------------------------------------------------------
 (1) _cf_check_and_display                                 5     5      0    4573
                                             20 BANK0      5     5      0
                         _HexToAscii
                           _cf_check
               _ecran_print_one_char
                      _ecran_refresh
                  _eeprom_read_array
 ---------------------------------------------------------------------------------
 (3) _eeprom_read_array                                    6     2      4     629
                                              1 BANK0      6     2      4
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (4) _eeprom_read                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _cf_check                                             2     2      0    1678
                                             18 BANK0      2     2      0
                        _cf_checkout
                      _cf_checkrange
                        _cf_checksum
 ---------------------------------------------------------------------------------
 (4) _cf_checksum                                         18    18      0     328
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 (4) _cf_checkrange                                        3     3      0     167
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _cf_checkout                                          4     4      0    1146
                                              6 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     694
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _HexToAscii                                           2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _bouton_refresh                                       6     6      0     489
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _bouton_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _armement_process                                     4     4      0   11777
                                             36 BANK0      4     4      0
                       _arm_UAlim_1A
                     _check_comutest
                        _ecran_blank
                         _ecran_wait
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    2301
                                             17 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1606
                                              8 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     386
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     549
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _ecran_wait                                           1     1      0      31
                                              1 BANK0      1     1      0
                          _ecran_dot
                    _ecran_raz_digit
 ---------------------------------------------------------------------------------
 (2) _check_comutest                                       2     2      0    1079
                                              5 BANK0      2     2      0
                        _ecran_blank
                      _ecran_refresh
 ---------------------------------------------------------------------------------
 (3) _ecran_refresh                                        2     2      0    1048
                                              3 BANK0      2     2      0
                          _ecran_dot
               _ecran_print_one_char
 ---------------------------------------------------------------------------------
 (4) _ecran_print_one_char                                 2     1      1    1017
                                              1 BANK0      2     1      1
                        _ecran_digit
                    _ecran_raz_digit
 ---------------------------------------------------------------------------------
 (3) _ecran_raz_digit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ecran_digit                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ecran_dot                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ecran_blank                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _arm_UAlim_1A                                         8     6      2    8332
                                             28 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
                           _ana_read
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _ana_read                                             6     4      2     444
                                              6 BANK0      6     4      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             6     4      2     373
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             5     2      3    2575
                                              8 BANK0      5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     602
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4301
                                             13 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2313
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Low_priority                                        17    17      0       0
                                             28 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _High_priority                                       19    19      0     428
                                              9 COMRAM    19    19      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              9     5      4     428
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _armement_process
     _arm_UAlim_1A
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
       ___lwtoft
         ___ftpack
       _ana_read
         _delay_ms
       _delay_ms
     _check_comutest
       _ecran_blank
       _ecran_refresh
         _ecran_dot
         _ecran_print_one_char
           _ecran_digit
           _ecran_raz_digit
     _ecran_blank
     _ecran_wait
       _ecran_dot
       _ecran_raz_digit
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _bouton_init
   _bouton_refresh
   _cf_check_and_display
     _HexToAscii
     _cf_check
       _cf_checkout
         ___wmul
       _cf_checkrange
       _cf_checksum
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
     _ecran_refresh
       _ecran_dot
       _ecran_print_one_char
         _ecran_digit
         _ecran_raz_digit
     _eeprom_read_array
       _eeprom_read
   _check_bpon
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
   _check_comutest
     _ecran_blank
     _ecran_refresh
       _ecran_dot
       _ecran_print_one_char
         _ecran_digit
         _ecran_raz_digit
   _check_idtest
     _cf_rcv
       _cf_check
         _cf_checkout
           ___wmul
         _cf_checkrange
         _cf_checksum
       _ecran_print_one_char
         _ecran_digit
         _ecran_raz_digit
       _eeprom_read_array
         _eeprom_read
       _eeprom_write_array
         _eeprom_write
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
     _micro_config_rs
   _check_program_0
     _ecran_blank
     _ecran_refresh
       _ecran_dot
       _ecran_print_one_char
         _ecran_digit
         _ecran_raz_digit
     _ecran_wait
       _ecran_dot
       _ecran_raz_digit
   _ecran_refresh
     _ecran_dot
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
   _feu_check_bp
     _ecran_print_num
       _DecToStr
         ___awmod
         ___lbdiv
         ___wmul
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
   _feu_process
     _delay_ms
     _feu_check_end
     _feu_tir
       _delay_ms
       _register_write
   _hw_config
   _micro_config
   _micro_wait
     _check_comutest
       _ecran_blank
       _ecran_refresh
         _ecran_dot
         _ecran_print_one_char
           _ecran_digit
           _ecran_raz_digit
     _ecran_blank
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
     _ecran_wait
       _ecran_dot
       _ecran_raz_digit
   _test_process
     _check_UAlim
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
       ___lwtoft
         ___ftpack
       _ana_read
         _delay_ms
     _check_UInfla
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
       ___lwtoft
         ___ftpack
       _ana_read
         _delay_ms
     _check_comutest
       _ecran_blank
       _ecran_refresh
         _ecran_dot
         _ecran_print_one_char
           _ecran_digit
           _ecran_raz_digit
     _ecran_blank
     _ecran_print_num
       _DecToStr
         ___awmod
         ___lbdiv
         ___wmul
     _ecran_wait
       _ecran_dot
       _ecran_raz_digit
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _register_write

 _Low_priority (ROOT)

 _High_priority (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      6B       7       41.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2B      6A       5       82.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2D      57       1       68.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12C      15        0.0%
DATA                 0      0     12C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Sat Dec 09 10:35:45 2017

                                        __end_of_check_UInfla 26C4  
                                         ?_eeprom_write_array 00BC  
                                              ??_feu_check_bp 00CF  
                                                          _RD 007D30  
                                                          _Cf 0100  
                                                          _WR 007D31  
                                                ___awdiv@sign 0007  
                                      ??_cf_check_and_display 00CE  
                                                 __CFG_BOR$ON 000000  
                                                          bsr 000FE0  
                                         ___wmul@multiplicand 00BC  
                                             ??_feu_check_end 00BA  
                                                __CFG_CP0$OFF 000000  
                                                __CFG_CP1$OFF 000000  
                                                __CFG_CP2$OFF 000000  
                                                __CFG_CP3$OFF 000000  
                                        __end_of_check_idtest 350C  
                                                         l250 27BE  
                                                         l260 33CC  
                                                         l340 352C  
                                                         l261 33D0  
                                                         l262 33D4  
                                                         l264 33F6  
                                                         l280 2BB6  
                                                         l417 21BA  
                                                         l258 33C8  
                                                         l426 2242  
                                                         l603 0A52  
                                                         l445 1BEE  
                                                         l461 173C  
                                                         l614 0B5E  
                                                         l448 1BF0  
                                                         l544 3508  
                                                         l616 0BDA  
                                                         l553 30E4  
                                                         l609 0ADE  
                                                         l548 30B0  
                                                         l820 29BC  
                                                         l564 062A  
                                                         l821 29E6  
                                                         l590 08F4  
                                                         l815 2990  
                                                         l591 0930  
                                                         l584 0864  
                                                         l568 06E0  
                                                         l825 2A32  
                                                         l818 29A8  
                                                         l915 32A0  
                                                         l828 2A50  
                                                         l917 32B4  
                                                         l918 32B6  
                                                         l967 2F3A  
                                                         _GIE 007F97  
                                                __CFG_CPB$OFF 000000  
                                                __CFG_CPD$OFF 000000  
                                                         _Arm 009A  
                                                         _Feu 0080  
                                              _check_comutest 313C  
                                                __CFG_BORV$45 000000  
                                                ___awmod@sign 00C0  
                                                         prod 000FF3  
                                                         wreg 000FE8  
                                                __CFG_LVP$OFF 000000  
                                        ??_eeprom_write_array 00C0  
                                                __CFG_WDT$OFF 000000  
                                                        l1100 1758  
                                                        l1110 1812  
                                                        l1102 179E  
                                                        l1031 1998  
                                                        l1112 1862  
                                                        l1033 19BC  
                                                        l1041 1A76  
                                                        l1105 1800  
                                                        l1034 19D4  
                                                        l1106 17D0  
                                                        l1122 18E0  
                                                        l1027 18E8  
                                                        l1115 187E  
                                                        l1117 189A  
                                                        l1142 1084  
                                                        l1126 0F22  
                                                        l1119 18B6  
                                                        l1151 1184  
                                                        l1136 103C  
                                                        l1137 1048  
                                                        l1147 1100  
                                                        l1093 3576  
                                                        l1149 111A  
                                                        l1445 215A  
                                                        l1529 157C  
                                                        l1571 234A  
                                                        l1549 1D66  
                                                        l1671 2C5C  
                                                        l1681 2D7A  
                                                        l6007 171C  
                                                        l6103 3574  
                                                        l6009 1732  
                                                        l5331 26DC  
                                                        l6211 310A  
                                                        l5341 26EC  
                                                        l5333 26E0  
                                                        l5317 26CC  
                                                        l5351 2700  
                                                        l5343 26F0  
                                                        l5335 26E4  
                                                        l5327 26D4  
                                                        l5319 26D0  
                                                        l5511 2ECC  
                                                        l6231 3502  
                                                        l6047 25DA  
                                                        l5361 2714  
                                                        l5353 2704  
                                                        l5345 26F4  
                                                        l5337 26E8  
                                                        l5329 26D8  
                                                        l6065 2CD0  
                                                        l6305 1356  
                                                        l5505 2EAC  
                                                        l6209 3106  
                                                        l5523 3372  
                                                        l5363 2718  
                                                        l5355 2708  
                                                        l5347 26F8  
                                                        l6307 13A8  
                                                        l5443 0ECA  
                                                        l5427 0C1C  
                                                        l6219 3132  
                                                        l5611 2DF4  
                                                        l5603 2DC4  
                                                        l6331 2A12  
                                                        l6411 0850  
                                                        l5541 20CE  
                                                        l5533 2058  
                                                        l5365 271C  
                                                        l5357 270C  
                                                        l5349 26FC  
                                                        l5453 0EEC  
                                                        l6261 1B46  
                                                        l5605 2DCC  
                                                        l6405 080C  
                                                        l5543 2100  
                                                        l5535 206E  
                                                        l5359 2710  
                                                        l5711 31A4  
                                                        l6263 1B76  
                                                        l5615 2E02  
                                                        l6423 08AE  
                                                        l5545 2116  
                                                        l5537 20A0  
                                                        l5529 203E  
                                                        l5369 2722  
                                                        l5385 33D8  
                                                        l5625 2BE8  
                                                        l6521 18F6  
                                                        l6281 11B8  
                                                        l5457 0F12  
                                                        l6097 3570  
                                                        l6505 0B1C  
                                                        l6433 08D4  
                                                        l6345 0638  
                                                        l5555 214E  
                                                        l5627 2BFA  
                                                        l6283 11C6  
                                                        l5483 2218  
                                                        l5467 2192  
                                                        l6259 1B42  
                                                        l6267 1BD8  
                                                        l5723 31F6  
                                                        l5731 321C  
                                                        l5571 240E  
                                                        l6611 10C0  
                                                        l6339 2A3C  
                                                        l6451 0986  
                                                        l6443 0948  
                                                        l6515 0B72  
                                                        l5549 212C  
                                                        l5813 14CC  
                                                        l5637 2C48  
                                                        l5629 2C02  
                                                        l5653 2D66  
                                                        l5645 2D18  
                                                        l6277 119C  
                                                        l5493 226C  
                                                        l5477 220E  
                                                        l6621 113A  
                                                        l6429 08C2  
                                                        l6381 072C  
                                                        l6701 2E50  
                                                        l5823 1530  
                                                        l5647 2D2A  
                                                        l6279 11AA  
                                                        l6287 11D4  
                                                        l5495 227C  
                                                        l5743 3434  
                                                        l5719 31CC  
                                                        l5591 24A6  
                                                        l5583 247A  
                                                        l5575 242C  
                                                        l5567 23E8  
                                                        l5671 1EEC  
                                                        l6703 2E56  
                                                        l6711 2E6C  
                                                        l5809 14A0  
                                                        l5913 3148  
                                                        l5649 2D32  
                                                        l6561 1A58  
                                                        l6297 1298  
                                                        l6289 11F2  
                                                        l5577 243E  
                                                        l6625 1148  
                                                        l6473 0A3E  
                                                        l6377 070A  
                                                        l6369 06F2  
                                                        l6705 2E5C  
                                                        l5819 1504  
                                                        l6299 12A4  
                                                        l5579 2446  
                                                        l5587 248E  
                                                        l5675 1F18  
                                                        l6491 0AB0  
                                                        l6467 09FA  
                                                        l6459 09E0  
                                                        l6707 2E62  
                                                        l5837 1C22  
                                                        l5925 3176  
                                                        l5685 1F76  
                                                        l5941 294A  
                                                        l6653 17F8  
                                                        l6485 0A9C  
                                                        l6397 07DE  
                                                        l6389 0784  
                                                        l5855 1CC6  
                                                        l5599 2DB8  
                                                        l5679 1F54  
                                                        l6495 0ABE  
                                                        l5873 1D56  
                                                        l5865 1D0A  
                                                        l5945 2974  
                                                        l6585 0FB4  
                                                        l6569 0F34  
                                                        l5795 142E  
                                                        l5867 1D24  
                                                        l5859 1CE4  
                                                        l6667 185A  
                                                        l6579 0F7C  
                                                        l5789 13EA  
                                                        l5869 1D2C  
                                                        l5957 3498  
                                                        l5973 1608  
                                                        l6677 18D0  
                                                        l6589 1018  
                                                        l5879 2292  
                                                        l5975 160C  
                                                        l6599 106C  
                                                        l6695 2E42  
                                                        l5889 22F8  
                                                        l5993 168E  
                                                        l5985 1644  
                                                        l6697 2E46  
                                                        _CFGS 007D36  
                                                  _Cpt1Sur20s 004D  
                                               __CFG_DEBUG$ON 000000  
                                                        u5110 1C4E  
                                                        u5031 13D8  
                                                        u5200 237E  
                                                        _IPEN 007E87  
                                                        u4410 0D74  
                                                        u5051 1404  
                                                        u5115 1C44  
                                                        u5060 1414  
                                                        u5140 1CEE  
                                                        u4405 0D3A  
                                                        u5207 2370  
                                                        u4415 0D68  
                                                        u5240 317E  
                                                        u4425 0DC6  
                                                        u5091 1C10  
                                                        u4435 0E4E  
                                                        _PEIE 007F96  
                                                        u5180 22EE  
                                                        u4445 0EB6  
                                                        u5246 3180  
                                                        u4390 0CE8  
                                                        u5600 127C  
                                                        u5370 2CBA  
                                                        u5602 127E  
                                                        u5187 22E2  
                                                        u4395 0CDC  
                                                        _RCIE 007CED  
                                                        _RCIF 007CF5  
                                                        u5525 32DC  
                                                        u5535 32EE  
                                                        u5527 32E2  
                                                        u5377 2CAE  
                                                        u5545 3300  
                                                        u5537 32F4  
                                                        u5570 121A  
                                                        u5555 3312  
                                                        u5547 3306  
                                                        u5557 3318  
                                                        i1l86 00AA  
                                                        u5590 124E  
                                                        _RCIP 007CFD  
                                                        u5655 134A  
                                                        u4880 2B6A  
                                                        u5656 1354  
                                                        u5592 1250  
                                                        u5576 121C  
                                                        u5665 1384  
                                                        u5666 1388  
                                                        i2l91 1E7A  
                                                        i2l95 1E5C  
                                                        u4887 2B60  
                                                        i2l98 1E58  
                                                __CFG_WDTPS$1 000000  
                                                        _WREN 007D32  
                                              ??_eeprom_write 00BB  
                                                __CFG_PWRT$ON 000000  
                                                ?_bouton_init 0001  
                                     eeprom_write_array@pData 00BC  
                                                        _Test 002E  
                                                        _main 2E0C  
                                                ___ftpack@arg 00BA  
                                                        _itoa 2C68  
                                                ___ftpack@exp 00BD  
                                                        fsr0h 000FEA  
                                                        fsr1h 000FE2  
                                                        fsr0l 000FE9  
                                                        fsr2h 000FDA  
                                                        indf1 000FE7  
                                                        fsr1l 000FE1  
                                                        indf2 000FDF  
                                                        fsr2l 000FD9  
                                                        _utoa 2288  
                                                        pclat 000FFA  
                                                        prodh 000FF4  
                                                        prodl 000FF3  
                                               feu_tir@Output 00C0  
                                                        start 0112  
                                        __size_of_cf_checkout 012A  
                                        __size_of_cf_checksum 0340  
                                            ?_ecran_raz_digit 0001  
                                                ___ftmul@cntr 00D4  
                                                ___ftmul@sign 00D5  
                                                ___fttol@exp1 00C8  
                                                ___fttol@lval 00C4  
                                     __size_of_bouton_refresh 0234  
                                               __CFG_OSCS$OFF 000000  
                                           ??_micro_config_rs 00BA  
                                      __end_of_check_comutest 3190  
                                            ?_ecran_print_num 0001  
                                             __end_of_Version 0615  
                                    eeprom_write_array@NbData 00BF  
                                                       ?_main 0001  
                                                       ?_itoa 00CB  
                                             __end_of___awdiv 2B08  
                                             __end_of___lbdiv 2E0C  
                                                       _EEADR 000FA9  
                                             __end_of___awmod 24B2  
                                                       _EEPGD 007D37  
                                                       ?_utoa 00C2  
                                             __end_of___ftmul 1580  
                                                       _T0CON 000FD5  
                                             ___awdiv@divisor 0003  
                                             __end_of___fttol 1D6A  
                                             __end_of___lwdiv 2C68  
                                                       i2l102 1E8A  
                                             __end_of___lwmod 2D86  
                                             ___awdiv@counter 0006  
                                                       _RCREG 000FAE  
                                                       _RCSTA 000FAB  
                                                  _HexToAscii 347C  
                                                       _TMR0H 000FD7  
                                                       _TMR0L 000FD6  
                                                       _SPBRG 000FAF  
                                                       _PORTA 000F80  
                                                       _PORTB 000F81  
                                                       _PORTC 000F82  
                                                       _PORTD 000F83  
                                                       _PORTE 000F84  
                                        __size_of_check_UAlim 00FA  
                                        __end_of_arm_UAlim_1A 25C2  
                                                       _TXREG 000FAD  
                                                       _TXSTA 000FAC  
                                                       _Blank 0606  
                                                       _Ecran 00AA  
                                                       _Armed 0601  
                                               __CFG_WRT0$OFF 000000  
                                               __CFG_WRT1$OFF 000000  
                                               __CFG_WRT2$OFF 000000  
                                               __CFG_WRT3$OFF 000000  
                                                       _Cptms 004F  
                                                       _Micro 0052  
                                          eeprom_read_array@i 00C0  
                                              __CFG_EBTR0$OFF 000000  
                                              __CFG_EBTR1$OFF 000000  
                                              __CFG_EBTR2$OFF 000000  
                                              __CFG_EBTR3$OFF 000000  
                                               __CFG_STVR$OFF 000000  
                                             __end_of_feu_tir 347C  
                                               __CFG_WRTB$OFF 000000  
                                               __CFG_WRTC$OFF 000000  
                                               __CFG_WRTD$OFF 000000  
                                              __CFG_EBTRB$OFF 000000  
                                             _check_program_0 30E8  
                                               ___ftpack@sign 00BE  
                                                       tablat 000FF5  
                                            __end_of_DecToStr 2020  
                                                       utoa@c 00CA  
                                                       utoa@v 00C8  
                                                       status 000FD8  
                                             ___lbdiv@divisor 00BA  
                                             ___lbdiv@counter 00BD  
                                     eeprom_read_array@NbData 00BE  
                                             __initialization 3232  
                                                __end_of_main 2E88  
                                                __end_of_itoa 2CF8  
                                                __end_of_utoa 23A0  
                                              DecToStr@result 00C1  
                                         eeprom_write@Address 00BA  
                                        __size_of_ecran_blank 0066  
                                        __size_of_ecran_digit 00FE  
                                              __CFG_OSC$HSPLL 000000  
                                             ?_check_comutest 0001  
                                                      ??_main 00E3  
                                               ___fttol@sign1 00C3  
                                                      ??_itoa 00D1  
                                                      ??_utoa 00C8  
                                               __activetblptr 000002  
                               __size_of_ecran_print_one_char 0048  
                                                      _ADCON0 000FC2  
                                                      _ADCON1 000FC1  
                                                      _ADRESH 000FC4  
                                                      _ADRESL 000FC3  
                                                      _EEDATA 000FA8  
                                                      _EECON2 000FA7  
                                            ___awdiv@dividend 0001  
                                            __end_of___ftpack 215E  
                                        __end_of_feu_check_bp 18E4  
                                                      i2l5201 1DEE  
                                                      i2l5203 1DF8  
                                                      i2l5141 2AC4  
                                                      i2l5133 2AA2  
                                              _register_write 3280  
                                                      i2l5151 2AE4  
                                                      i2l5143 2AC8  
                                                      i2l5127 2A82  
                                                      i2l5139 2ABC  
                                                      i2l5155 2AEE  
                                                      i2l5159 2AFC  
                                                      i2l5191 1DBC  
                                            __end_of___lwtoft 3368  
                                            __end_of_cf_check 343E  
                                                      _TMR0IE 007F95  
                                                      _TMR0IF 007F92  
                                                      _TMR0IP 007F8A  
                                       __size_of_check_UInfla 0102  
                                            __end_of_ana_read 2F60  
                                             bouton_refresh@i 00BF  
                                            test_process@temp 00E1  
                                            __end_of_delay_ms 33B2  
                                                      _Bouton 008E  
                                            _armement_process 18E4  
                                               ?_micro_config 0001  
                                        __size_of_eeprom_read 001A  
                                        __size_of_feu_process 026A  
                                                      ___wmul 2F60  
                                                   ??___awdiv 0005  
                                                   ??___lbdiv 00BB  
                                                      _cf_rcv 1580  
                                                   ??___awmod 00BE  
                                       __size_of_check_idtest 002C  
                                                   ??___ftmul 00CD  
                                                   ??___fttol 00BE  
                                                   ??___lwdiv 00BE  
                                                   ??___lwmod 00BE  
                                                      clear_0 3238  
                                                      clear_1 3244  
                                                      clear_2 3250  
                                            ___awdiv@quotient 0008  
                                             ___awmod@divisor 00BC  
                                        __end_of_eeprom_write 3538  
                                             ___awmod@counter 00BF  
                                                   ??_feu_tir 00C0  
                                     __end_of_check_program_0 313C  
                                       ___ftmul@f3_as_product 00D1  
                                                 ?_HexToAscii 0001  
                                                      itoa@cp 00D1  
                                                __mediumconst 0000  
                                       __end_of_ecran_refresh 2BBA  
                                                      tblptrh 000FF7  
                                                      tblptrl 000FF6  
                                                      tblptru 000FF8  
                                                _check_UInfla 25C2  
                                      __end_of_register_write 32CE  
                                      __size_of_cf_checkrange 0070  
                                           cf_checksum@calcul 00C8  
                                            ___lbdiv@dividend 00BC  
                                                  __accesstop 0080  
                                     __end_of__initialization 3276  
                                         eeprom_write_array@i 00C1  
                                    eeprom_read_array@Address 00BD  
                                                _check_idtest 34E0  
                                        __size_of_bouton_init 004E  
                                              ??_micro_config 00BA  
                                               __end_of_Blank 060B  
                                                  ___ftmul@f1 00C7  
                                                  ___ftmul@f2 00CA  
                                               __end_of_Armed 0606  
                                                  ___fttol@f1 00BA  
                                              __pcstackCOMRAM 0001  
                                                __pidataBANK0 35D0  
                                cf_check_and_display@configOk 00D2  
                                              _bouton_refresh 1188  
                                             DecToStr@power10 00CA  
                                       __size_of_arm_UAlim_1A 0110  
                                            ___lbdiv@quotient 00BE  
                                                  ___lwtoft@c 00C2  
                                          __size_of_ecran_dot 0014  
                                                   ?_DecToStr 00C1  
                                           __end_of_ErreurTir 0610  
                                               ?_Low_priority 0001  
                                             ?_register_write 0001  
                                                  __pbssBANK0 0080  
                                                  __pbssBANK1 0100  
                                                  _check_bpon 308C  
                                          delay_ms@TimeToWait 00BA  
                                                  __pnvCOMRAM 0052  
                                       __end_of_High_priority 1EC6  
                                          __size_of_hw_config 0060  
                                             _micro_config_rs 357A  
                                          check_program_0@ret 00C0  
                                                _arm_UAlim_1A 24B2  
                                         __size_of_HexToAscii 0034  
                                      __end_of_bouton_refresh 13BC  
                                                  _ecran_wait 3538  
                                            __CFG_CCP2MUX$OFF 000000  
                                                     ?___wmul 00BA  
                                               _cf_checkrange 2E88  
                                                     ?_cf_rcv 0001  
                                                   ?___ftpack 00BA  
                               __size_of_cf_check_and_display 017A  
                                                  ??_DecToStr 00C3  
                                                   ?___lwtoft 00C2  
                                                   ?_cf_check 0001  
                                       __end_of_feu_check_end 357A  
                                            ?_check_program_0 0001  
                                              ??_Low_priority 001D  
                                                   ?_ana_read 00C0  
                                           _eeprom_read_array 3190  
                                       __size_of_feu_check_bp 01A4  
                                                   ?_delay_ms 00BA  
                                          cf_checkrange@valid 00BB  
                                          ?_eeprom_read_array 00BB  
                                 __size_of_eeprom_write_array 0050  
                                               ??_cf_checkout 00C0  
                                               ??_cf_checksum 00BA  
                                         ??_eeprom_read_array 00BF  
                                    cf_check_and_display@temp 00D0  
                                           __end_of_ecran_dot 35C2  
                                                  cf_rcv@temp 00D0  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                              ?_cf_checkrange 0001  
                                             ?_bouton_refresh 0001  
                                       __size_of_eeprom_write 002C  
                                            ??_check_comutest 00BF  
                                                     _Version 0610  
                                                     ___awdiv 2A54  
                                                     ___lbdiv 2D86  
                                                     ___awmod 23A0  
                                             __size_of___wmul 0066  
                                                     ___ftmul 13BC  
                                                     ___fttol 1BF4  
                                             __size_of_cf_rcv 01C0  
                                                     ___lwdiv 2BBA  
                                                     ___lwmod 2CF8  
                                                __psmallconst 0600  
                                                _feu_check_bp 1740  
                                               ??_check_UAlim 00D8  
                                                     __pcinit 3232  
                                                  ??___ftpack 00BF  
                                      ecran_print_num@tempStr 00CD  
                                                     __ramtop 0600  
                                    __size_of_ecran_raz_digit 000E  
                                                  _micro_wait 298C  
                                                     __ptext0 2E0C  
                                                     __ptext1 0616  
                                                     __ptext2 25C2  
                                                     __ptext3 27C2  
                                                     __ptext4 298C  
                                                     __ptext5 34B0  
                                                     __ptext6 302C  
                                                     __ptext7 0F1E  
                                                     __ptext8 343E  
                                                     __ptext9 3280  
                                                     _feu_tir 343E  
                                                  ??___lwtoft 00C5  
                                                  ??_cf_check 00CC  
                                   __end_of_eeprom_read_array 31E2  
                                                     cf_rcv@i 00D1  
                                           __end_of_hw_config 308C  
                                                  ??_ana_read 00C2  
                                            ___awmod@dividend 00BA  
                                        __end_of_micro_config 34E0  
                                    __end_of_armement_process 1A7A  
                                                  ??_delay_ms 00BC  
                                    __size_of_ecran_print_num 00D0  
                                                     main@cpt 00E4  
                                              __pintcode_body 1D6A  
                                     __end_of_micro_config_rs 3594  
                                        end_of_initialization 3276  
                                         HexToAscii@character 00BA  
                                                 ?_check_bpon 0001  
                                                     itoa@buf 00CB  
                                                     itoa@val 00CD  
                                               __Lmediumconst 0000  
                                                _eeprom_write 350C  
                                                     int_func 1D6A  
                                __end_of_ecran_print_one_char 33FA  
                                         __end_of_cf_checkout 2288  
                                         __end_of_cf_checksum 0F1E  
                                               ??_ecran_blank 00BA  
                                               ??_ecran_digit 00BA  
                                                 ?_ecran_wait 0001  
                                                     postdec1 000FE5  
                                                     postdec2 000FDD  
                                                     postinc0 000FEE  
                                                     postinc2 000FDE  
                                                cf_checkout@i 00C3  
                                                cf_checksum@i 00C7  
                                                     utoa@buf 00C2  
                                                     utoa@val 00C4  
                                                   _PORTAbits 000F80  
                                                   _PORTBbits 000F81  
                                                   _PORTCbits 000F82  
                                                   _PORTEbits 000F84  
                                                ??_HexToAscii 00BA  
                                                   _TRISAbits 000F92  
                                                   _TRISBbits 000F93  
                                                   _TRISCbits 000F94  
                                                   _TRISDbits 000F95  
                                                   _TRISEbits 000F96  
                                         __end_of_check_UAlim 28BC  
                                               ?_test_process 0001  
                                          bouton_refresh@temp 00BE  
                                               ??_eeprom_read 00BA  
                                               ??_feu_process 00C1  
                                             ??_cf_checkrange 00BA  
                                        __end_of_Low_priority 00F2  
                                          __end_of_HexToAscii 34B0  
                                                 ___ftmul@exp 00D0  
                                        DecToStr@compareValue 00C7  
                                              __end_of___wmul 2FC6  
                                              __end_of_cf_rcv 1740  
                                                 ?_micro_wait 0001  
                                         __size_of_check_bpon 005C  
                                         __end_of_ecran_blank 302C  
                                         __end_of_ecran_digit 27C2  
                                  __size_of_eeprom_read_array 0052  
                                            ??_register_write 00BA  
                                         start_initialization 3232  
                                           __size_of_DecToStr 015A  
                                              ??_test_process 00DE  
                                           ??_ecran_raz_digit 00BA  
                                                   _ErreurTir 060B  
                                               DecToStr@value 00C9  
                                      eeprom_read_array@pData 00BB  
                                         __size_of_ecran_wait 0022  
                                            ?_micro_config_rs 0001  
                                               ??_bouton_init 00BA  
                                             ecran_digit@Char 00BA  
                                                 _cf_checkout 215E  
                                                 _cf_checksum 0BDE  
                                           ??_ecran_print_num 00CB  
                                             test_process@ret 00E0  
                                      __size_of_ecran_refresh 00B2  
                                                    ??___wmul 00BE  
                                                    ??_cf_rcv 00CE  
                                         __end_of_eeprom_read 35AE  
                                                   _PrintTest 00E5  
                                                 __pdataBANK0 00E5  
                                         __end_of_feu_process 1188  
                                            cf_checkout@valid 00C1  
                                       __size_of_micro_config 0030  
                                                 _check_UAlim 27C2  
                                            cf_checksum@valid 00C6  
                                           __size_of___ftpack 013E  
                                                 __pbssCOMRAM 002E  
                                           __size_of___lwtoft 004C  
                                               __pcstackBANK0 00BA  
                                           __size_of_cf_check 0044  
                                                ana_read@temp 00C4  
                                           __size_of_ana_read 0068  
                                        _ecran_print_one_char 33B2  
                                        register_write@Output 00BB  
                                           __size_of_delay_ms 004A  
                                            eeprom_write@Data 00BB  
                                __end_of_cf_check_and_display 1BF4  
                                            ??_bouton_refresh 00BA  
                                         __size_of_micro_wait 00C8  
                                   ecran_print_one_char@Digit 00BC  
                                            ___lwdiv@dividend 00BA  
                                                _micro_config 34B0  
                                         __end_of_bouton_init 331C  
                                                   _ecran_dot 35AE  
                                                   __pintcode 0008  
                                                 _ecran_blank 2FC6  
                                                 _ecran_digit 26C4  
                                                    ?___awdiv 0001  
                                                    ?___lbdiv 00BA  
                                                    ?___awmod 00BA  
                                                    ?___ftmul 00C7  
                                                    ?___fttol 00BA  
                                                    ?___lwdiv 00BA  
                                                    ?___lwmod 00BA  
                                                 __pintcodelo 0018  
                                                    ?_feu_tir 0001  
                                                 __smallconst 0600  
                                            arm_UAlim_1A@temp 00DC  
                                      __size_of_High_priority 1EBE  
                                  __end_of_eeprom_write_array 3232  
                                           ?_armement_process 0001  
                                       ?_ecran_print_one_char 00BB  
                                               _ecran_refresh 2B08  
                                            ___lwdiv@quotient 00C0  
                                                   _hw_config 302C  
                                          ??_armement_process 00DE  
                                    __size_of_check_program_0 0054  
                                                ??_check_bpon 00BD  
                                       __size_of_Low_priority 00DA  
                                              ___wmul@product 00BE  
                                                 _eeprom_read 3594  
                                                 _feu_process 0F1E  
                                      __size_of_feu_check_end 0020  
                                                    i2u429_44 1E1C  
                                                    i2u429_45 1E16  
                                        __end_of_test_process 0BDE  
                                                  ?_ecran_dot 0001  
                                                ??_ecran_wait 00BB  
                                                  _ADCON0bits 000FC2  
                                           ___wmul@multiplier 00BA  
                                                    _DecToStr 1EC6  
                                          __end_of_check_bpon 30E8  
                                   eeprom_write_array@Address 00BE  
                                            check_UInfla@temp 00DC  
                                                    _Feedback 00A1  
                                                    _Decompte 0051  
                                              ?_ecran_refresh 0001  
                                                _Low_priority 0018  
                                               ?_check_UInfla 00D6  
                                                  ?_hw_config 0001  
                                                delay_ms@temp 00BE  
                                                   copy_data0 326A  
                                          __end_of_ecran_wait 355A  
                                                 _bouton_init 32CE  
                                               ?_check_idtest 0001  
                                               _High_priority 0008  
                                                    _Register 00A6  
                                                    __Hrparam 0000  
                                                    __Lrparam 0000  
                                             register_write@i 00BC  
                                            __size_of___awdiv 00B4  
                                             _ecran_raz_digit 35C2  
                                            __size_of___lbdiv 0086  
                                            __size_of___awmod 0112  
                                            __size_of___ftmul 01C4  
                                            __size_of___fttol 0176  
                                                 ana_read@ANx 00C3  
                                            __size_of___lwdiv 00AE  
                                            __size_of___lwmod 008E  
                                                    ___ftpack 2020  
                                                ??_micro_wait 00C1  
                                        _cf_check_and_display 1A7A  
                                                    ___lwtoft 331C  
                                                    _cf_check 33FA  
                                                ecran_dot@Dot 00BA  
                                            __size_of_feu_tir 003E  
                                               _feu_check_end 355A  
                                                    _ana_read 2EF8  
                                     __size_of_check_comutest 0054  
                                      ??_ecran_print_one_char 00BC  
                                              ??_check_UInfla 00D8  
                                                    _delay_ms 3368  
                                             _ecran_print_num 28BC  
                                             ___lwdiv@divisor 00BC  
                                             ___lwdiv@counter 00BF  
                                                    __ptext10 355A  
                                                    __ptext11 1740  
                                                    __ptext20 31E2  
                                                    __ptext12 28BC  
                                                    __ptext21 350C  
                                                    __ptext13 1EC6  
                                                    __ptext30 2F60  
                                                    __ptext22 308C  
                                                    __ptext14 2D86  
                                                    __ptext31 347C  
                                                    __ptext23 1A7A  
                                                    __ptext15 23A0  
                                                    __ptext40 313C  
                                                    __ptext32 1188  
                                                    __ptext24 3190  
                                                    __ptext16 30E8  
                                                    __ptext41 2B08  
                                                    __ptext33 32CE  
                                                    __ptext25 3594  
                                                    __ptext17 34E0  
                                                    __ptext50 331C  
                                                    __ptext42 33B2  
                                                    __ptext34 18E4  
                                                    __ptext26 33FA  
                                                    __ptext18 357A  
                                                    __ptext51 1BF4  
                                                    __ptext43 35C2  
                                                    __ptext35 2C68  
                                                    __ptext27 0BDE  
                                                    __ptext19 1580  
                                                    __ptext52 13BC  
                                                    __ptext44 26C4  
                                                    __ptext36 2288  
                                                    __ptext28 2E88  
                                                    __ptext53 2020  
                                                    __ptext45 35AE  
                                                    __ptext37 2CF8  
                                                    __ptext29 215E  
                                                    __ptext46 2FC6  
                                                    __ptext38 2BBA  
                                                    __ptext47 24B2  
                                                    __ptext39 3538  
                                                    __ptext56 2A54  
                                                    __ptext48 2EF8  
                                                    __ptext49 3368  
                                             check_UAlim@temp 00DC  
                               ecran_print_one_char@Character 00BB  
                                        armement_process@temp 00E0  
                                                ?_cf_checkout 0001  
                                              ??_check_idtest 00D2  
                                                ?_cf_checksum 0001  
                                         _bouton_refresh$2134 00BC  
                                               __size_of_main 007C  
                                               __size_of_itoa 0090  
                                              ?_High_priority 0001  
                                               __size_of_utoa 0118  
                                          __end_of_micro_wait 2A54  
                                               ?_arm_UAlim_1A 00D6  
                                           ??_check_program_0 00BF  
                                                 ??_ecran_dot 00BA  
                                       __end_of_cf_checkrange 2EF8  
                                                ?_check_UAlim 00D6  
                                       ?_cf_check_and_display 0001  
                                              ?_feu_check_end 0001  
                                             ??_ecran_refresh 00BD  
                                                  _INTCONbits 000FF2  
                                              cf_checkrange@i 00BC  
                                                    itoa@base 00CF  
                                                 ??_hw_config 00BA  
                                                    intlevel1 35D6  
                                                    intlevel2 35D6  
                                         cf_checkout@last_out 00C2  
                                            ___lwmod@dividend 00BA  
                                       __size_of_test_process 05C8  
                                              ??_arm_UAlim_1A 00D8  
                                               cf_check@valid 00CD  
                                     __end_of_ecran_raz_digit 35D0  
                                    __size_of_micro_config_rs 001A  
                                                ?_ecran_blank 0001  
                                                ?_ecran_digit 0001  
                                         check_comutest@State 00C0  
                                               ?_feu_check_bp 0001  
                                     __end_of_ecran_print_num 298C  
                                                    utoa@base 00C6  
                                             ___lwmod@divisor 00BC  
                                          ecran_print_num@Num 00CC  
                                             HexToAscii@Value 00BB  
                                             ___lwmod@counter 00BF  
                                                _test_process 0616  
                                             ??_High_priority 000A  
                                     __size_of_register_write 004E  
                                               ?_eeprom_write 00BA  
                                                ?_eeprom_read 0001  
                                          eeprom_read@Address 00BA  
                                          _eeprom_write_array 31E2  
                                                ?_feu_process 0001  
                                   __size_of_armement_process 0196  
