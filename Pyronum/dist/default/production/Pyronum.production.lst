

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Tue Apr 16 02:29:12 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    77  0000                     
    78                           	psect	idataBANK0
    79  003816                     __pidataBANK0:
    80                           	opt stack 0
    81                           
    82                           ;initializer for _PrintTest
    83  003816  33                 	db	51
    84  003817  34                 	db	52
    85  003818  35                 	db	53
    86  003819  36                 	db	54
    87  00381A  00                 	db	0
    88                           
    89                           	psect	smallconst
    90  000600                     __psmallconst:
    91                           	opt stack 0
    92  000600  00                 	db	0
    93  000601                     _Armed:
    94                           	opt stack 0
    95  000601  2D                 	db	45
    96  000602  20                 	db	32
    97  000603  20                 	db	32
    98  000604  20                 	db	32
    99  000605  00                 	db	0
   100  000606                     __end_of_Armed:
   101                           	opt stack 0
   102  000606                     _Blank:
   103                           	opt stack 0
   104  000606  20                 	db	32
   105  000607  20                 	db	32
   106  000608  20                 	db	32
   107  000609  20                 	db	32
   108  00060A  00                 	db	0
   109  00060B                     __end_of_Blank:
   110                           	opt stack 0
   111  00060B                     _ErreurTir:
   112                           	opt stack 0
   113  00060B  45                 	db	69
   114  00060C  5F                 	db	95
   115  00060D  74                 	db	116
   116  00060E  20                 	db	32
   117  00060F  00                 	db	0
   118  000610                     __end_of_ErreurTir:
   119                           	opt stack 0
   120  000610                     _Version:
   121                           	opt stack 0
   122  000610  30                 	db	48
   123  000611  30                 	db	48
   124  000612  31                 	db	49
   125  000613  30                 	db	48
   126  000614  00                 	db	0
   127  000615                     __end_of_Version:
   128                           	opt stack 0
   129  0000                     _ADCON0	set	4034
   130  0000                     _ADCON0bits	set	4034
   131  0000                     _ADCON1	set	4033
   132  0000                     _ADRESH	set	4036
   133  0000                     _ADRESL	set	4035
   134  0000                     _EEADR	set	4009
   135  0000                     _EECON2	set	4007
   136  0000                     _EEDATA	set	4008
   137  0000                     _INTCONbits	set	4082
   138  0000                     _PORTA	set	3968
   139  0000                     _PORTAbits	set	3968
   140  0000                     _PORTB	set	3969
   141  0000                     _PORTBbits	set	3969
   142  0000                     _PORTC	set	3970
   143  0000                     _PORTCbits	set	3970
   144  0000                     _PORTD	set	3971
   145  0000                     _PORTE	set	3972
   146  0000                     _PORTEbits	set	3972
   147  0000                     _RCREG	set	4014
   148  0000                     _RCSTA	set	4011
   149  0000                     _SPBRG	set	4015
   150  0000                     _T0CON	set	4053
   151  0000                     _TMR0H	set	4055
   152  0000                     _TMR0L	set	4054
   153  0000                     _TRISAbits	set	3986
   154  0000                     _TRISBbits	set	3987
   155  0000                     _TRISCbits	set	3988
   156  0000                     _TRISDbits	set	3989
   157  0000                     _TRISEbits	set	3990
   158  0000                     _TXREG	set	4013
   159  0000                     _TXSTA	set	4012
   160  0000                     _CFGS	set	32054
   161  0000                     _EEPGD	set	32055
   162  0000                     _GIE	set	32663
   163  0000                     _IPEN	set	32391
   164  0000                     _PEIE	set	32662
   165  0000                     _RCIE	set	31981
   166  0000                     _RCIF	set	31989
   167  0000                     _RCIP	set	31997
   168  0000                     _RD	set	32048
   169  0000                     _TMR0IE	set	32661
   170  0000                     _TMR0IF	set	32658
   171  0000                     _TMR0IP	set	32650
   172  0000                     _WR	set	32049
   173  0000                     _WREN	set	32050
   174  000615  00                 	db	0	; dummy byte at the end
   175  0000                     
   176                           	psect	nvCOMRAM
   177  000052                     __pnvCOMRAM:
   178                           	opt stack 0
   179  000052                     _Micro:
   180                           	opt stack 0
   181  000052                     	ds	6
   182                           
   183                           ; #config settings
   184  0000                     
   185                           	psect	cinit
   186  003440                     __pcinit:
   187                           	opt stack 0
   188  003440                     start_initialization:
   189                           	opt stack 0
   190  003440                     __initialization:
   191                           	opt stack 0
   192                           
   193                           ; Clear objects allocated to BANK1 (122 bytes)
   194  003440  EE01  F000         	lfsr	0,__pbssBANK1
   195  003444  0E7A               	movlw	122
   196  003446                     clear_0:
   197  003446  6AEE               	clrf	postinc0,c
   198  003448  06E8               	decf	wreg,f,c
   199  00344A  E1FD               	bnz	clear_0
   200                           
   201                           ; Clear objects allocated to BANK0 (58 bytes)
   202  00344C  EE00  F080         	lfsr	0,__pbssBANK0
   203  003450  0E3A               	movlw	58
   204  003452                     clear_1:
   205  003452  6AEE               	clrf	postinc0,c
   206  003454  06E8               	decf	wreg,f,c
   207  003456  E1FD               	bnz	clear_1
   208                           
   209                           ; Clear objects allocated to COMRAM (36 bytes)
   210  003458  EE00  F02E         	lfsr	0,__pbssCOMRAM
   211  00345C  0E24               	movlw	36
   212  00345E                     clear_2:
   213  00345E  6AEE               	clrf	postinc0,c
   214  003460  06E8               	decf	wreg,f,c
   215  003462  E1FD               	bnz	clear_2
   216                           
   217                           ; Initialize objects allocated to BANK0 (5 bytes)
   218                           ; load TBLPTR registers with __pidataBANK0
   219  003464  0E16               	movlw	low __pidataBANK0
   220  003466  6EF6               	movwf	tblptrl,c
   221  003468  0E38               	movlw	high __pidataBANK0
   222  00346A  6EF7               	movwf	tblptrh,c
   223  00346C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   224  00346E  6EF8               	movwf	tblptru,c
   225  003470  EE00  F0E5         	lfsr	0,__pdataBANK0
   226  003474  EE10 F005          	lfsr	1,5
   227  003478                     copy_data0:
   228  003478  0009               	tblrd		*+
   229  00347A  CFF5 FFEE          	movff	tablat,postinc0
   230  00347E  50E5               	movf	postdec1,w,c
   231  003480  50E1               	movf	fsr1l,w,c
   232  003482  E1FA               	bnz	copy_data0
   233  003484                     end_of_initialization:
   234                           	opt stack 0
   235  003484                     __end_of__initialization:
   236                           	opt stack 0
   237  003484  0E00               	movlw	low (__Lmediumconst shr (0+16))
   238  003486  6EF8               	movwf	tblptru,c
   239  003488  0100               	movlb	0
   240  00348A  EF45  F018         	goto	_main	;jump to C main() function
   241                           tblptru	equ	0xFF8
   242                           tblptrh	equ	0xFF7
   243                           tblptrl	equ	0xFF6
   244                           tablat	equ	0xFF5
   245                           postinc0	equ	0xFEE
   246                           wreg	equ	0xFE8
   247                           postdec1	equ	0xFE5
   248                           fsr1l	equ	0xFE1
   249                           
   250                           	psect	bssCOMRAM
   251  00002E                     __pbssCOMRAM:
   252                           	opt stack 0
   253  00002E                     _Test:
   254                           	opt stack 0
   255  00002E                     	ds	31
   256  00004D                     _Cpt1Sur20s:
   257                           	opt stack 0
   258  00004D                     	ds	2
   259  00004F                     _Cptms:
   260                           	opt stack 0
   261  00004F                     	ds	2
   262  000051                     _Decompte:
   263                           	opt stack 0
   264  000051                     	ds	1
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           postdec1	equ	0xFE5
   272                           fsr1l	equ	0xFE1
   273                           
   274                           	psect	bssBANK0
   275  000080                     __pbssBANK0:
   276                           	opt stack 0
   277  000080                     _Feu:
   278                           	opt stack 0
   279  000080                     	ds	14
   280  00008E                     _Bouton:
   281                           	opt stack 0
   282  00008E                     	ds	12
   283  00009A                     _Arm:
   284                           	opt stack 0
   285  00009A                     	ds	7
   286  0000A1                     _Feedback:
   287                           	opt stack 0
   288  0000A1                     	ds	5
   289  0000A6                     _Register:
   290                           	opt stack 0
   291  0000A6                     	ds	4
   292  0000AA                     _Ecran:
   293                           	opt stack 0
   294  0000AA                     	ds	16
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           postdec1	equ	0xFE5
   302                           fsr1l	equ	0xFE1
   303                           
   304                           	psect	dataBANK0
   305  0000E5                     __pdataBANK0:
   306                           	opt stack 0
   307  0000E5                     _PrintTest:
   308                           	opt stack 0
   309  0000E5                     	ds	5
   310                           tblptru	equ	0xFF8
   311                           tblptrh	equ	0xFF7
   312                           tblptrl	equ	0xFF6
   313                           tablat	equ	0xFF5
   314                           postinc0	equ	0xFEE
   315                           wreg	equ	0xFE8
   316                           postdec1	equ	0xFE5
   317                           fsr1l	equ	0xFE1
   318                           
   319                           	psect	bssBANK1
   320  000100                     __pbssBANK1:
   321                           	opt stack 0
   322  000100                     _Cf:
   323                           	opt stack 0
   324  000100                     	ds	122
   325                           tblptru	equ	0xFF8
   326                           tblptrh	equ	0xFF7
   327                           tblptrl	equ	0xFF6
   328                           tablat	equ	0xFF5
   329                           postinc0	equ	0xFEE
   330                           wreg	equ	0xFE8
   331                           postdec1	equ	0xFE5
   332                           fsr1l	equ	0xFE1
   333                           
   334                           	psect	cstackBANK0
   335  0000BA                     __pcstackBANK0:
   336                           	opt stack 0
   337  0000BA                     ??_bouton_refresh:
   338  0000BA                     ??_register_write:
   339  0000BA                     ??_ecran_blank:
   340  0000BA                     ??_cf_checksum:
   341  0000BA                     ??_cf_checkrange:
   342  0000BA                     ?___awmod:
   343                           	opt stack 0
   344  0000BA                     ?___lwdiv:
   345                           	opt stack 0
   346  0000BA                     ?___lwmod:
   347                           	opt stack 0
   348  0000BA                     ?___wmul:
   349                           	opt stack 0
   350  0000BA                     ?___ftpack:
   351                           	opt stack 0
   352  0000BA                     ?___fttol:
   353                           	opt stack 0
   354  0000BA                     ecran_digit@Char:
   355                           	opt stack 0
   356  0000BA                     ecran_dot@Dot:
   357                           	opt stack 0
   358  0000BA                     eeprom_read@Address:
   359                           	opt stack 0
   360  0000BA                     eeprom_write@Address:
   361                           	opt stack 0
   362  0000BA                     HexToAscii@character:
   363                           	opt stack 0
   364  0000BA                     ___lbdiv@divisor:
   365                           	opt stack 0
   366  0000BA                     delay_ms@TimeToWait:
   367                           	opt stack 0
   368  0000BA                     ___awmod@dividend:
   369                           	opt stack 0
   370  0000BA                     ___lwdiv@dividend:
   371                           	opt stack 0
   372  0000BA                     ___lwmod@dividend:
   373                           	opt stack 0
   374  0000BA                     ___wmul@multiplier:
   375                           	opt stack 0
   376  0000BA                     ___ftpack@arg:
   377                           	opt stack 0
   378  0000BA                     ___fttol@f1:
   379                           	opt stack 0
   380                           
   381                           ; 3 bytes @ 0x0
   382  0000BA                     	ds	1
   383  0000BB                     ??_ecran_wait:
   384  0000BB                     ??___lbdiv:
   385  0000BB                     ecran_print_one_char@Character:
   386                           	opt stack 0
   387  0000BB                     eeprom_write@Data:
   388                           	opt stack 0
   389  0000BB                     cf_checkrange@valid:
   390                           	opt stack 0
   391  0000BB                     HexToAscii@Value:
   392                           	opt stack 0
   393  0000BB                     register_write@Output:
   394                           	opt stack 0
   395  0000BB                     eeprom_read_array@pData:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x1
   399  0000BB                     	ds	1
   400  0000BC                     ??_delay_ms:
   401  0000BC                     ecran_print_one_char@Digit:
   402                           	opt stack 0
   403  0000BC                     cf_checkrange@i:
   404                           	opt stack 0
   405  0000BC                     register_write@i:
   406                           	opt stack 0
   407  0000BC                     ___lbdiv@dividend:
   408                           	opt stack 0
   409  0000BC                     eeprom_write_array@pData:
   410                           	opt stack 0
   411  0000BC                     _bouton_refresh$2134:
   412                           	opt stack 0
   413  0000BC                     ___awmod@divisor:
   414                           	opt stack 0
   415  0000BC                     ___lwdiv@divisor:
   416                           	opt stack 0
   417  0000BC                     ___lwmod@divisor:
   418                           	opt stack 0
   419  0000BC                     ___wmul@multiplicand:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x2
   423  0000BC                     	ds	1
   424  0000BD                     ??_check_bpon:
   425  0000BD                     ??_ecran_refresh:
   426  0000BD                     eeprom_read_array@Address:
   427                           	opt stack 0
   428  0000BD                     ___ftpack@exp:
   429                           	opt stack 0
   430  0000BD                     ___lbdiv@counter:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x3
   434  0000BD                     	ds	1
   435  0000BE                     ??___awmod:
   436  0000BE                     ??___fttol:
   437  0000BE                     ??___lwdiv:
   438  0000BE                     ??___lwmod:
   439  0000BE                     eeprom_read_array@NbData:
   440                           	opt stack 0
   441  0000BE                     eeprom_write_array@Address:
   442                           	opt stack 0
   443  0000BE                     bouton_refresh@temp:
   444                           	opt stack 0
   445  0000BE                     ___ftpack@sign:
   446                           	opt stack 0
   447  0000BE                     ___lbdiv@quotient:
   448                           	opt stack 0
   449  0000BE                     delay_ms@temp:
   450                           	opt stack 0
   451  0000BE                     ___wmul@product:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x4
   455  0000BE                     	ds	1
   456  0000BF                     ??_check_comutest:
   457  0000BF                     ??_check_program_0:
   458  0000BF                     ??___ftpack:
   459  0000BF                     ??_eeprom_read_array:
   460  0000BF                     eeprom_write_array@NbData:
   461                           	opt stack 0
   462  0000BF                     bouton_refresh@i:
   463                           	opt stack 0
   464  0000BF                     ___awmod@counter:
   465                           	opt stack 0
   466  0000BF                     ___lwdiv@counter:
   467                           	opt stack 0
   468  0000BF                     ___lwmod@counter:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x5
   472  0000BF                     	ds	1
   473  0000C0                     ??_eeprom_write_array:
   474  0000C0                     ??_cf_checkout:
   475  0000C0                     ?_ana_read:
   476                           	opt stack 0
   477  0000C0                     eeprom_read_array@i:
   478                           	opt stack 0
   479  0000C0                     check_comutest@State:
   480                           	opt stack 0
   481  0000C0                     check_program_0@ret:
   482                           	opt stack 0
   483  0000C0                     feu_tir@Output:
   484                           	opt stack 0
   485  0000C0                     ___awmod@sign:
   486                           	opt stack 0
   487  0000C0                     ___lwdiv@quotient:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x6
   491  0000C0                     	ds	1
   492  0000C1                     ??_micro_wait:
   493  0000C1                     ??_feu_process:
   494  0000C1                     ?_DecToStr:
   495                           	opt stack 0
   496  0000C1                     eeprom_write_array@i:
   497                           	opt stack 0
   498  0000C1                     cf_checkout@valid:
   499                           	opt stack 0
   500  0000C1                     DecToStr@result:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x7
   504  0000C1                     	ds	1
   505  0000C2                     ??_ana_read:
   506  0000C2                     ?___lwtoft:
   507                           	opt stack 0
   508  0000C2                     cf_checkout@last_out:
   509                           	opt stack 0
   510  0000C2                     utoa@buf:
   511                           	opt stack 0
   512  0000C2                     ___lwtoft@c:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x8
   516  0000C2                     	ds	1
   517  0000C3                     ??_DecToStr:
   518  0000C3                     cf_checkout@i:
   519                           	opt stack 0
   520  0000C3                     ana_read@ANx:
   521                           	opt stack 0
   522  0000C3                     ___fttol@sign1:
   523                           	opt stack 0
   524  0000C3                     micro_wait@tempTime:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x9
   528  0000C3                     	ds	1
   529  0000C4                     ana_read@temp:
   530                           	opt stack 0
   531  0000C4                     utoa@val:
   532                           	opt stack 0
   533  0000C4                     ___fttol@lval:
   534                           	opt stack 0
   535                           
   536                           ; 4 bytes @ 0xA
   537  0000C4                     	ds	1
   538  0000C5                     ??___lwtoft:
   539  0000C5                     _micro_wait$2387:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0xB
   543  0000C5                     	ds	1
   544  0000C6                     cf_checksum@valid:
   545                           	opt stack 0
   546  0000C6                     utoa@base:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0xC
   550  0000C6                     	ds	1
   551  0000C7                     ?___ftmul:
   552                           	opt stack 0
   553  0000C7                     cf_checksum@i:
   554                           	opt stack 0
   555  0000C7                     DecToStr@compareValue:
   556                           	opt stack 0
   557  0000C7                     ___ftmul@f1:
   558                           	opt stack 0
   559                           
   560                           ; 3 bytes @ 0xD
   561  0000C7                     	ds	1
   562  0000C8                     ___fttol@exp1:
   563                           	opt stack 0
   564  0000C8                     utoa@v:
   565                           	opt stack 0
   566  0000C8                     cf_checksum@calcul:
   567                           	opt stack 0
   568                           
   569                           ; 4 bytes @ 0xE
   570  0000C8                     	ds	1
   571  0000C9                     DecToStr@value:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0xF
   575  0000C9                     	ds	1
   576  0000CA                     DecToStr@power10:
   577                           	opt stack 0
   578  0000CA                     utoa@c:
   579                           	opt stack 0
   580  0000CA                     ___ftmul@f2:
   581                           	opt stack 0
   582                           
   583                           ; 3 bytes @ 0x10
   584  0000CA                     	ds	1
   585  0000CB                     ??_ecran_print_num:
   586  0000CB                     itoa@buf:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0x11
   590  0000CB                     	ds	1
   591  0000CC                     ??_cf_check:
   592  0000CC                     ecran_print_num@Num:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x12
   596  0000CC                     	ds	1
   597  0000CD                     ??___ftmul:
   598  0000CD                     cf_check@valid:
   599                           	opt stack 0
   600  0000CD                     ecran_print_num@tempStr:
   601                           	opt stack 0
   602  0000CD                     itoa@val:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x13
   606  0000CD                     	ds	1
   607  0000CE                     ??_cf_check_and_display:
   608  0000CE                     ??_cf_rcv:
   609                           
   610                           ; 0 bytes @ 0x14
   611  0000CE                     	ds	1
   612  0000CF                     ??_feu_check_bp:
   613  0000CF                     itoa@base:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x15
   617  0000CF                     	ds	1
   618  0000D0                     cf_rcv@temp:
   619                           	opt stack 0
   620  0000D0                     ___ftmul@exp:
   621                           	opt stack 0
   622  0000D0                     cf_check_and_display@temp:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x16
   626  0000D0                     	ds	1
   627  0000D1                     cf_rcv@i:
   628                           	opt stack 0
   629  0000D1                     itoa@cp:
   630                           	opt stack 0
   631  0000D1                     ___ftmul@f3_as_product:
   632                           	opt stack 0
   633                           
   634                           ; 3 bytes @ 0x17
   635  0000D1                     	ds	1
   636  0000D2                     ??_check_idtest:
   637  0000D2                     cf_check_and_display@configOk:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x18
   641  0000D2                     	ds	2
   642  0000D4                     ___ftmul@cntr:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x1A
   646  0000D4                     	ds	1
   647  0000D5                     ___ftmul@sign:
   648                           	opt stack 0
   649                           
   650                           ; 1 bytes @ 0x1B
   651  0000D5                     	ds	1
   652  0000D6                     ?_check_UAlim:
   653                           	opt stack 0
   654  0000D6                     ?_check_UInfla:
   655                           	opt stack 0
   656  0000D6                     ?_arm_UAlim_1A:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0x1C
   660  0000D6                     	ds	2
   661  0000D8                     ??_check_UAlim:
   662  0000D8                     ??_check_UInfla:
   663  0000D8                     ??_arm_UAlim_1A:
   664                           
   665                           ; 0 bytes @ 0x1E
   666  0000D8                     	ds	4
   667  0000DC                     check_UAlim@temp:
   668                           	opt stack 0
   669  0000DC                     check_UInfla@temp:
   670                           	opt stack 0
   671  0000DC                     arm_UAlim_1A@temp:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x22
   675  0000DC                     	ds	2
   676  0000DE                     ??_test_process:
   677  0000DE                     ??_armement_process:
   678                           
   679                           ; 0 bytes @ 0x24
   680  0000DE                     	ds	2
   681  0000E0                     test_process@ret:
   682                           	opt stack 0
   683  0000E0                     armement_process@temp:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0x26
   687  0000E0                     	ds	1
   688  0000E1                     test_process@temp:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x27
   692  0000E1                     	ds	2
   693  0000E3                     ??_main:
   694                           
   695                           ; 0 bytes @ 0x29
   696  0000E3                     	ds	1
   697  0000E4                     main@cpt:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x2A
   701  0000E4                     	ds	1
   702                           tblptru	equ	0xFF8
   703                           tblptrh	equ	0xFF7
   704                           tblptrl	equ	0xFF6
   705                           tablat	equ	0xFF5
   706                           postinc0	equ	0xFEE
   707                           wreg	equ	0xFE8
   708                           postdec1	equ	0xFE5
   709                           fsr1l	equ	0xFE1
   710                           
   711                           	psect	cstackCOMRAM
   712  000001                     __pcstackCOMRAM:
   713                           	opt stack 0
   714  000001                     ?___awdiv:
   715                           	opt stack 0
   716  000001                     ___awdiv@dividend:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0x0
   720  000001                     	ds	2
   721  000003                     ___awdiv@divisor:
   722                           	opt stack 0
   723                           
   724                           ; 2 bytes @ 0x2
   725  000003                     	ds	2
   726  000005                     ??___awdiv:
   727                           
   728                           ; 0 bytes @ 0x4
   729  000005                     	ds	1
   730  000006                     ___awdiv@counter:
   731                           	opt stack 0
   732                           
   733                           ; 1 bytes @ 0x5
   734  000006                     	ds	1
   735  000007                     ___awdiv@sign:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x6
   739  000007                     	ds	1
   740  000008                     ___awdiv@quotient:
   741                           	opt stack 0
   742                           
   743                           ; 2 bytes @ 0x7
   744  000008                     	ds	2
   745  00000A                     ??_High_priority:
   746                           
   747                           ; 0 bytes @ 0x9
   748  00000A                     	ds	19
   749  00001D                     ??_Low_priority:
   750                           
   751                           ; 0 bytes @ 0x1C
   752  00001D                     	ds	17
   753                           tblptru	equ	0xFF8
   754                           tblptrh	equ	0xFF7
   755                           tblptrl	equ	0xFF6
   756                           tablat	equ	0xFF5
   757                           postinc0	equ	0xFEE
   758                           wreg	equ	0xFE8
   759                           postdec1	equ	0xFE5
   760                           fsr1l	equ	0xFE1
   761                           
   762 ;;
   763 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   764 ;;
   765 ;; *************** function _main *****************
   766 ;; Defined at:
   767 ;;		line 132 in file "main.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  cpt             1   42[BANK0 ] unsigned char 
   772 ;;  temp            1    0        unsigned char 
   773 ;;  i               1    0        unsigned char 
   774 ;; Return value:  Size  Location     Type
   775 ;;		None               void
   776 ;; Registers used:
   777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   783 ;;      Params:         0       0       0       0       0       0       0
   784 ;;      Locals:         0       1       0       0       0       0       0
   785 ;;      Temps:          0       1       0       0       0       0       0
   786 ;;      Totals:         0       2       0       0       0       0       0
   787 ;;Total ram usage:        2 bytes
   788 ;; Hardware stack levels required when called:    8
   789 ;; This function calls:
   790 ;;		_armement_process
   791 ;;		_bouton_init
   792 ;;		_bouton_refresh
   793 ;;		_cf_check_and_display
   794 ;;		_check_bpon
   795 ;;		_check_comutest
   796 ;;		_check_idtest
   797 ;;		_check_program_0
   798 ;;		_ecran_refresh
   799 ;;		_feu_check_bp
   800 ;;		_feu_process
   801 ;;		_hw_config
   802 ;;		_micro_config
   803 ;;		_micro_wait
   804 ;;		_test_process
   805 ;; This function is called by:
   806 ;;		Startup code after reset
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text0
   811  00308A                     __ptext0:
   812                           	opt stack 0
   813  00308A                     _main:
   814                           	opt stack 23
   815                           
   816                           ;incstack = 0
   817  00308A  FFFF               	dw	65535
   818                           
   819                           ;main.c: 134: unsigned char i, temp, cpt = 0;
   820  00308C  0100               	movlb	0	; () banked
   821  00308E  6FE3               	movwf	??_main& (0+255),b
   822  003090  0E00               	movlw	0
   823  003092  0100               	movlb	0	; () banked
   824  003094  0100               	movlb	0	; () banked
   825  003096  6FE4               	movwf	main@cpt& (0+255),b
   826  003098  0100               	movlb	0	; () banked
   827  00309A  51E3               	movf	??_main& (0+255),w,b
   828                           
   829                           ; BSR set to: 0
   830                           ;main.c: 137: hw_config();
   831  00309C  EC1D  F019         	call	_hw_config	;wreg free
   832                           
   833                           ;main.c: 138: micro_config();
   834  0030A0  EC5F  F01B         	call	_micro_config	;wreg free
   835                           
   836                           ;main.c: 141: check_comutest(0);
   837  0030A4  0E00               	movlw	0
   838  0030A6  ECA5  F019         	call	_check_comutest
   839                           
   840                           ;main.c: 144: if (check_program_0() == 0)
   841  0030AA  EC7B  F019         	call	_check_program_0	;wreg free
   842  0030AE  0900               	iorlw	0
   843  0030B0  A4D8               	btfss	status,2,c
   844  0030B2  D006               	goto	l7054
   845                           
   846                           ;main.c: 145: {
   847                           ;main.c: 147: check_idtest();
   848  0030B4  EC77  F01B         	call	_check_idtest	;wreg free
   849                           
   850                           ;main.c: 150: check_bpon();
   851  0030B8  EC4D  F019         	call	_check_bpon	;wreg free
   852                           
   853                           ;main.c: 153: cf_check_and_display();
   854  0030BC  ECF5  F00D         	call	_cf_check_and_display	;wreg free
   855  0030C0                     l7054:
   856                           
   857                           ;main.c: 154: }
   858                           ;main.c: 156: bouton_init();
   859  0030C0  EC6E  F01A         	call	_bouton_init	;wreg free
   860  0030C4                     l7056:
   861                           
   862                           ;main.c: 159: {
   863                           ;main.c: 160: bouton_refresh();
   864  0030C4  EC64  F009         	call	_bouton_refresh	;wreg free
   865                           
   866                           ;main.c: 161: ecran_refresh();
   867  0030C8  EC7C  F016         	call	_ecran_refresh	;wreg free
   868                           
   869                           ;main.c: 163: switch (Micro.Phase)
   870  0030CC  D00E               	goto	l7070
   871  0030CE                     l7060:
   872                           
   873                           ;main.c: 166: micro_wait();
   874  0030CE  ECC8  F010         	call	_micro_wait	;wreg free
   875                           
   876                           ;main.c: 167: break;
   877  0030D2  D7F8               	goto	l7056
   878  0030D4                     l7062:
   879                           
   880                           ;main.c: 169: test_process();
   881  0030D4  EC0B  F003         	call	_test_process	;wreg free
   882                           
   883                           ;main.c: 170: break;
   884  0030D8  D7F5               	goto	l7056
   885  0030DA                     l7064:
   886                           
   887                           ;main.c: 172: armement_process();
   888  0030DA  EC2A  F00D         	call	_armement_process	;wreg free
   889                           
   890                           ;main.c: 173: break;
   891  0030DE  D7F2               	goto	l7056
   892  0030E0                     l7066:
   893                           
   894                           ;main.c: 175: feu_process();
   895  0030E0  ECFE  F007         	call	_feu_process	;wreg free
   896                           
   897                           ;main.c: 176: feu_check_bp();
   898  0030E4  EC7E  F00A         	call	_feu_check_bp	;wreg free
   899                           
   900                           ;main.c: 177: break;
   901  0030E8  D7ED               	goto	l7056
   902  0030EA                     l7070:
   903  0030EA  5054               	movf	_Micro+2,w,c
   904                           
   905                           ; Switch size 1, requested type "space"
   906                           ; Number of cases is 4, Range of values is 0 to 3
   907                           ; switch strategies available:
   908                           ; Name         Instructions Cycles
   909                           ; simple_byte           13     7 (average)
   910                           ;	Chosen strategy is simple_byte
   911  0030EC  0A00               	xorlw	0	; case 0
   912  0030EE  B4D8               	btfsc	status,2,c
   913  0030F0  D7EE               	goto	l7060
   914  0030F2  0A01               	xorlw	1	; case 1
   915  0030F4  B4D8               	btfsc	status,2,c
   916  0030F6  D7EE               	goto	l7062
   917  0030F8  0A03               	xorlw	3	; case 2
   918  0030FA  B4D8               	btfsc	status,2,c
   919  0030FC  D7EE               	goto	l7064
   920  0030FE  0A01               	xorlw	1	; case 3
   921  003100  B4D8               	btfsc	status,2,c
   922  003102  D7EE               	goto	l7066
   923  003104  D7DF               	goto	l7056
   924  003106                     __end_of_main:
   925                           	opt stack 0
   926                           tblptru	equ	0xFF8
   927                           tblptrh	equ	0xFF7
   928                           tblptrl	equ	0xFF6
   929                           tablat	equ	0xFF5
   930                           postinc0	equ	0xFEE
   931                           wreg	equ	0xFE8
   932                           postdec1	equ	0xFE5
   933                           fsr1l	equ	0xFE1
   934                           status	equ	0xFD8
   935                           
   936 ;; *************** function _test_process *****************
   937 ;; Defined at:
   938 ;;		line 102 in file "test.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  temp            2   39[BANK0 ] unsigned short 
   943 ;;  ret             1   38[BANK0 ] unsigned char 
   944 ;;  i               1    0        unsigned char 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      unsigned char 
   947 ;; Registers used:
   948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   954 ;;      Params:         0       0       0       0       0       0       0
   955 ;;      Locals:         0       3       0       0       0       0       0
   956 ;;      Temps:          0       2       0       0       0       0       0
   957 ;;      Totals:         0       5       0       0       0       0       0
   958 ;;Total ram usage:        5 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    7
   961 ;; This function calls:
   962 ;;		_check_UAlim
   963 ;;		_check_UInfla
   964 ;;		_check_comutest
   965 ;;		_ecran_blank
   966 ;;		_ecran_print_num
   967 ;;		_ecran_wait
   968 ;;		_itoa
   969 ;;		_register_write
   970 ;; This function is called by:
   971 ;;		_main
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text1
   976  000616                     __ptext1:
   977                           	opt stack 0
   978  000616                     _test_process:
   979                           	opt stack 23
   980                           
   981                           ;incstack = 0
   982  000616  FFFF               	dw	65535
   983                           
   984                           ;test.c: 104: unsigned short temp;
   985                           ;test.c: 105: unsigned char i, ret = 0;
   986  000618  0100               	movlb	0	; () banked
   987  00061A  6FDE               	movwf	??_test_process& (0+255),b
   988  00061C  0E00               	movlw	0
   989  00061E  0100               	movlb	0	; () banked
   990  000620  0100               	movlb	0	; () banked
   991  000622  6FE0               	movwf	test_process@ret& (0+255),b
   992  000624  0100               	movlb	0	; () banked
   993  000626  51DE               	movf	??_test_process& (0+255),w,b
   994                           
   995                           ;test.c: 107: switch(Test.Step)
   996  000628  D30D               	goto	l6838
   997  00062A                     l564:
   998                           
   999                           ; BSR set to: 0
  1000                           ;test.c: 110: if (Bouton[Bp_IdTest].State == 1)
  1001  00062A  0100               	movlb	0	; () banked
  1002  00062C  A393               	btfss	(_Bouton+5)& (0+255),1,b
  1003  00062E  D344               	goto	l624
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;test.c: 111: {
  1007                           ;test.c: 112: Test.Step = 0x02;
  1008  000630  0100               	movlb	0	; () banked
  1009  000632  6FDE               	movwf	??_test_process& (0+255),b
  1010  000634  0E02               	movlw	2
  1011  000636  D2D2               	goto	L16
  1012  000638                     l6644:
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;test.c: 117: check_comutest(0);
  1016  000638  0E00               	movlw	0
  1017  00063A  ECA5  F019         	call	_check_comutest
  1018                           
  1019                           ;test.c: 119: Test.Cpt = 0;
  1020  00063E  0100               	movlb	0	; () banked
  1021  000640  6FDE               	movwf	??_test_process& (0+255),b
  1022  000642  0E00               	movlw	0
  1023  000644  6E2F               	movwf	_Test+1,c
  1024  000646  0100               	movlb	0	; () banked
  1025  000648  51DE               	movf	??_test_process& (0+255),w,b
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;test.c: 121: temp = check_UAlim();
  1029  00064A  EC3D  F015         	call	_check_UAlim	;wreg free
  1030  00064E  0100               	movlb	0	; () banked
  1031  000650  C0D6  F0E1         	movff	?_check_UAlim,test_process@temp
  1032  000654  0100               	movlb	0	; () banked
  1033  000656  C0D7  F0E2         	movff	?_check_UAlim+1,test_process@temp+1
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;test.c: 123: Ecran.Digits = PrintTest;
  1037  00065A  0100               	movlb	0	; () banked
  1038  00065C  0E00               	movlw	high _PrintTest
  1039  00065E  0100               	movlb	0	; () banked
  1040  000660  0100               	movlb	0	; () banked
  1041  000662  6FAF               	movwf	(_Ecran+5)& (0+255),b
  1042  000664  0100               	movlb	0	; () banked
  1043  000666  0EE5               	movlw	low _PrintTest
  1044  000668  0100               	movlb	0	; () banked
  1045  00066A  0100               	movlb	0	; () banked
  1046  00066C  6FAE               	movwf	(_Ecran+4)& (0+255),b
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;test.c: 125: itoa(Ecran.Digits,temp,10);
  1050  00066E  0100               	movlb	0	; () banked
  1051  000670  0100               	movlb	0	; () banked
  1052  000672  C0AF  F0CC         	movff	_Ecran+5,itoa@buf+1
  1053  000676  0100               	movlb	0	; () banked
  1054  000678  0100               	movlb	0	; () banked
  1055  00067A  C0AE  F0CB         	movff	_Ecran+4,itoa@buf
  1056  00067E  C0E1  F0CD         	movff	test_process@temp,itoa@val
  1057  000682  C0E2  F0CE         	movff	test_process@temp+1,itoa@val+1
  1058  000686  0E00               	movlw	0
  1059  000688  0100               	movlb	0	; () banked
  1060  00068A  0100               	movlb	0	; () banked
  1061  00068C  6FD0               	movwf	(itoa@base+1)& (0+255),b
  1062  00068E  0E0A               	movlw	10
  1063  000690  0100               	movlb	0	; () banked
  1064  000692  6FCF               	movwf	itoa@base& (0+255),b
  1065  000694  EC2C  F017         	call	_itoa	;wreg free
  1066                           
  1067                           ;test.c: 127: Ecran.Dot[0] = 0;
  1068  000698  0100               	movlb	0	; () banked
  1069  00069A  6FDE               	movwf	??_test_process& (0+255),b
  1070  00069C  0E00               	movlw	0
  1071  00069E  0100               	movlb	0	; () banked
  1072  0006A0  0100               	movlb	0	; () banked
  1073  0006A2  6FB0               	movwf	(_Ecran+6)& (0+255),b
  1074  0006A4  0100               	movlb	0	; () banked
  1075  0006A6  51DE               	movf	??_test_process& (0+255),w,b
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;test.c: 128: Ecran.Dot[1] = 1;
  1079  0006A8  0100               	movlb	0	; () banked
  1080  0006AA  6FDE               	movwf	??_test_process& (0+255),b
  1081  0006AC  0E01               	movlw	1
  1082  0006AE  0100               	movlb	0	; () banked
  1083  0006B0  0100               	movlb	0	; () banked
  1084  0006B2  6FB1               	movwf	(_Ecran+7)& (0+255),b
  1085  0006B4  0100               	movlb	0	; () banked
  1086  0006B6  51DE               	movf	??_test_process& (0+255),w,b
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;test.c: 129: Ecran.Dot[2] = 0;
  1090  0006B8  0100               	movlb	0	; () banked
  1091  0006BA  6FDE               	movwf	??_test_process& (0+255),b
  1092  0006BC  0E00               	movlw	0
  1093  0006BE  0100               	movlb	0	; () banked
  1094  0006C0  0100               	movlb	0	; () banked
  1095  0006C2  6FB2               	movwf	(_Ecran+8)& (0+255),b
  1096  0006C4  0100               	movlb	0	; () banked
  1097  0006C6  51DE               	movf	??_test_process& (0+255),w,b
  1098                           
  1099                           ; BSR set to: 0
  1100                           ;test.c: 130: Ecran.Dot[3] = 0;
  1101  0006C8  0100               	movlb	0	; () banked
  1102  0006CA  6FDE               	movwf	??_test_process& (0+255),b
  1103  0006CC  0E00               	movlw	0
  1104  0006CE  0100               	movlb	0	; () banked
  1105  0006D0  0100               	movlb	0	; () banked
  1106  0006D2  6FB3               	movwf	(_Ecran+9)& (0+255),b
  1107  0006D4  0100               	movlb	0	; () banked
  1108  0006D6  51DE               	movf	??_test_process& (0+255),w,b
  1109                           
  1110                           ; BSR set to: 0
  1111                           ;test.c: 132: Test.Step = 0x03;
  1112  0006D8  0100               	movlb	0	; () banked
  1113  0006DA  6FDE               	movwf	??_test_process& (0+255),b
  1114  0006DC  0E03               	movlw	3
  1115  0006DE  D27E               	goto	L16
  1116  0006E0                     l568:
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;test.c: 135: if (Bouton[Bp_IdTest].State == 0)
  1120  0006E0  0100               	movlb	0	; () banked
  1121  0006E2  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  1122  0006E4  D2E9               	goto	l624
  1123                           
  1124                           ; BSR set to: 0
  1125                           ;test.c: 136: {
  1126                           ;test.c: 137: if (Micro.Mod.P_0 == 0) {Test.Step = 0x04;}
  1127  0006E6  B057               	btfsc	_Micro+5,0,c
  1128  0006E8  D004               	goto	l6668
  1129                           
  1130                           ; BSR set to: 0
  1131  0006EA  0100               	movlb	0	; () banked
  1132  0006EC  6FDE               	movwf	??_test_process& (0+255),b
  1133  0006EE  0E04               	movlw	4
  1134  0006F0  D003               	goto	L3
  1135  0006F2                     l6668:
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;test.c: 138: else {Test.Step = 0x0A;}
  1139  0006F2  0100               	movlb	0	; () banked
  1140  0006F4  6FDE               	movwf	??_test_process& (0+255),b
  1141  0006F6  0E0A               	movlw	10
  1142  0006F8                     L3:
  1143  0006F8  6E2E               	movwf	_Test,c
  1144  0006FA  0100               	movlb	0	; () banked
  1145  0006FC  51DE               	movf	??_test_process& (0+255),w,b
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;test.c: 140: ecran_blank();
  1149                           
  1150                           ; BSR set to: 0
  1151  0006FE  ECEA  F018         	call	_ecran_blank	;wreg free
  1152                           
  1153                           ;test.c: 141: check_comutest(0);
  1154  000702  0E00               	movlw	0
  1155  000704  ECA5  F019         	call	_check_comutest
  1156  000708  D17C               	goto	L15
  1157  00070A                     l6676:
  1158                           
  1159                           ;test.c: 146: if (Cf.Data[Test.Cpt*3] == 0)
  1160  00070A  502F               	movf	_Test+1,w,c
  1161  00070C  0D03               	mullw	3
  1162  00070E  0101               	movlb	1	; () banked
  1163  000710  0E00               	movlw	low _Cf	;volatile
  1164  000712  24F3               	addwf	prodl,w,c
  1165  000714  6ED9               	movwf	fsr2l,c
  1166  000716  0101               	movlb	1	; () banked
  1167  000718  0E01               	movlw	high _Cf	;volatile
  1168  00071A  20F4               	addwfc	prodh,w,c
  1169  00071C  6EDA               	movwf	fsr2h,c
  1170  00071E  50DF               	movf	indf2,w,c
  1171  000720  A4D8               	btfss	status,2,c
  1172  000722  D004               	goto	l6680
  1173                           
  1174                           ; BSR set to: 1
  1175                           ;test.c: 147: {
  1176                           ;test.c: 149: Test.Step = 0x08;
  1177  000724  0100               	movlb	0	; () banked
  1178  000726  6FDE               	movwf	??_test_process& (0+255),b
  1179  000728  0E08               	movlw	8
  1180  00072A  D258               	goto	L16
  1181  00072C                     l6680:
  1182                           
  1183                           ;test.c: 151: else if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1184  00072C  EE20  F030         	lfsr	2,_Test+2
  1185  000730  CFDE F0DE          	movff	postinc2,??_test_process
  1186  000734  CFDD F0DF          	movff	postdec2,??_test_process+1
  1187  000738  0100               	movlb	0	; () banked
  1188  00073A  1FDE               	comf	??_test_process& (0+255),f,b
  1189  00073C  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1190  00073E  4BDE               	infsnz	??_test_process& (0+255),f,b
  1191  000740  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1192  000742  504F               	movf	_Cptms,w,c	;volatile
  1193  000744  0100               	movlb	0	; () banked
  1194  000746  27DE               	addwf	??_test_process& (0+255),f,b
  1195  000748  5050               	movf	_Cptms+1,w,c	;volatile
  1196  00074A  0100               	movlb	0	; () banked
  1197  00074C  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1198  00074E  0E15               	movlw	21
  1199  000750  0100               	movlb	0	; () banked
  1200  000752  5DDE               	subwf	??_test_process& (0+255),w,b
  1201  000754  0E00               	movlw	0
  1202  000756  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1203  000758  A0D8               	btfss	status,0,c
  1204  00075A  D2AE               	goto	l624
  1205                           
  1206                           ; BSR set to: 0
  1207                           ;test.c: 152: {
  1208                           ;test.c: 153: if (Cf.Data[Test.Cpt*3] == 99)
  1209  00075C  502F               	movf	_Test+1,w,c
  1210  00075E  0D03               	mullw	3
  1211  000760  0101               	movlb	1	; () banked
  1212  000762  0E00               	movlw	low _Cf	;volatile
  1213  000764  24F3               	addwf	prodl,w,c
  1214  000766  6ED9               	movwf	fsr2l,c
  1215  000768  0101               	movlb	1	; () banked
  1216  00076A  0E01               	movlw	high _Cf	;volatile
  1217  00076C  20F4               	addwfc	prodh,w,c
  1218  00076E  6EDA               	movwf	fsr2h,c
  1219  000770  0E63               	movlw	99
  1220  000772  62DF               	cpfseq	indf2,c
  1221  000774  D004               	goto	l6686
  1222                           
  1223                           ; BSR set to: 1
  1224                           ;test.c: 154: {
  1225                           ;test.c: 155: Test.Step = 0x15;
  1226  000776  0100               	movlb	0	; () banked
  1227  000778  6FDE               	movwf	??_test_process& (0+255),b
  1228  00077A  0E15               	movlw	21
  1229  00077C  D010               	goto	L5
  1230  00077E                     l6686:
  1231                           
  1232                           ;test.c: 157: else
  1233                           ;test.c: 158: {
  1234                           ;test.c: 159: register_write(Cf.Data[Test.Cpt*3]);
  1235  00077E  502F               	movf	_Test+1,w,c
  1236  000780  0D03               	mullw	3
  1237  000782  0101               	movlb	1	; () banked
  1238  000784  0E00               	movlw	low _Cf	;volatile
  1239  000786  24F3               	addwf	prodl,w,c
  1240  000788  6ED9               	movwf	fsr2l,c
  1241  00078A  0101               	movlb	1	; () banked
  1242  00078C  0E01               	movlw	high _Cf	;volatile
  1243  00078E  20F4               	addwfc	prodh,w,c
  1244  000790  6EDA               	movwf	fsr2h,c
  1245  000792  50DF               	movf	indf2,w,c
  1246  000794  EC47  F01A         	call	_register_write
  1247                           
  1248                           ;test.c: 160: Test.Step = 0x05;
  1249  000798  0100               	movlb	0	; () banked
  1250  00079A  6FDE               	movwf	??_test_process& (0+255),b
  1251  00079C  0E05               	movlw	5
  1252  00079E                     L5:
  1253  00079E  6E2E               	movwf	_Test,c
  1254  0007A0  0100               	movlb	0	; () banked
  1255  0007A2  51DE               	movf	??_test_process& (0+255),w,b
  1256                           
  1257                           ; BSR set to: 0
  1258  0007A4  D12E               	goto	L15
  1259  0007A6                     l6692:
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;test.c: 166: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1263  0007A6  EE20  F030         	lfsr	2,_Test+2
  1264  0007AA  CFDE F0DE          	movff	postinc2,??_test_process
  1265  0007AE  CFDD F0DF          	movff	postdec2,??_test_process+1
  1266  0007B2  0100               	movlb	0	; () banked
  1267  0007B4  1FDE               	comf	??_test_process& (0+255),f,b
  1268  0007B6  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1269  0007B8  4BDE               	infsnz	??_test_process& (0+255),f,b
  1270  0007BA  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1271  0007BC  504F               	movf	_Cptms,w,c	;volatile
  1272  0007BE  0100               	movlb	0	; () banked
  1273  0007C0  27DE               	addwf	??_test_process& (0+255),f,b
  1274  0007C2  5050               	movf	_Cptms+1,w,c	;volatile
  1275  0007C4  0100               	movlb	0	; () banked
  1276  0007C6  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1277  0007C8  0E15               	movlw	21
  1278  0007CA  0100               	movlb	0	; () banked
  1279  0007CC  5DDE               	subwf	??_test_process& (0+255),w,b
  1280  0007CE  0E00               	movlw	0
  1281  0007D0  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1282  0007D2  A0D8               	btfss	status,0,c
  1283  0007D4  D271               	goto	l624
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;test.c: 167: {
  1287                           ;test.c: 168: temp = check_UInfla();
  1288  0007D6  EC3D  F014         	call	_check_UInfla	;wreg free
  1289  0007DA  0100               	movlb	0	; () banked
  1290  0007DC  C0D6  F0E1         	movff	?_check_UInfla,test_process@temp
  1291  0007E0  0100               	movlb	0	; () banked
  1292  0007E2  C0D7  F0E2         	movff	?_check_UInfla+1,test_process@temp+1
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;test.c: 170: if (temp > 85) {Test.Step = 0x07;}
  1296  0007E6  0E56               	movlw	86
  1297  0007E8  0100               	movlb	0	; () banked
  1298  0007EA  0100               	movlb	0	; () banked
  1299  0007EC  5DE1               	subwf	test_process@temp& (0+255),w,b
  1300  0007EE  0E00               	movlw	0
  1301  0007F0  0100               	movlb	0	; () banked
  1302  0007F2  59E2               	subwfb	(test_process@temp+1)& (0+255),w,b
  1303  0007F4  A0D8               	btfss	status,0,c
  1304  0007F6  D004               	goto	l6700
  1305                           
  1306                           ; BSR set to: 0
  1307  0007F8  0100               	movlb	0	; () banked
  1308  0007FA  6FDE               	movwf	??_test_process& (0+255),b
  1309  0007FC  0E07               	movlw	7
  1310  0007FE  D003               	goto	L7
  1311  000800                     l6700:
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;test.c: 171: else {Test.Step = 0x06;}
  1315  000800  0100               	movlb	0	; () banked
  1316  000802  6FDE               	movwf	??_test_process& (0+255),b
  1317  000804  0E06               	movlw	6
  1318  000806                     L7:
  1319  000806  6E2E               	movwf	_Test,c
  1320  000808  0100               	movlb	0	; () banked
  1321  00080A  51DE               	movf	??_test_process& (0+255),w,b
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;test.c: 174: ecran_print_num(Cf.Data[Test.Cpt*3]);
  1325                           
  1326                           ; BSR set to: 0
  1327  00080C  502F               	movf	_Test+1,w,c
  1328  00080E  0D03               	mullw	3
  1329  000810  0101               	movlb	1	; () banked
  1330  000812  0E00               	movlw	low _Cf	;volatile
  1331  000814  24F3               	addwf	prodl,w,c
  1332  000816  6ED9               	movwf	fsr2l,c
  1333  000818  0101               	movlb	1	; () banked
  1334  00081A  0E01               	movlw	high _Cf	;volatile
  1335  00081C  20F4               	addwfc	prodh,w,c
  1336  00081E  6EDA               	movwf	fsr2h,c
  1337  000820  50DF               	movf	indf2,w,c
  1338  000822  ECBA  F015         	call	_ecran_print_num
  1339                           
  1340                           ;test.c: 175: register_write(0);
  1341  000826  0E00               	movlw	0
  1342  000828  EC47  F01A         	call	_register_write
  1343  00082C  D0EA               	goto	L15
  1344  00082E                     l6708:
  1345                           
  1346                           ;test.c: 182: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1347  00082E  EE20  F030         	lfsr	2,_Test+2
  1348  000832  CFDE F0DE          	movff	postinc2,??_test_process
  1349  000836  CFDD F0DF          	movff	postdec2,??_test_process+1
  1350  00083A  0100               	movlb	0	; () banked
  1351  00083C  1FDE               	comf	??_test_process& (0+255),f,b
  1352  00083E  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1353  000840  4BDE               	infsnz	??_test_process& (0+255),f,b
  1354  000842  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1355  000844  504F               	movf	_Cptms,w,c	;volatile
  1356  000846  0100               	movlb	0	; () banked
  1357  000848  27DE               	addwf	??_test_process& (0+255),f,b
  1358  00084A  5050               	movf	_Cptms+1,w,c	;volatile
  1359  00084C  0100               	movlb	0	; () banked
  1360  00084E  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1361  000850  0E15               	movlw	21
  1362  000852  0100               	movlb	0	; () banked
  1363  000854  5DDE               	subwf	??_test_process& (0+255),w,b
  1364  000856  0E00               	movlw	0
  1365  000858  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1366  00085A  A0D8               	btfss	status,0,c
  1367  00085C  D22D               	goto	l624
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;test.c: 183: {
  1371                           ;test.c: 184: Test.Step = 0x16;
  1372  00085E  0100               	movlb	0	; () banked
  1373  000860  6FDE               	movwf	??_test_process& (0+255),b
  1374  000862  0E16               	movlw	22
  1375  000864  6E2E               	movwf	_Test,c
  1376  000866  0100               	movlb	0	; () banked
  1377  000868  51DE               	movf	??_test_process& (0+255),w,b
  1378                           
  1379                           ; BSR set to: 0
  1380                           ;test.c: 187: ecran_print_num(Cf.Data[Test.Cpt*3]);
  1381  00086A  502F               	movf	_Test+1,w,c
  1382  00086C  0D03               	mullw	3
  1383  00086E  0101               	movlb	1	; () banked
  1384  000870  0E00               	movlw	low _Cf	;volatile
  1385  000872  24F3               	addwf	prodl,w,c
  1386  000874  6ED9               	movwf	fsr2l,c
  1387  000876  0101               	movlb	1	; () banked
  1388  000878  0E01               	movlw	high _Cf	;volatile
  1389  00087A  20F4               	addwfc	prodh,w,c
  1390  00087C  6EDA               	movwf	fsr2h,c
  1391  00087E  50DF               	movf	indf2,w,c
  1392  000880  ECBA  F015         	call	_ecran_print_num
  1393  000884  D0BE               	goto	L15
  1394  000886                     l6716:
  1395                           
  1396                           ;test.c: 192: if ((((unsigned short) (Cptms - Test.Time) > 100) ? 1 : 0))
  1397  000886  EE20  F030         	lfsr	2,_Test+2
  1398  00088A  CFDE F0DE          	movff	postinc2,??_test_process
  1399  00088E  CFDD F0DF          	movff	postdec2,??_test_process+1
  1400  000892  0100               	movlb	0	; () banked
  1401  000894  1FDE               	comf	??_test_process& (0+255),f,b
  1402  000896  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1403  000898  4BDE               	infsnz	??_test_process& (0+255),f,b
  1404  00089A  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1405  00089C  504F               	movf	_Cptms,w,c	;volatile
  1406  00089E  0100               	movlb	0	; () banked
  1407  0008A0  27DE               	addwf	??_test_process& (0+255),f,b
  1408  0008A2  5050               	movf	_Cptms+1,w,c	;volatile
  1409  0008A4  0100               	movlb	0	; () banked
  1410  0008A6  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1411  0008A8  0E65               	movlw	101
  1412  0008AA  0100               	movlb	0	; () banked
  1413  0008AC  5DDE               	subwf	??_test_process& (0+255),w,b
  1414  0008AE  0E00               	movlw	0
  1415  0008B0  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1416  0008B2  A0D8               	btfss	status,0,c
  1417  0008B4  D201               	goto	l624
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;test.c: 193: {
  1421                           ;test.c: 194: if (++Test.Cpt > (32 + 5 - 1)) {Test.Step = 0x08;}
  1422  0008B6  EE20  F02F         	lfsr	2,_Test+1
  1423  0008BA  2ADF               	incf	indf2,f,c
  1424  0008BC  0E24               	movlw	36
  1425  0008BE  64DF               	cpfsgt	indf2,c
  1426  0008C0  D004               	goto	l6722
  1427                           
  1428                           ; BSR set to: 0
  1429  0008C2  0100               	movlb	0	; () banked
  1430  0008C4  6FDE               	movwf	??_test_process& (0+255),b
  1431  0008C6  0E08               	movlw	8
  1432  0008C8  D003               	goto	L10
  1433  0008CA                     l6722:
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;test.c: 195: else {Test.Step = 0x04;}
  1437  0008CA  0100               	movlb	0	; () banked
  1438  0008CC  6FDE               	movwf	??_test_process& (0+255),b
  1439  0008CE  0E04               	movlw	4
  1440  0008D0                     L10:
  1441  0008D0  6E2E               	movwf	_Test,c
  1442  0008D2  0100               	movlb	0	; () banked
  1443  0008D4  51DE               	movf	??_test_process& (0+255),w,b
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;test.c: 196: check_comutest(0);
  1447                           
  1448                           ; BSR set to: 0
  1449  0008D6  0E00               	movlw	0
  1450  0008D8  ECA5  F019         	call	_check_comutest
  1451  0008DC  D092               	goto	L15
  1452  0008DE                     l6728:
  1453                           
  1454                           ;test.c: 202: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1455  0008DE  EE20  F030         	lfsr	2,_Test+2
  1456  0008E2  CFDE F0DE          	movff	postinc2,??_test_process
  1457  0008E6  CFDD F0DF          	movff	postdec2,??_test_process+1
  1458  0008EA  0100               	movlb	0	; () banked
  1459  0008EC  1FDE               	comf	??_test_process& (0+255),f,b
  1460  0008EE  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1461  0008F0  4BDE               	infsnz	??_test_process& (0+255),f,b
  1462  0008F2  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1463  0008F4  504F               	movf	_Cptms,w,c	;volatile
  1464  0008F6  0100               	movlb	0	; () banked
  1465  0008F8  27DE               	addwf	??_test_process& (0+255),f,b
  1466  0008FA  5050               	movf	_Cptms+1,w,c	;volatile
  1467  0008FC  0100               	movlb	0	; () banked
  1468  0008FE  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1469  000900  0E15               	movlw	21
  1470  000902  0100               	movlb	0	; () banked
  1471  000904  5DDE               	subwf	??_test_process& (0+255),w,b
  1472  000906  0E00               	movlw	0
  1473  000908  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1474  00090A  A0D8               	btfss	status,0,c
  1475  00090C  D1D5               	goto	l624
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;test.c: 203: {
  1479                           ;test.c: 204: if (++Test.Cpt > (32 + 5 - 1)) {Test.Step = 0x08;}
  1480  00090E  EE20  F02F         	lfsr	2,_Test+1
  1481  000912  2ADF               	incf	indf2,f,c
  1482  000914  0E24               	movlw	36
  1483  000916  64DF               	cpfsgt	indf2,c
  1484  000918  D004               	goto	l6734
  1485                           
  1486                           ; BSR set to: 0
  1487  00091A  0100               	movlb	0	; () banked
  1488  00091C  6FDE               	movwf	??_test_process& (0+255),b
  1489  00091E  0E08               	movlw	8
  1490  000920  D003               	goto	L12
  1491  000922                     l6734:
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;test.c: 205: else {Test.Step = 0x04;}
  1495  000922  0100               	movlb	0	; () banked
  1496  000924  6FDE               	movwf	??_test_process& (0+255),b
  1497  000926  0E04               	movlw	4
  1498  000928                     L12:
  1499  000928  6E2E               	movwf	_Test,c
  1500  00092A  0100               	movlb	0	; () banked
  1501  00092C  51DE               	movf	??_test_process& (0+255),w,b
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;test.c: 206: check_comutest(0);
  1505                           
  1506                           ; BSR set to: 0
  1507  00092E  0E00               	movlw	0
  1508  000930  ECA5  F019         	call	_check_comutest
  1509  000934  D066               	goto	L15
  1510  000936                     l592:
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;test.c: 211: if ( (Bouton[Bp_IdTest].State == 0)
  1514                           ;test.c: 212: && ((((unsigned short) (Cptms - Test.Time) > 500) ? 1 : 0)))
  1515  000936  0100               	movlb	0	; () banked
  1516  000938  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  1517  00093A  D1BE               	goto	l624
  1518                           
  1519                           ; BSR set to: 0
  1520  00093C  EE20  F030         	lfsr	2,_Test+2
  1521  000940  CFDE F0DE          	movff	postinc2,??_test_process
  1522  000944  CFDD F0DF          	movff	postdec2,??_test_process+1
  1523  000948  0100               	movlb	0	; () banked
  1524  00094A  1FDE               	comf	??_test_process& (0+255),f,b
  1525  00094C  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1526  00094E  4BDE               	infsnz	??_test_process& (0+255),f,b
  1527  000950  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1528  000952  504F               	movf	_Cptms,w,c	;volatile
  1529  000954  0100               	movlb	0	; () banked
  1530  000956  27DE               	addwf	??_test_process& (0+255),f,b
  1531  000958  5050               	movf	_Cptms+1,w,c	;volatile
  1532  00095A  0100               	movlb	0	; () banked
  1533  00095C  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1534  00095E  0EF5               	movlw	245
  1535  000960  0100               	movlb	0	; () banked
  1536  000962  5DDE               	subwf	??_test_process& (0+255),w,b
  1537  000964  0E01               	movlw	1
  1538  000966  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1539  000968  A0D8               	btfss	status,0,c
  1540  00096A  D1A6               	goto	l624
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;test.c: 213: {
  1544                           ;test.c: 214: if (++Test.Cpt > (32 + 5 - 1)) {Test.Step = 0x08;}
  1545  00096C  EE20  F02F         	lfsr	2,_Test+1
  1546  000970  2ADF               	incf	indf2,f,c
  1547  000972  0E24               	movlw	36
  1548  000974  64DF               	cpfsgt	indf2,c
  1549  000976  D004               	goto	l6746
  1550                           
  1551                           ; BSR set to: 0
  1552  000978  0100               	movlb	0	; () banked
  1553  00097A  6FDE               	movwf	??_test_process& (0+255),b
  1554  00097C  0E08               	movlw	8
  1555  00097E  D003               	goto	L14
  1556  000980                     l6746:
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;test.c: 215: else {Test.Step = 0x04;}
  1560  000980  0100               	movlb	0	; () banked
  1561  000982  6FDE               	movwf	??_test_process& (0+255),b
  1562  000984  0E04               	movlw	4
  1563  000986                     L14:
  1564  000986  6E2E               	movwf	_Test,c
  1565  000988  0100               	movlb	0	; () banked
  1566  00098A  51DE               	movf	??_test_process& (0+255),w,b
  1567                           
  1568                           ; BSR set to: 0
  1569                           ;test.c: 216: check_comutest(0);
  1570                           
  1571                           ; BSR set to: 0
  1572  00098C  0E00               	movlw	0
  1573  00098E  ECA5  F019         	call	_check_comutest
  1574  000992  D037               	goto	L15
  1575  000994                     l6752:
  1576                           
  1577                           ;test.c: 221: if (Test.Cpt != 0)
  1578  000994  502F               	movf	_Test+1,w,c
  1579  000996  B4D8               	btfsc	status,2,c
  1580  000998  D006               	goto	l6756
  1581                           
  1582                           ;test.c: 222: {
  1583                           ;test.c: 223: ecran_print_num(Cf.Data[(32 * 3 + 5 * 3)]);
  1584  00099A  0101               	movlb	1	; () banked
  1585  00099C  0101               	movlb	1	; () banked
  1586  00099E  516F               	movf	(_Cf+111)& (0+255),w,b	;volatile
  1587  0009A0  ECBA  F015         	call	_ecran_print_num
  1588                           
  1589                           ;test.c: 224: }
  1590  0009A4  D010               	goto	l598
  1591  0009A6                     l6756:
  1592                           
  1593                           ;test.c: 225: else
  1594                           ;test.c: 226: {
  1595                           ;test.c: 227: Ecran.Digit[2] = 0;
  1596  0009A6  0100               	movlb	0	; () banked
  1597  0009A8  6FDE               	movwf	??_test_process& (0+255),b
  1598  0009AA  0E00               	movlw	0
  1599  0009AC  0100               	movlb	0	; () banked
  1600  0009AE  0100               	movlb	0	; () banked
  1601  0009B0  6FAC               	movwf	(_Ecran+2)& (0+255),b
  1602  0009B2  0100               	movlb	0	; () banked
  1603  0009B4  51DE               	movf	??_test_process& (0+255),w,b
  1604                           
  1605                           ;test.c: 228: Ecran.Digit[3] = 0;
  1606  0009B6  0100               	movlb	0	; () banked
  1607  0009B8  6FDE               	movwf	??_test_process& (0+255),b
  1608  0009BA  0E00               	movlw	0
  1609  0009BC  0100               	movlb	0	; () banked
  1610  0009BE  0100               	movlb	0	; () banked
  1611  0009C0  6FAD               	movwf	(_Ecran+3)& (0+255),b
  1612  0009C2  0100               	movlb	0	; () banked
  1613  0009C4  51DE               	movf	??_test_process& (0+255),w,b
  1614  0009C6                     l598:
  1615                           
  1616                           ;test.c: 229: }
  1617                           ;test.c: 231: Ecran.Digit[0] = '-';
  1618  0009C6  0100               	movlb	0	; () banked
  1619  0009C8  6FDE               	movwf	??_test_process& (0+255),b
  1620  0009CA  0E2D               	movlw	45
  1621  0009CC  0100               	movlb	0	; () banked
  1622  0009CE  0100               	movlb	0	; () banked
  1623  0009D0  6FAA               	movwf	_Ecran& (0+255),b
  1624  0009D2  0100               	movlb	0	; () banked
  1625  0009D4  51DE               	movf	??_test_process& (0+255),w,b
  1626                           
  1627                           ;test.c: 232: Ecran.Digit[1] = '-';
  1628  0009D6  0100               	movlb	0	; () banked
  1629  0009D8  6FDE               	movwf	??_test_process& (0+255),b
  1630  0009DA  0E2D               	movlw	45
  1631  0009DC  0100               	movlb	0	; () banked
  1632  0009DE  0100               	movlb	0	; () banked
  1633  0009E0  6FAB               	movwf	(_Ecran+1)& (0+255),b
  1634  0009E2  0100               	movlb	0	; () banked
  1635  0009E4  51DE               	movf	??_test_process& (0+255),w,b
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;test.c: 234: Ecran.Digits = Ecran.Digit;
  1639  0009E6  0100               	movlb	0	; () banked
  1640  0009E8  0E00               	movlw	high _Ecran
  1641  0009EA  0100               	movlb	0	; () banked
  1642  0009EC  0100               	movlb	0	; () banked
  1643  0009EE  6FAF               	movwf	(_Ecran+5)& (0+255),b
  1644  0009F0  0100               	movlb	0	; () banked
  1645  0009F2  0EAA               	movlw	low _Ecran
  1646  0009F4  0100               	movlb	0	; () banked
  1647  0009F6  0100               	movlb	0	; () banked
  1648  0009F8  6FAE               	movwf	(_Ecran+4)& (0+255),b
  1649                           
  1650                           ; BSR set to: 0
  1651                           ;test.c: 235: Test.Step = 0x09;
  1652  0009FA  0100               	movlb	0	; () banked
  1653  0009FC  6FDE               	movwf	??_test_process& (0+255),b
  1654  0009FE  0E09               	movlw	9
  1655  000A00  D0ED               	goto	L16
  1656  000A02                     L15:
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;test.c: 242: Test.Time = Cptms;
  1660  000A02  C04F  F030         	movff	_Cptms,_Test+2	;volatile
  1661  000A06  C050  F031         	movff	_Cptms+1,_Test+3	;volatile
  1662  000A0A  D156               	goto	l624
  1663  000A0C                     l6766:
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;test.c: 246: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1667  000A0C  EE20  F030         	lfsr	2,_Test+2
  1668  000A10  CFDE F0DE          	movff	postinc2,??_test_process
  1669  000A14  CFDD F0DF          	movff	postdec2,??_test_process+1
  1670  000A18  0100               	movlb	0	; () banked
  1671  000A1A  1FDE               	comf	??_test_process& (0+255),f,b
  1672  000A1C  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1673  000A1E  4BDE               	infsnz	??_test_process& (0+255),f,b
  1674  000A20  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1675  000A22  504F               	movf	_Cptms,w,c	;volatile
  1676  000A24  0100               	movlb	0	; () banked
  1677  000A26  27DE               	addwf	??_test_process& (0+255),f,b
  1678  000A28  5050               	movf	_Cptms+1,w,c	;volatile
  1679  000A2A  0100               	movlb	0	; () banked
  1680  000A2C  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1681  000A2E  0E15               	movlw	21
  1682  000A30  0100               	movlb	0	; () banked
  1683  000A32  5DDE               	subwf	??_test_process& (0+255),w,b
  1684  000A34  0E00               	movlw	0
  1685  000A36  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1686  000A38  A0D8               	btfss	status,0,c
  1687  000A3A  D13E               	goto	l624
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;test.c: 247: {
  1691                           ;test.c: 248: register_write((unsigned char) (Test.Cpt + 1));
  1692  000A3C  282F               	incf	_Test+1,w,c
  1693  000A3E  EC47  F01A         	call	_register_write
  1694                           
  1695                           ;test.c: 249: Test.Step = 0x0B;
  1696  000A42  0100               	movlb	0	; () banked
  1697  000A44  6FDE               	movwf	??_test_process& (0+255),b
  1698  000A46  0E0B               	movlw	11
  1699  000A48  D6AA               	goto	L5
  1700  000A4A                     l6774:
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;test.c: 254: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1704  000A4A  EE20  F030         	lfsr	2,_Test+2
  1705  000A4E  CFDE F0DE          	movff	postinc2,??_test_process
  1706  000A52  CFDD F0DF          	movff	postdec2,??_test_process+1
  1707  000A56  0100               	movlb	0	; () banked
  1708  000A58  1FDE               	comf	??_test_process& (0+255),f,b
  1709  000A5A  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1710  000A5C  4BDE               	infsnz	??_test_process& (0+255),f,b
  1711  000A5E  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1712  000A60  504F               	movf	_Cptms,w,c	;volatile
  1713  000A62  0100               	movlb	0	; () banked
  1714  000A64  27DE               	addwf	??_test_process& (0+255),f,b
  1715  000A66  5050               	movf	_Cptms+1,w,c	;volatile
  1716  000A68  0100               	movlb	0	; () banked
  1717  000A6A  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1718  000A6C  0E15               	movlw	21
  1719  000A6E  0100               	movlb	0	; () banked
  1720  000A70  5DDE               	subwf	??_test_process& (0+255),w,b
  1721  000A72  0E00               	movlw	0
  1722  000A74  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1723  000A76  A0D8               	btfss	status,0,c
  1724  000A78  D11F               	goto	l624
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;test.c: 255: {
  1728                           ;test.c: 256: temp = check_UInfla();
  1729  000A7A  EC3D  F014         	call	_check_UInfla	;wreg free
  1730  000A7E  0100               	movlb	0	; () banked
  1731  000A80  C0D6  F0E1         	movff	?_check_UInfla,test_process@temp
  1732  000A84  0100               	movlb	0	; () banked
  1733  000A86  C0D7  F0E2         	movff	?_check_UInfla+1,test_process@temp+1
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;test.c: 259: if (temp > 85) {Test.Step = 0x0D;}
  1737  000A8A  0E56               	movlw	86
  1738  000A8C  0100               	movlb	0	; () banked
  1739  000A8E  0100               	movlb	0	; () banked
  1740  000A90  5DE1               	subwf	test_process@temp& (0+255),w,b
  1741  000A92  0E00               	movlw	0
  1742  000A94  0100               	movlb	0	; () banked
  1743  000A96  59E2               	subwfb	(test_process@temp+1)& (0+255),w,b
  1744  000A98  A0D8               	btfss	status,0,c
  1745  000A9A  D004               	goto	l6782
  1746                           
  1747                           ; BSR set to: 0
  1748  000A9C  0100               	movlb	0	; () banked
  1749  000A9E  6FDE               	movwf	??_test_process& (0+255),b
  1750  000AA0  0E0D               	movlw	13
  1751  000AA2  D003               	goto	L18
  1752  000AA4                     l6782:
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;test.c: 260: else {Test.Step = 0x0C;}
  1756  000AA4  0100               	movlb	0	; () banked
  1757  000AA6  6FDE               	movwf	??_test_process& (0+255),b
  1758  000AA8  0E0C               	movlw	12
  1759  000AAA                     L18:
  1760  000AAA  6E2E               	movwf	_Test,c
  1761  000AAC  0100               	movlb	0	; () banked
  1762  000AAE  51DE               	movf	??_test_process& (0+255),w,b
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;test.c: 263: ecran_print_num((unsigned char) (Test.Cpt + 1));
  1766                           
  1767                           ; BSR set to: 0
  1768  000AB0  282F               	incf	_Test+1,w,c
  1769  000AB2  ECBA  F015         	call	_ecran_print_num
  1770                           
  1771                           ;test.c: 264: register_write(0);
  1772  000AB6  0E00               	movlw	0
  1773  000AB8  EC47  F01A         	call	_register_write
  1774  000ABC  D7A2               	goto	L15
  1775  000ABE                     l6790:
  1776                           
  1777                           ;test.c: 270: if ((((unsigned short) (Cptms - Test.Time) > 20) ? 1 : 0))
  1778  000ABE  EE20  F030         	lfsr	2,_Test+2
  1779  000AC2  CFDE F0DE          	movff	postinc2,??_test_process
  1780  000AC6  CFDD F0DF          	movff	postdec2,??_test_process+1
  1781  000ACA  0100               	movlb	0	; () banked
  1782  000ACC  1FDE               	comf	??_test_process& (0+255),f,b
  1783  000ACE  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1784  000AD0  4BDE               	infsnz	??_test_process& (0+255),f,b
  1785  000AD2  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1786  000AD4  504F               	movf	_Cptms,w,c	;volatile
  1787  000AD6  0100               	movlb	0	; () banked
  1788  000AD8  27DE               	addwf	??_test_process& (0+255),f,b
  1789  000ADA  5050               	movf	_Cptms+1,w,c	;volatile
  1790  000ADC  0100               	movlb	0	; () banked
  1791  000ADE  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1792  000AE0  0E15               	movlw	21
  1793  000AE2  0100               	movlb	0	; () banked
  1794  000AE4  5DDE               	subwf	??_test_process& (0+255),w,b
  1795  000AE6  0E00               	movlw	0
  1796  000AE8  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1797  000AEA  A0D8               	btfss	status,0,c
  1798  000AEC  D0E5               	goto	l624
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;test.c: 271: {
  1802                           ;test.c: 272: if (++Test.Cpt > (32 - 1)) {Test.Step = 0x0E;}
  1803  000AEE  EE20  F02F         	lfsr	2,_Test+1
  1804  000AF2  2ADF               	incf	indf2,f,c
  1805  000AF4  0E1F               	movlw	31
  1806  000AF6  64DF               	cpfsgt	indf2,c
  1807  000AF8  D004               	goto	l6796
  1808                           
  1809                           ; BSR set to: 0
  1810  000AFA  0100               	movlb	0	; () banked
  1811  000AFC  6FDE               	movwf	??_test_process& (0+255),b
  1812  000AFE  0E0E               	movlw	14
  1813  000B00  D003               	goto	L19
  1814  000B02                     l6796:
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;test.c: 273: else {Test.Step = 0x0A;}
  1818  000B02  0100               	movlb	0	; () banked
  1819  000B04  6FDE               	movwf	??_test_process& (0+255),b
  1820  000B06  0E0A               	movlw	10
  1821  000B08                     L19:
  1822  000B08  6E2E               	movwf	_Test,c
  1823  000B0A  0100               	movlb	0	; () banked
  1824  000B0C  51DE               	movf	??_test_process& (0+255),w,b
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;test.c: 274: check_comutest(0);
  1828                           
  1829                           ; BSR set to: 0
  1830  000B0E  0E00               	movlw	0
  1831  000B10  ECA5  F019         	call	_check_comutest
  1832  000B14  D776               	goto	L15
  1833  000B16                     l611:
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;test.c: 279: if ( (Bouton[Bp_IdTest].State == 0)
  1837                           ;test.c: 280: && ((((unsigned short) (Cptms - Test.Time) > 500) ? 1 : 0)))
  1838  000B16  0100               	movlb	0	; () banked
  1839  000B18  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  1840  000B1A  D0CE               	goto	l624
  1841                           
  1842                           ; BSR set to: 0
  1843  000B1C  EE20  F030         	lfsr	2,_Test+2
  1844  000B20  CFDE F0DE          	movff	postinc2,??_test_process
  1845  000B24  CFDD F0DF          	movff	postdec2,??_test_process+1
  1846  000B28  0100               	movlb	0	; () banked
  1847  000B2A  1FDE               	comf	??_test_process& (0+255),f,b
  1848  000B2C  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  1849  000B2E  4BDE               	infsnz	??_test_process& (0+255),f,b
  1850  000B30  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  1851  000B32  504F               	movf	_Cptms,w,c	;volatile
  1852  000B34  0100               	movlb	0	; () banked
  1853  000B36  27DE               	addwf	??_test_process& (0+255),f,b
  1854  000B38  5050               	movf	_Cptms+1,w,c	;volatile
  1855  000B3A  0100               	movlb	0	; () banked
  1856  000B3C  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  1857  000B3E  0EF5               	movlw	245
  1858  000B40  0100               	movlb	0	; () banked
  1859  000B42  5DDE               	subwf	??_test_process& (0+255),w,b
  1860  000B44  0E01               	movlw	1
  1861  000B46  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  1862  000B48  A0D8               	btfss	status,0,c
  1863  000B4A  D0B6               	goto	l624
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;test.c: 281: {
  1867                           ;test.c: 282: if (++Test.Cpt > (32 - 1)) {Test.Step = 0x0E;}
  1868  000B4C  EE20  F02F         	lfsr	2,_Test+1
  1869  000B50  2ADF               	incf	indf2,f,c
  1870  000B52  0E1F               	movlw	31
  1871  000B54  64DF               	cpfsgt	indf2,c
  1872  000B56  D004               	goto	l6808
  1873                           
  1874                           ; BSR set to: 0
  1875  000B58  0100               	movlb	0	; () banked
  1876  000B5A  6FDE               	movwf	??_test_process& (0+255),b
  1877  000B5C  0E0E               	movlw	14
  1878  000B5E  D003               	goto	L20
  1879  000B60                     l6808:
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;test.c: 283: else {Test.Step = 0x0A;}
  1883  000B60  0100               	movlb	0	; () banked
  1884  000B62  6FDE               	movwf	??_test_process& (0+255),b
  1885  000B64  0E0A               	movlw	10
  1886  000B66                     L20:
  1887  000B66  6E2E               	movwf	_Test,c
  1888  000B68  0100               	movlb	0	; () banked
  1889  000B6A  51DE               	movf	??_test_process& (0+255),w,b
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;test.c: 284: check_comutest(0);
  1893                           
  1894                           ; BSR set to: 0
  1895  000B6C  0E00               	movlw	0
  1896  000B6E  ECA5  F019         	call	_check_comutest
  1897  000B72  D747               	goto	L15
  1898  000B74                     l6814:
  1899                           
  1900                           ;test.c: 289: if (Test.Cpt != 0)
  1901  000B74  502F               	movf	_Test+1,w,c
  1902  000B76  B4D8               	btfsc	status,2,c
  1903  000B78  D004               	goto	l6818
  1904                           
  1905                           ;test.c: 290: {
  1906                           ;test.c: 291: ecran_print_num(Test.Cpt);
  1907  000B7A  502F               	movf	_Test+1,w,c
  1908  000B7C  ECBA  F015         	call	_ecran_print_num
  1909                           
  1910                           ;test.c: 292: }
  1911  000B80  D010               	goto	l617
  1912  000B82                     l6818:
  1913                           
  1914                           ;test.c: 293: else
  1915                           ;test.c: 294: {
  1916                           ;test.c: 295: Ecran.Digit[2] = 0;
  1917  000B82  0100               	movlb	0	; () banked
  1918  000B84  6FDE               	movwf	??_test_process& (0+255),b
  1919  000B86  0E00               	movlw	0
  1920  000B88  0100               	movlb	0	; () banked
  1921  000B8A  0100               	movlb	0	; () banked
  1922  000B8C  6FAC               	movwf	(_Ecran+2)& (0+255),b
  1923  000B8E  0100               	movlb	0	; () banked
  1924  000B90  51DE               	movf	??_test_process& (0+255),w,b
  1925                           
  1926                           ;test.c: 296: Ecran.Digit[3] = 0;
  1927  000B92  0100               	movlb	0	; () banked
  1928  000B94  6FDE               	movwf	??_test_process& (0+255),b
  1929  000B96  0E00               	movlw	0
  1930  000B98  0100               	movlb	0	; () banked
  1931  000B9A  0100               	movlb	0	; () banked
  1932  000B9C  6FAD               	movwf	(_Ecran+3)& (0+255),b
  1933  000B9E  0100               	movlb	0	; () banked
  1934  000BA0  51DE               	movf	??_test_process& (0+255),w,b
  1935  000BA2                     l617:
  1936                           
  1937                           ;test.c: 297: }
  1938                           ;test.c: 299: Ecran.Digit[0] = '-';
  1939  000BA2  0100               	movlb	0	; () banked
  1940  000BA4  6FDE               	movwf	??_test_process& (0+255),b
  1941  000BA6  0E2D               	movlw	45
  1942  000BA8  0100               	movlb	0	; () banked
  1943  000BAA  0100               	movlb	0	; () banked
  1944  000BAC  6FAA               	movwf	_Ecran& (0+255),b
  1945  000BAE  0100               	movlb	0	; () banked
  1946  000BB0  51DE               	movf	??_test_process& (0+255),w,b
  1947                           
  1948                           ;test.c: 300: Ecran.Digit[1] = '-';
  1949  000BB2  0100               	movlb	0	; () banked
  1950  000BB4  6FDE               	movwf	??_test_process& (0+255),b
  1951  000BB6  0E2D               	movlw	45
  1952  000BB8  0100               	movlb	0	; () banked
  1953  000BBA  0100               	movlb	0	; () banked
  1954  000BBC  6FAB               	movwf	(_Ecran+1)& (0+255),b
  1955  000BBE  0100               	movlb	0	; () banked
  1956  000BC0  51DE               	movf	??_test_process& (0+255),w,b
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;test.c: 302: Ecran.Digits = Ecran.Digit;
  1960  000BC2  0100               	movlb	0	; () banked
  1961  000BC4  0E00               	movlw	high _Ecran
  1962  000BC6  0100               	movlb	0	; () banked
  1963  000BC8  0100               	movlb	0	; () banked
  1964  000BCA  6FAF               	movwf	(_Ecran+5)& (0+255),b
  1965  000BCC  0100               	movlb	0	; () banked
  1966  000BCE  0EAA               	movlw	low _Ecran
  1967  000BD0  0100               	movlb	0	; () banked
  1968  000BD2  0100               	movlb	0	; () banked
  1969  000BD4  6FAE               	movwf	(_Ecran+4)& (0+255),b
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;test.c: 303: Test.Step = 0x0F;
  1973  000BD6  0100               	movlb	0	; () banked
  1974  000BD8  6FDE               	movwf	??_test_process& (0+255),b
  1975  000BDA  0E0F               	movlw	15
  1976  000BDC                     L16:
  1977  000BDC  6E2E               	movwf	_Test,c
  1978  000BDE  D02F               	goto	L21
  1979  000BE0                     l618:
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;test.c: 306: if (Bouton[Bp_IdTest].State == 0)
  1983  000BE0  0100               	movlb	0	; () banked
  1984  000BE2  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  1985  000BE4  D069               	goto	l624
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;test.c: 307: {
  1989                           ;test.c: 308: Test.Step = 0x10;
  1990  000BE6  0100               	movlb	0	; () banked
  1991  000BE8  6FDE               	movwf	??_test_process& (0+255),b
  1992  000BEA  0E10               	movlw	16
  1993  000BEC  D5D8               	goto	L5
  1994  000BEE                     l6828:
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;test.c: 314: if ((((unsigned short) (Cptms - Test.Time) > 1000) ? 1 : 0))
  1998  000BEE  EE20  F030         	lfsr	2,_Test+2
  1999  000BF2  CFDE F0DE          	movff	postinc2,??_test_process
  2000  000BF6  CFDD F0DF          	movff	postdec2,??_test_process+1
  2001  000BFA  0100               	movlb	0	; () banked
  2002  000BFC  1FDE               	comf	??_test_process& (0+255),f,b
  2003  000BFE  1FDF               	comf	(??_test_process+1)& (0+255),f,b
  2004  000C00  4BDE               	infsnz	??_test_process& (0+255),f,b
  2005  000C02  2BDF               	incf	(??_test_process+1)& (0+255),f,b
  2006  000C04  504F               	movf	_Cptms,w,c	;volatile
  2007  000C06  0100               	movlb	0	; () banked
  2008  000C08  27DE               	addwf	??_test_process& (0+255),f,b
  2009  000C0A  5050               	movf	_Cptms+1,w,c	;volatile
  2010  000C0C  0100               	movlb	0	; () banked
  2011  000C0E  23DF               	addwfc	(??_test_process+1)& (0+255),f,b
  2012  000C10  0EE9               	movlw	233
  2013  000C12  0100               	movlb	0	; () banked
  2014  000C14  5DDE               	subwf	??_test_process& (0+255),w,b
  2015  000C16  0E03               	movlw	3
  2016  000C18  59DF               	subwfb	(??_test_process+1)& (0+255),w,b
  2017  000C1A  A0D8               	btfss	status,0,c
  2018  000C1C  D04D               	goto	l624
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;test.c: 315: {
  2022                           ;test.c: 316: Test.Step = 0x11;
  2023  000C1E  0100               	movlb	0	; () banked
  2024  000C20  6FDE               	movwf	??_test_process& (0+255),b
  2025  000C22  0E11               	movlw	17
  2026  000C24  6E2E               	movwf	_Test,c
  2027  000C26  0100               	movlb	0	; () banked
  2028  000C28  51DE               	movf	??_test_process& (0+255),w,b
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;test.c: 318: ecran_wait();
  2032  000C2A  ECA3  F01B         	call	_ecran_wait	;wreg free
  2033  000C2E  D044               	goto	l624
  2034  000C30                     l622:
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;test.c: 322: if (Bouton[Bp_IdTest].State == 1)
  2038  000C30  0100               	movlb	0	; () banked
  2039  000C32  A393               	btfss	(_Bouton+5)& (0+255),1,b
  2040  000C34  D041               	goto	l624
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;test.c: 323: {
  2044                           ;test.c: 324: Micro.Phase = 0x00;
  2045  000C36  0100               	movlb	0	; () banked
  2046  000C38  6FDE               	movwf	??_test_process& (0+255),b
  2047  000C3A  0E00               	movlw	0
  2048  000C3C  6E54               	movwf	_Micro+2,c
  2049  000C3E                     L21:
  2050  000C3E  0100               	movlb	0	; () banked
  2051  000C40  51DE               	movf	??_test_process& (0+255),w,b
  2052  000C42  D03A               	goto	l624
  2053  000C44                     l6838:
  2054                           
  2055                           ; BSR set to: 0
  2056  000C44  502E               	movf	_Test,w,c
  2057                           
  2058                           ; Switch size 1, requested type "space"
  2059                           ; Number of cases is 19, Range of values is 1 to 22
  2060                           ; switch strategies available:
  2061                           ; Name         Instructions Cycles
  2062                           ; simple_byte           58    30 (average)
  2063                           ;	Chosen strategy is simple_byte
  2064  000C46  0A01               	xorlw	1	; case 1
  2065  000C48  B4D8               	btfsc	status,2,c
  2066  000C4A  D4EF               	goto	l564
  2067  000C4C  0A03               	xorlw	3	; case 2
  2068  000C4E  B4D8               	btfsc	status,2,c
  2069  000C50  D4F3               	goto	l6644
  2070  000C52  0A01               	xorlw	1	; case 3
  2071  000C54  B4D8               	btfsc	status,2,c
  2072  000C56  D544               	goto	l568
  2073  000C58  0A07               	xorlw	7	; case 4
  2074  000C5A  B4D8               	btfsc	status,2,c
  2075  000C5C  D556               	goto	l6676
  2076  000C5E  0A01               	xorlw	1	; case 5
  2077  000C60  B4D8               	btfsc	status,2,c
  2078  000C62  D5A1               	goto	l6692
  2079  000C64  0A03               	xorlw	3	; case 6
  2080  000C66  B4D8               	btfsc	status,2,c
  2081  000C68  D63A               	goto	l6728
  2082  000C6A  0A01               	xorlw	1	; case 7
  2083  000C6C  B4D8               	btfsc	status,2,c
  2084  000C6E  D663               	goto	l592
  2085  000C70  0A0F               	xorlw	15	; case 8
  2086  000C72  B4D8               	btfsc	status,2,c
  2087  000C74  D68F               	goto	l6752
  2088  000C76  0A01               	xorlw	1	; case 9
  2089  000C78  B4D8               	btfsc	status,2,c
  2090  000C7A  D7B2               	goto	l618
  2091  000C7C  0A03               	xorlw	3	; case 10
  2092  000C7E  B4D8               	btfsc	status,2,c
  2093  000C80  D6C5               	goto	l6766
  2094  000C82  0A01               	xorlw	1	; case 11
  2095  000C84  B4D8               	btfsc	status,2,c
  2096  000C86  D6E1               	goto	l6774
  2097  000C88  0A07               	xorlw	7	; case 12
  2098  000C8A  B4D8               	btfsc	status,2,c
  2099  000C8C  D718               	goto	l6790
  2100  000C8E  0A01               	xorlw	1	; case 13
  2101  000C90  B4D8               	btfsc	status,2,c
  2102  000C92  D741               	goto	l611
  2103  000C94  0A03               	xorlw	3	; case 14
  2104  000C96  B4D8               	btfsc	status,2,c
  2105  000C98  D76D               	goto	l6814
  2106  000C9A  0A01               	xorlw	1	; case 15
  2107  000C9C  B4D8               	btfsc	status,2,c
  2108  000C9E  D7A0               	goto	l618
  2109  000CA0  0A1F               	xorlw	31	; case 16
  2110  000CA2  B4D8               	btfsc	status,2,c
  2111  000CA4  D7A4               	goto	l6828
  2112  000CA6  0A01               	xorlw	1	; case 17
  2113  000CA8  B4D8               	btfsc	status,2,c
  2114  000CAA  D7C2               	goto	l622
  2115  000CAC  0A04               	xorlw	4	; case 21
  2116  000CAE  B4D8               	btfsc	status,2,c
  2117  000CB0  D5BE               	goto	l6708
  2118  000CB2  0A03               	xorlw	3	; case 22
  2119  000CB4  B4D8               	btfsc	status,2,c
  2120  000CB6  D5E7               	goto	l6716
  2121  000CB8                     l624:
  2122  000CB8  0012               	return	
  2123  000CBA  FFFF               	dw	65535	; errata NOP
  2124  000CBC                     __end_of_test_process:
  2125                           	opt stack 0
  2126                           tblptru	equ	0xFF8
  2127                           tblptrh	equ	0xFF7
  2128                           tblptrl	equ	0xFF6
  2129                           tablat	equ	0xFF5
  2130                           prodh	equ	0xFF4
  2131                           prodl	equ	0xFF3
  2132                           postinc0	equ	0xFEE
  2133                           wreg	equ	0xFE8
  2134                           postdec1	equ	0xFE5
  2135                           fsr1l	equ	0xFE1
  2136                           indf2	equ	0xFDF
  2137                           postinc2	equ	0xFDE
  2138                           postdec2	equ	0xFDD
  2139                           fsr2h	equ	0xFDA
  2140                           fsr2l	equ	0xFD9
  2141                           status	equ	0xFD8
  2142                           
  2143 ;; *************** function _check_UInfla *****************
  2144 ;; Defined at:
  2145 ;;		line 80 in file "test.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  temp            2   34[BANK0 ] unsigned short 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  2   28[BANK0 ] unsigned short 
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2159 ;;      Params:         0       2       0       0       0       0       0
  2160 ;;      Locals:         0       2       0       0       0       0       0
  2161 ;;      Temps:          0       4       0       0       0       0       0
  2162 ;;      Totals:         0       8       0       0       0       0       0
  2163 ;;Total ram usage:        8 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    5
  2166 ;; This function calls:
  2167 ;;		___ftmul
  2168 ;;		___fttol
  2169 ;;		___lwtoft
  2170 ;;		_ana_read
  2171 ;; This function is called by:
  2172 ;;		_test_process
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text2
  2177  00287A                     __ptext2:
  2178                           	opt stack 0
  2179  00287A                     _check_UInfla:
  2180                           	opt stack 24
  2181                           
  2182                           ;incstack = 0
  2183  00287A  FFFF               	dw	65535
  2184                           
  2185                           ;test.c: 82: unsigned short temp = 0;
  2186  00287C  0E00               	movlw	0
  2187  00287E  0100               	movlb	0	; () banked
  2188  002880  0100               	movlb	0	; () banked
  2189  002882  6FDD               	movwf	(check_UInfla@temp+1)& (0+255),b
  2190  002884  0E00               	movlw	0
  2191  002886  0100               	movlb	0	; () banked
  2192  002888  6FDC               	movwf	check_UInfla@temp& (0+255),b
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;test.c: 84: if (PORTCbits.RC5 == 1)
  2196  00288A  AA82               	btfss	3970,5,c	;volatile
  2197  00288C  D002               	goto	l6300
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;test.c: 85: {
  2201                           ;test.c: 86: PORTBbits.RB1 = 1;
  2202  00288E  8281               	bsf	3969,1,c	;volatile
  2203                           
  2204                           ;test.c: 87: PORTAbits.RA5 = 1;
  2205  002890  8A80               	bsf	3968,5,c	;volatile
  2206  002892                     l6300:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;test.c: 88: }
  2210                           ;test.c: 90: temp = ana_read(1);
  2211  002892  0E01               	movlw	1
  2212  002894  EC83  F018         	call	_ana_read
  2213  002898  0100               	movlb	0	; () banked
  2214  00289A  C0C0  F0DC         	movff	?_ana_read,check_UInfla@temp
  2215  00289E  0100               	movlb	0	; () banked
  2216  0028A0  C0C1  F0DD         	movff	?_ana_read+1,check_UInfla@temp+1
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;test.c: 92: PORTBbits.RB1 = 0;
  2220  0028A4  9281               	bcf	3969,1,c	;volatile
  2221                           
  2222                           ; BSR set to: 0
  2223                           ;test.c: 93: PORTAbits.RA5 = 0;
  2224  0028A6  9A80               	bcf	3968,5,c	;volatile
  2225                           
  2226                           ;test.c: 95: Test.U_Infla = (float) temp * 0.0049f;
  2227  0028A8  C0DC  F0C2         	movff	check_UInfla@temp,___lwtoft@c
  2228  0028AC  C0DD  F0C3         	movff	check_UInfla@temp+1,___lwtoft@c+1
  2229  0028B0  EC95  F01A         	call	___lwtoft	;wreg free
  2230  0028B4  C0C2  F0C7         	movff	?___lwtoft,___ftmul@f1
  2231  0028B8  C0C3  F0C8         	movff	?___lwtoft+1,___ftmul@f1+1
  2232  0028BC  C0C4  F0C9         	movff	?___lwtoft+2,___ftmul@f1+2
  2233  0028C0  0E90               	movlw	144
  2234  0028C2  0100               	movlb	0	; () banked
  2235  0028C4  0100               	movlb	0	; () banked
  2236  0028C6  6FCA               	movwf	___ftmul@f2& (0+255),b
  2237  0028C8  0EA0               	movlw	160
  2238  0028CA  0100               	movlb	0	; () banked
  2239  0028CC  0100               	movlb	0	; () banked
  2240  0028CE  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2241  0028D0  0E3B               	movlw	59
  2242  0028D2  0100               	movlb	0	; () banked
  2243  0028D4  0100               	movlb	0	; () banked
  2244  0028D6  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2245  0028D8  EC68  F00B         	call	___ftmul	;wreg free
  2246  0028DC  C0C7  F035         	movff	?___ftmul,_Test+7
  2247  0028E0  C0C8  F036         	movff	?___ftmul+1,_Test+8
  2248  0028E4  C0C9  F037         	movff	?___ftmul+2,_Test+9
  2249                           
  2250                           ;test.c: 96: Test.U_Infla = Test.U_Infla * 11.62f;
  2251  0028E8  C035  F0C7         	movff	_Test+7,___ftmul@f1
  2252  0028EC  C036  F0C8         	movff	_Test+8,___ftmul@f1+1
  2253  0028F0  C037  F0C9         	movff	_Test+9,___ftmul@f1+2
  2254  0028F4  0EEC               	movlw	236
  2255  0028F6  0100               	movlb	0	; () banked
  2256  0028F8  0100               	movlb	0	; () banked
  2257  0028FA  6FCA               	movwf	___ftmul@f2& (0+255),b
  2258  0028FC  0E39               	movlw	57
  2259  0028FE  0100               	movlb	0	; () banked
  2260  002900  0100               	movlb	0	; () banked
  2261  002902  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2262  002904  0E41               	movlw	65
  2263  002906  0100               	movlb	0	; () banked
  2264  002908  0100               	movlb	0	; () banked
  2265  00290A  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2266  00290C  EC68  F00B         	call	___ftmul	;wreg free
  2267  002910  C0C7  F035         	movff	?___ftmul,_Test+7
  2268  002914  C0C8  F036         	movff	?___ftmul+1,_Test+8
  2269  002918  C0C9  F037         	movff	?___ftmul+2,_Test+9
  2270                           
  2271                           ;test.c: 97: Test.U_Infla = Test.U_Infla * 100.0f;
  2272  00291C  C035  F0C7         	movff	_Test+7,___ftmul@f1
  2273  002920  C036  F0C8         	movff	_Test+8,___ftmul@f1+1
  2274  002924  C037  F0C9         	movff	_Test+9,___ftmul@f1+2
  2275  002928  0E00               	movlw	0
  2276  00292A  0100               	movlb	0	; () banked
  2277  00292C  0100               	movlb	0	; () banked
  2278  00292E  6FCA               	movwf	___ftmul@f2& (0+255),b
  2279  002930  0EC8               	movlw	200
  2280  002932  0100               	movlb	0	; () banked
  2281  002934  0100               	movlb	0	; () banked
  2282  002936  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2283  002938  0E42               	movlw	66
  2284  00293A  0100               	movlb	0	; () banked
  2285  00293C  0100               	movlb	0	; () banked
  2286  00293E  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2287  002940  EC68  F00B         	call	___ftmul	;wreg free
  2288  002944  C0C7  F035         	movff	?___ftmul,_Test+7
  2289  002948  C0C8  F036         	movff	?___ftmul+1,_Test+8
  2290  00294C  C0C9  F037         	movff	?___ftmul+2,_Test+9
  2291                           
  2292                           ;test.c: 99: return (unsigned short) Test.U_Infla;
  2293  002950  C035  F0BA         	movff	_Test+7,___fttol@f1
  2294  002954  C036  F0BB         	movff	_Test+8,___fttol@f1+1
  2295  002958  C037  F0BC         	movff	_Test+9,___fttol@f1+2
  2296  00295C  ECB2  F00E         	call	___fttol	;wreg free
  2297  002960  C0BA  F0D8         	movff	?___fttol,??_check_UInfla
  2298  002964  C0BB  F0D9         	movff	?___fttol+1,??_check_UInfla+1
  2299  002968  C0BC  F0DA         	movff	?___fttol+2,??_check_UInfla+2
  2300  00296C  C0BD  F0DB         	movff	?___fttol+3,??_check_UInfla+3
  2301  002970  C0D8  F0D6         	movff	??_check_UInfla,?_check_UInfla
  2302  002974  C0D9  F0D7         	movff	??_check_UInfla+1,?_check_UInfla+1
  2303  002978  0012               	return	
  2304  00297A  FFFF               	dw	65535	; errata NOP
  2305  00297C                     __end_of_check_UInfla:
  2306                           	opt stack 0
  2307                           tblptru	equ	0xFF8
  2308                           tblptrh	equ	0xFF7
  2309                           tblptrl	equ	0xFF6
  2310                           tablat	equ	0xFF5
  2311                           prodh	equ	0xFF4
  2312                           prodl	equ	0xFF3
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           postdec1	equ	0xFE5
  2316                           fsr1l	equ	0xFE1
  2317                           indf2	equ	0xFDF
  2318                           postinc2	equ	0xFDE
  2319                           postdec2	equ	0xFDD
  2320                           fsr2h	equ	0xFDA
  2321                           fsr2l	equ	0xFD9
  2322                           status	equ	0xFD8
  2323                           
  2324 ;; *************** function _check_UAlim *****************
  2325 ;; Defined at:
  2326 ;;		line 64 in file "test.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;		None
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  temp            2   34[BANK0 ] unsigned short 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  2   28[BANK0 ] unsigned short 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2, status,0, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2340 ;;      Params:         0       2       0       0       0       0       0
  2341 ;;      Locals:         0       2       0       0       0       0       0
  2342 ;;      Temps:          0       4       0       0       0       0       0
  2343 ;;      Totals:         0       8       0       0       0       0       0
  2344 ;;Total ram usage:        8 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    5
  2347 ;; This function calls:
  2348 ;;		___ftmul
  2349 ;;		___fttol
  2350 ;;		___lwtoft
  2351 ;;		_ana_read
  2352 ;; This function is called by:
  2353 ;;		_test_process
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text3
  2358  002A7A                     __ptext3:
  2359                           	opt stack 0
  2360  002A7A                     _check_UAlim:
  2361                           	opt stack 24
  2362                           
  2363                           ;incstack = 0
  2364  002A7A  FFFF               	dw	65535
  2365                           
  2366                           ;test.c: 66: unsigned short temp = 0;
  2367  002A7C  0E00               	movlw	0
  2368  002A7E  0100               	movlb	0	; () banked
  2369  002A80  0100               	movlb	0	; () banked
  2370  002A82  6FDD               	movwf	(check_UAlim@temp+1)& (0+255),b
  2371  002A84  0E00               	movlw	0
  2372  002A86  0100               	movlb	0	; () banked
  2373  002A88  6FDC               	movwf	check_UAlim@temp& (0+255),b
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;test.c: 68: PORTBbits.RB1 = 0;
  2377  002A8A  9281               	bcf	3969,1,c	;volatile
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;test.c: 69: PORTAbits.RA5 = 0;
  2381  002A8C  9A80               	bcf	3968,5,c	;volatile
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;test.c: 71: temp = ana_read(0);
  2385  002A8E  0E00               	movlw	0
  2386  002A90  EC83  F018         	call	_ana_read
  2387  002A94  0100               	movlb	0	; () banked
  2388  002A96  C0C0  F0DC         	movff	?_ana_read,check_UAlim@temp
  2389  002A9A  0100               	movlb	0	; () banked
  2390  002A9C  C0C1  F0DD         	movff	?_ana_read+1,check_UAlim@temp+1
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;test.c: 73: Test.U_Alim = (float) temp * 0.0049f;
  2394  002AA0  C0DC  F0C2         	movff	check_UAlim@temp,___lwtoft@c
  2395  002AA4  C0DD  F0C3         	movff	check_UAlim@temp+1,___lwtoft@c+1
  2396  002AA8  EC95  F01A         	call	___lwtoft	;wreg free
  2397  002AAC  C0C2  F0C7         	movff	?___lwtoft,___ftmul@f1
  2398  002AB0  C0C3  F0C8         	movff	?___lwtoft+1,___ftmul@f1+1
  2399  002AB4  C0C4  F0C9         	movff	?___lwtoft+2,___ftmul@f1+2
  2400  002AB8  0E90               	movlw	144
  2401  002ABA  0100               	movlb	0	; () banked
  2402  002ABC  0100               	movlb	0	; () banked
  2403  002ABE  6FCA               	movwf	___ftmul@f2& (0+255),b
  2404  002AC0  0EA0               	movlw	160
  2405  002AC2  0100               	movlb	0	; () banked
  2406  002AC4  0100               	movlb	0	; () banked
  2407  002AC6  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2408  002AC8  0E3B               	movlw	59
  2409  002ACA  0100               	movlb	0	; () banked
  2410  002ACC  0100               	movlb	0	; () banked
  2411  002ACE  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2412  002AD0  EC68  F00B         	call	___ftmul	;wreg free
  2413  002AD4  C0C7  F032         	movff	?___ftmul,_Test+4
  2414  002AD8  C0C8  F033         	movff	?___ftmul+1,_Test+5
  2415  002ADC  C0C9  F034         	movff	?___ftmul+2,_Test+6
  2416                           
  2417                           ;test.c: 74: Test.U_Alim = Test.U_Alim * 11.62f;
  2418  002AE0  C032  F0C7         	movff	_Test+4,___ftmul@f1
  2419  002AE4  C033  F0C8         	movff	_Test+5,___ftmul@f1+1
  2420  002AE8  C034  F0C9         	movff	_Test+6,___ftmul@f1+2
  2421  002AEC  0EEC               	movlw	236
  2422  002AEE  0100               	movlb	0	; () banked
  2423  002AF0  0100               	movlb	0	; () banked
  2424  002AF2  6FCA               	movwf	___ftmul@f2& (0+255),b
  2425  002AF4  0E39               	movlw	57
  2426  002AF6  0100               	movlb	0	; () banked
  2427  002AF8  0100               	movlb	0	; () banked
  2428  002AFA  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2429  002AFC  0E41               	movlw	65
  2430  002AFE  0100               	movlb	0	; () banked
  2431  002B00  0100               	movlb	0	; () banked
  2432  002B02  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2433  002B04  EC68  F00B         	call	___ftmul	;wreg free
  2434  002B08  C0C7  F032         	movff	?___ftmul,_Test+4
  2435  002B0C  C0C8  F033         	movff	?___ftmul+1,_Test+5
  2436  002B10  C0C9  F034         	movff	?___ftmul+2,_Test+6
  2437                           
  2438                           ;test.c: 75: Test.U_Alim = Test.U_Alim * 100.0f;
  2439  002B14  C032  F0C7         	movff	_Test+4,___ftmul@f1
  2440  002B18  C033  F0C8         	movff	_Test+5,___ftmul@f1+1
  2441  002B1C  C034  F0C9         	movff	_Test+6,___ftmul@f1+2
  2442  002B20  0E00               	movlw	0
  2443  002B22  0100               	movlb	0	; () banked
  2444  002B24  0100               	movlb	0	; () banked
  2445  002B26  6FCA               	movwf	___ftmul@f2& (0+255),b
  2446  002B28  0EC8               	movlw	200
  2447  002B2A  0100               	movlb	0	; () banked
  2448  002B2C  0100               	movlb	0	; () banked
  2449  002B2E  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
  2450  002B30  0E42               	movlw	66
  2451  002B32  0100               	movlb	0	; () banked
  2452  002B34  0100               	movlb	0	; () banked
  2453  002B36  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
  2454  002B38  EC68  F00B         	call	___ftmul	;wreg free
  2455  002B3C  C0C7  F032         	movff	?___ftmul,_Test+4
  2456  002B40  C0C8  F033         	movff	?___ftmul+1,_Test+5
  2457  002B44  C0C9  F034         	movff	?___ftmul+2,_Test+6
  2458                           
  2459                           ;test.c: 77: return (unsigned short) Test.U_Alim;
  2460  002B48  C032  F0BA         	movff	_Test+4,___fttol@f1
  2461  002B4C  C033  F0BB         	movff	_Test+5,___fttol@f1+1
  2462  002B50  C034  F0BC         	movff	_Test+6,___fttol@f1+2
  2463  002B54  ECB2  F00E         	call	___fttol	;wreg free
  2464  002B58  C0BA  F0D8         	movff	?___fttol,??_check_UAlim
  2465  002B5C  C0BB  F0D9         	movff	?___fttol+1,??_check_UAlim+1
  2466  002B60  C0BC  F0DA         	movff	?___fttol+2,??_check_UAlim+2
  2467  002B64  C0BD  F0DB         	movff	?___fttol+3,??_check_UAlim+3
  2468  002B68  C0D8  F0D6         	movff	??_check_UAlim,?_check_UAlim
  2469  002B6C  C0D9  F0D7         	movff	??_check_UAlim+1,?_check_UAlim+1
  2470  002B70  0012               	return	
  2471  002B72  FFFF               	dw	65535	; errata NOP
  2472  002B74                     __end_of_check_UAlim:
  2473                           	opt stack 0
  2474                           tblptru	equ	0xFF8
  2475                           tblptrh	equ	0xFF7
  2476                           tblptrl	equ	0xFF6
  2477                           tablat	equ	0xFF5
  2478                           prodh	equ	0xFF4
  2479                           prodl	equ	0xFF3
  2480                           postinc0	equ	0xFEE
  2481                           wreg	equ	0xFE8
  2482                           postdec1	equ	0xFE5
  2483                           fsr1l	equ	0xFE1
  2484                           indf2	equ	0xFDF
  2485                           postinc2	equ	0xFDE
  2486                           postdec2	equ	0xFDD
  2487                           fsr2h	equ	0xFDA
  2488                           fsr2l	equ	0xFD9
  2489                           status	equ	0xFD8
  2490                           
  2491 ;; *************** function _micro_wait *****************
  2492 ;; Defined at:
  2493 ;;		line 91 in file "micro.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  tempTime        2    9[BANK0 ] unsigned short 
  2498 ;; Return value:  Size  Location     Type
  2499 ;;		None               void
  2500 ;; Registers used:
  2501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2507 ;;      Params:         0       0       0       0       0       0       0
  2508 ;;      Locals:         0       4       0       0       0       0       0
  2509 ;;      Temps:          0       2       0       0       0       0       0
  2510 ;;      Totals:         0       6       0       0       0       0       0
  2511 ;;Total ram usage:        6 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    7
  2514 ;; This function calls:
  2515 ;;		_check_comutest
  2516 ;;		_ecran_blank
  2517 ;;		_ecran_print_one_char
  2518 ;;		_ecran_wait
  2519 ;; This function is called by:
  2520 ;;		_main
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text4
  2525  002190                     __ptext4:
  2526                           	opt stack 0
  2527  002190                     _micro_wait:
  2528                           	opt stack 23
  2529                           
  2530                           ;incstack = 0
  2531  002190  FFFF               	dw	65535
  2532                           
  2533                           ;micro.c: 93: switch (Micro.Step)
  2534  002192  D096               	goto	l6638
  2535  002194                     l823:
  2536                           
  2537                           ;micro.c: 96: if (Bouton[Bp_IdTest].State == 0)
  2538  002194  0100               	movlb	0	; () banked
  2539  002196  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  2540  002198  D09D               	goto	l841
  2541                           
  2542                           ; BSR set to: 0
  2543                           ;micro.c: 97: {
  2544                           ;micro.c: 98: Micro.Step = 0x01;
  2545  00219A  0100               	movlb	0	; () banked
  2546  00219C  6FC1               	movwf	??_micro_wait& (0+255),b
  2547  00219E  0E01               	movlw	1
  2548  0021A0  6E55               	movwf	_Micro+3,c
  2549  0021A2  0100               	movlb	0	; () banked
  2550  0021A4  51C1               	movf	??_micro_wait& (0+255),w,b
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;micro.c: 99: ecran_wait();
  2554  0021A6  ECA3  F01B         	call	_ecran_wait	;wreg free
  2555  0021AA  D094               	goto	l841
  2556  0021AC                     l826:
  2557                           
  2558                           ;micro.c: 103: if (Bouton[Bp_IdTest].State == 1)
  2559  0021AC  0100               	movlb	0	; () banked
  2560  0021AE  A393               	btfss	(_Bouton+5)& (0+255),1,b
  2561  0021B0  D091               	goto	l841
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;micro.c: 104: {
  2565                           ;micro.c: 105: Micro.Step = 0x03;
  2566  0021B2  0100               	movlb	0	; () banked
  2567  0021B4  6FC1               	movwf	??_micro_wait& (0+255),b
  2568  0021B6  0E03               	movlw	3
  2569  0021B8  6E55               	movwf	_Micro+3,c
  2570  0021BA  0100               	movlb	0	; () banked
  2571  0021BC  51C1               	movf	??_micro_wait& (0+255),w,b
  2572  0021BE  D08A               	goto	l841
  2573  0021C0                     l828:
  2574                           
  2575                           ;micro.c: 109: if (Bouton[Bp_IdTest].State == 0)
  2576  0021C0  0100               	movlb	0	; () banked
  2577  0021C2  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  2578  0021C4  D012               	goto	l829
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;micro.c: 110: {
  2582                           ;micro.c: 111: Micro.Phase = 0x01;
  2583  0021C6  0100               	movlb	0	; () banked
  2584  0021C8  6FC1               	movwf	??_micro_wait& (0+255),b
  2585  0021CA  0E01               	movlw	1
  2586  0021CC  6E54               	movwf	_Micro+2,c
  2587  0021CE  0100               	movlb	0	; () banked
  2588  0021D0  51C1               	movf	??_micro_wait& (0+255),w,b
  2589                           
  2590                           ;micro.c: 112: Test.Step = 0x01;
  2591  0021D2  0100               	movlb	0	; () banked
  2592  0021D4  6FC1               	movwf	??_micro_wait& (0+255),b
  2593  0021D6  0E01               	movlw	1
  2594  0021D8  6E2E               	movwf	_Test,c
  2595  0021DA  0100               	movlb	0	; () banked
  2596  0021DC  51C1               	movf	??_micro_wait& (0+255),w,b
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;micro.c: 113: check_comutest(0);
  2600  0021DE  0E00               	movlw	0
  2601  0021E0  ECA5  F019         	call	_check_comutest
  2602                           
  2603                           ;micro.c: 114: ecran_blank();
  2604  0021E4  ECEA  F018         	call	_ecran_blank	;wreg free
  2605                           
  2606                           ;micro.c: 115: }
  2607  0021E8  D016               	goto	l6610
  2608  0021EA                     l829:
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;micro.c: 116: else if (Bouton[Bp_On].State == 0)
  2612  0021EA  0100               	movlb	0	; () banked
  2613  0021EC  B390               	btfsc	(_Bouton+2)& (0+255),1,b
  2614  0021EE  D013               	goto	l6610
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;micro.c: 117: {
  2618                           ;micro.c: 118: Micro.Phase = 0x02;
  2619  0021F0  0100               	movlb	0	; () banked
  2620  0021F2  6FC1               	movwf	??_micro_wait& (0+255),b
  2621  0021F4  0E02               	movlw	2
  2622  0021F6  6E54               	movwf	_Micro+2,c
  2623  0021F8  0100               	movlb	0	; () banked
  2624  0021FA  51C1               	movf	??_micro_wait& (0+255),w,b
  2625                           
  2626                           ;micro.c: 119: Arm.Step = 0x01;
  2627  0021FC  0100               	movlb	0	; () banked
  2628  0021FE  6FC1               	movwf	??_micro_wait& (0+255),b
  2629  002200  0E01               	movlw	1
  2630  002202  0100               	movlb	0	; () banked
  2631  002204  0100               	movlb	0	; () banked
  2632  002206  6F9A               	movwf	_Arm& (0+255),b
  2633  002208  0100               	movlb	0	; () banked
  2634  00220A  51C1               	movf	??_micro_wait& (0+255),w,b
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;micro.c: 120: check_comutest(1);
  2638  00220C  0E01               	movlw	1
  2639  00220E  ECA5  F019         	call	_check_comutest
  2640                           
  2641                           ;micro.c: 121: ecran_blank();
  2642  002212  ECEA  F018         	call	_ecran_blank	;wreg free
  2643  002216                     l6610:
  2644                           
  2645                           ;micro.c: 122: }
  2646                           ;micro.c: 124: if (Bouton[Bp_Start].State == 0)
  2647  002216  0100               	movlb	0	; () banked
  2648  002218  B399               	btfsc	(_Bouton+11)& (0+255),1,b
  2649  00221A  D05C               	goto	l841
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;micro.c: 125: {
  2653                           ;micro.c: 126: unsigned short tempTime = Cptms;
  2654  00221C  C04F  F0C3         	movff	_Cptms,micro_wait@tempTime	;volatile
  2655  002220  C050  F0C4         	movff	_Cptms+1,micro_wait@tempTime+1	;volatile
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;micro.c: 128: ecran_blank();
  2659  002224  ECEA  F018         	call	_ecran_blank	;wreg free
  2660                           
  2661                           ;micro.c: 130: ecran_print_one_char(0, 'S');
  2662  002228  0100               	movlb	0	; () banked
  2663  00222A  6FC1               	movwf	??_micro_wait& (0+255),b
  2664  00222C  0E53               	movlw	83
  2665  00222E  0100               	movlb	0	; () banked
  2666  002230  0100               	movlb	0	; () banked
  2667  002232  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  2668  002234  0100               	movlb	0	; () banked
  2669  002236  51C1               	movf	??_micro_wait& (0+255),w,b
  2670  002238  0E00               	movlw	0
  2671  00223A  ECE0  F01A         	call	_ecran_print_one_char
  2672                           
  2673                           ;micro.c: 132: Micro.State = 0x08;
  2674  00223E  0100               	movlb	0	; () banked
  2675  002240  6FC1               	movwf	??_micro_wait& (0+255),b
  2676  002242  0E08               	movlw	8
  2677  002244  6E56               	movwf	_Micro+4,c
  2678  002246  0100               	movlb	0	; () banked
  2679  002248  51C1               	movf	??_micro_wait& (0+255),w,b
  2680                           
  2681                           ;micro.c: 134: while (PORTBbits.RB0 == 0)
  2682  00224A  D02F               	goto	l6630
  2683  00224C                     l6618:
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;micro.c: 135: {
  2687                           ;micro.c: 136: if ((((unsigned short) (Cptms - tempTime) > 1000) ? 1 : 0))
  2688  00224C  0100               	movlb	0	; () banked
  2689  00224E  C0C3  F0C1         	movff	micro_wait@tempTime,??_micro_wait
  2690  002252  0100               	movlb	0	; () banked
  2691  002254  C0C4  F0C2         	movff	micro_wait@tempTime+1,??_micro_wait+1
  2692  002258  0100               	movlb	0	; () banked
  2693  00225A  1FC1               	comf	??_micro_wait& (0+255),f,b
  2694  00225C  1FC2               	comf	(??_micro_wait+1)& (0+255),f,b
  2695  00225E  4BC1               	infsnz	??_micro_wait& (0+255),f,b
  2696  002260  2BC2               	incf	(??_micro_wait+1)& (0+255),f,b
  2697  002262  504F               	movf	_Cptms,w,c	;volatile
  2698  002264  0100               	movlb	0	; () banked
  2699  002266  27C1               	addwf	??_micro_wait& (0+255),f,b
  2700  002268  5050               	movf	_Cptms+1,w,c	;volatile
  2701  00226A  0100               	movlb	0	; () banked
  2702  00226C  23C2               	addwfc	(??_micro_wait+1)& (0+255),f,b
  2703  00226E  0EE9               	movlw	233
  2704  002270  0100               	movlb	0	; () banked
  2705  002272  5DC1               	subwf	??_micro_wait& (0+255),w,b
  2706  002274  0E03               	movlw	3
  2707  002276  59C2               	subwfb	(??_micro_wait+1)& (0+255),w,b
  2708  002278  A0D8               	btfss	status,0,c
  2709  00227A  D017               	goto	l6630
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;micro.c: 137: {
  2713                           ;micro.c: 138: tempTime = Cptms;
  2714  00227C  C04F  F0C3         	movff	_Cptms,micro_wait@tempTime	;volatile
  2715  002280  C050  F0C4         	movff	_Cptms+1,micro_wait@tempTime+1	;volatile
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;micro.c: 139: Micro.State = ((Micro.State == 0x08) ? 0x00 : 0x08);
  2719  002284  5056               	movf	_Micro+4,w,c
  2720  002286  0A08               	xorlw	8
  2721  002288  B4D8               	btfsc	status,2,c
  2722  00228A  D006               	goto	l6626
  2723                           
  2724                           ; BSR set to: 0
  2725  00228C  0E00               	movlw	0
  2726  00228E  0100               	movlb	0	; () banked
  2727  002290  0100               	movlb	0	; () banked
  2728  002292  6FC6               	movwf	(_micro_wait$2387+1)& (0+255),b
  2729  002294  0E08               	movlw	8
  2730  002296  D005               	goto	L23
  2731  002298                     l6626:
  2732                           
  2733                           ; BSR set to: 0
  2734  002298  0E00               	movlw	0
  2735  00229A  0100               	movlb	0	; () banked
  2736  00229C  0100               	movlb	0	; () banked
  2737  00229E  6FC6               	movwf	(_micro_wait$2387+1)& (0+255),b
  2738  0022A0  0E00               	movlw	0
  2739  0022A2                     L23:
  2740  0022A2  0100               	movlb	0	; () banked
  2741  0022A4  6FC5               	movwf	_micro_wait$2387& (0+255),b
  2742                           
  2743                           ; BSR set to: 0
  2744                           
  2745                           ; BSR set to: 0
  2746  0022A6  C0C5  F056         	movff	_micro_wait$2387,_Micro+4
  2747  0022AA                     l6630:
  2748                           
  2749                           ; BSR set to: 0
  2750  0022AA  A081               	btfss	3969,0,c	;volatile
  2751  0022AC  D7CF               	goto	l6618
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;micro.c: 140: }
  2755                           ;micro.c: 141: };
  2756                           ;micro.c: 143: Micro.State = 0x00;
  2757                           
  2758                           ; BSR set to: 0
  2759  0022AE  0100               	movlb	0	; () banked
  2760  0022B0  6FC1               	movwf	??_micro_wait& (0+255),b
  2761  0022B2  0E00               	movlw	0
  2762  0022B4  6E56               	movwf	_Micro+4,c
  2763  0022B6  0100               	movlb	0	; () banked
  2764  0022B8  51C1               	movf	??_micro_wait& (0+255),w,b
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;micro.c: 145: ecran_wait();
  2768  0022BA  ECA3  F01B         	call	_ecran_wait	;wreg free
  2769  0022BE  D00A               	goto	l841
  2770  0022C0                     l6638:
  2771  0022C0  5055               	movf	_Micro+3,w,c
  2772                           
  2773                           ; Switch size 1, requested type "space"
  2774                           ; Number of cases is 3, Range of values is 0 to 3
  2775                           ; switch strategies available:
  2776                           ; Name         Instructions Cycles
  2777                           ; simple_byte           10     6 (average)
  2778                           ;	Chosen strategy is simple_byte
  2779  0022C2  0A00               	xorlw	0	; case 0
  2780  0022C4  B4D8               	btfsc	status,2,c
  2781  0022C6  D766               	goto	l823
  2782  0022C8  0A01               	xorlw	1	; case 1
  2783  0022CA  B4D8               	btfsc	status,2,c
  2784  0022CC  D76F               	goto	l826
  2785  0022CE  0A02               	xorlw	2	; case 3
  2786  0022D0  B4D8               	btfsc	status,2,c
  2787  0022D2  D776               	goto	l828
  2788  0022D4                     l841:
  2789  0022D4  0012               	return	
  2790  0022D6  FFFF               	dw	65535	; errata NOP
  2791  0022D8                     __end_of_micro_wait:
  2792                           	opt stack 0
  2793                           tblptru	equ	0xFF8
  2794                           tblptrh	equ	0xFF7
  2795                           tblptrl	equ	0xFF6
  2796                           tablat	equ	0xFF5
  2797                           prodh	equ	0xFF4
  2798                           prodl	equ	0xFF3
  2799                           postinc0	equ	0xFEE
  2800                           wreg	equ	0xFE8
  2801                           postdec1	equ	0xFE5
  2802                           fsr1l	equ	0xFE1
  2803                           indf2	equ	0xFDF
  2804                           postinc2	equ	0xFDE
  2805                           postdec2	equ	0xFDD
  2806                           fsr2h	equ	0xFDA
  2807                           fsr2l	equ	0xFD9
  2808                           status	equ	0xFD8
  2809                           
  2810 ;; *************** function _micro_config *****************
  2811 ;; Defined at:
  2812 ;;		line 39 in file "micro.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;		None
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;		None
  2817 ;; Return value:  Size  Location     Type
  2818 ;;		None               void
  2819 ;; Registers used:
  2820 ;;		wreg, status,2
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2826 ;;      Params:         0       0       0       0       0       0       0
  2827 ;;      Locals:         0       0       0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0
  2829 ;;      Totals:         0       0       0       0       0       0       0
  2830 ;;Total ram usage:        0 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; Hardware stack levels required when called:    3
  2833 ;; This function calls:
  2834 ;;		Nothing
  2835 ;; This function is called by:
  2836 ;;		_main
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text5
  2841  0036BE                     __ptext5:
  2842                           	opt stack 0
  2843  0036BE                     _micro_config:
  2844                           	opt stack 27
  2845                           
  2846                           ;incstack = 0
  2847  0036BE  FFFF               	dw	65535
  2848                           
  2849                           ;micro.c: 43: T0CON = 0x88;
  2850  0036C0  0E88               	movlw	136
  2851  0036C2  6ED5               	movwf	4053,c	;volatile
  2852                           
  2853                           ;micro.c: 64: TMR0H = 0xF0;
  2854  0036C4  0EF0               	movlw	240
  2855  0036C6  6ED7               	movwf	4055,c	;volatile
  2856                           
  2857                           ;micro.c: 65: TMR0L = 0x8C;
  2858  0036C8  0E8C               	movlw	140
  2859  0036CA  6ED6               	movwf	4054,c	;volatile
  2860                           
  2861                           ;micro.c: 69: ADCON0 = 0x80;
  2862  0036CC  0E80               	movlw	128
  2863  0036CE  6EC2               	movwf	4034,c	;volatile
  2864                           
  2865                           ;micro.c: 75: ADCON1 = 0xC4;
  2866  0036D0  0EC4               	movlw	196
  2867  0036D2  6EC1               	movwf	4033,c	;volatile
  2868                           
  2869                           ;micro.c: 82: TMR0IP = 1;
  2870  0036D4  84F1               	bsf	intcon2,2,c	;volatile
  2871                           
  2872                           ;micro.c: 83: TMR0IE = 1;
  2873  0036D6  8AF2               	bsf	intcon,5,c	;volatile
  2874                           
  2875                           ;micro.c: 84: IPEN = 1;
  2876  0036D8  8ED0               	bsf	4048,7,c	;volatile
  2877                           
  2878                           ;micro.c: 85: GIE = 1;
  2879  0036DA  8EF2               	bsf	intcon,7,c	;volatile
  2880                           
  2881                           ;micro.c: 87: Micro.Time = Cptms;
  2882  0036DC  C04F  F052         	movff	_Cptms,_Micro	;volatile
  2883  0036E0  C050  F053         	movff	_Cptms+1,_Micro+1	;volatile
  2884                           
  2885                           ;micro.c: 88: Ecran.tRate = 255;
  2886  0036E4  0100               	movlb	0	; () banked
  2887  0036E6  0100               	movlb	0	; () banked
  2888  0036E8  69B6               	setf	(_Ecran+12)& (0+255),b
  2889                           
  2890                           ; BSR set to: 0
  2891  0036EA  0012               	return	
  2892  0036EC  FFFF               	dw	65535	; errata NOP
  2893  0036EE                     __end_of_micro_config:
  2894                           	opt stack 0
  2895                           tblptru	equ	0xFF8
  2896                           tblptrh	equ	0xFF7
  2897                           tblptrl	equ	0xFF6
  2898                           tablat	equ	0xFF5
  2899                           prodh	equ	0xFF4
  2900                           prodl	equ	0xFF3
  2901                           intcon	equ	0xFF2
  2902                           intcon2	equ	0xFF1
  2903                           postinc0	equ	0xFEE
  2904                           wreg	equ	0xFE8
  2905                           postdec1	equ	0xFE5
  2906                           fsr1l	equ	0xFE1
  2907                           indf2	equ	0xFDF
  2908                           postinc2	equ	0xFDE
  2909                           postdec2	equ	0xFDD
  2910                           fsr2h	equ	0xFDA
  2911                           fsr2l	equ	0xFD9
  2912                           status	equ	0xFD8
  2913                           
  2914 ;; *************** function _hw_config *****************
  2915 ;; Defined at:
  2916 ;;		line 3 in file "hardware.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;		None               void
  2923 ;; Registers used:
  2924 ;;		wreg, status,2
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2930 ;;      Params:         0       0       0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0
  2933 ;;      Totals:         0       0       0       0       0       0       0
  2934 ;;Total ram usage:        0 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    3
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_main
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text6
  2945  00323A                     __ptext6:
  2946                           	opt stack 0
  2947  00323A                     _hw_config:
  2948                           	opt stack 27
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;incstack = 0
  2952  00323A  FFFF               	dw	65535
  2953                           
  2954                           ;hardware.c: 6: ADCON1 = 0x07;
  2955  00323C  0E07               	movlw	7
  2956  00323E  6EC1               	movwf	4033,c	;volatile
  2957                           
  2958                           ;hardware.c: 10: PORTA = 0;
  2959  003240  0E00               	movlw	0
  2960  003242  6E80               	movwf	3968,c	;volatile
  2961                           
  2962                           ;hardware.c: 12: TRISAbits.TRISA0 = 1;
  2963  003244  8092               	bsf	3986,0,c	;volatile
  2964                           
  2965                           ;hardware.c: 13: TRISAbits.TRISA1 = 1;
  2966  003246  8292               	bsf	3986,1,c	;volatile
  2967                           
  2968                           ;hardware.c: 14: TRISAbits.TRISA2 = 0;
  2969  003248  9492               	bcf	3986,2,c	;volatile
  2970                           
  2971                           ;hardware.c: 15: TRISAbits.TRISA3 = 1;
  2972  00324A  8692               	bsf	3986,3,c	;volatile
  2973                           
  2974                           ;hardware.c: 16: TRISAbits.TRISA4 = 1;
  2975  00324C  8892               	bsf	3986,4,c	;volatile
  2976                           
  2977                           ;hardware.c: 17: TRISAbits.TRISA5 = 0;
  2978  00324E  9A92               	bcf	3986,5,c	;volatile
  2979                           
  2980                           ;hardware.c: 20: PORTB = 0;
  2981  003250  0E00               	movlw	0
  2982  003252  6E81               	movwf	3969,c	;volatile
  2983                           
  2984                           ;hardware.c: 22: TRISBbits.TRISB0 = 1;
  2985  003254  8093               	bsf	3987,0,c	;volatile
  2986                           
  2987                           ;hardware.c: 23: TRISBbits.TRISB1 = 0;
  2988  003256  9293               	bcf	3987,1,c	;volatile
  2989                           
  2990                           ;hardware.c: 24: TRISBbits.TRISB2 = 0;
  2991  003258  9493               	bcf	3987,2,c	;volatile
  2992                           
  2993                           ;hardware.c: 25: TRISBbits.TRISB3 = 0;
  2994  00325A  9693               	bcf	3987,3,c	;volatile
  2995                           
  2996                           ;hardware.c: 26: TRISBbits.TRISB4 = 0;
  2997  00325C  9893               	bcf	3987,4,c	;volatile
  2998                           
  2999                           ;hardware.c: 27: TRISBbits.TRISB5 = 0;
  3000  00325E  9A93               	bcf	3987,5,c	;volatile
  3001                           
  3002                           ;hardware.c: 28: TRISBbits.TRISB6 = 1;
  3003  003260  8C93               	bsf	3987,6,c	;volatile
  3004                           
  3005                           ;hardware.c: 29: TRISBbits.TRISB7 = 1;
  3006  003262  8E93               	bsf	3987,7,c	;volatile
  3007                           
  3008                           ;hardware.c: 32: PORTC = 0;
  3009  003264  0E00               	movlw	0
  3010  003266  6E82               	movwf	3970,c	;volatile
  3011                           
  3012                           ;hardware.c: 34: TRISCbits.TRISC0 = 0;
  3013  003268  9094               	bcf	3988,0,c	;volatile
  3014                           
  3015                           ;hardware.c: 35: TRISCbits.TRISC1 = 0;
  3016  00326A  9294               	bcf	3988,1,c	;volatile
  3017                           
  3018                           ;hardware.c: 36: TRISCbits.TRISC2 = 0;
  3019  00326C  9494               	bcf	3988,2,c	;volatile
  3020                           
  3021                           ;hardware.c: 37: TRISCbits.TRISC3 = 0;
  3022  00326E  9694               	bcf	3988,3,c	;volatile
  3023                           
  3024                           ;hardware.c: 38: TRISCbits.TRISC4 = 0;
  3025  003270  9894               	bcf	3988,4,c	;volatile
  3026                           
  3027                           ;hardware.c: 39: TRISCbits.TRISC5 = 1;
  3028  003272  8A94               	bsf	3988,5,c	;volatile
  3029                           
  3030                           ;hardware.c: 40: TRISCbits.TRISC6 = 0;
  3031  003274  9C94               	bcf	3988,6,c	;volatile
  3032                           
  3033                           ;hardware.c: 41: TRISCbits.TRISC7 = 1;
  3034  003276  8E94               	bsf	3988,7,c	;volatile
  3035                           
  3036                           ;hardware.c: 44: PORTD = 0;
  3037  003278  0E00               	movlw	0
  3038  00327A  6E83               	movwf	3971,c	;volatile
  3039                           
  3040                           ;hardware.c: 46: TRISDbits.TRISD0 = 0;
  3041  00327C  9095               	bcf	3989,0,c	;volatile
  3042                           
  3043                           ;hardware.c: 47: TRISDbits.TRISD1 = 0;
  3044  00327E  9295               	bcf	3989,1,c	;volatile
  3045                           
  3046                           ;hardware.c: 48: TRISDbits.TRISD2 = 0;
  3047  003280  9495               	bcf	3989,2,c	;volatile
  3048                           
  3049                           ;hardware.c: 49: TRISDbits.TRISD3 = 0;
  3050  003282  9695               	bcf	3989,3,c	;volatile
  3051                           
  3052                           ;hardware.c: 50: TRISDbits.TRISD4 = 0;
  3053  003284  9895               	bcf	3989,4,c	;volatile
  3054                           
  3055                           ;hardware.c: 51: TRISDbits.TRISD5 = 0;
  3056  003286  9A95               	bcf	3989,5,c	;volatile
  3057                           
  3058                           ;hardware.c: 52: TRISDbits.TRISD6 = 0;
  3059  003288  9C95               	bcf	3989,6,c	;volatile
  3060                           
  3061                           ;hardware.c: 53: TRISDbits.TRISD7 = 0;
  3062  00328A  9E95               	bcf	3989,7,c	;volatile
  3063                           
  3064                           ;hardware.c: 56: PORTE = 0;
  3065  00328C  0E00               	movlw	0
  3066  00328E  6E84               	movwf	3972,c	;volatile
  3067                           
  3068                           ;hardware.c: 58: TRISEbits.TRISE0 = 1;
  3069  003290  8096               	bsf	3990,0,c	;volatile
  3070                           
  3071                           ;hardware.c: 59: TRISEbits.TRISE1 = 1;
  3072  003292  8296               	bsf	3990,1,c	;volatile
  3073                           
  3074                           ;hardware.c: 60: TRISEbits.TRISE2 = 0;
  3075  003294  9496               	bcf	3990,2,c	;volatile
  3076  003296  0012               	return	
  3077  003298  FFFF               	dw	65535	; errata NOP
  3078  00329A                     __end_of_hw_config:
  3079                           	opt stack 0
  3080                           tblptru	equ	0xFF8
  3081                           tblptrh	equ	0xFF7
  3082                           tblptrl	equ	0xFF6
  3083                           tablat	equ	0xFF5
  3084                           prodh	equ	0xFF4
  3085                           prodl	equ	0xFF3
  3086                           intcon	equ	0xFF2
  3087                           intcon2	equ	0xFF1
  3088                           postinc0	equ	0xFEE
  3089                           wreg	equ	0xFE8
  3090                           postdec1	equ	0xFE5
  3091                           fsr1l	equ	0xFE1
  3092                           indf2	equ	0xFDF
  3093                           postinc2	equ	0xFDE
  3094                           postdec2	equ	0xFDD
  3095                           fsr2h	equ	0xFDA
  3096                           fsr2l	equ	0xFD9
  3097                           status	equ	0xFD8
  3098                           
  3099 ;; *************** function _feu_process *****************
  3100 ;; Defined at:
  3101 ;;		line 110 in file "feu.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;		None
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;		None
  3106 ;; Return value:  Size  Location     Type
  3107 ;;		None               void
  3108 ;; Registers used:
  3109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3115 ;;      Params:         0       0       0       0       0       0       0
  3116 ;;      Locals:         0       0       0       0       0       0       0
  3117 ;;      Temps:          0       2       0       0       0       0       0
  3118 ;;      Totals:         0       2       0       0       0       0       0
  3119 ;;Total ram usage:        2 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:    5
  3122 ;; This function calls:
  3123 ;;		_delay_ms
  3124 ;;		_feu_check_end
  3125 ;;		_feu_check_end_P0
  3126 ;;		_feu_check_pause
  3127 ;;		_feu_tir
  3128 ;; This function is called by:
  3129 ;;		_main
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text7
  3134  000FFC                     __ptext7:
  3135                           	opt stack 0
  3136  000FFC                     _feu_process:
  3137                           	opt stack 25
  3138                           
  3139                           ;incstack = 0
  3140  000FFC  FFFF               	dw	65535
  3141                           
  3142                           ;feu.c: 112: switch (Feu.Step)
  3143  000FFE  D13E               	goto	l6976
  3144  001000                     l1155:
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;feu.c: 116: if (Bouton[Bp_Start].State == 0)
  3148  001000  0100               	movlb	0	; () banked
  3149  001002  B399               	btfsc	(_Bouton+11)& (0+255),1,b
  3150  001004  D15F               	goto	l1186
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;feu.c: 117: {
  3154                           ;feu.c: 118: if (Micro.Mods == 0) {Feu.Step = 0x01;}
  3155  001006  6657               	tstfsz	_Micro+5,c
  3156  001008  D004               	goto	l6892
  3157                           
  3158                           ; BSR set to: 0
  3159  00100A  0100               	movlb	0	; () banked
  3160  00100C  6FC1               	movwf	??_feu_process& (0+255),b
  3161  00100E  0E01               	movlw	1
  3162  001010  D003               	goto	L24
  3163  001012                     l6892:
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;feu.c: 119: else {Feu.Step = 0x03;}
  3167  001012  0100               	movlb	0	; () banked
  3168  001014  6FC1               	movwf	??_feu_process& (0+255),b
  3169  001016  0E03               	movlw	3
  3170  001018                     L24:
  3171  001018  0100               	movlb	0	; () banked
  3172  00101A  0100               	movlb	0	; () banked
  3173  00101C  6F80               	movwf	_Feu& (0+255),b
  3174  00101E  0100               	movlb	0	; () banked
  3175  001020  51C1               	movf	??_feu_process& (0+255),w,b
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;feu.c: 121: Micro.State = 0x02;
  3179  001022  0100               	movlb	0	; () banked
  3180  001024  6FC1               	movwf	??_feu_process& (0+255),b
  3181  001026  0E02               	movlw	2
  3182  001028  6E56               	movwf	_Micro+4,c
  3183  00102A  0100               	movlb	0	; () banked
  3184  00102C  51C1               	movf	??_feu_process& (0+255),w,b
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;feu.c: 123: (INTCONbits.GIE = 0);
  3188  00102E  9EF2               	bcf	intcon,7,c	;volatile
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;feu.c: 124: Decompte = 50;
  3192  001030  0E32               	movlw	50
  3193  001032  6E51               	movwf	_Decompte,c	;volatile
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;feu.c: 125: Cpt1Sur20s = 0;
  3197  001034  0E00               	movlw	0
  3198  001036  6E4E               	movwf	_Cpt1Sur20s+1,c	;volatile
  3199  001038  0E00               	movlw	0
  3200  00103A  6E4D               	movwf	_Cpt1Sur20s,c	;volatile
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;feu.c: 126: (INTCONbits.GIE = 1);
  3204  00103C  8EF2               	bsf	intcon,7,c	;volatile
  3205                           
  3206                           ;feu.c: 128: Feu.LastOutput = 0;
  3207  00103E  0100               	movlb	0	; () banked
  3208  001040  6FC1               	movwf	??_feu_process& (0+255),b
  3209  001042  0E00               	movlw	0
  3210  001044  0100               	movlb	0	; () banked
  3211  001046  0100               	movlb	0	; () banked
  3212  001048  6F8B               	movwf	(_Feu+11)& (0+255),b
  3213  00104A  0100               	movlb	0	; () banked
  3214  00104C  51C1               	movf	??_feu_process& (0+255),w,b
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;feu.c: 130: Feu.CanStopStart = 0;
  3218  00104E  0100               	movlb	0	; () banked
  3219  001050  0100               	movlb	0	; () banked
  3220  001052  918D               	bcf	(_Feu+13)& (0+255),0,b
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;feu.c: 131: Feu.TimeStart = Cptms;
  3224  001054  C04F  F089         	movff	_Cptms,_Feu+9	;volatile
  3225  001058  C050  F08A         	movff	_Cptms+1,_Feu+10	;volatile
  3226  00105C  D133               	goto	l1186
  3227  00105E                     l6906:
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;feu.c: 136: Feu.NextOutput = Cf.Data[Feu.Cpt*3];
  3231  00105E  0100               	movlb	0	; () banked
  3232  001060  0100               	movlb	0	; () banked
  3233  001062  5181               	movf	(_Feu+1)& (0+255),w,b
  3234  001064  0D03               	mullw	3
  3235  001066  0101               	movlb	1	; () banked
  3236  001068  0E00               	movlw	low _Cf	;volatile
  3237  00106A  24F3               	addwf	prodl,w,c
  3238  00106C  6ED9               	movwf	fsr2l,c
  3239  00106E  0101               	movlb	1	; () banked
  3240  001070  0E01               	movlw	high _Cf	;volatile
  3241  001072  20F4               	addwfc	prodh,w,c
  3242  001074  6EDA               	movwf	fsr2h,c
  3243  001076  50DF               	movf	indf2,w,c
  3244  001078  0100               	movlb	0	; () banked
  3245  00107A  0100               	movlb	0	; () banked
  3246  00107C  6F8C               	movwf	(_Feu+12)& (0+255),b
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;feu.c: 138: if (feu_check_pause() == 1) {Feu.Step = 0x09;}
  3250  00107E  ECEE  F01B         	call	_feu_check_pause	;wreg free
  3251  001082  0100               	movlb	0	; () banked
  3252  001084  6FC1               	movwf	??_feu_process& (0+255),b
  3253  001086  0100               	movlb	0	; () banked
  3254  001088  05C1               	decf	??_feu_process& (0+255),w,b
  3255  00108A  A4D8               	btfss	status,2,c
  3256  00108C  D004               	goto	l6912
  3257                           
  3258                           ; BSR set to: 0
  3259  00108E  0100               	movlb	0	; () banked
  3260  001090  6FC1               	movwf	??_feu_process& (0+255),b
  3261  001092  0E09               	movlw	9
  3262  001094  D0D0               	goto	L33
  3263  001096                     l6912:
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;feu.c: 139: else if (feu_check_end() == 1) {Feu.Step = 0x08;}
  3267  001096  ECC4  F01B         	call	_feu_check_end	;wreg free
  3268  00109A  0100               	movlb	0	; () banked
  3269  00109C  6FC1               	movwf	??_feu_process& (0+255),b
  3270  00109E  0100               	movlb	0	; () banked
  3271  0010A0  05C1               	decf	??_feu_process& (0+255),w,b
  3272  0010A2  B4D8               	btfsc	status,2,c
  3273  0010A4  D054               	goto	L40
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;feu.c: 140: else
  3277                           ;feu.c: 141: {
  3278                           ;feu.c: 143: Feu.TimeToFire = Cf.Data[(Feu.Cpt*3) + 1] << 8;
  3279                           
  3280                           ; BSR set to: 0
  3281                           
  3282                           ; BSR set to: 0
  3283  0010A6  0100               	movlb	0	; () banked
  3284  0010A8  0100               	movlb	0	; () banked
  3285  0010AA  5181               	movf	(_Feu+1)& (0+255),w,b
  3286  0010AC  0D03               	mullw	3
  3287  0010AE  0E01               	movlw	1
  3288  0010B0  26F3               	addwf	prodl,f,c
  3289  0010B2  0E00               	movlw	0
  3290  0010B4  22F4               	addwfc	prodh,f,c
  3291  0010B6  0101               	movlb	1	; () banked
  3292  0010B8  0E00               	movlw	low _Cf	;volatile
  3293  0010BA  24F3               	addwf	prodl,w,c
  3294  0010BC  6ED9               	movwf	fsr2l,c
  3295  0010BE  0101               	movlb	1	; () banked
  3296  0010C0  0E01               	movlw	high _Cf	;volatile
  3297  0010C2  20F4               	addwfc	prodh,w,c
  3298  0010C4  6EDA               	movwf	fsr2h,c
  3299  0010C6  50DF               	movf	indf2,w,c
  3300  0010C8  0100               	movlb	0	; () banked
  3301  0010CA  0100               	movlb	0	; () banked
  3302  0010CC  6F86               	movwf	(_Feu+6)& (0+255),b
  3303  0010CE  0100               	movlb	0	; () banked
  3304  0010D0  6B85               	clrf	(_Feu+5)& (0+255),b
  3305                           
  3306                           ;feu.c: 144: Feu.TimeToFire |= Cf.Data[(Feu.Cpt*3) + 2];
  3307  0010D2  0100               	movlb	0	; () banked
  3308  0010D4  0100               	movlb	0	; () banked
  3309  0010D6  5181               	movf	(_Feu+1)& (0+255),w,b
  3310  0010D8  0D03               	mullw	3
  3311  0010DA  0E02               	movlw	2
  3312  0010DC  26F3               	addwf	prodl,f,c
  3313  0010DE  0E00               	movlw	0
  3314  0010E0  22F4               	addwfc	prodh,f,c
  3315  0010E2  0101               	movlb	1	; () banked
  3316  0010E4  0E00               	movlw	low _Cf	;volatile
  3317  0010E6  24F3               	addwf	prodl,w,c
  3318  0010E8  6ED9               	movwf	fsr2l,c
  3319  0010EA  0101               	movlb	1	; () banked
  3320  0010EC  0E01               	movlw	high _Cf	;volatile
  3321  0010EE  20F4               	addwfc	prodh,w,c
  3322  0010F0  6EDA               	movwf	fsr2h,c
  3323  0010F2  50DF               	movf	indf2,w,c
  3324  0010F4  0100               	movlb	0	; () banked
  3325  0010F6  6FC1               	movwf	??_feu_process& (0+255),b
  3326  0010F8  0100               	movlb	0	; () banked
  3327  0010FA  51C1               	movf	??_feu_process& (0+255),w,b
  3328  0010FC  0100               	movlb	0	; () banked
  3329  0010FE  0100               	movlb	0	; () banked
  3330  001100  1385               	iorwf	(_Feu+5)& (0+255),f,b
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;feu.c: 146: Feu.Step = 0x02;
  3334  001102  0100               	movlb	0	; () banked
  3335  001104  6FC1               	movwf	??_feu_process& (0+255),b
  3336  001106  0E02               	movlw	2
  3337  001108  D096               	goto	L33
  3338  00110A                     l6920:
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;feu.c: 150: if (Cpt1Sur20s == Feu.TimeToFire)
  3342  00110A  0100               	movlb	0	; () banked
  3343  00110C  EE20  F085         	lfsr	2,_Feu+5
  3344  001110  52DE               	movf	postinc2,f,c
  3345  001112  504E               	movf	_Cpt1Sur20s+1,w,c	;volatile
  3346  001114  18DD               	xorwf	postdec2,w,c
  3347  001116  C04D  FFE8         	movff	_Cpt1Sur20s,wreg	;volatile
  3348  00111A  B4D8               	btfsc	status,2,c
  3349  00111C  18DF               	xorwf	indf2,w,c
  3350  00111E  A4D8               	btfss	status,2,c
  3351  001120  D0D1               	goto	l1186
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;feu.c: 151: {
  3355                           ;feu.c: 152: feu_tir(Feu.NextOutput);
  3356  001122  0100               	movlb	0	; () banked
  3357  001124  0100               	movlb	0	; () banked
  3358  001126  518C               	movf	(_Feu+12)& (0+255),w,b
  3359  001128  EC26  F01B         	call	_feu_tir
  3360  00112C  D081               	goto	L38
  3361  00112E                     l1167:
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;feu.c: 159: if (Micro.Mod.P_0 == 1)
  3365  00112E  A057               	btfss	_Micro+5,0,c
  3366  001130  D016               	goto	l1168
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;feu.c: 160: {
  3370                           ;feu.c: 161: Feu.NextOutput = Feu.Cpt+1;
  3371  001132  0100               	movlb	0	; () banked
  3372  001134  0100               	movlb	0	; () banked
  3373  001136  2981               	incf	(_Feu+1)& (0+255),w,b
  3374  001138  0100               	movlb	0	; () banked
  3375  00113A  0100               	movlb	0	; () banked
  3376  00113C  6F8C               	movwf	(_Feu+12)& (0+255),b
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;feu.c: 163: if (feu_check_end_P0() == 1) {Feu.Step = 0x08;}
  3380  00113E  ECB4  F01B         	call	_feu_check_end_P0	;wreg free
  3381  001142  0100               	movlb	0	; () banked
  3382  001144  6FC1               	movwf	??_feu_process& (0+255),b
  3383  001146  0100               	movlb	0	; () banked
  3384  001148  05C1               	decf	??_feu_process& (0+255),w,b
  3385  00114A  A4D8               	btfss	status,2,c
  3386  00114C  D004               	goto	l6932
  3387  00114E                     L40:
  3388                           
  3389                           ; BSR set to: 0
  3390  00114E  0100               	movlb	0	; () banked
  3391  001150  6FC1               	movwf	??_feu_process& (0+255),b
  3392  001152  0E08               	movlw	8
  3393  001154  D070               	goto	L33
  3394  001156                     l6932:
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;feu.c: 164: else {Feu.Step = 0x04;}
  3398  001156  0100               	movlb	0	; () banked
  3399  001158  6FC1               	movwf	??_feu_process& (0+255),b
  3400  00115A  0E04               	movlw	4
  3401  00115C  D06C               	goto	L33
  3402  00115E                     l1168:
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;feu.c: 166: else if (Micro.Mod.P_00 == 1)
  3406  00115E  A257               	btfss	_Micro+5,1,c
  3407  001160  D0B1               	goto	l1186
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;feu.c: 167: {
  3411                           ;feu.c: 168: Feu.NextOutput = Cf.Data[Feu.Cpt*3];
  3412  001162  0100               	movlb	0	; () banked
  3413  001164  0100               	movlb	0	; () banked
  3414  001166  5181               	movf	(_Feu+1)& (0+255),w,b
  3415  001168  0D03               	mullw	3
  3416  00116A  0101               	movlb	1	; () banked
  3417  00116C  0E00               	movlw	low _Cf	;volatile
  3418  00116E  24F3               	addwf	prodl,w,c
  3419  001170  6ED9               	movwf	fsr2l,c
  3420  001172  0101               	movlb	1	; () banked
  3421  001174  0E01               	movlw	high _Cf	;volatile
  3422  001176  20F4               	addwfc	prodh,w,c
  3423  001178  6EDA               	movwf	fsr2h,c
  3424  00117A  50DF               	movf	indf2,w,c
  3425  00117C  0100               	movlb	0	; () banked
  3426  00117E  0100               	movlb	0	; () banked
  3427  001180  6F8C               	movwf	(_Feu+12)& (0+255),b
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;feu.c: 170: if (feu_check_end() == 1) {Feu.Step = 0x08;}
  3431  001182  ECC4  F01B         	call	_feu_check_end	;wreg free
  3432  001186  D7DD               	goto	L41
  3433  001188                     l1175:
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;feu.c: 176: if (Bouton[Bp_Start].State == 0)
  3437  001188  0100               	movlb	0	; () banked
  3438  00118A  B399               	btfsc	(_Bouton+11)& (0+255),1,b
  3439  00118C  D09B               	goto	l1186
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;feu.c: 177: {
  3443                           ;feu.c: 178: delay_ms(15);
  3444  00118E  0E00               	movlw	0
  3445  001190  0100               	movlb	0	; () banked
  3446  001192  0100               	movlb	0	; () banked
  3447  001194  6FBB               	movwf	(delay_ms@TimeToWait+1)& (0+255),b
  3448  001196  0E0F               	movlw	15
  3449  001198  0100               	movlb	0	; () banked
  3450  00119A  6FBA               	movwf	delay_ms@TimeToWait& (0+255),b
  3451  00119C  ECBB  F01A         	call	_delay_ms	;wreg free
  3452                           
  3453                           ;feu.c: 180: feu_tir(Feu.NextOutput);
  3454  0011A0  0100               	movlb	0	; () banked
  3455  0011A2  0100               	movlb	0	; () banked
  3456  0011A4  518C               	movf	(_Feu+12)& (0+255),w,b
  3457  0011A6  EC26  F01B         	call	_feu_tir
  3458                           
  3459                           ;feu.c: 182: Feu.Step = 0x05;
  3460  0011AA  0100               	movlb	0	; () banked
  3461  0011AC  6FC1               	movwf	??_feu_process& (0+255),b
  3462  0011AE  0E05               	movlw	5
  3463  0011B0  0100               	movlb	0	; () banked
  3464  0011B2  0100               	movlb	0	; () banked
  3465  0011B4  6F80               	movwf	_Feu& (0+255),b
  3466  0011B6  0100               	movlb	0	; () banked
  3467  0011B8  51C1               	movf	??_feu_process& (0+255),w,b
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;feu.c: 183: Feu.Time = Cptms;
  3471  0011BA  C04F  F087         	movff	_Cptms,_Feu+7	;volatile
  3472  0011BE  C050  F088         	movff	_Cptms+1,_Feu+8	;volatile
  3473  0011C2  D080               	goto	l1186
  3474  0011C4                     l6948:
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;feu.c: 187: if ((((unsigned short) (Cptms - Feu.Time) > 200) ? 1 : 0))
  3478  0011C4  0100               	movlb	0	; () banked
  3479  0011C6  EE20  F087         	lfsr	2,_Feu+7
  3480  0011CA  CFDE F0C1          	movff	postinc2,??_feu_process
  3481  0011CE  CFDD F0C2          	movff	postdec2,??_feu_process+1
  3482  0011D2  0100               	movlb	0	; () banked
  3483  0011D4  1FC1               	comf	??_feu_process& (0+255),f,b
  3484  0011D6  1FC2               	comf	(??_feu_process+1)& (0+255),f,b
  3485  0011D8  4BC1               	infsnz	??_feu_process& (0+255),f,b
  3486  0011DA  2BC2               	incf	(??_feu_process+1)& (0+255),f,b
  3487  0011DC  504F               	movf	_Cptms,w,c	;volatile
  3488  0011DE  0100               	movlb	0	; () banked
  3489  0011E0  27C1               	addwf	??_feu_process& (0+255),f,b
  3490  0011E2  5050               	movf	_Cptms+1,w,c	;volatile
  3491  0011E4  0100               	movlb	0	; () banked
  3492  0011E6  23C2               	addwfc	(??_feu_process+1)& (0+255),f,b
  3493  0011E8  0EC9               	movlw	201
  3494  0011EA  0100               	movlb	0	; () banked
  3495  0011EC  5DC1               	subwf	??_feu_process& (0+255),w,b
  3496  0011EE  0E00               	movlw	0
  3497  0011F0  59C2               	subwfb	(??_feu_process+1)& (0+255),w,b
  3498  0011F2  A0D8               	btfss	status,0,c
  3499  0011F4  D067               	goto	l1186
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;feu.c: 188: {
  3503                           ;feu.c: 189: if (Bouton[Bp_Start].State == 1) {Feu.Step = 0x03;}
  3504  0011F6  0100               	movlb	0	; () banked
  3505  0011F8  A399               	btfss	(_Bouton+11)& (0+255),1,b
  3506  0011FA  D064               	goto	l1186
  3507                           
  3508                           ; BSR set to: 0
  3509  0011FC  0100               	movlb	0	; () banked
  3510  0011FE  6FC1               	movwf	??_feu_process& (0+255),b
  3511  001200  0E03               	movlw	3
  3512  001202  D019               	goto	L33
  3513  001204                     l1180:
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;feu.c: 193: if (Feu.SaveTime == 0)
  3517  001204  0100               	movlb	0	; () banked
  3518  001206  B38D               	btfsc	(_Feu+13)& (0+255),1,b
  3519  001208  D05D               	goto	l1186
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;feu.c: 194: {
  3523                           ;feu.c: 195: Feu.Decompte = Decompte;
  3524  00120A  C051  F082         	movff	_Decompte,_Feu+2	;volatile
  3525                           
  3526                           ;feu.c: 196: Feu.SavedTime = Cpt1Sur20s;
  3527  00120E  C04D  F083         	movff	_Cpt1Sur20s,_Feu+3	;volatile
  3528  001212  C04E  F084         	movff	_Cpt1Sur20s+1,_Feu+4	;volatile
  3529                           
  3530                           ;feu.c: 198: Feu.SaveTime = 1;
  3531  001216  0100               	movlb	0	; () banked
  3532  001218  0100               	movlb	0	; () banked
  3533  00121A  838D               	bsf	(_Feu+13)& (0+255),1,b
  3534  00121C  D053               	goto	l1186
  3535  00121E                     l1182:
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;feu.c: 202: Decompte = Feu.Decompte;
  3539  00121E  C082  F051         	movff	_Feu+2,_Decompte	;volatile
  3540                           
  3541                           ;feu.c: 203: Cpt1Sur20s = Feu.SavedTime;
  3542  001222  C083  F04D         	movff	_Feu+3,_Cpt1Sur20s	;volatile
  3543  001226  C084  F04E         	movff	_Feu+4,_Cpt1Sur20s+1	;volatile
  3544                           
  3545                           ;feu.c: 205: Feu.SaveTime = 0;
  3546  00122A  0100               	movlb	0	; () banked
  3547  00122C  0100               	movlb	0	; () banked
  3548  00122E  938D               	bcf	(_Feu+13)& (0+255),1,b
  3549  001230                     L38:
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;feu.c: 207: Feu.Step = 0x01;
  3553  001230  0100               	movlb	0	; () banked
  3554  001232  6FC1               	movwf	??_feu_process& (0+255),b
  3555  001234  0E01               	movlw	1
  3556  001236                     L33:
  3557  001236  0100               	movlb	0	; () banked
  3558  001238  0100               	movlb	0	; () banked
  3559  00123A  6F80               	movwf	_Feu& (0+255),b
  3560  00123C  D01C               	goto	L36
  3561  00123E                     l6958:
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;feu.c: 211: Micro.State = 0x04;
  3565  00123E  0100               	movlb	0	; () banked
  3566  001240  6FC1               	movwf	??_feu_process& (0+255),b
  3567  001242  0E04               	movlw	4
  3568  001244  D017               	goto	L37
  3569  001246                     l1184:
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;feu.c: 214: (INTCONbits.GIE = 0);
  3573  001246  9EF2               	bcf	intcon,7,c	;volatile
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;feu.c: 215: Decompte = 50;
  3577  001248  0E32               	movlw	50
  3578  00124A  6E51               	movwf	_Decompte,c	;volatile
  3579                           
  3580                           ;feu.c: 216: Cpt1Sur20s = 0;
  3581  00124C  0E00               	movlw	0
  3582  00124E  6E4E               	movwf	_Cpt1Sur20s+1,c	;volatile
  3583  001250  0E00               	movlw	0
  3584  001252  6E4D               	movwf	_Cpt1Sur20s,c	;volatile
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;feu.c: 217: (INTCONbits.GIE = 1);
  3588  001254  8EF2               	bsf	intcon,7,c	;volatile
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;feu.c: 219: Micro.State = 0x02;
  3592  001256  0100               	movlb	0	; () banked
  3593  001258  6FC1               	movwf	??_feu_process& (0+255),b
  3594  00125A  0E02               	movlw	2
  3595  00125C  6E56               	movwf	_Micro+4,c
  3596  00125E  0100               	movlb	0	; () banked
  3597  001260  51C1               	movf	??_feu_process& (0+255),w,b
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;feu.c: 221: Feu.LastOutput = Feu.NextOutput;
  3601  001262  C08C  F08B         	movff	_Feu+12,_Feu+11
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;feu.c: 222: Feu.Cpt ++;
  3605  001266  0100               	movlb	0	; () banked
  3606  001268  0100               	movlb	0	; () banked
  3607  00126A  2B81               	incf	(_Feu+1)& (0+255),f,b
  3608  00126C  D7E1               	goto	L38
  3609  00126E                     l6972:
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;feu.c: 228: Micro.State = 0x08;
  3613  00126E  0100               	movlb	0	; () banked
  3614  001270  6FC1               	movwf	??_feu_process& (0+255),b
  3615  001272  0E08               	movlw	8
  3616  001274                     L37:
  3617  001274  6E56               	movwf	_Micro+4,c
  3618  001276                     L36:
  3619  001276  0100               	movlb	0	; () banked
  3620  001278  51C1               	movf	??_feu_process& (0+255),w,b
  3621                           
  3622                           ;feu.c: 229: break;
  3623  00127A  D024               	goto	l1186
  3624  00127C                     l6976:
  3625  00127C  0100               	movlb	0	; () banked
  3626  00127E  0100               	movlb	0	; () banked
  3627  001280  5180               	movf	_Feu& (0+255),w,b
  3628                           
  3629                           ; Switch size 1, requested type "space"
  3630                           ; Number of cases is 11, Range of values is 0 to 10
  3631                           ; switch strategies available:
  3632                           ; Name         Instructions Cycles
  3633                           ; simple_byte           34    18 (average)
  3634                           ;	Chosen strategy is simple_byte
  3635  001282  0A00               	xorlw	0	; case 0
  3636  001284  B4D8               	btfsc	status,2,c
  3637  001286  D6BC               	goto	l1155
  3638  001288  0A01               	xorlw	1	; case 1
  3639  00128A  B4D8               	btfsc	status,2,c
  3640  00128C  D6E8               	goto	l6906
  3641  00128E  0A03               	xorlw	3	; case 2
  3642  001290  B4D8               	btfsc	status,2,c
  3643  001292  D73B               	goto	l6920
  3644  001294  0A01               	xorlw	1	; case 3
  3645  001296  B4D8               	btfsc	status,2,c
  3646  001298  D74A               	goto	l1167
  3647  00129A  0A07               	xorlw	7	; case 4
  3648  00129C  B4D8               	btfsc	status,2,c
  3649  00129E  D774               	goto	l1175
  3650  0012A0  0A01               	xorlw	1	; case 5
  3651  0012A2  B4D8               	btfsc	status,2,c
  3652  0012A4  D78F               	goto	l6948
  3653  0012A6  0A03               	xorlw	3	; case 6
  3654  0012A8  B4D8               	btfsc	status,2,c
  3655  0012AA  D7AC               	goto	l1180
  3656  0012AC  0A01               	xorlw	1	; case 7
  3657  0012AE  B4D8               	btfsc	status,2,c
  3658  0012B0  D7B6               	goto	l1182
  3659  0012B2  0A0F               	xorlw	15	; case 8
  3660  0012B4  B4D8               	btfsc	status,2,c
  3661  0012B6  D7DB               	goto	l6972
  3662  0012B8  0A01               	xorlw	1	; case 9
  3663  0012BA  B4D8               	btfsc	status,2,c
  3664  0012BC  D7C0               	goto	l6958
  3665  0012BE  0A03               	xorlw	3	; case 10
  3666  0012C0  B4D8               	btfsc	status,2,c
  3667  0012C2  D7C1               	goto	l1184
  3668  0012C4                     l1186:
  3669                           
  3670                           ; BSR set to: 0
  3671  0012C4  0012               	return	
  3672  0012C6  FFFF               	dw	65535	; errata NOP
  3673  0012C8                     __end_of_feu_process:
  3674                           	opt stack 0
  3675                           tblptru	equ	0xFF8
  3676                           tblptrh	equ	0xFF7
  3677                           tblptrl	equ	0xFF6
  3678                           tablat	equ	0xFF5
  3679                           prodh	equ	0xFF4
  3680                           prodl	equ	0xFF3
  3681                           intcon	equ	0xFF2
  3682                           intcon2	equ	0xFF1
  3683                           postinc0	equ	0xFEE
  3684                           wreg	equ	0xFE8
  3685                           postdec1	equ	0xFE5
  3686                           fsr1l	equ	0xFE1
  3687                           indf2	equ	0xFDF
  3688                           postinc2	equ	0xFDE
  3689                           postdec2	equ	0xFDD
  3690                           fsr2h	equ	0xFDA
  3691                           fsr2l	equ	0xFD9
  3692                           status	equ	0xFD8
  3693                           
  3694 ;; *************** function _feu_tir *****************
  3695 ;; Defined at:
  3696 ;;		line 23 in file "feu.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  Output          1    wreg     unsigned char 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  Output          1    6[BANK0 ] unsigned char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;		None               void
  3703 ;; Registers used:
  3704 ;;		wreg, status,2, status,0, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3710 ;;      Params:         0       0       0       0       0       0       0
  3711 ;;      Locals:         0       1       0       0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0
  3713 ;;      Totals:         0       1       0       0       0       0       0
  3714 ;;Total ram usage:        1 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    4
  3717 ;; This function calls:
  3718 ;;		_delay_ms
  3719 ;;		_register_write
  3720 ;; This function is called by:
  3721 ;;		_feu_process
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           	psect	text8
  3726  00364C                     __ptext8:
  3727                           	opt stack 0
  3728  00364C                     _feu_tir:
  3729                           	opt stack 25
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;incstack = 0
  3733  00364C  FFFF               	dw	65535
  3734                           
  3735                           ;feu_tir@Output stored from wreg
  3736  00364E  CFE8 F0C0          	movff	wreg,feu_tir@Output
  3737                           
  3738                           ;feu.c: 25: PORTAbits.RA5 = 1;
  3739  003652  8A80               	bsf	3968,5,c	;volatile
  3740                           
  3741                           ;feu.c: 26: PORTBbits.RB1 = 1;
  3742  003654  8281               	bsf	3969,1,c	;volatile
  3743                           
  3744                           ;feu.c: 28: register_write(Output);
  3745  003656  0100               	movlb	0	; () banked
  3746  003658  0100               	movlb	0	; () banked
  3747  00365A  51C0               	movf	feu_tir@Output& (0+255),w,b
  3748  00365C  EC47  F01A         	call	_register_write
  3749                           
  3750                           ;feu.c: 29: delay_ms(40);
  3751  003660  0E00               	movlw	0
  3752  003662  0100               	movlb	0	; () banked
  3753  003664  0100               	movlb	0	; () banked
  3754  003666  6FBB               	movwf	(delay_ms@TimeToWait+1)& (0+255),b
  3755  003668  0E28               	movlw	40
  3756  00366A  0100               	movlb	0	; () banked
  3757  00366C  6FBA               	movwf	delay_ms@TimeToWait& (0+255),b
  3758  00366E  ECBB  F01A         	call	_delay_ms	;wreg free
  3759                           
  3760                           ;feu.c: 30: register_write(0);
  3761  003672  0E00               	movlw	0
  3762  003674  EC47  F01A         	call	_register_write
  3763                           
  3764                           ;feu.c: 32: PORTBbits.RB1 = 0;
  3765  003678  9281               	bcf	3969,1,c	;volatile
  3766                           
  3767                           ;feu.c: 33: PORTAbits.RA5 = 0;
  3768  00367A  9A80               	bcf	3968,5,c	;volatile
  3769                           
  3770                           ;feu.c: 36: Feu.LastOutput = Feu.NextOutput;
  3771  00367C  C08C  F08B         	movff	_Feu+12,_Feu+11
  3772                           
  3773                           ;feu.c: 37: Feu.Cpt ++;
  3774  003680  0100               	movlb	0	; () banked
  3775  003682  0100               	movlb	0	; () banked
  3776  003684  2B81               	incf	(_Feu+1)& (0+255),f,b
  3777                           
  3778                           ; BSR set to: 0
  3779  003686  0012               	return	
  3780  003688  FFFF               	dw	65535	; errata NOP
  3781  00368A                     __end_of_feu_tir:
  3782                           	opt stack 0
  3783                           tblptru	equ	0xFF8
  3784                           tblptrh	equ	0xFF7
  3785                           tblptrl	equ	0xFF6
  3786                           tablat	equ	0xFF5
  3787                           prodh	equ	0xFF4
  3788                           prodl	equ	0xFF3
  3789                           intcon	equ	0xFF2
  3790                           intcon2	equ	0xFF1
  3791                           postinc0	equ	0xFEE
  3792                           wreg	equ	0xFE8
  3793                           postdec1	equ	0xFE5
  3794                           fsr1l	equ	0xFE1
  3795                           indf2	equ	0xFDF
  3796                           postinc2	equ	0xFDE
  3797                           postdec2	equ	0xFDD
  3798                           fsr2h	equ	0xFDA
  3799                           fsr2l	equ	0xFD9
  3800                           status	equ	0xFD8
  3801                           
  3802 ;; *************** function _register_write *****************
  3803 ;; Defined at:
  3804 ;;		line 3 in file "register.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  Output          1    wreg     unsigned char 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  Output          1    1[BANK0 ] unsigned char 
  3809 ;;  i               1    2[BANK0 ] unsigned char 
  3810 ;; Return value:  Size  Location     Type
  3811 ;;		None               void
  3812 ;; Registers used:
  3813 ;;		wreg, status,2, status,0
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3819 ;;      Params:         0       0       0       0       0       0       0
  3820 ;;      Locals:         0       2       0       0       0       0       0
  3821 ;;      Temps:          0       1       0       0       0       0       0
  3822 ;;      Totals:         0       3       0       0       0       0       0
  3823 ;;Total ram usage:        3 bytes
  3824 ;; Hardware stack levels used:    1
  3825 ;; Hardware stack levels required when called:    3
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		_test_process
  3830 ;;		_feu_tir
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           	psect	text9
  3835  00348E                     __ptext9:
  3836                           	opt stack 0
  3837  00348E                     _register_write:
  3838                           	opt stack 26
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;incstack = 0
  3842  00348E  FFFF               	dw	65535
  3843                           
  3844                           ;register_write@Output stored from wreg
  3845  003490  CFE8 F0BB          	movff	wreg,register_write@Output
  3846                           
  3847                           ;register.c: 5: unsigned char i;
  3848                           ;register.c: 8: PORTAbits.RA2 = 0;
  3849  003494  9480               	bcf	3968,2,c	;volatile
  3850                           
  3851                           ;register.c: 11: PORTBbits.RB2 = 0;
  3852  003496  9481               	bcf	3969,2,c	;volatile
  3853                           
  3854                           ;register.c: 12: PORTBbits.RB2 = 1;
  3855  003498  8481               	bsf	3969,2,c	;volatile
  3856                           
  3857                           ;register.c: 14: PORTBbits.RB3 = 0;
  3858  00349A  9681               	bcf	3969,3,c	;volatile
  3859                           
  3860                           ;register.c: 16: for (i = 32; i > 0; i --)
  3861  00349C  0100               	movlb	0	; () banked
  3862  00349E  6FBA               	movwf	??_register_write& (0+255),b
  3863  0034A0  0E20               	movlw	32
  3864  0034A2  0100               	movlb	0	; () banked
  3865  0034A4  0100               	movlb	0	; () banked
  3866  0034A6  6FBC               	movwf	register_write@i& (0+255),b
  3867  0034A8  0100               	movlb	0	; () banked
  3868  0034AA  51BA               	movf	??_register_write& (0+255),w,b
  3869  0034AC  D00F               	goto	L42
  3870  0034AE                     l928:
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;register.c: 17: {
  3874                           ;register.c: 18: PORTBbits.RB4 = 0;
  3875  0034AE  9881               	bcf	3969,4,c	;volatile
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;register.c: 20: if (Output == i) {PORTBbits.RB5 = 1;}
  3879  0034B0  0100               	movlb	0	; () banked
  3880  0034B2  0100               	movlb	0	; () banked
  3881  0034B4  51BC               	movf	register_write@i& (0+255),w,b
  3882  0034B6  0100               	movlb	0	; () banked
  3883  0034B8  0100               	movlb	0	; () banked
  3884  0034BA  63BB               	cpfseq	register_write@Output& (0+255),b
  3885  0034BC  D002               	goto	l930
  3886                           
  3887                           ; BSR set to: 0
  3888  0034BE  8A81               	bsf	3969,5,c	;volatile
  3889  0034C0  D001               	goto	l931
  3890  0034C2                     l930:
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;register.c: 21: else {PORTBbits.RB5 = 0;}
  3894  0034C2  9A81               	bcf	3969,5,c	;volatile
  3895  0034C4                     l931:
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;register.c: 23: PORTBbits.RB4 = 1;
  3899  0034C4  8881               	bsf	3969,4,c	;volatile
  3900                           
  3901                           ; BSR set to: 0
  3902  0034C6  0100               	movlb	0	; () banked
  3903  0034C8  0100               	movlb	0	; () banked
  3904  0034CA  07BC               	decf	register_write@i& (0+255),f,b
  3905  0034CC                     L42:
  3906                           
  3907                           ; BSR set to: 0
  3908  0034CC  0100               	movlb	0	; () banked
  3909  0034CE  0100               	movlb	0	; () banked
  3910  0034D0  67BC               	tstfsz	register_write@i& (0+255),b
  3911  0034D2  D7ED               	goto	l928
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;register.c: 24: }
  3915                           ;register.c: 26: PORTBbits.RB3 = 1;
  3916  0034D4  8681               	bsf	3969,3,c	;volatile
  3917                           
  3918                           ;register.c: 29: PORTAbits.RA2 = 1;
  3919  0034D6  8480               	bsf	3968,2,c	;volatile
  3920                           
  3921                           ; BSR set to: 0
  3922  0034D8  0012               	return	
  3923  0034DA  FFFF               	dw	65535	; errata NOP
  3924  0034DC                     __end_of_register_write:
  3925                           	opt stack 0
  3926                           tblptru	equ	0xFF8
  3927                           tblptrh	equ	0xFF7
  3928                           tblptrl	equ	0xFF6
  3929                           tablat	equ	0xFF5
  3930                           prodh	equ	0xFF4
  3931                           prodl	equ	0xFF3
  3932                           intcon	equ	0xFF2
  3933                           intcon2	equ	0xFF1
  3934                           postinc0	equ	0xFEE
  3935                           wreg	equ	0xFE8
  3936                           postdec1	equ	0xFE5
  3937                           fsr1l	equ	0xFE1
  3938                           indf2	equ	0xFDF
  3939                           postinc2	equ	0xFDE
  3940                           postdec2	equ	0xFDD
  3941                           fsr2h	equ	0xFDA
  3942                           fsr2l	equ	0xFD9
  3943                           status	equ	0xFD8
  3944                           
  3945 ;; *************** function _feu_check_pause *****************
  3946 ;; Defined at:
  3947 ;;		line 4 in file "feu.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;		None
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  1    wreg      unsigned char 
  3954 ;; Registers used:
  3955 ;;		wreg, status,2, status,0
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3961 ;;      Params:         0       0       0       0       0       0       0
  3962 ;;      Locals:         0       0       0       0       0       0       0
  3963 ;;      Temps:          0       0       0       0       0       0       0
  3964 ;;      Totals:         0       0       0       0       0       0       0
  3965 ;;Total ram usage:        0 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    3
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		_feu_process
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           	psect	text10
  3976  0037DC                     __ptext10:
  3977                           	opt stack 0
  3978  0037DC                     _feu_check_pause:
  3979                           	opt stack 26
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;incstack = 0
  3983  0037DC  FFFF               	dw	65535
  3984                           
  3985                           ;feu.c: 6: if (Feu.NextOutput == 99) {return 1;}
  3986  0037DE  0100               	movlb	0	; () banked
  3987  0037E0  0100               	movlb	0	; () banked
  3988  0037E2  518C               	movf	(_Feu+12)& (0+255),w,b
  3989  0037E4  0A63               	xorlw	99
  3990  0037E6  A4D8               	btfss	status,2,c
  3991  0037E8  D002               	goto	l6354
  3992                           
  3993                           ; BSR set to: 0
  3994  0037EA  0E01               	movlw	1
  3995  0037EC  D001               	goto	l1106
  3996  0037EE                     l6354:
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;feu.c: 7: else {return 0;}
  4000  0037EE  0E00               	movlw	0
  4001  0037F0                     l1106:
  4002                           
  4003                           ; BSR set to: 0
  4004  0037F0  0012               	return	
  4005  0037F2  FFFF               	dw	65535	; errata NOP
  4006  0037F4                     __end_of_feu_check_pause:
  4007                           	opt stack 0
  4008                           tblptru	equ	0xFF8
  4009                           tblptrh	equ	0xFF7
  4010                           tblptrl	equ	0xFF6
  4011                           tablat	equ	0xFF5
  4012                           prodh	equ	0xFF4
  4013                           prodl	equ	0xFF3
  4014                           intcon	equ	0xFF2
  4015                           intcon2	equ	0xFF1
  4016                           postinc0	equ	0xFEE
  4017                           wreg	equ	0xFE8
  4018                           postdec1	equ	0xFE5
  4019                           fsr1l	equ	0xFE1
  4020                           indf2	equ	0xFDF
  4021                           postinc2	equ	0xFDE
  4022                           postdec2	equ	0xFDD
  4023                           fsr2h	equ	0xFDA
  4024                           fsr2l	equ	0xFD9
  4025                           status	equ	0xFD8
  4026                           
  4027 ;; *************** function _feu_check_end_P0 *****************
  4028 ;; Defined at:
  4029 ;;		line 10 in file "feu.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;		None
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;		None
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      unsigned char 
  4036 ;; Registers used:
  4037 ;;		wreg, status,2, status,0
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4043 ;;      Params:         0       0       0       0       0       0       0
  4044 ;;      Locals:         0       0       0       0       0       0       0
  4045 ;;      Temps:          0       0       0       0       0       0       0
  4046 ;;      Totals:         0       0       0       0       0       0       0
  4047 ;;Total ram usage:        0 bytes
  4048 ;; Hardware stack levels used:    1
  4049 ;; Hardware stack levels required when called:    3
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_feu_process
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text11
  4058  003768                     __ptext11:
  4059                           	opt stack 0
  4060  003768                     _feu_check_end_P0:
  4061                           	opt stack 26
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;incstack = 0
  4065  003768  FFFF               	dw	65535
  4066                           
  4067                           ;feu.c: 12: if ((Feu.Cpt >= 32) || (Feu.NextOutput == 0)) {return 1;}
  4068  00376A  0E20               	movlw	32
  4069  00376C  0100               	movlb	0	; () banked
  4070  00376E  0100               	movlb	0	; () banked
  4071  003770  5D81               	subwf	(_Feu+1)& (0+255),w,b
  4072  003772  B0D8               	btfsc	status,0,c
  4073  003774  D004               	goto	l6362
  4074                           
  4075                           ; BSR set to: 0
  4076  003776  0100               	movlb	0	; () banked
  4077  003778  0100               	movlb	0	; () banked
  4078  00377A  678C               	tstfsz	(_Feu+12)& (0+255),b
  4079  00377C  D002               	goto	l6368
  4080  00377E                     l6362:
  4081                           
  4082                           ; BSR set to: 0
  4083  00377E  0E01               	movlw	1
  4084  003780  D001               	goto	l1113
  4085  003782                     l6368:
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;feu.c: 13: else {return 0;}
  4089  003782  0E00               	movlw	0
  4090  003784                     l1113:
  4091                           
  4092                           ; BSR set to: 0
  4093  003784  0012               	return	
  4094  003786  FFFF               	dw	65535	; errata NOP
  4095  003788                     __end_of_feu_check_end_P0:
  4096                           	opt stack 0
  4097                           tblptru	equ	0xFF8
  4098                           tblptrh	equ	0xFF7
  4099                           tblptrl	equ	0xFF6
  4100                           tablat	equ	0xFF5
  4101                           prodh	equ	0xFF4
  4102                           prodl	equ	0xFF3
  4103                           intcon	equ	0xFF2
  4104                           intcon2	equ	0xFF1
  4105                           postinc0	equ	0xFEE
  4106                           wreg	equ	0xFE8
  4107                           postdec1	equ	0xFE5
  4108                           fsr1l	equ	0xFE1
  4109                           indf2	equ	0xFDF
  4110                           postinc2	equ	0xFDE
  4111                           postdec2	equ	0xFDD
  4112                           fsr2h	equ	0xFDA
  4113                           fsr2l	equ	0xFD9
  4114                           status	equ	0xFD8
  4115                           
  4116 ;; *************** function _feu_check_end *****************
  4117 ;; Defined at:
  4118 ;;		line 17 in file "feu.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;		None
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;		None
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  1    wreg      unsigned char 
  4125 ;; Registers used:
  4126 ;;		wreg, status,2, status,0
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4132 ;;      Params:         0       0       0       0       0       0       0
  4133 ;;      Locals:         0       0       0       0       0       0       0
  4134 ;;      Temps:          0       0       0       0       0       0       0
  4135 ;;      Totals:         0       0       0       0       0       0       0
  4136 ;;Total ram usage:        0 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:    3
  4139 ;; This function calls:
  4140 ;;		Nothing
  4141 ;; This function is called by:
  4142 ;;		_feu_process
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text12
  4147  003788                     __ptext12:
  4148                           	opt stack 0
  4149  003788                     _feu_check_end:
  4150                           	opt stack 26
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;incstack = 0
  4154  003788  FFFF               	dw	65535
  4155                           
  4156                           ;feu.c: 19: if ((Feu.Cpt >= (32 + 5)) || (Feu.NextOutput == 0)) {return 1;}
  4157  00378A  0E25               	movlw	37
  4158  00378C  0100               	movlb	0	; () banked
  4159  00378E  0100               	movlb	0	; () banked
  4160  003790  5D81               	subwf	(_Feu+1)& (0+255),w,b
  4161  003792  B0D8               	btfsc	status,0,c
  4162  003794  D004               	goto	l6376
  4163                           
  4164                           ; BSR set to: 0
  4165  003796  0100               	movlb	0	; () banked
  4166  003798  0100               	movlb	0	; () banked
  4167  00379A  678C               	tstfsz	(_Feu+12)& (0+255),b
  4168  00379C  D002               	goto	l6382
  4169  00379E                     l6376:
  4170                           
  4171                           ; BSR set to: 0
  4172  00379E  0E01               	movlw	1
  4173  0037A0  D001               	goto	l1120
  4174  0037A2                     l6382:
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;feu.c: 20: else {return 0;}
  4178  0037A2  0E00               	movlw	0
  4179  0037A4                     l1120:
  4180                           
  4181                           ; BSR set to: 0
  4182  0037A4  0012               	return	
  4183  0037A6  FFFF               	dw	65535	; errata NOP
  4184  0037A8                     __end_of_feu_check_end:
  4185                           	opt stack 0
  4186                           tblptru	equ	0xFF8
  4187                           tblptrh	equ	0xFF7
  4188                           tblptrl	equ	0xFF6
  4189                           tablat	equ	0xFF5
  4190                           prodh	equ	0xFF4
  4191                           prodl	equ	0xFF3
  4192                           intcon	equ	0xFF2
  4193                           intcon2	equ	0xFF1
  4194                           postinc0	equ	0xFEE
  4195                           wreg	equ	0xFE8
  4196                           postdec1	equ	0xFE5
  4197                           fsr1l	equ	0xFE1
  4198                           indf2	equ	0xFDF
  4199                           postinc2	equ	0xFDE
  4200                           postdec2	equ	0xFDD
  4201                           fsr2h	equ	0xFDA
  4202                           fsr2l	equ	0xFD9
  4203                           status	equ	0xFD8
  4204                           
  4205 ;; *************** function _feu_check_bp *****************
  4206 ;; Defined at:
  4207 ;;		line 40 in file "feu.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;		None
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;		None
  4212 ;; Return value:  Size  Location     Type
  4213 ;;		None               void
  4214 ;; Registers used:
  4215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4221 ;;      Params:         0       0       0       0       0       0       0
  4222 ;;      Locals:         0       0       0       0       0       0       0
  4223 ;;      Temps:          0       2       0       0       0       0       0
  4224 ;;      Totals:         0       2       0       0       0       0       0
  4225 ;;Total ram usage:        2 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; Hardware stack levels required when called:    6
  4228 ;; This function calls:
  4229 ;;		_ecran_print_num
  4230 ;;		_ecran_print_one_char
  4231 ;; This function is called by:
  4232 ;;		_main
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text13
  4237  0014FC                     __ptext13:
  4238                           	opt stack 0
  4239  0014FC                     _feu_check_bp:
  4240                           	opt stack 24
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;incstack = 0
  4244  0014FC  FFFF               	dw	65535
  4245                           
  4246                           ;feu.c: 42: if ( (Micro.Stat.End == 1)
  4247                           ;feu.c: 43: && (Bouton[Bp_On].State == 0))
  4248  0014FE  A656               	btfss	_Micro+4,3,c
  4249  001500  D00C               	goto	l6986
  4250  001502  0100               	movlb	0	; () banked
  4251  001504  B390               	btfsc	(_Bouton+2)& (0+255),1,b
  4252  001506  D009               	goto	l6986
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;feu.c: 44: {
  4256                           ;feu.c: 45: Ecran.Digits = (char *) Version;
  4257  001508  0E06               	movlw	high _Version
  4258  00150A  0100               	movlb	0	; () banked
  4259  00150C  0100               	movlb	0	; () banked
  4260  00150E  6FAF               	movwf	(_Ecran+5)& (0+255),b
  4261  001510  0E10               	movlw	low _Version
  4262  001512  0100               	movlb	0	; () banked
  4263  001514  0100               	movlb	0	; () banked
  4264  001516  6FAE               	movwf	(_Ecran+4)& (0+255),b
  4265  001518  D096               	goto	l7026
  4266  00151A                     l6986:
  4267                           
  4268                           ;feu.c: 48: else if ( (Feu.Step == 0x09)
  4269                           ;feu.c: 49: && (Bouton[Bp_Start].State == 0))
  4270  00151A  0100               	movlb	0	; () banked
  4271  00151C  0100               	movlb	0	; () banked
  4272  00151E  5180               	movf	_Feu& (0+255),w,b
  4273  001520  0A09               	xorlw	9
  4274  001522  A4D8               	btfss	status,2,c
  4275  001524  D011               	goto	l1129
  4276                           
  4277                           ; BSR set to: 0
  4278  001526  0100               	movlb	0	; () banked
  4279  001528  B399               	btfsc	(_Bouton+11)& (0+255),1,b
  4280  00152A  D00E               	goto	l1129
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;feu.c: 50: {
  4284                           ;feu.c: 51: Feu.TimeStart = Cptms;
  4285  00152C  C04F  F089         	movff	_Cptms,_Feu+9	;volatile
  4286  001530  C050  F08A         	movff	_Cptms+1,_Feu+10	;volatile
  4287                           
  4288                           ;feu.c: 52: Feu.CanStopStart = 0;
  4289  001534  0100               	movlb	0	; () banked
  4290  001536  0100               	movlb	0	; () banked
  4291  001538  918D               	bcf	(_Feu+13)& (0+255),0,b
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;feu.c: 53: Feu.Step = 0x0A;
  4295  00153A  0100               	movlb	0	; () banked
  4296  00153C  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4297  00153E  0E0A               	movlw	10
  4298  001540  0100               	movlb	0	; () banked
  4299  001542  0100               	movlb	0	; () banked
  4300  001544  6F80               	movwf	_Feu& (0+255),b
  4301  001546  D0C0               	goto	L46
  4302  001548                     l1129:
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;feu.c: 55: else if ( (Bouton[Bp_Start].State == 1)
  4306                           ;feu.c: 56: && (Feu.CanStopStart == 0))
  4307  001548  0100               	movlb	0	; () banked
  4308  00154A  A399               	btfss	(_Bouton+11)& (0+255),1,b
  4309  00154C  D020               	goto	l1131
  4310                           
  4311                           ; BSR set to: 0
  4312  00154E  0100               	movlb	0	; () banked
  4313  001550  B18D               	btfsc	(_Feu+13)& (0+255),0,b
  4314  001552  D01D               	goto	l1131
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;feu.c: 57: {
  4318                           ;feu.c: 58: if ((((unsigned short) (Cptms - Feu.TimeStart) > 5000) ? 1 : 0))
  4319  001554  0100               	movlb	0	; () banked
  4320  001556  EE20  F089         	lfsr	2,_Feu+9
  4321  00155A  CFDE F0CF          	movff	postinc2,??_feu_check_bp
  4322  00155E  CFDD F0D0          	movff	postdec2,??_feu_check_bp+1
  4323  001562  0100               	movlb	0	; () banked
  4324  001564  1FCF               	comf	??_feu_check_bp& (0+255),f,b
  4325  001566  1FD0               	comf	(??_feu_check_bp+1)& (0+255),f,b
  4326  001568  4BCF               	infsnz	??_feu_check_bp& (0+255),f,b
  4327  00156A  2BD0               	incf	(??_feu_check_bp+1)& (0+255),f,b
  4328  00156C  504F               	movf	_Cptms,w,c	;volatile
  4329  00156E  0100               	movlb	0	; () banked
  4330  001570  27CF               	addwf	??_feu_check_bp& (0+255),f,b
  4331  001572  5050               	movf	_Cptms+1,w,c	;volatile
  4332  001574  0100               	movlb	0	; () banked
  4333  001576  23D0               	addwfc	(??_feu_check_bp+1)& (0+255),f,b
  4334  001578  0E89               	movlw	137
  4335  00157A  0100               	movlb	0	; () banked
  4336  00157C  5DCF               	subwf	??_feu_check_bp& (0+255),w,b
  4337  00157E  0E13               	movlw	19
  4338  001580  59D0               	subwfb	(??_feu_check_bp+1)& (0+255),w,b
  4339  001582  A0D8               	btfss	status,0,c
  4340  001584  D0A3               	goto	l1151
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;feu.c: 59: {
  4344                           ;feu.c: 60: Feu.CanStopStart = 1;
  4345  001586  0100               	movlb	0	; () banked
  4346  001588  0100               	movlb	0	; () banked
  4347  00158A  818D               	bsf	(_Feu+13)& (0+255),0,b
  4348  00158C  D09F               	goto	l1151
  4349  00158E                     l1131:
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;feu.c: 63: else if ( (Micro.Mods == 0)
  4353                           ;feu.c: 64: && (Feu.CanStopStart == 1)
  4354                           ;feu.c: 65: && (Bouton[Bp_Start].State == 0))
  4355  00158E  6657               	tstfsz	_Micro+5,c
  4356  001590  D02F               	goto	l1134
  4357                           
  4358                           ; BSR set to: 0
  4359  001592  0100               	movlb	0	; () banked
  4360  001594  A18D               	btfss	(_Feu+13)& (0+255),0,b
  4361  001596  D02C               	goto	l1134
  4362                           
  4363                           ; BSR set to: 0
  4364  001598  0100               	movlb	0	; () banked
  4365  00159A  B399               	btfsc	(_Bouton+11)& (0+255),1,b
  4366  00159C  D029               	goto	l1134
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;feu.c: 66: {
  4370                           ;feu.c: 67: if (Micro.Stat.Go == 1)
  4371  00159E  A256               	btfss	_Micro+4,1,c
  4372  0015A0  D00F               	goto	l1135
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;feu.c: 68: {
  4376                           ;feu.c: 69: Feu.Step = 0x06;
  4377  0015A2  0100               	movlb	0	; () banked
  4378  0015A4  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4379  0015A6  0E06               	movlw	6
  4380  0015A8  0100               	movlb	0	; () banked
  4381  0015AA  0100               	movlb	0	; () banked
  4382  0015AC  6F80               	movwf	_Feu& (0+255),b
  4383  0015AE  0100               	movlb	0	; () banked
  4384  0015B0  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4385                           
  4386                           ;feu.c: 70: Micro.State = 0x04;
  4387  0015B2  0100               	movlb	0	; () banked
  4388  0015B4  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4389  0015B6  0E04               	movlw	4
  4390  0015B8  6E56               	movwf	_Micro+4,c
  4391  0015BA  0100               	movlb	0	; () banked
  4392  0015BC  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4393                           
  4394                           ;feu.c: 71: }
  4395  0015BE  D014               	goto	l7012
  4396  0015C0                     l1135:
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;feu.c: 72: else if (Micro.Stat.Stop == 1)
  4400  0015C0  A456               	btfss	_Micro+4,2,c
  4401  0015C2  D012               	goto	l7012
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;feu.c: 73: {
  4405                           ;feu.c: 74: Feu.Step = 0x07;
  4406  0015C4  0100               	movlb	0	; () banked
  4407  0015C6  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4408  0015C8  0E07               	movlw	7
  4409  0015CA  0100               	movlb	0	; () banked
  4410  0015CC  0100               	movlb	0	; () banked
  4411  0015CE  6F80               	movwf	_Feu& (0+255),b
  4412  0015D0  0100               	movlb	0	; () banked
  4413  0015D2  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4414                           
  4415                           ;feu.c: 75: Micro.State = 0x02;
  4416  0015D4  0100               	movlb	0	; () banked
  4417  0015D6  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4418  0015D8  0E02               	movlw	2
  4419  0015DA  6E56               	movwf	_Micro+4,c
  4420  0015DC  0100               	movlb	0	; () banked
  4421  0015DE  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;feu.c: 76: Feu.TimeStart = Cptms;
  4425  0015E0  C04F  F089         	movff	_Cptms,_Feu+9	;volatile
  4426  0015E4  C050  F08A         	movff	_Cptms+1,_Feu+10	;volatile
  4427  0015E8                     l7012:
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;feu.c: 77: }
  4431                           ;feu.c: 79: Feu.CanStopStart = 0;
  4432  0015E8  0100               	movlb	0	; () banked
  4433  0015EA  0100               	movlb	0	; () banked
  4434  0015EC  918D               	bcf	(_Feu+13)& (0+255),0,b
  4435                           
  4436                           ;feu.c: 80: }
  4437  0015EE  D06E               	goto	l1151
  4438  0015F0                     l1134:
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;feu.c: 81: else if (Bouton[Comu_Test].State == 1)
  4442  0015F0  0100               	movlb	0	; () banked
  4443  0015F2  A396               	btfss	(_Bouton+8)& (0+255),1,b
  4444  0015F4  D006               	goto	l1139
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;feu.c: 82: {
  4448                           ;feu.c: 83: Ecran.Digits = (char *) ErreurTir;
  4449  0015F6  0E06               	movlw	high _ErreurTir
  4450  0015F8  0100               	movlb	0	; () banked
  4451  0015FA  0100               	movlb	0	; () banked
  4452  0015FC  6FAF               	movwf	(_Ecran+5)& (0+255),b
  4453  0015FE  0E0B               	movlw	low _ErreurTir
  4454  001600  D788               	goto	L48
  4455  001602                     l1139:
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;feu.c: 86: else if (Bouton[Bp_IdTest].State == 0)
  4459  001602  0100               	movlb	0	; () banked
  4460  001604  B393               	btfsc	(_Bouton+5)& (0+255),1,b
  4461  001606  D023               	goto	l1141
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;feu.c: 87: {
  4465                           ;feu.c: 88: ecran_print_num(Feu.LastOutput);
  4466  001608  0100               	movlb	0	; () banked
  4467  00160A  0100               	movlb	0	; () banked
  4468  00160C  518B               	movf	(_Feu+11)& (0+255),w,b
  4469  00160E  ECBA  F015         	call	_ecran_print_num
  4470                           
  4471                           ;feu.c: 90: if (Micro.Stat.Stop == 1)
  4472  001612  A456               	btfss	_Micro+4,2,c
  4473  001614  D018               	goto	l7026
  4474                           
  4475                           ;feu.c: 91: {
  4476                           ;feu.c: 92: Ecran.Digit[0] = '-';
  4477  001616  0100               	movlb	0	; () banked
  4478  001618  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4479  00161A  0E2D               	movlw	45
  4480  00161C  0100               	movlb	0	; () banked
  4481  00161E  0100               	movlb	0	; () banked
  4482  001620  6FAA               	movwf	_Ecran& (0+255),b
  4483  001622  0100               	movlb	0	; () banked
  4484  001624  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4485                           
  4486                           ;feu.c: 93: Ecran.Digit[1] = '-';
  4487  001626  0100               	movlb	0	; () banked
  4488  001628  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4489  00162A  0E2D               	movlw	45
  4490  00162C  0100               	movlb	0	; () banked
  4491  00162E  0100               	movlb	0	; () banked
  4492  001630  6FAB               	movwf	(_Ecran+1)& (0+255),b
  4493  001632  0100               	movlb	0	; () banked
  4494  001634  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;feu.c: 95: Ecran.Digits = Ecran.Digit;
  4498  001636  0100               	movlb	0	; () banked
  4499  001638  0E00               	movlw	high _Ecran
  4500  00163A  0100               	movlb	0	; () banked
  4501  00163C  0100               	movlb	0	; () banked
  4502  00163E  6FAF               	movwf	(_Ecran+5)& (0+255),b
  4503  001640  0100               	movlb	0	; () banked
  4504  001642  0EAA               	movlw	low _Ecran
  4505  001644  D766               	goto	L48
  4506  001646                     l7026:
  4507                           
  4508                           ;feu.c: 96: }
  4509                           ;feu.c: 97: Ecran.Solid = 0;
  4510  001646  0100               	movlb	0	; () banked
  4511  001648  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4512  00164A  0E00               	movlw	0
  4513  00164C  D03A               	goto	L47
  4514  00164E                     l1141:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;feu.c: 99: else
  4518                           ;feu.c: 100: {
  4519                           ;feu.c: 101: if (Micro.Stat.Armed == 1) {ecran_print_one_char(0,'-');}
  4520  00164E  A056               	btfss	_Micro+4,0,c
  4521  001650  D00C               	goto	l1144
  4522                           
  4523                           ; BSR set to: 0
  4524  001652  0100               	movlb	0	; () banked
  4525  001654  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4526  001656  0E2D               	movlw	45
  4527  001658  0100               	movlb	0	; () banked
  4528  00165A  0100               	movlb	0	; () banked
  4529  00165C  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  4530  00165E  0100               	movlb	0	; () banked
  4531  001660  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4532  001662  0E00               	movlw	0
  4533  001664  ECE0  F01A         	call	_ecran_print_one_char
  4534  001668  D029               	goto	l7036
  4535  00166A                     l1144:
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;feu.c: 102: else if (Micro.Stat.Go == 1) {ecran_print_one_char(1,'-');}
  4539  00166A  A256               	btfss	_Micro+4,1,c
  4540  00166C  D00C               	goto	l1146
  4541                           
  4542                           ; BSR set to: 0
  4543  00166E  0100               	movlb	0	; () banked
  4544  001670  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4545  001672  0E2D               	movlw	45
  4546  001674  0100               	movlb	0	; () banked
  4547  001676  0100               	movlb	0	; () banked
  4548  001678  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  4549  00167A  0100               	movlb	0	; () banked
  4550  00167C  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4551  00167E  0E01               	movlw	1
  4552  001680  ECE0  F01A         	call	_ecran_print_one_char
  4553  001684  D01B               	goto	l7036
  4554  001686                     l1146:
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;feu.c: 103: else if (Micro.Stat.Stop == 1) {ecran_print_one_char(2,'-');}
  4558  001686  A456               	btfss	_Micro+4,2,c
  4559  001688  D00C               	goto	l1148
  4560                           
  4561                           ; BSR set to: 0
  4562  00168A  0100               	movlb	0	; () banked
  4563  00168C  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4564  00168E  0E2D               	movlw	45
  4565  001690  0100               	movlb	0	; () banked
  4566  001692  0100               	movlb	0	; () banked
  4567  001694  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  4568  001696  0100               	movlb	0	; () banked
  4569  001698  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4570  00169A  0E02               	movlw	2
  4571  00169C  ECE0  F01A         	call	_ecran_print_one_char
  4572  0016A0  D00D               	goto	l7036
  4573  0016A2                     l1148:
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;feu.c: 104: else if (Micro.Stat.End == 1) {ecran_print_one_char(3,'-');}
  4577  0016A2  A656               	btfss	_Micro+4,3,c
  4578  0016A4  D00B               	goto	l7036
  4579                           
  4580                           ; BSR set to: 0
  4581  0016A6  0100               	movlb	0	; () banked
  4582  0016A8  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4583  0016AA  0E2D               	movlw	45
  4584  0016AC  0100               	movlb	0	; () banked
  4585  0016AE  0100               	movlb	0	; () banked
  4586  0016B0  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  4587  0016B2  0100               	movlb	0	; () banked
  4588  0016B4  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4589  0016B6  0E03               	movlw	3
  4590  0016B8  ECE0  F01A         	call	_ecran_print_one_char
  4591  0016BC                     l7036:
  4592                           
  4593                           ;feu.c: 106: Ecran.Solid = 1;
  4594  0016BC  0100               	movlb	0	; () banked
  4595  0016BE  6FCF               	movwf	??_feu_check_bp& (0+255),b
  4596  0016C0  0E01               	movlw	1
  4597  0016C2                     L47:
  4598  0016C2  0100               	movlb	0	; () banked
  4599  0016C4  0100               	movlb	0	; () banked
  4600  0016C6  6FB9               	movwf	(_Ecran+15)& (0+255),b
  4601  0016C8                     L46:
  4602  0016C8  0100               	movlb	0	; () banked
  4603  0016CA  51CF               	movf	??_feu_check_bp& (0+255),w,b
  4604  0016CC                     l1151:
  4605                           
  4606                           ; BSR set to: 0
  4607  0016CC  0012               	return	
  4608  0016CE  FFFF               	dw	65535	; errata NOP
  4609  0016D0                     __end_of_feu_check_bp:
  4610                           	opt stack 0
  4611                           tblptru	equ	0xFF8
  4612                           tblptrh	equ	0xFF7
  4613                           tblptrl	equ	0xFF6
  4614                           tablat	equ	0xFF5
  4615                           prodh	equ	0xFF4
  4616                           prodl	equ	0xFF3
  4617                           intcon	equ	0xFF2
  4618                           intcon2	equ	0xFF1
  4619                           postinc0	equ	0xFEE
  4620                           wreg	equ	0xFE8
  4621                           postdec1	equ	0xFE5
  4622                           fsr1l	equ	0xFE1
  4623                           indf2	equ	0xFDF
  4624                           postinc2	equ	0xFDE
  4625                           postdec2	equ	0xFDD
  4626                           fsr2h	equ	0xFDA
  4627                           fsr2l	equ	0xFD9
  4628                           status	equ	0xFD8
  4629                           
  4630 ;; *************** function _ecran_print_num *****************
  4631 ;; Defined at:
  4632 ;;		line 66 in file "ecran.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  Num             1    wreg     unsigned char 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  Num             1   18[BANK0 ] unsigned char 
  4637 ;;  tempStr         2   19[BANK0 ] PTR unsigned char 
  4638 ;;		 -> PrintTest(5), 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;		None               void
  4641 ;; Registers used:
  4642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4648 ;;      Params:         0       0       0       0       0       0       0
  4649 ;;      Locals:         0       3       0       0       0       0       0
  4650 ;;      Temps:          0       1       0       0       0       0       0
  4651 ;;      Totals:         0       4       0       0       0       0       0
  4652 ;;Total ram usage:        4 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    5
  4655 ;; This function calls:
  4656 ;;		_DecToStr
  4657 ;; This function is called by:
  4658 ;;		_test_process
  4659 ;;		_feu_check_bp
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           	psect	text14
  4664  002B74                     __ptext14:
  4665                           	opt stack 0
  4666  002B74                     _ecran_print_num:
  4667                           	opt stack 24
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;incstack = 0
  4671  002B74  FFFF               	dw	65535
  4672                           
  4673                           ;ecran_print_num@Num stored from wreg
  4674  002B76  CFE8 F0CC          	movff	wreg,ecran_print_num@Num
  4675                           
  4676                           ;ecran.c: 68: char * tempStr;
  4677                           ;ecran.c: 70: tempStr = PrintTest;
  4678  002B7A  0100               	movlb	0	; () banked
  4679  002B7C  0E00               	movlw	high _PrintTest
  4680  002B7E  0100               	movlb	0	; () banked
  4681  002B80  0100               	movlb	0	; () banked
  4682  002B82  6FCE               	movwf	(ecran_print_num@tempStr+1)& (0+255),b
  4683  002B84  0100               	movlb	0	; () banked
  4684  002B86  0EE5               	movlw	low _PrintTest
  4685  002B88  0100               	movlb	0	; () banked
  4686  002B8A  0100               	movlb	0	; () banked
  4687  002B8C  6FCD               	movwf	ecran_print_num@tempStr& (0+255),b
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;ecran.c: 72: tempStr = DecToStr(Num, tempStr);
  4691  002B8E  0100               	movlb	0	; () banked
  4692  002B90  0100               	movlb	0	; () banked
  4693  002B92  C0CE  F0C2         	movff	ecran_print_num@tempStr+1,DecToStr@result+1
  4694  002B96  0100               	movlb	0	; () banked
  4695  002B98  0100               	movlb	0	; () banked
  4696  002B9A  C0CD  F0C1         	movff	ecran_print_num@tempStr,DecToStr@result
  4697  002B9E  0100               	movlb	0	; () banked
  4698  002BA0  0100               	movlb	0	; () banked
  4699  002BA2  51CC               	movf	ecran_print_num@Num& (0+255),w,b
  4700  002BA4  EC1B  F010         	call	_DecToStr
  4701  002BA8  0100               	movlb	0	; () banked
  4702  002BAA  C0C1  F0CD         	movff	?_DecToStr,ecran_print_num@tempStr
  4703  002BAE  0100               	movlb	0	; () banked
  4704  002BB0  C0C2  F0CE         	movff	?_DecToStr+1,ecran_print_num@tempStr+1
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;ecran.c: 74: Ecran.Digit[0] = ' ';
  4708  002BB4  0100               	movlb	0	; () banked
  4709  002BB6  6FCB               	movwf	??_ecran_print_num& (0+255),b
  4710  002BB8  0E20               	movlw	32
  4711  002BBA  0100               	movlb	0	; () banked
  4712  002BBC  0100               	movlb	0	; () banked
  4713  002BBE  6FAA               	movwf	_Ecran& (0+255),b
  4714  002BC0  0100               	movlb	0	; () banked
  4715  002BC2  51CB               	movf	??_ecran_print_num& (0+255),w,b
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;ecran.c: 75: Ecran.Digit[1] = ' ';
  4719  002BC4  0100               	movlb	0	; () banked
  4720  002BC6  6FCB               	movwf	??_ecran_print_num& (0+255),b
  4721  002BC8  0E20               	movlw	32
  4722  002BCA  0100               	movlb	0	; () banked
  4723  002BCC  0100               	movlb	0	; () banked
  4724  002BCE  6FAB               	movwf	(_Ecran+1)& (0+255),b
  4725  002BD0  0100               	movlb	0	; () banked
  4726  002BD2  51CB               	movf	??_ecran_print_num& (0+255),w,b
  4727                           
  4728                           ; BSR set to: 0
  4729                           ;ecran.c: 77: if (Num < 10)
  4730  002BD4  0E0A               	movlw	10
  4731  002BD6  0100               	movlb	0	; () banked
  4732  002BD8  0100               	movlb	0	; () banked
  4733  002BDA  5DCC               	subwf	ecran_print_num@Num& (0+255),w,b
  4734  002BDC  B0D8               	btfsc	status,0,c
  4735  002BDE  D011               	goto	l6194
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;ecran.c: 78: {
  4739                           ;ecran.c: 79: Ecran.Digit[3] = tempStr[0];
  4740  002BE0  C0CD  FFD9         	movff	ecran_print_num@tempStr,fsr2l
  4741  002BE4  C0CE  FFDA         	movff	ecran_print_num@tempStr+1,fsr2h
  4742  002BE8  50DF               	movf	indf2,w,c
  4743  002BEA  0100               	movlb	0	; () banked
  4744  002BEC  0100               	movlb	0	; () banked
  4745  002BEE  6FAD               	movwf	(_Ecran+3)& (0+255),b
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;ecran.c: 80: Ecran.Digit[2] = '0';
  4749  002BF0  0100               	movlb	0	; () banked
  4750  002BF2  6FCB               	movwf	??_ecran_print_num& (0+255),b
  4751  002BF4  0E30               	movlw	48
  4752  002BF6  0100               	movlb	0	; () banked
  4753  002BF8  0100               	movlb	0	; () banked
  4754  002BFA  6FAC               	movwf	(_Ecran+2)& (0+255),b
  4755  002BFC  0100               	movlb	0	; () banked
  4756  002BFE  51CB               	movf	??_ecran_print_num& (0+255),w,b
  4757                           
  4758                           ;ecran.c: 81: }
  4759  002C00  D015               	goto	l6198
  4760  002C02                     l6194:
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;ecran.c: 82: else
  4764                           ;ecran.c: 83: {
  4765                           ;ecran.c: 84: Ecran.Digit[3] = tempStr[1];
  4766  002C02  0100               	movlb	0	; () banked
  4767  002C04  EE20 F001          	lfsr	2,1
  4768  002C08  0100               	movlb	0	; () banked
  4769  002C0A  51CD               	movf	ecran_print_num@tempStr& (0+255),w,b
  4770  002C0C  26D9               	addwf	fsr2l,f,c
  4771  002C0E  0100               	movlb	0	; () banked
  4772  002C10  51CE               	movf	(ecran_print_num@tempStr+1)& (0+255),w,b
  4773  002C12  22DA               	addwfc	fsr2h,f,c
  4774  002C14  50DF               	movf	indf2,w,c
  4775  002C16  0100               	movlb	0	; () banked
  4776  002C18  0100               	movlb	0	; () banked
  4777  002C1A  6FAD               	movwf	(_Ecran+3)& (0+255),b
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;ecran.c: 85: Ecran.Digit[2] = tempStr[0];
  4781  002C1C  C0CD  FFD9         	movff	ecran_print_num@tempStr,fsr2l
  4782  002C20  C0CE  FFDA         	movff	ecran_print_num@tempStr+1,fsr2h
  4783  002C24  50DF               	movf	indf2,w,c
  4784  002C26  0100               	movlb	0	; () banked
  4785  002C28  0100               	movlb	0	; () banked
  4786  002C2A  6FAC               	movwf	(_Ecran+2)& (0+255),b
  4787  002C2C                     l6198:
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;ecran.c: 86: }
  4791                           ;ecran.c: 88: Ecran.Digits = Ecran.Digit;
  4792  002C2C  0100               	movlb	0	; () banked
  4793  002C2E  0E00               	movlw	high _Ecran
  4794  002C30  0100               	movlb	0	; () banked
  4795  002C32  0100               	movlb	0	; () banked
  4796  002C34  6FAF               	movwf	(_Ecran+5)& (0+255),b
  4797  002C36  0100               	movlb	0	; () banked
  4798  002C38  0EAA               	movlw	low _Ecran
  4799  002C3A  0100               	movlb	0	; () banked
  4800  002C3C  0100               	movlb	0	; () banked
  4801  002C3E  6FAE               	movwf	(_Ecran+4)& (0+255),b
  4802                           
  4803                           ; BSR set to: 0
  4804  002C40  0012               	return	
  4805  002C42  FFFF               	dw	65535	; errata NOP
  4806  002C44                     __end_of_ecran_print_num:
  4807                           	opt stack 0
  4808                           tblptru	equ	0xFF8
  4809                           tblptrh	equ	0xFF7
  4810                           tblptrl	equ	0xFF6
  4811                           tablat	equ	0xFF5
  4812                           prodh	equ	0xFF4
  4813                           prodl	equ	0xFF3
  4814                           intcon	equ	0xFF2
  4815                           intcon2	equ	0xFF1
  4816                           postinc0	equ	0xFEE
  4817                           wreg	equ	0xFE8
  4818                           postdec1	equ	0xFE5
  4819                           fsr1l	equ	0xFE1
  4820                           indf2	equ	0xFDF
  4821                           postinc2	equ	0xFDE
  4822                           postdec2	equ	0xFDD
  4823                           fsr2h	equ	0xFDA
  4824                           fsr2l	equ	0xFD9
  4825                           status	equ	0xFD8
  4826                           
  4827 ;; *************** function _DecToStr *****************
  4828 ;; Defined at:
  4829 ;;		line 3 in file "utils.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;  value           1    wreg     unsigned char 
  4832 ;;  result          2    7[BANK0 ] PTR unsigned char 
  4833 ;;		 -> PrintTest(5), 
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;  value           1   15[BANK0 ] unsigned char 
  4836 ;;  compareValue    2   13[BANK0 ] unsigned short 
  4837 ;;  power10         1   16[BANK0 ] unsigned char 
  4838 ;; Return value:  Size  Location     Type
  4839 ;;                  2    7[BANK0 ] PTR unsigned char 
  4840 ;; Registers used:
  4841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4842 ;; Tracked objects:
  4843 ;;		On entry : 0/0
  4844 ;;		On exit  : 0/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4847 ;;      Params:         0       2       0       0       0       0       0
  4848 ;;      Locals:         0       4       0       0       0       0       0
  4849 ;;      Temps:          0       4       0       0       0       0       0
  4850 ;;      Totals:         0      10       0       0       0       0       0
  4851 ;;Total ram usage:       10 bytes
  4852 ;; Hardware stack levels used:    1
  4853 ;; Hardware stack levels required when called:    4
  4854 ;; This function calls:
  4855 ;;		___awmod
  4856 ;;		___lbdiv
  4857 ;;		___wmul
  4858 ;; This function is called by:
  4859 ;;		_ecran_print_num
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text15
  4864  002036                     __ptext15:
  4865                           	opt stack 0
  4866  002036                     _DecToStr:
  4867                           	opt stack 24
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;incstack = 0
  4871  002036  FFFF               	dw	65535
  4872                           
  4873                           ;DecToStr@value stored from wreg
  4874  002038  CFE8 F0C9          	movff	wreg,DecToStr@value
  4875                           
  4876                           ;utils.c: 5: unsigned char power10;
  4877                           ;utils.c: 6: unsigned short compareValue;
  4878                           ;utils.c: 8: compareValue = 1;
  4879  00203C  0E00               	movlw	0
  4880  00203E  0100               	movlb	0	; () banked
  4881  002040  0100               	movlb	0	; () banked
  4882  002042  6FC8               	movwf	(DecToStr@compareValue+1)& (0+255),b
  4883  002044  0E01               	movlw	1
  4884  002046  0100               	movlb	0	; () banked
  4885  002048  6FC7               	movwf	DecToStr@compareValue& (0+255),b
  4886                           
  4887                           ;utils.c: 10: for (power10 = 0; compareValue <= value; power10 ++)
  4888  00204A  0100               	movlb	0	; () banked
  4889  00204C  6FC3               	movwf	??_DecToStr& (0+255),b
  4890  00204E  0E00               	movlw	0
  4891  002050  0100               	movlb	0	; () banked
  4892  002052  0100               	movlb	0	; () banked
  4893  002054  6FCA               	movwf	DecToStr@power10& (0+255),b
  4894  002056  0100               	movlb	0	; () banked
  4895  002058  51C3               	movf	??_DecToStr& (0+255),w,b
  4896  00205A  D016               	goto	l5928
  4897  00205C                     l5924:
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;utils.c: 11: {
  4901                           ;utils.c: 12: compareValue *= 10;
  4902  00205C  C0C7  F0BA         	movff	DecToStr@compareValue,___wmul@multiplier
  4903  002060  C0C8  F0BB         	movff	DecToStr@compareValue+1,___wmul@multiplier+1
  4904  002064  0E00               	movlw	0
  4905  002066  0100               	movlb	0	; () banked
  4906  002068  0100               	movlb	0	; () banked
  4907  00206A  6FBD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4908  00206C  0E0A               	movlw	10
  4909  00206E  0100               	movlb	0	; () banked
  4910  002070  6FBC               	movwf	___wmul@multiplicand& (0+255),b
  4911  002072  ECB7  F018         	call	___wmul	;wreg free
  4912  002076  0100               	movlb	0	; () banked
  4913  002078  C0BA  F0C7         	movff	?___wmul,DecToStr@compareValue
  4914  00207C  0100               	movlb	0	; () banked
  4915  00207E  C0BB  F0C8         	movff	?___wmul+1,DecToStr@compareValue+1
  4916                           
  4917                           ; BSR set to: 0
  4918  002082  0100               	movlb	0	; () banked
  4919  002084  0100               	movlb	0	; () banked
  4920  002086  2BCA               	incf	DecToStr@power10& (0+255),f,b
  4921  002088                     l5928:
  4922                           
  4923                           ; BSR set to: 0
  4924  002088  0100               	movlb	0	; () banked
  4925  00208A  0100               	movlb	0	; () banked
  4926  00208C  51C9               	movf	DecToStr@value& (0+255),w,b
  4927  00208E  0100               	movlb	0	; () banked
  4928  002090  6FC3               	movwf	??_DecToStr& (0+255),b
  4929  002092  6BC4               	clrf	(??_DecToStr+1)& (0+255),b
  4930  002094  0100               	movlb	0	; () banked
  4931  002096  0100               	movlb	0	; () banked
  4932  002098  51C7               	movf	DecToStr@compareValue& (0+255),w,b
  4933  00209A  0100               	movlb	0	; () banked
  4934  00209C  5DC3               	subwf	??_DecToStr& (0+255),w,b
  4935  00209E  0100               	movlb	0	; () banked
  4936  0020A0  0100               	movlb	0	; () banked
  4937  0020A2  51C8               	movf	(DecToStr@compareValue+1)& (0+255),w,b
  4938  0020A4  0100               	movlb	0	; () banked
  4939  0020A6  59C4               	subwfb	(??_DecToStr+1)& (0+255),w,b
  4940  0020A8  B0D8               	btfsc	status,0,c
  4941  0020AA  D7D8               	goto	l5924
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;utils.c: 13: }
  4945                           ;utils.c: 15: if (value == 0) {power10 = 1;}
  4946  0020AC  0100               	movlb	0	; () banked
  4947  0020AE  0100               	movlb	0	; () banked
  4948  0020B0  67C9               	tstfsz	DecToStr@value& (0+255),b
  4949  0020B2  D008               	goto	l5932
  4950                           
  4951                           ; BSR set to: 0
  4952  0020B4  0100               	movlb	0	; () banked
  4953  0020B6  6FC3               	movwf	??_DecToStr& (0+255),b
  4954  0020B8  0E01               	movlw	1
  4955  0020BA  0100               	movlb	0	; () banked
  4956  0020BC  0100               	movlb	0	; () banked
  4957  0020BE  6FCA               	movwf	DecToStr@power10& (0+255),b
  4958  0020C0  0100               	movlb	0	; () banked
  4959  0020C2  51C3               	movf	??_DecToStr& (0+255),w,b
  4960  0020C4                     l5932:
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;utils.c: 17: result[power10] = '\0';
  4964  0020C4  0100               	movlb	0	; () banked
  4965  0020C6  0100               	movlb	0	; () banked
  4966  0020C8  51CA               	movf	DecToStr@power10& (0+255),w,b
  4967  0020CA  0D01               	mullw	1
  4968  0020CC  50F3               	movf	prodl,w,c
  4969  0020CE  0100               	movlb	0	; () banked
  4970  0020D0  0100               	movlb	0	; () banked
  4971  0020D2  25C1               	addwf	DecToStr@result& (0+255),w,b
  4972  0020D4  6ED9               	movwf	fsr2l,c
  4973  0020D6  50F4               	movf	prodh,w,c
  4974  0020D8  0100               	movlb	0	; () banked
  4975  0020DA  0100               	movlb	0	; () banked
  4976  0020DC  21C2               	addwfc	(DecToStr@result+1)& (0+255),w,b
  4977  0020DE  6EDA               	movwf	fsr2h,c
  4978  0020E0  0E00               	movlw	0
  4979  0020E2  6EDF               	movwf	indf2,c
  4980  0020E4  D047               	goto	L49
  4981  0020E6                     l5938:
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;utils.c: 20: {
  4985                           ;utils.c: 21: result[power10 - 1] = (value % 10) + '0';
  4986  0020E6  0EFF               	movlw	255
  4987  0020E8  0100               	movlb	0	; () banked
  4988  0020EA  6FC3               	movwf	??_DecToStr& (0+255),b
  4989  0020EC  0EFF               	movlw	255
  4990  0020EE  6FC4               	movwf	(??_DecToStr+1)& (0+255),b
  4991  0020F0  0100               	movlb	0	; () banked
  4992  0020F2  0100               	movlb	0	; () banked
  4993  0020F4  51CA               	movf	DecToStr@power10& (0+255),w,b
  4994  0020F6  0100               	movlb	0	; () banked
  4995  0020F8  6FC5               	movwf	(??_DecToStr+2)& (0+255),b
  4996  0020FA  6BC6               	clrf	(??_DecToStr+3)& (0+255),b
  4997  0020FC  0100               	movlb	0	; () banked
  4998  0020FE  51C3               	movf	??_DecToStr& (0+255),w,b
  4999  002100  0100               	movlb	0	; () banked
  5000  002102  27C5               	addwf	(??_DecToStr+2)& (0+255),f,b
  5001  002104  0100               	movlb	0	; () banked
  5002  002106  51C4               	movf	(??_DecToStr+1)& (0+255),w,b
  5003  002108  0100               	movlb	0	; () banked
  5004  00210A  23C6               	addwfc	(??_DecToStr+3)& (0+255),f,b
  5005  00210C  0100               	movlb	0	; () banked
  5006  00210E  51C5               	movf	(??_DecToStr+2)& (0+255),w,b
  5007  002110  0100               	movlb	0	; () banked
  5008  002112  0100               	movlb	0	; () banked
  5009  002114  25C1               	addwf	DecToStr@result& (0+255),w,b
  5010  002116  6ED9               	movwf	fsr2l,c
  5011  002118  0100               	movlb	0	; () banked
  5012  00211A  51C6               	movf	(??_DecToStr+3)& (0+255),w,b
  5013  00211C  0100               	movlb	0	; () banked
  5014  00211E  0100               	movlb	0	; () banked
  5015  002120  21C2               	addwfc	(DecToStr@result+1)& (0+255),w,b
  5016  002122  6EDA               	movwf	fsr2h,c
  5017  002124  0100               	movlb	0	; () banked
  5018  002126  0100               	movlb	0	; () banked
  5019  002128  C0C9  F0BA         	movff	DecToStr@value,___awmod@dividend
  5020  00212C  0100               	movlb	0	; () banked
  5021  00212E  0100               	movlb	0	; () banked
  5022  002130  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
  5023  002132  0E00               	movlw	0
  5024  002134  0100               	movlb	0	; () banked
  5025  002136  0100               	movlb	0	; () banked
  5026  002138  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  5027  00213A  0E0A               	movlw	10
  5028  00213C  0100               	movlb	0	; () banked
  5029  00213E  6FBC               	movwf	___awmod@divisor& (0+255),b
  5030  002140  EC2C  F013         	call	___awmod	;wreg free
  5031  002144  0100               	movlb	0	; () banked
  5032  002146  0100               	movlb	0	; () banked
  5033  002148  51BA               	movf	?___awmod& (0+255),w,b
  5034  00214A  0F30               	addlw	48
  5035  00214C  6EDF               	movwf	indf2,c
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;utils.c: 22: value /= 10;
  5039  00214E  0100               	movlb	0	; () banked
  5040  002150  6FC3               	movwf	??_DecToStr& (0+255),b
  5041  002152  0E0A               	movlw	10
  5042  002154  0100               	movlb	0	; () banked
  5043  002156  0100               	movlb	0	; () banked
  5044  002158  6FBA               	movwf	___lbdiv@divisor& (0+255),b
  5045  00215A  0100               	movlb	0	; () banked
  5046  00215C  51C3               	movf	??_DecToStr& (0+255),w,b
  5047  00215E  0100               	movlb	0	; () banked
  5048  002160  0100               	movlb	0	; () banked
  5049  002162  51C9               	movf	DecToStr@value& (0+255),w,b
  5050  002164  EC02  F018         	call	___lbdiv
  5051  002168  0100               	movlb	0	; () banked
  5052  00216A  0100               	movlb	0	; () banked
  5053  00216C  6FC9               	movwf	DecToStr@value& (0+255),b
  5054                           
  5055                           ; BSR set to: 0
  5056  00216E  0100               	movlb	0	; () banked
  5057  002170  0100               	movlb	0	; () banked
  5058  002172  07CA               	decf	DecToStr@power10& (0+255),f,b
  5059  002174                     L49:
  5060                           
  5061                           ; BSR set to: 0
  5062  002174  0100               	movlb	0	; () banked
  5063  002176  0100               	movlb	0	; () banked
  5064  002178  67CA               	tstfsz	DecToStr@power10& (0+255),b
  5065  00217A  D7B5               	goto	l5938
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;utils.c: 23: }
  5069                           ;utils.c: 25: return result;
  5070                           
  5071                           ; BSR set to: 0
  5072  00217C  0100               	movlb	0	; () banked
  5073  00217E  0100               	movlb	0	; () banked
  5074  002180  C0C2  F0C2         	movff	DecToStr@result+1,?_DecToStr+1
  5075  002184  0100               	movlb	0	; () banked
  5076  002186  0100               	movlb	0	; () banked
  5077  002188  C0C1  F0C1         	movff	DecToStr@result,?_DecToStr
  5078                           
  5079                           ; BSR set to: 0
  5080                           
  5081                           ; BSR set to: 0
  5082  00218C  0012               	return	
  5083  00218E  FFFF               	dw	65535	; errata NOP
  5084  002190                     __end_of_DecToStr:
  5085                           	opt stack 0
  5086                           tblptru	equ	0xFF8
  5087                           tblptrh	equ	0xFF7
  5088                           tblptrl	equ	0xFF6
  5089                           tablat	equ	0xFF5
  5090                           prodh	equ	0xFF4
  5091                           prodl	equ	0xFF3
  5092                           intcon	equ	0xFF2
  5093                           intcon2	equ	0xFF1
  5094                           postinc0	equ	0xFEE
  5095                           wreg	equ	0xFE8
  5096                           postdec1	equ	0xFE5
  5097                           fsr1l	equ	0xFE1
  5098                           indf2	equ	0xFDF
  5099                           postinc2	equ	0xFDE
  5100                           postdec2	equ	0xFDD
  5101                           fsr2h	equ	0xFDA
  5102                           fsr2l	equ	0xFD9
  5103                           status	equ	0xFD8
  5104                           
  5105 ;; *************** function ___lbdiv *****************
  5106 ;; Defined at:
  5107 ;;		line 4 in file "E:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lbdiv.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;  dividend        1    wreg     unsigned char 
  5110 ;;  divisor         1    0[BANK0 ] unsigned char 
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;  dividend        1    2[BANK0 ] unsigned char 
  5113 ;;  quotient        1    4[BANK0 ] unsigned char 
  5114 ;;  counter         1    3[BANK0 ] unsigned char 
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      unsigned char 
  5117 ;; Registers used:
  5118 ;;		wreg, status,2, status,0
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5124 ;;      Params:         0       1       0       0       0       0       0
  5125 ;;      Locals:         0       3       0       0       0       0       0
  5126 ;;      Temps:          0       1       0       0       0       0       0
  5127 ;;      Totals:         0       5       0       0       0       0       0
  5128 ;;Total ram usage:        5 bytes
  5129 ;; Hardware stack levels used:    1
  5130 ;; Hardware stack levels required when called:    3
  5131 ;; This function calls:
  5132 ;;		Nothing
  5133 ;; This function is called by:
  5134 ;;		_DecToStr
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text16
  5139  003004                     __ptext16:
  5140                           	opt stack 0
  5141  003004                     ___lbdiv:
  5142                           	opt stack 24
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;incstack = 0
  5146  003004  FFFF               	dw	65535
  5147                           
  5148                           ;___lbdiv@dividend stored from wreg
  5149  003006  CFE8 F0BC          	movff	wreg,___lbdiv@dividend
  5150  00300A  0100               	movlb	0	; () banked
  5151  00300C  6FBB               	movwf	??___lbdiv& (0+255),b
  5152  00300E  0E00               	movlw	0
  5153  003010  0100               	movlb	0	; () banked
  5154  003012  0100               	movlb	0	; () banked
  5155  003014  6FBE               	movwf	___lbdiv@quotient& (0+255),b
  5156  003016  0100               	movlb	0	; () banked
  5157  003018  51BB               	movf	??___lbdiv& (0+255),w,b
  5158  00301A  0100               	movlb	0	; () banked
  5159  00301C  0100               	movlb	0	; () banked
  5160  00301E  51BA               	movf	___lbdiv@divisor& (0+255),w,b
  5161  003020  B4D8               	btfsc	status,2,c
  5162  003022  D02E               	goto	l5868
  5163                           
  5164                           ; BSR set to: 0
  5165  003024  0100               	movlb	0	; () banked
  5166  003026  6FBB               	movwf	??___lbdiv& (0+255),b
  5167  003028  0E01               	movlw	1
  5168  00302A  0100               	movlb	0	; () banked
  5169  00302C  0100               	movlb	0	; () banked
  5170  00302E  6FBD               	movwf	___lbdiv@counter& (0+255),b
  5171  003030  0100               	movlb	0	; () banked
  5172  003032  51BB               	movf	??___lbdiv& (0+255),w,b
  5173  003034  D006               	goto	l5856
  5174  003036                     l5852:
  5175                           
  5176                           ; BSR set to: 0
  5177  003036  0100               	movlb	0	; () banked
  5178  003038  90D8               	bcf	status,0,c
  5179  00303A  37BA               	rlcf	___lbdiv@divisor& (0+255),f,b
  5180                           
  5181                           ; BSR set to: 0
  5182  00303C  0100               	movlb	0	; () banked
  5183  00303E  0100               	movlb	0	; () banked
  5184  003040  2BBD               	incf	___lbdiv@counter& (0+255),f,b
  5185  003042                     l5856:
  5186                           
  5187                           ; BSR set to: 0
  5188  003042  0100               	movlb	0	; () banked
  5189  003044  0100               	movlb	0	; () banked
  5190  003046  AFBA               	btfss	___lbdiv@divisor& (0+255),7,b
  5191  003048  D7F6               	goto	l5852
  5192  00304A                     l5858:
  5193                           
  5194                           ; BSR set to: 0
  5195  00304A  0100               	movlb	0	; () banked
  5196  00304C  90D8               	bcf	status,0,c
  5197  00304E  37BE               	rlcf	___lbdiv@quotient& (0+255),f,b
  5198  003050  0100               	movlb	0	; () banked
  5199  003052  0100               	movlb	0	; () banked
  5200  003054  51BA               	movf	___lbdiv@divisor& (0+255),w,b
  5201  003056  0100               	movlb	0	; () banked
  5202  003058  0100               	movlb	0	; () banked
  5203  00305A  5DBC               	subwf	___lbdiv@dividend& (0+255),w,b
  5204  00305C  A0D8               	btfss	status,0,c
  5205  00305E  D009               	goto	l5864
  5206                           
  5207                           ; BSR set to: 0
  5208  003060  0100               	movlb	0	; () banked
  5209  003062  0100               	movlb	0	; () banked
  5210  003064  51BA               	movf	___lbdiv@divisor& (0+255),w,b
  5211  003066  0100               	movlb	0	; () banked
  5212  003068  0100               	movlb	0	; () banked
  5213  00306A  5FBC               	subwf	___lbdiv@dividend& (0+255),f,b
  5214                           
  5215                           ; BSR set to: 0
  5216  00306C  0100               	movlb	0	; () banked
  5217  00306E  0100               	movlb	0	; () banked
  5218  003070  81BE               	bsf	___lbdiv@quotient& (0+255),0,b
  5219  003072                     l5864:
  5220                           
  5221                           ; BSR set to: 0
  5222  003072  0100               	movlb	0	; () banked
  5223  003074  90D8               	bcf	status,0,c
  5224  003076  33BA               	rrcf	___lbdiv@divisor& (0+255),f,b
  5225                           
  5226                           ; BSR set to: 0
  5227  003078  0100               	movlb	0	; () banked
  5228  00307A  0100               	movlb	0	; () banked
  5229  00307C  2FBD               	decfsz	___lbdiv@counter& (0+255),f,b
  5230  00307E  D7E5               	goto	l5858
  5231  003080                     l5868:
  5232                           
  5233                           ; BSR set to: 0
  5234  003080  0100               	movlb	0	; () banked
  5235  003082  0100               	movlb	0	; () banked
  5236  003084  51BE               	movf	___lbdiv@quotient& (0+255),w,b
  5237                           
  5238                           ; BSR set to: 0
  5239                           
  5240                           ; BSR set to: 0
  5241  003086  0012               	return	
  5242  003088  FFFF               	dw	65535	; errata NOP
  5243  00308A                     __end_of___lbdiv:
  5244                           	opt stack 0
  5245                           tblptru	equ	0xFF8
  5246                           tblptrh	equ	0xFF7
  5247                           tblptrl	equ	0xFF6
  5248                           tablat	equ	0xFF5
  5249                           prodh	equ	0xFF4
  5250                           prodl	equ	0xFF3
  5251                           intcon	equ	0xFF2
  5252                           intcon2	equ	0xFF1
  5253                           postinc0	equ	0xFEE
  5254                           wreg	equ	0xFE8
  5255                           postdec1	equ	0xFE5
  5256                           fsr1l	equ	0xFE1
  5257                           indf2	equ	0xFDF
  5258                           postinc2	equ	0xFDE
  5259                           postdec2	equ	0xFDD
  5260                           fsr2h	equ	0xFDA
  5261                           fsr2l	equ	0xFD9
  5262                           status	equ	0xFD8
  5263                           
  5264 ;; *************** function ___awmod *****************
  5265 ;; Defined at:
  5266 ;;		line 8 in file "E:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awmod.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;  dividend        2    0[BANK0 ] int 
  5269 ;;  divisor         2    2[BANK0 ] int 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;  sign            1    6[BANK0 ] unsigned char 
  5272 ;;  counter         1    5[BANK0 ] unsigned char 
  5273 ;; Return value:  Size  Location     Type
  5274 ;;                  2    0[BANK0 ] int 
  5275 ;; Registers used:
  5276 ;;		wreg, status,2, status,0, prodl
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5282 ;;      Params:         0       4       0       0       0       0       0
  5283 ;;      Locals:         0       2       0       0       0       0       0
  5284 ;;      Temps:          0       1       0       0       0       0       0
  5285 ;;      Totals:         0       7       0       0       0       0       0
  5286 ;;Total ram usage:        7 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; Hardware stack levels required when called:    3
  5289 ;; This function calls:
  5290 ;;		Nothing
  5291 ;; This function is called by:
  5292 ;;		_DecToStr
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           	psect	text17
  5297  002658                     __ptext17:
  5298                           	opt stack 0
  5299  002658                     ___awmod:
  5300                           	opt stack 24
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;incstack = 0
  5304  002658  FFFF               	dw	65535
  5305  00265A  0100               	movlb	0	; () banked
  5306  00265C  6FBE               	movwf	??___awmod& (0+255),b
  5307  00265E  0E00               	movlw	0
  5308  002660  0100               	movlb	0	; () banked
  5309  002662  0100               	movlb	0	; () banked
  5310  002664  6FC0               	movwf	___awmod@sign& (0+255),b
  5311  002666  0100               	movlb	0	; () banked
  5312  002668  51BE               	movf	??___awmod& (0+255),w,b
  5313                           
  5314                           ; BSR set to: 0
  5315  00266A  0100               	movlb	0	; () banked
  5316  00266C  0100               	movlb	0	; () banked
  5317  00266E  51BB               	movf	(___awmod@dividend+1)& (0+255),w,b
  5318  002670  0A80               	xorlw	128
  5319  002672  6EF3               	movwf	prodl,c
  5320  002674  0E80               	movlw	128
  5321  002676  5CF3               	subwf	prodl,w,c
  5322  002678  0E00               	movlw	0
  5323  00267A  B4D8               	btfsc	status,2,c
  5324  00267C  5DBA               	subwf	___awmod@dividend& (0+255),w,b
  5325  00267E  B0D8               	btfsc	status,0,c
  5326  002680  D00F               	goto	l5820
  5327                           
  5328                           ; BSR set to: 0
  5329  002682  0100               	movlb	0	; () banked
  5330  002684  0100               	movlb	0	; () banked
  5331  002686  6DBA               	negf	___awmod@dividend& (0+255),b
  5332  002688  0100               	movlb	0	; () banked
  5333  00268A  1FBB               	comf	(___awmod@dividend+1)& (0+255),f,b
  5334  00268C  B0D8               	btfsc	status,0,c
  5335  00268E  2BBB               	incf	(___awmod@dividend+1)& (0+255),f,b
  5336                           
  5337                           ; BSR set to: 0
  5338  002690  0100               	movlb	0	; () banked
  5339  002692  6FBE               	movwf	??___awmod& (0+255),b
  5340  002694  0E01               	movlw	1
  5341  002696  0100               	movlb	0	; () banked
  5342  002698  0100               	movlb	0	; () banked
  5343  00269A  6FC0               	movwf	___awmod@sign& (0+255),b
  5344  00269C  0100               	movlb	0	; () banked
  5345  00269E  51BE               	movf	??___awmod& (0+255),w,b
  5346  0026A0                     l5820:
  5347                           
  5348                           ; BSR set to: 0
  5349  0026A0  0100               	movlb	0	; () banked
  5350  0026A2  0100               	movlb	0	; () banked
  5351  0026A4  51BD               	movf	(___awmod@divisor+1)& (0+255),w,b
  5352  0026A6  0A80               	xorlw	128
  5353  0026A8  6EF3               	movwf	prodl,c
  5354  0026AA  0E80               	movlw	128
  5355  0026AC  5CF3               	subwf	prodl,w,c
  5356  0026AE  0E00               	movlw	0
  5357  0026B0  B4D8               	btfsc	status,2,c
  5358  0026B2  5DBC               	subwf	___awmod@divisor& (0+255),w,b
  5359  0026B4  B0D8               	btfsc	status,0,c
  5360  0026B6  D007               	goto	l5824
  5361                           
  5362                           ; BSR set to: 0
  5363  0026B8  0100               	movlb	0	; () banked
  5364  0026BA  0100               	movlb	0	; () banked
  5365  0026BC  6DBC               	negf	___awmod@divisor& (0+255),b
  5366  0026BE  0100               	movlb	0	; () banked
  5367  0026C0  1FBD               	comf	(___awmod@divisor+1)& (0+255),f,b
  5368  0026C2  B0D8               	btfsc	status,0,c
  5369  0026C4  2BBD               	incf	(___awmod@divisor+1)& (0+255),f,b
  5370  0026C6                     l5824:
  5371                           
  5372                           ; BSR set to: 0
  5373  0026C6  0100               	movlb	0	; () banked
  5374  0026C8  0100               	movlb	0	; () banked
  5375  0026CA  51BD               	movf	(___awmod@divisor+1)& (0+255),w,b
  5376  0026CC  11BC               	iorwf	___awmod@divisor& (0+255),w,b
  5377  0026CE  B4D8               	btfsc	status,2,c
  5378  0026D0  D03A               	goto	l5840
  5379                           
  5380                           ; BSR set to: 0
  5381  0026D2  0100               	movlb	0	; () banked
  5382  0026D4  6FBE               	movwf	??___awmod& (0+255),b
  5383  0026D6  0E01               	movlw	1
  5384  0026D8  0100               	movlb	0	; () banked
  5385  0026DA  0100               	movlb	0	; () banked
  5386  0026DC  6FBF               	movwf	___awmod@counter& (0+255),b
  5387  0026DE  0100               	movlb	0	; () banked
  5388  0026E0  51BE               	movf	??___awmod& (0+255),w,b
  5389  0026E2  D009               	goto	l5830
  5390  0026E4                     l5828:
  5391                           
  5392                           ; BSR set to: 0
  5393  0026E4  0100               	movlb	0	; () banked
  5394  0026E6  0100               	movlb	0	; () banked
  5395  0026E8  0100               	movlb	0	; () banked
  5396  0026EA  90D8               	bcf	status,0,c
  5397  0026EC  37BC               	rlcf	___awmod@divisor& (0+255),f,b
  5398  0026EE  37BD               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5399  0026F0  0100               	movlb	0	; () banked
  5400  0026F2  0100               	movlb	0	; () banked
  5401  0026F4  2BBF               	incf	___awmod@counter& (0+255),f,b
  5402  0026F6                     l5830:
  5403                           
  5404                           ; BSR set to: 0
  5405  0026F6  0100               	movlb	0	; () banked
  5406  0026F8  0100               	movlb	0	; () banked
  5407  0026FA  AFBD               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5408  0026FC  D7F3               	goto	l5828
  5409  0026FE                     l5832:
  5410                           
  5411                           ; BSR set to: 0
  5412  0026FE  0100               	movlb	0	; () banked
  5413  002700  0100               	movlb	0	; () banked
  5414  002702  51BC               	movf	___awmod@divisor& (0+255),w,b
  5415  002704  0100               	movlb	0	; () banked
  5416  002706  0100               	movlb	0	; () banked
  5417  002708  5DBA               	subwf	___awmod@dividend& (0+255),w,b
  5418  00270A  0100               	movlb	0	; () banked
  5419  00270C  0100               	movlb	0	; () banked
  5420  00270E  51BD               	movf	(___awmod@divisor+1)& (0+255),w,b
  5421  002710  0100               	movlb	0	; () banked
  5422  002712  0100               	movlb	0	; () banked
  5423  002714  59BB               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5424  002716  A0D8               	btfss	status,0,c
  5425  002718  D00C               	goto	l5836
  5426                           
  5427                           ; BSR set to: 0
  5428  00271A  0100               	movlb	0	; () banked
  5429  00271C  0100               	movlb	0	; () banked
  5430  00271E  51BC               	movf	___awmod@divisor& (0+255),w,b
  5431  002720  0100               	movlb	0	; () banked
  5432  002722  0100               	movlb	0	; () banked
  5433  002724  5FBA               	subwf	___awmod@dividend& (0+255),f,b
  5434  002726  0100               	movlb	0	; () banked
  5435  002728  0100               	movlb	0	; () banked
  5436  00272A  51BD               	movf	(___awmod@divisor+1)& (0+255),w,b
  5437  00272C  0100               	movlb	0	; () banked
  5438  00272E  0100               	movlb	0	; () banked
  5439  002730  5BBB               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5440  002732                     l5836:
  5441                           
  5442                           ; BSR set to: 0
  5443  002732  0100               	movlb	0	; () banked
  5444  002734  0100               	movlb	0	; () banked
  5445  002736  0100               	movlb	0	; () banked
  5446  002738  90D8               	bcf	status,0,c
  5447  00273A  33BD               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5448  00273C  33BC               	rrcf	___awmod@divisor& (0+255),f,b
  5449                           
  5450                           ; BSR set to: 0
  5451  00273E  0100               	movlb	0	; () banked
  5452  002740  0100               	movlb	0	; () banked
  5453  002742  2FBF               	decfsz	___awmod@counter& (0+255),f,b
  5454  002744  D7DC               	goto	l5832
  5455  002746                     l5840:
  5456                           
  5457                           ; BSR set to: 0
  5458  002746  0100               	movlb	0	; () banked
  5459  002748  0100               	movlb	0	; () banked
  5460  00274A  51C0               	movf	___awmod@sign& (0+255),w,b
  5461  00274C  B4D8               	btfsc	status,2,c
  5462  00274E  D007               	goto	l5844
  5463                           
  5464                           ; BSR set to: 0
  5465  002750  0100               	movlb	0	; () banked
  5466  002752  0100               	movlb	0	; () banked
  5467  002754  6DBA               	negf	___awmod@dividend& (0+255),b
  5468  002756  0100               	movlb	0	; () banked
  5469  002758  1FBB               	comf	(___awmod@dividend+1)& (0+255),f,b
  5470  00275A  B0D8               	btfsc	status,0,c
  5471  00275C  2BBB               	incf	(___awmod@dividend+1)& (0+255),f,b
  5472  00275E                     l5844:
  5473                           
  5474                           ; BSR set to: 0
  5475  00275E  C0BA  F0BA         	movff	___awmod@dividend,?___awmod
  5476  002762  C0BB  F0BB         	movff	___awmod@dividend+1,?___awmod+1
  5477                           
  5478                           ; BSR set to: 0
  5479                           
  5480                           ; BSR set to: 0
  5481  002766  0012               	return	
  5482  002768  FFFF               	dw	65535	; errata NOP
  5483  00276A                     __end_of___awmod:
  5484                           	opt stack 0
  5485                           tblptru	equ	0xFF8
  5486                           tblptrh	equ	0xFF7
  5487                           tblptrl	equ	0xFF6
  5488                           tablat	equ	0xFF5
  5489                           prodh	equ	0xFF4
  5490                           prodl	equ	0xFF3
  5491                           intcon	equ	0xFF2
  5492                           intcon2	equ	0xFF1
  5493                           postinc0	equ	0xFEE
  5494                           wreg	equ	0xFE8
  5495                           postdec1	equ	0xFE5
  5496                           fsr1l	equ	0xFE1
  5497                           indf2	equ	0xFDF
  5498                           postinc2	equ	0xFDE
  5499                           postdec2	equ	0xFDD
  5500                           fsr2h	equ	0xFDA
  5501                           fsr2l	equ	0xFD9
  5502                           status	equ	0xFD8
  5503                           
  5504 ;; *************** function _check_program_0 *****************
  5505 ;; Defined at:
  5506 ;;		line 19 in file "test.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;		None
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  ret             1    6[BANK0 ] unsigned char 
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1    wreg      unsigned char 
  5513 ;; Registers used:
  5514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5520 ;;      Params:         0       0       0       0       0       0       0
  5521 ;;      Locals:         0       1       0       0       0       0       0
  5522 ;;      Temps:          0       1       0       0       0       0       0
  5523 ;;      Totals:         0       2       0       0       0       0       0
  5524 ;;Total ram usage:        2 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:    6
  5527 ;; This function calls:
  5528 ;;		_ecran_blank
  5529 ;;		_ecran_refresh
  5530 ;;		_ecran_wait
  5531 ;; This function is called by:
  5532 ;;		_main
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           	psect	text18
  5537  0032F6                     __ptext18:
  5538                           	opt stack 0
  5539  0032F6                     _check_program_0:
  5540                           	opt stack 24
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;incstack = 0
  5544  0032F6  FFFF               	dw	65535
  5545                           
  5546                           ;test.c: 21: unsigned char ret = 0;
  5547  0032F8  0100               	movlb	0	; () banked
  5548  0032FA  6FBF               	movwf	??_check_program_0& (0+255),b
  5549  0032FC  0E00               	movlw	0
  5550  0032FE  0100               	movlb	0	; () banked
  5551  003300  0100               	movlb	0	; () banked
  5552  003302  6FC0               	movwf	check_program_0@ret& (0+255),b
  5553  003304  0100               	movlb	0	; () banked
  5554  003306  51BF               	movf	??_check_program_0& (0+255),w,b
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;test.c: 23: if ((PORTEbits.RE1 == 0) && (PORTEbits.RE0 == 0))
  5558  003308  A284               	btfss	3972,1,c	;volatile
  5559                           
  5560                           ; BSR set to: 0
  5561  00330A  B084               	btfsc	3972,0,c	;volatile
  5562  00330C  D019               	goto	l6498
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;test.c: 24: {
  5566                           ;test.c: 25: ecran_blank();
  5567  00330E  ECEA  F018         	call	_ecran_blank	;wreg free
  5568                           
  5569                           ;test.c: 26: while ((PORTEbits.RE1 == 0) || (PORTEbits.RE0 == 0)) {ecran_refresh();}
  5570  003312  D002               	goto	l6490
  5571  003314                     l6488:
  5572  003314  EC7C  F016         	call	_ecran_refresh	;wreg free
  5573  003318                     l6490:
  5574  003318  B284               	btfsc	3972,1,c	;volatile
  5575  00331A  A084               	btfss	3972,0,c	;volatile
  5576  00331C  D7FB               	goto	l6488
  5577                           
  5578                           ;test.c: 28: Micro.Mod.P_0 = 1;
  5579  00331E  8057               	bsf	_Micro+5,0,c
  5580                           
  5581                           ;test.c: 30: ret = 1;
  5582  003320  0100               	movlb	0	; () banked
  5583  003322  6FBF               	movwf	??_check_program_0& (0+255),b
  5584  003324  0E01               	movlw	1
  5585  003326  0100               	movlb	0	; () banked
  5586  003328  0100               	movlb	0	; () banked
  5587  00332A  6FC0               	movwf	check_program_0@ret& (0+255),b
  5588  00332C  0100               	movlb	0	; () banked
  5589  00332E  51BF               	movf	??_check_program_0& (0+255),w,b
  5590                           
  5591                           ;test.c: 32: Micro.Step = 0x03;
  5592  003330  0100               	movlb	0	; () banked
  5593  003332  6FBF               	movwf	??_check_program_0& (0+255),b
  5594  003334  0E03               	movlw	3
  5595  003336  6E55               	movwf	_Micro+3,c
  5596  003338  0100               	movlb	0	; () banked
  5597  00333A  51BF               	movf	??_check_program_0& (0+255),w,b
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;test.c: 34: ecran_wait();
  5601  00333C  ECA3  F01B         	call	_ecran_wait	;wreg free
  5602  003340                     l6498:
  5603                           
  5604                           ;test.c: 35: }
  5605                           ;test.c: 37: return ret;
  5606  003340  0100               	movlb	0	; () banked
  5607  003342  0100               	movlb	0	; () banked
  5608  003344  51C0               	movf	check_program_0@ret& (0+255),w,b
  5609                           
  5610                           ; BSR set to: 0
  5611                           
  5612                           ; BSR set to: 0
  5613  003346  0012               	return	
  5614  003348  FFFF               	dw	65535	; errata NOP
  5615  00334A                     __end_of_check_program_0:
  5616                           	opt stack 0
  5617                           tblptru	equ	0xFF8
  5618                           tblptrh	equ	0xFF7
  5619                           tblptrl	equ	0xFF6
  5620                           tablat	equ	0xFF5
  5621                           prodh	equ	0xFF4
  5622                           prodl	equ	0xFF3
  5623                           intcon	equ	0xFF2
  5624                           intcon2	equ	0xFF1
  5625                           postinc0	equ	0xFEE
  5626                           wreg	equ	0xFE8
  5627                           postdec1	equ	0xFE5
  5628                           fsr1l	equ	0xFE1
  5629                           indf2	equ	0xFDF
  5630                           postinc2	equ	0xFDE
  5631                           postdec2	equ	0xFDD
  5632                           fsr2h	equ	0xFDA
  5633                           fsr2l	equ	0xFD9
  5634                           status	equ	0xFD8
  5635                           
  5636 ;; *************** function _check_idtest *****************
  5637 ;; Defined at:
  5638 ;;		line 41 in file "test.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;		None
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;		None
  5643 ;; Return value:  Size  Location     Type
  5644 ;;		None               void
  5645 ;; Registers used:
  5646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5652 ;;      Params:         0       0       0       0       0       0       0
  5653 ;;      Locals:         0       0       0       0       0       0       0
  5654 ;;      Temps:          0       1       0       0       0       0       0
  5655 ;;      Totals:         0       1       0       0       0       0       0
  5656 ;;Total ram usage:        1 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:    7
  5659 ;; This function calls:
  5660 ;;		_cf_rcv
  5661 ;;		_ecran_print_one_char
  5662 ;;		_micro_config_rs
  5663 ;; This function is called by:
  5664 ;;		_main
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text19
  5669  0036EE                     __ptext19:
  5670                           	opt stack 0
  5671  0036EE                     _check_idtest:
  5672                           	opt stack 23
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;incstack = 0
  5676  0036EE  FFFF               	dw	65535
  5677                           
  5678                           ;test.c: 43: if ((PORTEbits.RE1 == 0) && (PORTEbits.RE0 == 1))
  5679  0036F0  A284               	btfss	3972,1,c	;volatile
  5680  0036F2  A084               	btfss	3972,0,c	;volatile
  5681  0036F4  D010               	goto	l544
  5682                           
  5683                           ;test.c: 44: {
  5684                           ;test.c: 45: micro_config_rs();
  5685  0036F6  ECD4  F01B         	call	_micro_config_rs	;wreg free
  5686                           
  5687                           ;test.c: 46: ecran_print_one_char(3, 'P');
  5688  0036FA  0100               	movlb	0	; () banked
  5689  0036FC  6FD2               	movwf	??_check_idtest& (0+255),b
  5690  0036FE  0E50               	movlw	80
  5691  003700  0100               	movlb	0	; () banked
  5692  003702  0100               	movlb	0	; () banked
  5693  003704  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  5694  003706  0100               	movlb	0	; () banked
  5695  003708  51D2               	movf	??_check_idtest& (0+255),w,b
  5696  00370A  0E03               	movlw	3
  5697  00370C  ECE0  F01A         	call	_ecran_print_one_char
  5698  003710                     l6510:
  5699  003710  EC4A  F00C         	call	_cf_rcv	;wreg free
  5700  003714  D7FD               	goto	l6510
  5701  003716                     l544:
  5702  003716  0012               	return	
  5703  003718  FFFF               	dw	65535	; errata NOP
  5704  00371A                     __end_of_check_idtest:
  5705                           	opt stack 0
  5706                           tblptru	equ	0xFF8
  5707                           tblptrh	equ	0xFF7
  5708                           tblptrl	equ	0xFF6
  5709                           tablat	equ	0xFF5
  5710                           prodh	equ	0xFF4
  5711                           prodl	equ	0xFF3
  5712                           intcon	equ	0xFF2
  5713                           intcon2	equ	0xFF1
  5714                           postinc0	equ	0xFEE
  5715                           wreg	equ	0xFE8
  5716                           postdec1	equ	0xFE5
  5717                           fsr1l	equ	0xFE1
  5718                           indf2	equ	0xFDF
  5719                           postinc2	equ	0xFDE
  5720                           postdec2	equ	0xFDD
  5721                           fsr2h	equ	0xFDA
  5722                           fsr2l	equ	0xFD9
  5723                           status	equ	0xFD8
  5724                           
  5725 ;; *************** function _micro_config_rs *****************
  5726 ;; Defined at:
  5727 ;;		line 3 in file "micro.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;		None
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;		None
  5732 ;; Return value:  Size  Location     Type
  5733 ;;		None               void
  5734 ;; Registers used:
  5735 ;;		wreg, status,2
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5741 ;;      Params:         0       0       0       0       0       0       0
  5742 ;;      Locals:         0       0       0       0       0       0       0
  5743 ;;      Temps:          0       0       0       0       0       0       0
  5744 ;;      Totals:         0       0       0       0       0       0       0
  5745 ;;Total ram usage:        0 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:    3
  5748 ;; This function calls:
  5749 ;;		Nothing
  5750 ;; This function is called by:
  5751 ;;		_check_idtest
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text20
  5756  0037A8                     __ptext20:
  5757                           	opt stack 0
  5758  0037A8                     _micro_config_rs:
  5759                           	opt stack 26
  5760                           
  5761                           ;incstack = 0
  5762  0037A8  FFFF               	dw	65535
  5763                           
  5764                           ;micro.c: 5: PORTEbits.RE2 = 0;
  5765  0037AA  9484               	bcf	3972,2,c	;volatile
  5766                           
  5767                           ;micro.c: 9: SPBRG = 207;
  5768  0037AC  0ECF               	movlw	207
  5769  0037AE  6EAF               	movwf	4015,c	;volatile
  5770                           
  5771                           ;micro.c: 14: TXSTA = 0x20;
  5772  0037B0  0E20               	movlw	32
  5773  0037B2  6EAC               	movwf	4012,c	;volatile
  5774                           
  5775                           ;micro.c: 22: RCSTA = 0x90;
  5776  0037B4  0E90               	movlw	144
  5777  0037B6  6EAB               	movwf	4011,c	;volatile
  5778                           
  5779                           ;micro.c: 34: RCIP = 0;
  5780  0037B8  9A9F               	bcf	3999,5,c	;volatile
  5781                           
  5782                           ;micro.c: 35: RCIE = 1;
  5783  0037BA  8A9D               	bsf	3997,5,c	;volatile
  5784                           
  5785                           ;micro.c: 36: PEIE = 1;
  5786  0037BC  8CF2               	bsf	intcon,6,c	;volatile
  5787  0037BE  0012               	return	
  5788  0037C0  FFFF               	dw	65535	; errata NOP
  5789  0037C2                     __end_of_micro_config_rs:
  5790                           	opt stack 0
  5791                           tblptru	equ	0xFF8
  5792                           tblptrh	equ	0xFF7
  5793                           tblptrl	equ	0xFF6
  5794                           tablat	equ	0xFF5
  5795                           prodh	equ	0xFF4
  5796                           prodl	equ	0xFF3
  5797                           intcon	equ	0xFF2
  5798                           intcon2	equ	0xFF1
  5799                           postinc0	equ	0xFEE
  5800                           wreg	equ	0xFE8
  5801                           postdec1	equ	0xFE5
  5802                           fsr1l	equ	0xFE1
  5803                           indf2	equ	0xFDF
  5804                           postinc2	equ	0xFDE
  5805                           postdec2	equ	0xFDD
  5806                           fsr2h	equ	0xFDA
  5807                           fsr2l	equ	0xFD9
  5808                           status	equ	0xFD8
  5809                           
  5810 ;; *************** function _cf_rcv *****************
  5811 ;; Defined at:
  5812 ;;		line 137 in file "config.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;		None
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;  i               1   23[BANK0 ] unsigned char 
  5817 ;;  temp            1   22[BANK0 ] unsigned char 
  5818 ;; Return value:  Size  Location     Type
  5819 ;;		None               void
  5820 ;; Registers used:
  5821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5827 ;;      Params:         0       0       0       0       0       0       0
  5828 ;;      Locals:         0       2       0       0       0       0       0
  5829 ;;      Temps:          0       2       0       0       0       0       0
  5830 ;;      Totals:         0       4       0       0       0       0       0
  5831 ;;Total ram usage:        4 bytes
  5832 ;; Hardware stack levels used:    1
  5833 ;; Hardware stack levels required when called:    6
  5834 ;; This function calls:
  5835 ;;		_cf_check
  5836 ;;		_ecran_print_one_char
  5837 ;;		_eeprom_read_array
  5838 ;;		_eeprom_write_array
  5839 ;; This function is called by:
  5840 ;;		_check_idtest
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843                           
  5844                           	psect	text21
  5845  001894                     __ptext21:
  5846                           	opt stack 0
  5847  001894                     _cf_rcv:
  5848                           	opt stack 23
  5849                           
  5850                           ;incstack = 0
  5851  001894  FFFF               	dw	65535
  5852                           
  5853                           ;config.c: 139: unsigned char i, temp = 0;
  5854  001896  0100               	movlb	0	; () banked
  5855  001898  6FCE               	movwf	??_cf_rcv& (0+255),b
  5856  00189A  0E00               	movlw	0
  5857  00189C  0100               	movlb	0	; () banked
  5858  00189E  0100               	movlb	0	; () banked
  5859  0018A0  6FD0               	movwf	cf_rcv@temp& (0+255),b
  5860  0018A2  0100               	movlb	0	; () banked
  5861  0018A4  51CE               	movf	??_cf_rcv& (0+255),w,b
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;config.c: 141: if ((((unsigned short) (Cptms - Cf.Time2) > 100) ? 1 : 0))
  5865  0018A6  0101               	movlb	1	; () banked
  5866  0018A8  EE21  F077         	lfsr	2,_Cf+119	;volatile
  5867  0018AC  CFDE F0CE          	movff	postinc2,??_cf_rcv
  5868  0018B0  CFDD F0CF          	movff	postdec2,??_cf_rcv+1
  5869  0018B4  0100               	movlb	0	; () banked
  5870  0018B6  1FCE               	comf	??_cf_rcv& (0+255),f,b
  5871  0018B8  1FCF               	comf	(??_cf_rcv+1)& (0+255),f,b
  5872  0018BA  4BCE               	infsnz	??_cf_rcv& (0+255),f,b
  5873  0018BC  2BCF               	incf	(??_cf_rcv+1)& (0+255),f,b
  5874  0018BE  504F               	movf	_Cptms,w,c	;volatile
  5875  0018C0  0100               	movlb	0	; () banked
  5876  0018C2  27CE               	addwf	??_cf_rcv& (0+255),f,b
  5877  0018C4  5050               	movf	_Cptms+1,w,c	;volatile
  5878  0018C6  0100               	movlb	0	; () banked
  5879  0018C8  23CF               	addwfc	(??_cf_rcv+1)& (0+255),f,b
  5880  0018CA  0E65               	movlw	101
  5881  0018CC  0100               	movlb	0	; () banked
  5882  0018CE  5DCE               	subwf	??_cf_rcv& (0+255),w,b
  5883  0018D0  0E00               	movlw	0
  5884  0018D2  59CF               	subwfb	(??_cf_rcv+1)& (0+255),w,b
  5885  0018D4  A0D8               	btfss	status,0,c
  5886  0018D6  D024               	goto	l6228
  5887                           
  5888                           ; BSR set to: 0
  5889                           ;config.c: 142: {
  5890                           ;config.c: 143: Cf.Time2 = Cptms;
  5891  0018D8  C04F  F177         	movff	_Cptms,_Cf+119	;volatile
  5892  0018DC  C050  F178         	movff	_Cptms+1,_Cf+120	;volatile
  5893                           
  5894                           ;config.c: 145: (INTCONbits.GIE = 0);
  5895  0018E0  9EF2               	bcf	intcon,7,c	;volatile
  5896                           
  5897                           ; BSR set to: 0
  5898                           ;config.c: 146: if ((((unsigned short) (Cptms - Cf.Time1) > 100) ? 1 : 0)) {Cf.Index = 0
      +                          ;}
  5899  0018E2  0101               	movlb	1	; () banked
  5900  0018E4  EE21  F075         	lfsr	2,_Cf+117	;volatile
  5901  0018E8  CFDE F0CE          	movff	postinc2,??_cf_rcv
  5902  0018EC  CFDD F0CF          	movff	postdec2,??_cf_rcv+1
  5903  0018F0  0100               	movlb	0	; () banked
  5904  0018F2  1FCE               	comf	??_cf_rcv& (0+255),f,b
  5905  0018F4  1FCF               	comf	(??_cf_rcv+1)& (0+255),f,b
  5906  0018F6  4BCE               	infsnz	??_cf_rcv& (0+255),f,b
  5907  0018F8  2BCF               	incf	(??_cf_rcv+1)& (0+255),f,b
  5908  0018FA  504F               	movf	_Cptms,w,c	;volatile
  5909  0018FC  0100               	movlb	0	; () banked
  5910  0018FE  27CE               	addwf	??_cf_rcv& (0+255),f,b
  5911  001900  5050               	movf	_Cptms+1,w,c	;volatile
  5912  001902  0100               	movlb	0	; () banked
  5913  001904  23CF               	addwfc	(??_cf_rcv+1)& (0+255),f,b
  5914  001906  0E65               	movlw	101
  5915  001908  0100               	movlb	0	; () banked
  5916  00190A  5DCE               	subwf	??_cf_rcv& (0+255),w,b
  5917  00190C  0E00               	movlw	0
  5918  00190E  59CF               	subwfb	(??_cf_rcv+1)& (0+255),w,b
  5919  001910  A0D8               	btfss	status,0,c
  5920  001912  D004               	goto	l6226
  5921                           
  5922                           ; BSR set to: 0
  5923  001914  0E00               	movlw	0
  5924  001916  0101               	movlb	1	; () banked
  5925  001918  0101               	movlb	1	; () banked
  5926  00191A  6F74               	movwf	(_Cf+116)& (0+255),b	;volatile
  5927  00191C                     l6226:
  5928                           
  5929                           ;config.c: 147: (INTCONbits.GIE = 1);
  5930  00191C  8EF2               	bsf	intcon,7,c	;volatile
  5931                           
  5932                           ;config.c: 148: }
  5933  00191E  D098               	goto	l461
  5934  001920                     l6228:
  5935                           
  5936                           ;config.c: 149: else if (Cf.Index == (32 * 3 + 5 * 3 + 5))
  5937  001920  0101               	movlb	1	; () banked
  5938  001922  0101               	movlb	1	; () banked
  5939  001924  5174               	movf	(_Cf+116)& (0+255),w,b	;volatile
  5940  001926  0A74               	xorlw	116
  5941  001928  A4D8               	btfss	status,2,c
  5942  00192A  D092               	goto	l461
  5943                           
  5944                           ; BSR set to: 1
  5945                           ;config.c: 150: {
  5946                           ;config.c: 151: RCIE = 0;
  5947  00192C  9A9D               	bcf	3997,5,c	;volatile
  5948                           
  5949                           ; BSR set to: 1
  5950                           ;config.c: 153: temp = cf_check();
  5951  00192E  EC04  F01B         	call	_cf_check	;wreg free
  5952  001932  0100               	movlb	0	; () banked
  5953  001934  0100               	movlb	0	; () banked
  5954  001936  6FD0               	movwf	cf_rcv@temp& (0+255),b
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;config.c: 155: if (temp == 0)
  5958  001938  0100               	movlb	0	; () banked
  5959  00193A  0100               	movlb	0	; () banked
  5960  00193C  67D0               	tstfsz	cf_rcv@temp& (0+255),b
  5961  00193E  D00C               	goto	l6238
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;config.c: 156: {
  5965                           ;config.c: 157: ecran_print_one_char(3, 'E');
  5966  001940  0100               	movlb	0	; () banked
  5967  001942  6FCE               	movwf	??_cf_rcv& (0+255),b
  5968  001944  0E45               	movlw	69
  5969  001946  0100               	movlb	0	; () banked
  5970  001948  0100               	movlb	0	; () banked
  5971  00194A  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  5972  00194C  0100               	movlb	0	; () banked
  5973  00194E  51CE               	movf	??_cf_rcv& (0+255),w,b
  5974  001950  0E03               	movlw	3
  5975  001952  ECE0  F01A         	call	_ecran_print_one_char
  5976                           
  5977                           ;config.c: 158: }
  5978  001956  D077               	goto	l6262
  5979  001958                     l6238:
  5980                           
  5981                           ;config.c: 159: else
  5982                           ;config.c: 160: {
  5983                           ;config.c: 162: eeprom_write_array(&Cf.Data[0], 0, (32 * 3 + 5 * 3 + 5));
  5984  001958  0101               	movlb	1	; () banked
  5985  00195A  0E01               	movlw	high _Cf	;volatile
  5986  00195C  0100               	movlb	0	; () banked
  5987  00195E  0100               	movlb	0	; () banked
  5988  001960  6FBD               	movwf	(eeprom_write_array@pData+1)& (0+255),b
  5989  001962  0101               	movlb	1	; () banked
  5990  001964  0E00               	movlw	low _Cf	;volatile
  5991  001966  0100               	movlb	0	; () banked
  5992  001968  0100               	movlb	0	; () banked
  5993  00196A  6FBC               	movwf	eeprom_write_array@pData& (0+255),b
  5994  00196C  0100               	movlb	0	; () banked
  5995  00196E  6FCE               	movwf	??_cf_rcv& (0+255),b
  5996  001970  0E00               	movlw	0
  5997  001972  0100               	movlb	0	; () banked
  5998  001974  0100               	movlb	0	; () banked
  5999  001976  6FBE               	movwf	eeprom_write_array@Address& (0+255),b
  6000  001978  0100               	movlb	0	; () banked
  6001  00197A  51CE               	movf	??_cf_rcv& (0+255),w,b
  6002  00197C  0100               	movlb	0	; () banked
  6003  00197E  6FCF               	movwf	(??_cf_rcv+1)& (0+255),b
  6004  001980  0E74               	movlw	116
  6005  001982  0100               	movlb	0	; () banked
  6006  001984  0100               	movlb	0	; () banked
  6007  001986  6FBF               	movwf	eeprom_write_array@NbData& (0+255),b
  6008  001988  0100               	movlb	0	; () banked
  6009  00198A  51CF               	movf	(??_cf_rcv+1)& (0+255),w,b
  6010  00198C  ECF8  F019         	call	_eeprom_write_array	;wreg free
  6011                           
  6012                           ;config.c: 164: for (i = 0; i < (32 * 3 + 5 * 3 + 5); i ++)
  6013  001990  0100               	movlb	0	; () banked
  6014  001992  6FCE               	movwf	??_cf_rcv& (0+255),b
  6015  001994  0E00               	movlw	0
  6016  001996  0100               	movlb	0	; () banked
  6017  001998  0100               	movlb	0	; () banked
  6018  00199A  6FD1               	movwf	cf_rcv@i& (0+255),b
  6019  00199C  0100               	movlb	0	; () banked
  6020  00199E  51CE               	movf	??_cf_rcv& (0+255),w,b
  6021  0019A0  D011               	goto	L50
  6022  0019A2                     l6246:
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;config.c: 165: {
  6026                           ;config.c: 166: Cf.Data[i] = 0;
  6027  0019A2  0100               	movlb	0	; () banked
  6028  0019A4  0100               	movlb	0	; () banked
  6029  0019A6  51D1               	movf	cf_rcv@i& (0+255),w,b
  6030  0019A8  0D01               	mullw	1
  6031  0019AA  0101               	movlb	1	; () banked
  6032  0019AC  0E00               	movlw	low _Cf	;volatile
  6033  0019AE  24F3               	addwf	prodl,w,c
  6034  0019B0  6ED9               	movwf	fsr2l,c
  6035  0019B2  0101               	movlb	1	; () banked
  6036  0019B4  0E01               	movlw	high _Cf	;volatile
  6037  0019B6  20F4               	addwfc	prodh,w,c
  6038  0019B8  6EDA               	movwf	fsr2h,c
  6039  0019BA  0E00               	movlw	0
  6040  0019BC  6EDF               	movwf	indf2,c
  6041                           
  6042                           ; BSR set to: 1
  6043  0019BE  0100               	movlb	0	; () banked
  6044  0019C0  0100               	movlb	0	; () banked
  6045  0019C2  2BD1               	incf	cf_rcv@i& (0+255),f,b
  6046  0019C4                     L50:
  6047                           
  6048                           ; BSR set to: 0
  6049  0019C4  0E73               	movlw	115
  6050  0019C6  0100               	movlb	0	; () banked
  6051  0019C8  0100               	movlb	0	; () banked
  6052  0019CA  65D1               	cpfsgt	cf_rcv@i& (0+255),b
  6053  0019CC  D7EA               	goto	l6246
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;config.c: 167: }
  6057                           ;config.c: 169: eeprom_read_array(&Cf.Data[0], 0, (32 * 3 + 5 * 3 + 5));
  6058                           
  6059                           ; BSR set to: 0
  6060  0019CE  0101               	movlb	1	; () banked
  6061  0019D0  0E01               	movlw	high _Cf	;volatile
  6062  0019D2  0100               	movlb	0	; () banked
  6063  0019D4  0100               	movlb	0	; () banked
  6064  0019D6  6FBC               	movwf	(eeprom_read_array@pData+1)& (0+255),b
  6065  0019D8  0101               	movlb	1	; () banked
  6066  0019DA  0E00               	movlw	low _Cf	;volatile
  6067  0019DC  0100               	movlb	0	; () banked
  6068  0019DE  0100               	movlb	0	; () banked
  6069  0019E0  6FBB               	movwf	eeprom_read_array@pData& (0+255),b
  6070  0019E2  0100               	movlb	0	; () banked
  6071  0019E4  6FCE               	movwf	??_cf_rcv& (0+255),b
  6072  0019E6  0E00               	movlw	0
  6073  0019E8  0100               	movlb	0	; () banked
  6074  0019EA  0100               	movlb	0	; () banked
  6075  0019EC  6FBD               	movwf	eeprom_read_array@Address& (0+255),b
  6076  0019EE  0100               	movlb	0	; () banked
  6077  0019F0  51CE               	movf	??_cf_rcv& (0+255),w,b
  6078  0019F2  0100               	movlb	0	; () banked
  6079  0019F4  6FCF               	movwf	(??_cf_rcv+1)& (0+255),b
  6080  0019F6  0E74               	movlw	116
  6081  0019F8  0100               	movlb	0	; () banked
  6082  0019FA  0100               	movlb	0	; () banked
  6083  0019FC  6FBE               	movwf	eeprom_read_array@NbData& (0+255),b
  6084  0019FE  0100               	movlb	0	; () banked
  6085  001A00  51CF               	movf	(??_cf_rcv+1)& (0+255),w,b
  6086  001A02  ECCF  F019         	call	_eeprom_read_array	;wreg free
  6087                           
  6088                           ;config.c: 171: temp = cf_check();
  6089  001A06  EC04  F01B         	call	_cf_check	;wreg free
  6090  001A0A  0100               	movlb	0	; () banked
  6091  001A0C  0100               	movlb	0	; () banked
  6092  001A0E  6FD0               	movwf	cf_rcv@temp& (0+255),b
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;config.c: 173: if (temp == 0)
  6096  001A10  0100               	movlb	0	; () banked
  6097  001A12  0100               	movlb	0	; () banked
  6098  001A14  67D0               	tstfsz	cf_rcv@temp& (0+255),b
  6099  001A16  D00C               	goto	l6260
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;config.c: 174: {
  6103                           ;config.c: 175: ecran_print_one_char(3, 'E');
  6104  001A18  0100               	movlb	0	; () banked
  6105  001A1A  6FCE               	movwf	??_cf_rcv& (0+255),b
  6106  001A1C  0E45               	movlw	69
  6107  001A1E  0100               	movlb	0	; () banked
  6108  001A20  0100               	movlb	0	; () banked
  6109  001A22  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  6110  001A24  0100               	movlb	0	; () banked
  6111  001A26  51CE               	movf	??_cf_rcv& (0+255),w,b
  6112  001A28  0E03               	movlw	3
  6113  001A2A  ECE0  F01A         	call	_ecran_print_one_char
  6114                           
  6115                           ;config.c: 176: }
  6116  001A2E  D00B               	goto	l6262
  6117  001A30                     l6260:
  6118                           
  6119                           ;config.c: 177: else
  6120                           ;config.c: 178: {
  6121                           ;config.c: 179: ecran_print_one_char(3, 'P');
  6122  001A30  0100               	movlb	0	; () banked
  6123  001A32  6FCE               	movwf	??_cf_rcv& (0+255),b
  6124  001A34  0E50               	movlw	80
  6125  001A36  0100               	movlb	0	; () banked
  6126  001A38  0100               	movlb	0	; () banked
  6127  001A3A  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  6128  001A3C  0100               	movlb	0	; () banked
  6129  001A3E  51CE               	movf	??_cf_rcv& (0+255),w,b
  6130  001A40  0E03               	movlw	3
  6131  001A42  ECE0  F01A         	call	_ecran_print_one_char
  6132  001A46                     l6262:
  6133                           
  6134                           ;config.c: 180: }
  6135                           ;config.c: 181: }
  6136                           ;config.c: 183: Cf.Index = 0;
  6137  001A46  0E00               	movlw	0
  6138  001A48  0101               	movlb	1	; () banked
  6139  001A4A  0101               	movlb	1	; () banked
  6140  001A4C  6F74               	movwf	(_Cf+116)& (0+255),b	;volatile
  6141                           
  6142                           ; BSR set to: 1
  6143                           ;config.c: 185: RCIE = 1;
  6144  001A4E  8A9D               	bsf	3997,5,c	;volatile
  6145  001A50                     l461:
  6146  001A50  0012               	return	
  6147  001A52  FFFF               	dw	65535	; errata NOP
  6148  001A54                     __end_of_cf_rcv:
  6149                           	opt stack 0
  6150                           tblptru	equ	0xFF8
  6151                           tblptrh	equ	0xFF7
  6152                           tblptrl	equ	0xFF6
  6153                           tablat	equ	0xFF5
  6154                           prodh	equ	0xFF4
  6155                           prodl	equ	0xFF3
  6156                           intcon	equ	0xFF2
  6157                           intcon2	equ	0xFF1
  6158                           postinc0	equ	0xFEE
  6159                           wreg	equ	0xFE8
  6160                           postdec1	equ	0xFE5
  6161                           fsr1l	equ	0xFE1
  6162                           indf2	equ	0xFDF
  6163                           postinc2	equ	0xFDE
  6164                           postdec2	equ	0xFDD
  6165                           fsr2h	equ	0xFDA
  6166                           fsr2l	equ	0xFD9
  6167                           status	equ	0xFD8
  6168                           
  6169 ;; *************** function _eeprom_write_array *****************
  6170 ;; Defined at:
  6171 ;;		line 52 in file "eeprom.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  pData           2    2[BANK0 ] PTR unsigned char 
  6174 ;;		 -> Cf(122), 
  6175 ;;  Address         1    4[BANK0 ] unsigned char 
  6176 ;;  NbData          1    5[BANK0 ] unsigned char 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  i               1    7[BANK0 ] unsigned char 
  6179 ;; Return value:  Size  Location     Type
  6180 ;;		None               void
  6181 ;; Registers used:
  6182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6188 ;;      Params:         0       4       0       0       0       0       0
  6189 ;;      Locals:         0       1       0       0       0       0       0
  6190 ;;      Temps:          0       1       0       0       0       0       0
  6191 ;;      Totals:         0       6       0       0       0       0       0
  6192 ;;Total ram usage:        6 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; Hardware stack levels required when called:    4
  6195 ;; This function calls:
  6196 ;;		_eeprom_write
  6197 ;; This function is called by:
  6198 ;;		_cf_rcv
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           	psect	text22
  6203  0033F0                     __ptext22:
  6204                           	opt stack 0
  6205  0033F0                     _eeprom_write_array:
  6206                           	opt stack 24
  6207                           
  6208                           ;incstack = 0
  6209  0033F0  FFFF               	dw	65535
  6210                           
  6211                           ;eeprom.c: 54: unsigned char i;
  6212                           ;eeprom.c: 56: for (i = 0; i < NbData; i ++)
  6213  0033F2  0100               	movlb	0	; () banked
  6214  0033F4  6FC0               	movwf	??_eeprom_write_array& (0+255),b
  6215  0033F6  0E00               	movlw	0
  6216  0033F8  0100               	movlb	0	; () banked
  6217  0033FA  0100               	movlb	0	; () banked
  6218  0033FC  6FC1               	movwf	eeprom_write_array@i& (0+255),b
  6219  0033FE  0100               	movlb	0	; () banked
  6220  003400  51C0               	movf	??_eeprom_write_array& (0+255),w,b
  6221  003402  D013               	goto	l5984
  6222  003404                     l5976:
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;eeprom.c: 57: {
  6226                           ;eeprom.c: 58: eeprom_write(*pData, Address);
  6227  003404  C0BE  F0BA         	movff	eeprom_write_array@Address,eeprom_write@Address
  6228  003408  C0BC  FFD9         	movff	eeprom_write_array@pData,fsr2l
  6229  00340C  C0BD  FFDA         	movff	eeprom_write_array@pData+1,fsr2h
  6230  003410  50DF               	movf	indf2,w,c
  6231  003412  EC8D  F01B         	call	_eeprom_write
  6232                           
  6233                           ;eeprom.c: 59: pData ++;
  6234  003416  0100               	movlb	0	; () banked
  6235  003418  0100               	movlb	0	; () banked
  6236  00341A  4BBC               	infsnz	eeprom_write_array@pData& (0+255),f,b
  6237  00341C  2BBD               	incf	(eeprom_write_array@pData+1)& (0+255),f,b
  6238                           
  6239                           ; BSR set to: 0
  6240                           ;eeprom.c: 60: Address ++;
  6241  00341E  0100               	movlb	0	; () banked
  6242  003420  0100               	movlb	0	; () banked
  6243  003422  2BBE               	incf	eeprom_write_array@Address& (0+255),f,b
  6244                           
  6245                           ; BSR set to: 0
  6246  003424  0100               	movlb	0	; () banked
  6247  003426  0100               	movlb	0	; () banked
  6248  003428  2BC1               	incf	eeprom_write_array@i& (0+255),f,b
  6249  00342A                     l5984:
  6250                           
  6251                           ; BSR set to: 0
  6252  00342A  0100               	movlb	0	; () banked
  6253  00342C  0100               	movlb	0	; () banked
  6254  00342E  51BF               	movf	eeprom_write_array@NbData& (0+255),w,b
  6255  003430  0100               	movlb	0	; () banked
  6256  003432  0100               	movlb	0	; () banked
  6257  003434  5DC1               	subwf	eeprom_write_array@i& (0+255),w,b
  6258  003436  B0D8               	btfsc	status,0,c
  6259                           
  6260                           ; BSR set to: 0
  6261                           
  6262                           ; BSR set to: 0
  6263  003438  0012               	return	
  6264  00343A  FFFF               	dw	65535	; assembler added errata NOP
  6265  00343C  D7E3               	goto	l5976
  6266  00343E  FFFF               	dw	65535	; errata NOP
  6267  003440                     __end_of_eeprom_write_array:
  6268                           	opt stack 0
  6269                           tblptru	equ	0xFF8
  6270                           tblptrh	equ	0xFF7
  6271                           tblptrl	equ	0xFF6
  6272                           tablat	equ	0xFF5
  6273                           prodh	equ	0xFF4
  6274                           prodl	equ	0xFF3
  6275                           intcon	equ	0xFF2
  6276                           intcon2	equ	0xFF1
  6277                           postinc0	equ	0xFEE
  6278                           wreg	equ	0xFE8
  6279                           postdec1	equ	0xFE5
  6280                           fsr1l	equ	0xFE1
  6281                           indf2	equ	0xFDF
  6282                           postinc2	equ	0xFDE
  6283                           postdec2	equ	0xFDD
  6284                           fsr2h	equ	0xFDA
  6285                           fsr2l	equ	0xFD9
  6286                           status	equ	0xFD8
  6287                           
  6288 ;; *************** function _eeprom_write *****************
  6289 ;; Defined at:
  6290 ;;		line 18 in file "eeprom.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;  Data            1    wreg     unsigned char 
  6293 ;;  Address         1    0[BANK0 ] unsigned char 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;  Data            1    1[BANK0 ] unsigned char 
  6296 ;; Return value:  Size  Location     Type
  6297 ;;		None               void
  6298 ;; Registers used:
  6299 ;;		wreg, status,2
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6305 ;;      Params:         0       1       0       0       0       0       0
  6306 ;;      Locals:         0       1       0       0       0       0       0
  6307 ;;      Temps:          0       0       0       0       0       0       0
  6308 ;;      Totals:         0       2       0       0       0       0       0
  6309 ;;Total ram usage:        2 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; Hardware stack levels required when called:    3
  6312 ;; This function calls:
  6313 ;;		Nothing
  6314 ;; This function is called by:
  6315 ;;		_eeprom_write_array
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           	psect	text23
  6320  00371A                     __ptext23:
  6321                           	opt stack 0
  6322  00371A                     _eeprom_write:
  6323                           	opt stack 24
  6324                           
  6325                           ; BSR set to: 0
  6326                           ;incstack = 0
  6327  00371A  FFFF               	dw	65535
  6328                           
  6329                           ;eeprom_write@Data stored from wreg
  6330  00371C  CFE8 F0BB          	movff	wreg,eeprom_write@Data
  6331                           
  6332                           ;eeprom.c: 20: EEADR = Address;
  6333  003720  C0BA  FFA9         	movff	eeprom_write@Address,4009	;volatile
  6334                           
  6335                           ;eeprom.c: 21: EEDATA = Data;
  6336  003724  C0BB  FFA8         	movff	eeprom_write@Data,4008	;volatile
  6337                           
  6338                           ;eeprom.c: 23: EEPGD = 0;
  6339  003728  9EA6               	bcf	4006,7,c	;volatile
  6340                           
  6341                           ;eeprom.c: 24: CFGS = 0;
  6342  00372A  9CA6               	bcf	4006,6,c	;volatile
  6343                           
  6344                           ;eeprom.c: 25: WREN = 1;
  6345  00372C  84A6               	bsf	4006,2,c	;volatile
  6346                           
  6347                           ;eeprom.c: 27: (INTCONbits.GIE = 0);
  6348  00372E  9EF2               	bcf	intcon,7,c	;volatile
  6349                           
  6350                           ;eeprom.c: 29: EECON2 = 0x55;
  6351  003730  0E55               	movlw	85
  6352  003732  6EA7               	movwf	4007,c	;volatile
  6353                           
  6354                           ;eeprom.c: 30: EECON2 = 0xAA;
  6355  003734  0EAA               	movlw	170
  6356  003736  6EA7               	movwf	4007,c	;volatile
  6357                           
  6358                           ;eeprom.c: 32: WR = 1;
  6359  003738  82A6               	bsf	4006,1,c	;volatile
  6360  00373A                     l340:
  6361  00373A  B2A6               	btfsc	4006,1,c	;volatile
  6362  00373C  D7FE               	goto	l340
  6363                           
  6364                           ;eeprom.c: 35: (INTCONbits.GIE = 1);
  6365  00373E  8EF2               	bsf	intcon,7,c	;volatile
  6366                           
  6367                           ;eeprom.c: 37: WREN = 0;
  6368  003740  94A6               	bcf	4006,2,c	;volatile
  6369  003742  0012               	return	
  6370  003744  FFFF               	dw	65535	; errata NOP
  6371  003746                     __end_of_eeprom_write:
  6372                           	opt stack 0
  6373                           tblptru	equ	0xFF8
  6374                           tblptrh	equ	0xFF7
  6375                           tblptrl	equ	0xFF6
  6376                           tablat	equ	0xFF5
  6377                           prodh	equ	0xFF4
  6378                           prodl	equ	0xFF3
  6379                           intcon	equ	0xFF2
  6380                           intcon2	equ	0xFF1
  6381                           postinc0	equ	0xFEE
  6382                           wreg	equ	0xFE8
  6383                           postdec1	equ	0xFE5
  6384                           fsr1l	equ	0xFE1
  6385                           indf2	equ	0xFDF
  6386                           postinc2	equ	0xFDE
  6387                           postdec2	equ	0xFDD
  6388                           fsr2h	equ	0xFDA
  6389                           fsr2l	equ	0xFD9
  6390                           status	equ	0xFD8
  6391                           
  6392 ;; *************** function _check_bpon *****************
  6393 ;; Defined at:
  6394 ;;		line 52 in file "test.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;		None
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;		None
  6399 ;; Return value:  Size  Location     Type
  6400 ;;		None               void
  6401 ;; Registers used:
  6402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6408 ;;      Params:         0       0       0       0       0       0       0
  6409 ;;      Locals:         0       0       0       0       0       0       0
  6410 ;;      Temps:          0       2       0       0       0       0       0
  6411 ;;      Totals:         0       2       0       0       0       0       0
  6412 ;;Total ram usage:        2 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; Hardware stack levels required when called:    5
  6415 ;; This function calls:
  6416 ;;		_ecran_print_one_char
  6417 ;; This function is called by:
  6418 ;;		_main
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           	psect	text24
  6423  00329A                     __ptext24:
  6424                           	opt stack 0
  6425  00329A                     _check_bpon:
  6426                           	opt stack 25
  6427                           
  6428                           ;incstack = 0
  6429  00329A  FFFF               	dw	65535
  6430                           
  6431                           ;test.c: 54: Test.Time = Cptms;
  6432  00329C  C04F  F030         	movff	_Cptms,_Test+2	;volatile
  6433  0032A0  C050  F031         	movff	_Cptms+1,_Test+3	;volatile
  6434                           
  6435                           ;test.c: 56: if (PORTEbits.RE0 == 0)
  6436  0032A4  B084               	btfsc	3972,0,c	;volatile
  6437  0032A6  D025               	goto	l553
  6438                           
  6439                           ;test.c: 57: {
  6440                           ;test.c: 58: ecran_print_one_char(3, 'A');
  6441  0032A8  0100               	movlb	0	; () banked
  6442  0032AA  6FBD               	movwf	??_check_bpon& (0+255),b
  6443  0032AC  0E41               	movlw	65
  6444  0032AE  0100               	movlb	0	; () banked
  6445  0032B0  0100               	movlb	0	; () banked
  6446  0032B2  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  6447  0032B4  0100               	movlb	0	; () banked
  6448  0032B6  51BD               	movf	??_check_bpon& (0+255),w,b
  6449  0032B8  0E03               	movlw	3
  6450  0032BA  ECE0  F01A         	call	_ecran_print_one_char
  6451  0032BE                     l548:
  6452  0032BE  B084               	btfsc	3972,0,c	;volatile
  6453  0032C0  D018               	goto	l553
  6454  0032C2  EE20  F030         	lfsr	2,_Test+2
  6455  0032C6  CFDE F0BD          	movff	postinc2,??_check_bpon
  6456  0032CA  CFDD F0BE          	movff	postdec2,??_check_bpon+1
  6457  0032CE  0100               	movlb	0	; () banked
  6458  0032D0  1FBD               	comf	??_check_bpon& (0+255),f,b
  6459  0032D2  1FBE               	comf	(??_check_bpon+1)& (0+255),f,b
  6460  0032D4  4BBD               	infsnz	??_check_bpon& (0+255),f,b
  6461  0032D6  2BBE               	incf	(??_check_bpon+1)& (0+255),f,b
  6462  0032D8  504F               	movf	_Cptms,w,c	;volatile
  6463  0032DA  0100               	movlb	0	; () banked
  6464  0032DC  27BD               	addwf	??_check_bpon& (0+255),f,b
  6465  0032DE  5050               	movf	_Cptms+1,w,c	;volatile
  6466  0032E0  0100               	movlb	0	; () banked
  6467  0032E2  23BE               	addwfc	(??_check_bpon+1)& (0+255),f,b
  6468  0032E4  0EE8               	movlw	232
  6469  0032E6  0100               	movlb	0	; () banked
  6470  0032E8  5DBD               	subwf	??_check_bpon& (0+255),w,b
  6471  0032EA  0E03               	movlw	3
  6472  0032EC  59BE               	subwfb	(??_check_bpon+1)& (0+255),w,b
  6473  0032EE  A0D8               	btfss	status,0,c
  6474  0032F0  D7E6               	goto	l548
  6475  0032F2                     l553:
  6476  0032F2  0012               	return	
  6477  0032F4  FFFF               	dw	65535	; errata NOP
  6478  0032F6                     __end_of_check_bpon:
  6479                           	opt stack 0
  6480                           tblptru	equ	0xFF8
  6481                           tblptrh	equ	0xFF7
  6482                           tblptrl	equ	0xFF6
  6483                           tablat	equ	0xFF5
  6484                           prodh	equ	0xFF4
  6485                           prodl	equ	0xFF3
  6486                           intcon	equ	0xFF2
  6487                           intcon2	equ	0xFF1
  6488                           postinc0	equ	0xFEE
  6489                           wreg	equ	0xFE8
  6490                           postdec1	equ	0xFE5
  6491                           fsr1l	equ	0xFE1
  6492                           indf2	equ	0xFDF
  6493                           postinc2	equ	0xFDE
  6494                           postdec2	equ	0xFDD
  6495                           fsr2h	equ	0xFDA
  6496                           fsr2l	equ	0xFD9
  6497                           status	equ	0xFD8
  6498                           
  6499 ;; *************** function _cf_check_and_display *****************
  6500 ;; Defined at:
  6501 ;;		line 97 in file "config.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;		None
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;  temp            2   22[BANK0 ] unsigned short 
  6506 ;;  configOk        1   24[BANK0 ] unsigned char 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;		None               void
  6509 ;; Registers used:
  6510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6516 ;;      Params:         0       0       0       0       0       0       0
  6517 ;;      Locals:         0       3       0       0       0       0       0
  6518 ;;      Temps:          0       2       0       0       0       0       0
  6519 ;;      Totals:         0       5       0       0       0       0       0
  6520 ;;Total ram usage:        5 bytes
  6521 ;; Hardware stack levels used:    1
  6522 ;; Hardware stack levels required when called:    6
  6523 ;; This function calls:
  6524 ;;		_HexToAscii
  6525 ;;		_cf_check
  6526 ;;		_ecran_print_one_char
  6527 ;;		_ecran_refresh
  6528 ;;		_eeprom_read_array
  6529 ;; This function is called by:
  6530 ;;		_main
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           	psect	text25
  6535  001BEA                     __ptext25:
  6536                           	opt stack 0
  6537  001BEA                     _cf_check_and_display:
  6538                           	opt stack 24
  6539                           
  6540                           ;incstack = 0
  6541  001BEA  FFFF               	dw	65535
  6542                           
  6543                           ;config.c: 99: unsigned char configOk = 0;
  6544  001BEC  0100               	movlb	0	; () banked
  6545  001BEE  6FCE               	movwf	??_cf_check_and_display& (0+255),b
  6546  001BF0  0E00               	movlw	0
  6547  001BF2  0100               	movlb	0	; () banked
  6548  001BF4  0100               	movlb	0	; () banked
  6549  001BF6  6FD2               	movwf	cf_check_and_display@configOk& (0+255),b
  6550  001BF8  0100               	movlb	0	; () banked
  6551  001BFA  51CE               	movf	??_cf_check_and_display& (0+255),w,b
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;config.c: 100: unsigned short temp;
  6555                           ;config.c: 102: eeprom_read_array(&Cf.Data[0], 0, (32 * 3 + 5 * 3 + 5));
  6556  001BFC  0101               	movlb	1	; () banked
  6557  001BFE  0E01               	movlw	high _Cf	;volatile
  6558  001C00  0100               	movlb	0	; () banked
  6559  001C02  0100               	movlb	0	; () banked
  6560  001C04  6FBC               	movwf	(eeprom_read_array@pData+1)& (0+255),b
  6561  001C06  0101               	movlb	1	; () banked
  6562  001C08  0E00               	movlw	low _Cf	;volatile
  6563  001C0A  0100               	movlb	0	; () banked
  6564  001C0C  0100               	movlb	0	; () banked
  6565  001C0E  6FBB               	movwf	eeprom_read_array@pData& (0+255),b
  6566  001C10  0100               	movlb	0	; () banked
  6567  001C12  6FCE               	movwf	??_cf_check_and_display& (0+255),b
  6568  001C14  0E00               	movlw	0
  6569  001C16  0100               	movlb	0	; () banked
  6570  001C18  0100               	movlb	0	; () banked
  6571  001C1A  6FBD               	movwf	eeprom_read_array@Address& (0+255),b
  6572  001C1C  0100               	movlb	0	; () banked
  6573  001C1E  51CE               	movf	??_cf_check_and_display& (0+255),w,b
  6574  001C20  0100               	movlb	0	; () banked
  6575  001C22  6FCF               	movwf	(??_cf_check_and_display+1)& (0+255),b
  6576  001C24  0E74               	movlw	116
  6577  001C26  0100               	movlb	0	; () banked
  6578  001C28  0100               	movlb	0	; () banked
  6579  001C2A  6FBE               	movwf	eeprom_read_array@NbData& (0+255),b
  6580  001C2C  0100               	movlb	0	; () banked
  6581  001C2E  51CF               	movf	(??_cf_check_and_display+1)& (0+255),w,b
  6582  001C30  ECCF  F019         	call	_eeprom_read_array	;wreg free
  6583                           
  6584                           ;config.c: 104: configOk = cf_check();
  6585  001C34  EC04  F01B         	call	_cf_check	;wreg free
  6586  001C38  0100               	movlb	0	; () banked
  6587  001C3A  0100               	movlb	0	; () banked
  6588  001C3C  6FD2               	movwf	cf_check_and_display@configOk& (0+255),b
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;config.c: 106: if (configOk == 1)
  6592  001C3E  0100               	movlb	0	; () banked
  6593  001C40  0100               	movlb	0	; () banked
  6594  001C42  05D2               	decf	cf_check_and_display@configOk& (0+255),w,b
  6595  001C44  A4D8               	btfss	status,2,c
  6596  001C46  D080               	goto	l6546
  6597                           
  6598                           ; BSR set to: 0
  6599                           ;config.c: 107: {
  6600                           ;config.c: 109: if (Cf.IsLong == 1)
  6601  001C48  0101               	movlb	1	; () banked
  6602  001C4A  A179               	btfss	(_Cf+121)& (0+255),0,b	;volatile
  6603  001C4C  D04C               	goto	l6542
  6604                           
  6605                           ; BSR set to: 1
  6606                           ;config.c: 110: {
  6607                           ;config.c: 111: Ecran.Digit[0] = ' ';
  6608  001C4E  0100               	movlb	0	; () banked
  6609  001C50  6FCE               	movwf	??_cf_check_and_display& (0+255),b
  6610  001C52  0E20               	movlw	32
  6611  001C54  0100               	movlb	0	; () banked
  6612  001C56  0100               	movlb	0	; () banked
  6613  001C58  6FAA               	movwf	_Ecran& (0+255),b
  6614  001C5A  0100               	movlb	0	; () banked
  6615  001C5C  51CE               	movf	??_cf_check_and_display& (0+255),w,b
  6616                           
  6617                           ;config.c: 112: Ecran.Digit[1] = ' ';
  6618  001C5E  0100               	movlb	0	; () banked
  6619  001C60  6FCE               	movwf	??_cf_check_and_display& (0+255),b
  6620  001C62  0E20               	movlw	32
  6621  001C64  0100               	movlb	0	; () banked
  6622  001C66  0100               	movlb	0	; () banked
  6623  001C68  6FAB               	movwf	(_Ecran+1)& (0+255),b
  6624  001C6A  0100               	movlb	0	; () banked
  6625  001C6C  51CE               	movf	??_cf_check_and_display& (0+255),w,b
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;config.c: 113: Ecran.Digit[2] = HexToAscii(((unsigned char) ((unsigned char) ((Cf.Data[
      +                          ((32 * 3 + 5 * 3) + 2)]) & 0xF0) >> 4)));
  6629  001C6E  0101               	movlb	1	; () banked
  6630  001C70  0101               	movlb	1	; () banked
  6631  001C72  3971               	swapf	(_Cf+113)& (0+255),w,b	;volatile
  6632  001C74  0B0F               	andlw	15
  6633  001C76  0B0F               	andlw	15
  6634  001C78  EC45  F01B         	call	_HexToAscii
  6635  001C7C  0100               	movlb	0	; () banked
  6636  001C7E  0100               	movlb	0	; () banked
  6637  001C80  6FAC               	movwf	(_Ecran+2)& (0+255),b
  6638                           
  6639                           ; BSR set to: 0
  6640                           ;config.c: 114: Ecran.Digit[3] = HexToAscii(((unsigned char) ((Cf.Data[((32 * 3 + 5 * 3)
      +                           + 2)]) & 0x0F)));
  6641  001C82  0101               	movlb	1	; () banked
  6642  001C84  0101               	movlb	1	; () banked
  6643  001C86  5171               	movf	(_Cf+113)& (0+255),w,b	;volatile
  6644  001C88  0B0F               	andlw	15
  6645  001C8A  EC45  F01B         	call	_HexToAscii
  6646  001C8E  0100               	movlb	0	; () banked
  6647  001C90  0100               	movlb	0	; () banked
  6648  001C92  6FAD               	movwf	(_Ecran+3)& (0+255),b
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;config.c: 116: Ecran.Digits = Ecran.Digit;
  6652  001C94  0100               	movlb	0	; () banked
  6653  001C96  0E00               	movlw	high _Ecran
  6654  001C98  0100               	movlb	0	; () banked
  6655  001C9A  0100               	movlb	0	; () banked
  6656  001C9C  6FAF               	movwf	(_Ecran+5)& (0+255),b
  6657  001C9E  0100               	movlb	0	; () banked
  6658  001CA0  0EAA               	movlw	low _Ecran
  6659  001CA2  0100               	movlb	0	; () banked
  6660  001CA4  0100               	movlb	0	; () banked
  6661  001CA6  6FAE               	movwf	(_Ecran+4)& (0+255),b
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;config.c: 118: temp = Cptms;
  6665  001CA8  C04F  F0D0         	movff	_Cptms,cf_check_and_display@temp	;volatile
  6666  001CAC  C050  F0D1         	movff	_Cptms+1,cf_check_and_display@temp+1	;volatile
  6667                           
  6668                           ;config.c: 120: while((((unsigned short) (Cptms - temp) < 1000) ? 1 : 0)) {ecran_refresh
      +                          ();}
  6669  001CB0  D002               	goto	l6540
  6670  001CB2                     l6538:
  6671                           
  6672                           ; BSR set to: 0
  6673  001CB2  EC7C  F016         	call	_ecran_refresh	;wreg free
  6674  001CB6                     l6540:
  6675  001CB6  0100               	movlb	0	; () banked
  6676  001CB8  C0D0  F0CE         	movff	cf_check_and_display@temp,??_cf_check_and_display
  6677  001CBC  0100               	movlb	0	; () banked
  6678  001CBE  C0D1  F0CF         	movff	cf_check_and_display@temp+1,??_cf_check_and_display+1
  6679  001CC2  0100               	movlb	0	; () banked
  6680  001CC4  1FCE               	comf	??_cf_check_and_display& (0+255),f,b
  6681  001CC6  1FCF               	comf	(??_cf_check_and_display+1)& (0+255),f,b
  6682  001CC8  4BCE               	infsnz	??_cf_check_and_display& (0+255),f,b
  6683  001CCA  2BCF               	incf	(??_cf_check_and_display+1)& (0+255),f,b
  6684  001CCC  504F               	movf	_Cptms,w,c	;volatile
  6685  001CCE  0100               	movlb	0	; () banked
  6686  001CD0  27CE               	addwf	??_cf_check_and_display& (0+255),f,b
  6687  001CD2  5050               	movf	_Cptms+1,w,c	;volatile
  6688  001CD4  0100               	movlb	0	; () banked
  6689  001CD6  23CF               	addwfc	(??_cf_check_and_display+1)& (0+255),f,b
  6690  001CD8  0EE8               	movlw	232
  6691  001CDA  0100               	movlb	0	; () banked
  6692  001CDC  5DCE               	subwf	??_cf_check_and_display& (0+255),w,b
  6693  001CDE  0E03               	movlw	3
  6694  001CE0  59CF               	subwfb	(??_cf_check_and_display+1)& (0+255),w,b
  6695  001CE2  A0D8               	btfss	status,0,c
  6696  001CE4  D7E6               	goto	l6538
  6697  001CE6                     l6542:
  6698                           
  6699                           ;config.c: 121: }
  6700                           ;config.c: 123: Ecran.Digit[0] = HexToAscii(((unsigned char) ((unsigned char) ((Cf.Data[
      +                          ((32 * 3 + 5 * 3) + 3)]) & 0xF0) >> 4)));
  6701  001CE6  0101               	movlb	1	; () banked
  6702  001CE8  0101               	movlb	1	; () banked
  6703  001CEA  3972               	swapf	(_Cf+114)& (0+255),w,b	;volatile
  6704  001CEC  0B0F               	andlw	15
  6705  001CEE  0B0F               	andlw	15
  6706  001CF0  EC45  F01B         	call	_HexToAscii
  6707  001CF4  0100               	movlb	0	; () banked
  6708  001CF6  0100               	movlb	0	; () banked
  6709  001CF8  6FAA               	movwf	_Ecran& (0+255),b
  6710                           
  6711                           ;config.c: 124: Ecran.Digit[1] = HexToAscii(((unsigned char) ((Cf.Data[((32 * 3 + 5 * 3)
      +                           + 3)]) & 0x0F)));
  6712  001CFA  0101               	movlb	1	; () banked
  6713  001CFC  0101               	movlb	1	; () banked
  6714  001CFE  5172               	movf	(_Cf+114)& (0+255),w,b	;volatile
  6715  001D00  0B0F               	andlw	15
  6716  001D02  EC45  F01B         	call	_HexToAscii
  6717  001D06  0100               	movlb	0	; () banked
  6718  001D08  0100               	movlb	0	; () banked
  6719  001D0A  6FAB               	movwf	(_Ecran+1)& (0+255),b
  6720                           
  6721                           ;config.c: 125: Ecran.Digit[2] = HexToAscii(((unsigned char) ((unsigned char) ((Cf.Data[
      +                          ((32 * 3 + 5 * 3) + 4)]) & 0xF0) >> 4)));
  6722  001D0C  0101               	movlb	1	; () banked
  6723  001D0E  0101               	movlb	1	; () banked
  6724  001D10  3973               	swapf	(_Cf+115)& (0+255),w,b	;volatile
  6725  001D12  0B0F               	andlw	15
  6726  001D14  0B0F               	andlw	15
  6727  001D16  EC45  F01B         	call	_HexToAscii
  6728  001D1A  0100               	movlb	0	; () banked
  6729  001D1C  0100               	movlb	0	; () banked
  6730  001D1E  6FAC               	movwf	(_Ecran+2)& (0+255),b
  6731                           
  6732                           ;config.c: 126: Ecran.Digit[3] = HexToAscii(((unsigned char) ((Cf.Data[((32 * 3 + 5 * 3)
      +                           + 4)]) & 0x0F)));
  6733  001D20  0101               	movlb	1	; () banked
  6734  001D22  0101               	movlb	1	; () banked
  6735  001D24  5173               	movf	(_Cf+115)& (0+255),w,b	;volatile
  6736  001D26  0B0F               	andlw	15
  6737  001D28  EC45  F01B         	call	_HexToAscii
  6738  001D2C  0100               	movlb	0	; () banked
  6739  001D2E  0100               	movlb	0	; () banked
  6740  001D30  6FAD               	movwf	(_Ecran+3)& (0+255),b
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;config.c: 128: Ecran.Digits = Ecran.Digit;
  6744  001D32  0100               	movlb	0	; () banked
  6745  001D34  0E00               	movlw	high _Ecran
  6746  001D36  0100               	movlb	0	; () banked
  6747  001D38  0100               	movlb	0	; () banked
  6748  001D3A  6FAF               	movwf	(_Ecran+5)& (0+255),b
  6749  001D3C  0100               	movlb	0	; () banked
  6750  001D3E  0EAA               	movlw	low _Ecran
  6751  001D40  0100               	movlb	0	; () banked
  6752  001D42  0100               	movlb	0	; () banked
  6753  001D44  6FAE               	movwf	(_Ecran+4)& (0+255),b
  6754                           
  6755                           ;config.c: 129: }
  6756  001D46  D00C               	goto	l448
  6757  001D48                     l6546:
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;config.c: 130: else
  6761                           ;config.c: 131: {
  6762                           ;config.c: 132: ecran_print_one_char(3, 'E');
  6763  001D48  0100               	movlb	0	; () banked
  6764  001D4A  6FCE               	movwf	??_cf_check_and_display& (0+255),b
  6765  001D4C  0E45               	movlw	69
  6766  001D4E  0100               	movlb	0	; () banked
  6767  001D50  0100               	movlb	0	; () banked
  6768  001D52  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
  6769  001D54  0100               	movlb	0	; () banked
  6770  001D56  51CE               	movf	??_cf_check_and_display& (0+255),w,b
  6771  001D58  0E03               	movlw	3
  6772  001D5A  ECE0  F01A         	call	_ecran_print_one_char
  6773  001D5E                     l445:
  6774  001D5E  D7FF               	goto	l445
  6775  001D60                     l448:
  6776  001D60  0012               	return	
  6777  001D62  FFFF               	dw	65535	; errata NOP
  6778  001D64                     __end_of_cf_check_and_display:
  6779                           	opt stack 0
  6780                           tblptru	equ	0xFF8
  6781                           tblptrh	equ	0xFF7
  6782                           tblptrl	equ	0xFF6
  6783                           tablat	equ	0xFF5
  6784                           prodh	equ	0xFF4
  6785                           prodl	equ	0xFF3
  6786                           intcon	equ	0xFF2
  6787                           intcon2	equ	0xFF1
  6788                           postinc0	equ	0xFEE
  6789                           wreg	equ	0xFE8
  6790                           postdec1	equ	0xFE5
  6791                           fsr1l	equ	0xFE1
  6792                           indf2	equ	0xFDF
  6793                           postinc2	equ	0xFDE
  6794                           postdec2	equ	0xFDD
  6795                           fsr2h	equ	0xFDA
  6796                           fsr2l	equ	0xFD9
  6797                           status	equ	0xFD8
  6798                           
  6799 ;; *************** function _eeprom_read_array *****************
  6800 ;; Defined at:
  6801 ;;		line 40 in file "eeprom.c"
  6802 ;; Parameters:    Size  Location     Type
  6803 ;;  pData           2    1[BANK0 ] PTR unsigned char 
  6804 ;;		 -> Cf(122), 
  6805 ;;  Address         1    3[BANK0 ] unsigned char 
  6806 ;;  NbData          1    4[BANK0 ] unsigned char 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;  i               1    6[BANK0 ] unsigned char 
  6809 ;; Return value:  Size  Location     Type
  6810 ;;		None               void
  6811 ;; Registers used:
  6812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6818 ;;      Params:         0       4       0       0       0       0       0
  6819 ;;      Locals:         0       1       0       0       0       0       0
  6820 ;;      Temps:          0       1       0       0       0       0       0
  6821 ;;      Totals:         0       6       0       0       0       0       0
  6822 ;;Total ram usage:        6 bytes
  6823 ;; Hardware stack levels used:    1
  6824 ;; Hardware stack levels required when called:    4
  6825 ;; This function calls:
  6826 ;;		_eeprom_read
  6827 ;; This function is called by:
  6828 ;;		_cf_check_and_display
  6829 ;;		_cf_rcv
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           	psect	text26
  6834  00339E                     __ptext26:
  6835                           	opt stack 0
  6836  00339E                     _eeprom_read_array:
  6837                           	opt stack 24
  6838                           
  6839                           ;incstack = 0
  6840  00339E  FFFF               	dw	65535
  6841                           
  6842                           ;eeprom.c: 42: unsigned char i;
  6843                           ;eeprom.c: 44: for (i = 0; i < NbData; i ++)
  6844  0033A0  0100               	movlb	0	; () banked
  6845  0033A2  6FBF               	movwf	??_eeprom_read_array& (0+255),b
  6846  0033A4  0E00               	movlw	0
  6847  0033A6  0100               	movlb	0	; () banked
  6848  0033A8  0100               	movlb	0	; () banked
  6849  0033AA  6FC0               	movwf	eeprom_read_array@i& (0+255),b
  6850  0033AC  0100               	movlb	0	; () banked
  6851  0033AE  51BF               	movf	??_eeprom_read_array& (0+255),w,b
  6852  0033B0  D014               	goto	l5972
  6853  0033B2                     l5964:
  6854                           
  6855                           ; BSR set to: 0
  6856                           ;eeprom.c: 45: {
  6857                           ;eeprom.c: 46: *pData = eeprom_read(Address);
  6858  0033B2  0100               	movlb	0	; () banked
  6859  0033B4  0100               	movlb	0	; () banked
  6860  0033B6  51BD               	movf	eeprom_read_array@Address& (0+255),w,b
  6861  0033B8  ECE1  F01B         	call	_eeprom_read
  6862  0033BC  C0BB  FFD9         	movff	eeprom_read_array@pData,fsr2l
  6863  0033C0  C0BC  FFDA         	movff	eeprom_read_array@pData+1,fsr2h
  6864  0033C4  6EDF               	movwf	indf2,c
  6865                           
  6866                           ;eeprom.c: 47: pData ++;
  6867  0033C6  0100               	movlb	0	; () banked
  6868  0033C8  0100               	movlb	0	; () banked
  6869  0033CA  4BBB               	infsnz	eeprom_read_array@pData& (0+255),f,b
  6870  0033CC  2BBC               	incf	(eeprom_read_array@pData+1)& (0+255),f,b
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;eeprom.c: 48: Address ++;
  6874  0033CE  0100               	movlb	0	; () banked
  6875  0033D0  0100               	movlb	0	; () banked
  6876  0033D2  2BBD               	incf	eeprom_read_array@Address& (0+255),f,b
  6877                           
  6878                           ; BSR set to: 0
  6879  0033D4  0100               	movlb	0	; () banked
  6880  0033D6  0100               	movlb	0	; () banked
  6881  0033D8  2BC0               	incf	eeprom_read_array@i& (0+255),f,b
  6882  0033DA                     l5972:
  6883                           
  6884                           ; BSR set to: 0
  6885  0033DA  0100               	movlb	0	; () banked
  6886  0033DC  0100               	movlb	0	; () banked
  6887  0033DE  51BE               	movf	eeprom_read_array@NbData& (0+255),w,b
  6888  0033E0  0100               	movlb	0	; () banked
  6889  0033E2  0100               	movlb	0	; () banked
  6890  0033E4  5DC0               	subwf	eeprom_read_array@i& (0+255),w,b
  6891  0033E6  B0D8               	btfsc	status,0,c
  6892                           
  6893                           ; BSR set to: 0
  6894                           
  6895                           ; BSR set to: 0
  6896  0033E8  0012               	return	
  6897  0033EA  FFFF               	dw	65535	; assembler added errata NOP
  6898  0033EC  D7E2               	goto	l5964
  6899  0033EE  FFFF               	dw	65535	; errata NOP
  6900  0033F0                     __end_of_eeprom_read_array:
  6901                           	opt stack 0
  6902                           tblptru	equ	0xFF8
  6903                           tblptrh	equ	0xFF7
  6904                           tblptrl	equ	0xFF6
  6905                           tablat	equ	0xFF5
  6906                           prodh	equ	0xFF4
  6907                           prodl	equ	0xFF3
  6908                           intcon	equ	0xFF2
  6909                           intcon2	equ	0xFF1
  6910                           postinc0	equ	0xFEE
  6911                           wreg	equ	0xFE8
  6912                           postdec1	equ	0xFE5
  6913                           fsr1l	equ	0xFE1
  6914                           indf2	equ	0xFDF
  6915                           postinc2	equ	0xFDE
  6916                           postdec2	equ	0xFDD
  6917                           fsr2h	equ	0xFDA
  6918                           fsr2l	equ	0xFD9
  6919                           status	equ	0xFD8
  6920                           
  6921 ;; *************** function _eeprom_read *****************
  6922 ;; Defined at:
  6923 ;;		line 3 in file "eeprom.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;  Address         1    wreg     unsigned char 
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  Address         1    0[BANK0 ] unsigned char 
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      unsigned char 
  6930 ;; Registers used:
  6931 ;;		wreg, status,2
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6937 ;;      Params:         0       0       0       0       0       0       0
  6938 ;;      Locals:         0       1       0       0       0       0       0
  6939 ;;      Temps:          0       0       0       0       0       0       0
  6940 ;;      Totals:         0       1       0       0       0       0       0
  6941 ;;Total ram usage:        1 bytes
  6942 ;; Hardware stack levels used:    1
  6943 ;; Hardware stack levels required when called:    3
  6944 ;; This function calls:
  6945 ;;		Nothing
  6946 ;; This function is called by:
  6947 ;;		_eeprom_read_array
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951                           	psect	text27
  6952  0037C2                     __ptext27:
  6953                           	opt stack 0
  6954  0037C2                     _eeprom_read:
  6955                           	opt stack 24
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;incstack = 0
  6959  0037C2  FFFF               	dw	65535
  6960                           
  6961                           ;eeprom_read@Address stored from wreg
  6962  0037C4  CFE8 F0BA          	movff	wreg,eeprom_read@Address
  6963                           
  6964                           ;eeprom.c: 5: EEADR = Address;
  6965  0037C8  C0BA  FFA9         	movff	eeprom_read@Address,4009	;volatile
  6966                           
  6967                           ;eeprom.c: 7: EEPGD = 0;
  6968  0037CC  9EA6               	bcf	4006,7,c	;volatile
  6969                           
  6970                           ;eeprom.c: 8: CFGS = 0;
  6971  0037CE  9CA6               	bcf	4006,6,c	;volatile
  6972                           
  6973                           ;eeprom.c: 9: RD = 1;
  6974  0037D0  80A6               	bsf	4006,0,c	;volatile
  6975                           
  6976                           ;eeprom.c: 11: __nop();
  6977  0037D2  F000               	nop	
  6978                           
  6979                           ;eeprom.c: 12: __nop();
  6980  0037D4  F000               	nop	
  6981                           
  6982                           ;eeprom.c: 14: return EEDATA;
  6983  0037D6  50A8               	movf	4008,w,c	;volatile
  6984  0037D8  0012               	return	
  6985  0037DA  FFFF               	dw	65535	; errata NOP
  6986  0037DC                     __end_of_eeprom_read:
  6987                           	opt stack 0
  6988                           tblptru	equ	0xFF8
  6989                           tblptrh	equ	0xFF7
  6990                           tblptrl	equ	0xFF6
  6991                           tablat	equ	0xFF5
  6992                           prodh	equ	0xFF4
  6993                           prodl	equ	0xFF3
  6994                           intcon	equ	0xFF2
  6995                           intcon2	equ	0xFF1
  6996                           postinc0	equ	0xFEE
  6997                           wreg	equ	0xFE8
  6998                           postdec1	equ	0xFE5
  6999                           fsr1l	equ	0xFE1
  7000                           indf2	equ	0xFDF
  7001                           postinc2	equ	0xFDE
  7002                           postdec2	equ	0xFDD
  7003                           fsr2h	equ	0xFDA
  7004                           fsr2l	equ	0xFD9
  7005                           status	equ	0xFD8
  7006                           
  7007 ;; *************** function _cf_check *****************
  7008 ;; Defined at:
  7009 ;;		line 84 in file "config.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;		None
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;  valid           1   19[BANK0 ] unsigned char 
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  1    wreg      unsigned char 
  7016 ;; Registers used:
  7017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7023 ;;      Params:         0       0       0       0       0       0       0
  7024 ;;      Locals:         0       1       0       0       0       0       0
  7025 ;;      Temps:          0       1       0       0       0       0       0
  7026 ;;      Totals:         0       2       0       0       0       0       0
  7027 ;;Total ram usage:        2 bytes
  7028 ;; Hardware stack levels used:    1
  7029 ;; Hardware stack levels required when called:    5
  7030 ;; This function calls:
  7031 ;;		_cf_checkout
  7032 ;;		_cf_checkrange
  7033 ;;		_cf_checksum
  7034 ;; This function is called by:
  7035 ;;		_cf_check_and_display
  7036 ;;		_cf_rcv
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           	psect	text28
  7041  003608                     __ptext28:
  7042                           	opt stack 0
  7043  003608                     _cf_check:
  7044                           	opt stack 23
  7045                           
  7046                           ;incstack = 0
  7047  003608  FFFF               	dw	65535
  7048                           
  7049                           ;config.c: 86: unsigned char valid = 0;
  7050  00360A  0100               	movlb	0	; () banked
  7051  00360C  6FCC               	movwf	??_cf_check& (0+255),b
  7052  00360E  0E00               	movlw	0
  7053  003610  0100               	movlb	0	; () banked
  7054  003612  0100               	movlb	0	; () banked
  7055  003614  6FCD               	movwf	cf_check@valid& (0+255),b
  7056  003616  0100               	movlb	0	; () banked
  7057  003618  51CC               	movf	??_cf_check& (0+255),w,b
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;config.c: 88: if (cf_checksum() && cf_checkout() && cf_checkrange())
  7061  00361A  EC5E  F006         	call	_cf_checksum	;wreg free
  7062  00361E  A0D8               	btfss	status,0,c
  7063  003620  D010               	goto	l5996
  7064  003622  EC0B  F012         	call	_cf_checkout	;wreg free
  7065  003626  A0D8               	btfss	status,0,c
  7066  003628  D00C               	goto	l5996
  7067  00362A  EC74  F017         	call	_cf_checkrange	;wreg free
  7068  00362E  A0D8               	btfss	status,0,c
  7069  003630  D008               	goto	l5996
  7070                           
  7071                           ;config.c: 89: {
  7072                           ;config.c: 90: valid = 1;
  7073  003632  0100               	movlb	0	; () banked
  7074  003634  6FCC               	movwf	??_cf_check& (0+255),b
  7075  003636  0E01               	movlw	1
  7076  003638  0100               	movlb	0	; () banked
  7077  00363A  0100               	movlb	0	; () banked
  7078  00363C  6FCD               	movwf	cf_check@valid& (0+255),b
  7079  00363E  0100               	movlb	0	; () banked
  7080  003640  51CC               	movf	??_cf_check& (0+255),w,b
  7081  003642                     l5996:
  7082                           
  7083                           ;config.c: 91: }
  7084                           ;config.c: 93: return valid;
  7085  003642  0100               	movlb	0	; () banked
  7086  003644  0100               	movlb	0	; () banked
  7087  003646  51CD               	movf	cf_check@valid& (0+255),w,b
  7088                           
  7089                           ; BSR set to: 0
  7090                           
  7091                           ; BSR set to: 0
  7092  003648  0012               	return	
  7093  00364A  FFFF               	dw	65535	; errata NOP
  7094  00364C                     __end_of_cf_check:
  7095                           	opt stack 0
  7096                           tblptru	equ	0xFF8
  7097                           tblptrh	equ	0xFF7
  7098                           tblptrl	equ	0xFF6
  7099                           tablat	equ	0xFF5
  7100                           prodh	equ	0xFF4
  7101                           prodl	equ	0xFF3
  7102                           intcon	equ	0xFF2
  7103                           intcon2	equ	0xFF1
  7104                           postinc0	equ	0xFEE
  7105                           wreg	equ	0xFE8
  7106                           postdec1	equ	0xFE5
  7107                           fsr1l	equ	0xFE1
  7108                           indf2	equ	0xFDF
  7109                           postinc2	equ	0xFDE
  7110                           postdec2	equ	0xFDD
  7111                           fsr2h	equ	0xFDA
  7112                           fsr2l	equ	0xFD9
  7113                           status	equ	0xFD8
  7114                           
  7115 ;; *************** function _cf_checksum *****************
  7116 ;; Defined at:
  7117 ;;		line 4 in file "config.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;		None
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  calcul          4   14[BANK0 ] unsigned long 
  7122 ;;  i               1   13[BANK0 ] unsigned char 
  7123 ;;  valid           1   12[BANK0 ] unsigned char 
  7124 ;; Return value:  Size  Location     Type
  7125 ;;		None               void
  7126 ;; Registers used:
  7127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7133 ;;      Params:         0       0       0       0       0       0       0
  7134 ;;      Locals:         0       6       0       0       0       0       0
  7135 ;;      Temps:          0      12       0       0       0       0       0
  7136 ;;      Totals:         0      18       0       0       0       0       0
  7137 ;;Total ram usage:       18 bytes
  7138 ;; Hardware stack levels used:    1
  7139 ;; Hardware stack levels required when called:    3
  7140 ;; This function calls:
  7141 ;;		Nothing
  7142 ;; This function is called by:
  7143 ;;		_cf_check
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text29
  7148  000CBC                     __ptext29:
  7149                           	opt stack 0
  7150  000CBC                     _cf_checksum:
  7151                           	opt stack 24
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;incstack = 0
  7155  000CBC  FFFF               	dw	65535
  7156                           
  7157                           ;config.c: 6: unsigned long calcul;
  7158                           ;config.c: 7: unsigned char i, valid = 0;
  7159  000CBE  0100               	movlb	0	; () banked
  7160  000CC0  6FBA               	movwf	??_cf_checksum& (0+255),b
  7161  000CC2  0E00               	movlw	0
  7162  000CC4  0100               	movlb	0	; () banked
  7163  000CC6  0100               	movlb	0	; () banked
  7164  000CC8  6FC6               	movwf	cf_checksum@valid& (0+255),b
  7165  000CCA  0100               	movlb	0	; () banked
  7166  000CCC  51BA               	movf	??_cf_checksum& (0+255),w,b
  7167                           
  7168                           ;config.c: 9: for (i = 0, calcul = 0; i < (32 + 5); i ++)
  7169  000CCE  0100               	movlb	0	; () banked
  7170  000CD0  6FBA               	movwf	??_cf_checksum& (0+255),b
  7171  000CD2  0E00               	movlw	0
  7172  000CD4  0100               	movlb	0	; () banked
  7173  000CD6  0100               	movlb	0	; () banked
  7174  000CD8  6FC7               	movwf	cf_checksum@i& (0+255),b
  7175  000CDA  0100               	movlb	0	; () banked
  7176  000CDC  51BA               	movf	??_cf_checksum& (0+255),w,b
  7177                           
  7178                           ; BSR set to: 0
  7179  000CDE  0E00               	movlw	0
  7180  000CE0  0100               	movlb	0	; () banked
  7181  000CE2  0100               	movlb	0	; () banked
  7182  000CE4  6FC8               	movwf	cf_checksum@calcul& (0+255),b
  7183  000CE6  0E00               	movlw	0
  7184  000CE8  0100               	movlb	0	; () banked
  7185  000CEA  6FC9               	movwf	(cf_checksum@calcul+1)& (0+255),b
  7186  000CEC  0E00               	movlw	0
  7187  000CEE  0100               	movlb	0	; () banked
  7188  000CF0  6FCA               	movwf	(cf_checksum@calcul+2)& (0+255),b
  7189  000CF2  0E00               	movlw	0
  7190  000CF4  0100               	movlb	0	; () banked
  7191  000CF6  6FCB               	movwf	(cf_checksum@calcul+3)& (0+255),b
  7192  000CF8  D046               	goto	L51
  7193  000CFA                     l5678:
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;config.c: 10: {
  7197                           ;config.c: 11: calcul += (unsigned long) ((unsigned short) (Cf.Data[i*3+1] << 8) + Cf.Da
      +                          ta[i*3+2]);
  7198  000CFA  0100               	movlb	0	; () banked
  7199  000CFC  0100               	movlb	0	; () banked
  7200  000CFE  51C7               	movf	cf_checksum@i& (0+255),w,b
  7201  000D00  0D03               	mullw	3
  7202  000D02  0E01               	movlw	1
  7203  000D04  26F3               	addwf	prodl,f,c
  7204  000D06  0E00               	movlw	0
  7205  000D08  22F4               	addwfc	prodh,f,c
  7206  000D0A  0101               	movlb	1	; () banked
  7207  000D0C  0E00               	movlw	low _Cf	;volatile
  7208  000D0E  24F3               	addwf	prodl,w,c
  7209  000D10  6ED9               	movwf	fsr2l,c
  7210  000D12  0101               	movlb	1	; () banked
  7211  000D14  0E01               	movlw	high _Cf	;volatile
  7212  000D16  20F4               	addwfc	prodh,w,c
  7213  000D18  6EDA               	movwf	fsr2h,c
  7214  000D1A  50DF               	movf	indf2,w,c
  7215  000D1C  0100               	movlb	0	; () banked
  7216  000D1E  6FBA               	movwf	??_cf_checksum& (0+255),b
  7217  000D20  0100               	movlb	0	; () banked
  7218  000D22  51BA               	movf	??_cf_checksum& (0+255),w,b
  7219  000D24  0100               	movlb	0	; () banked
  7220  000D26  6FBC               	movwf	(??_cf_checksum+2)& (0+255),b
  7221  000D28  6BBB               	clrf	(??_cf_checksum+1)& (0+255),b
  7222  000D2A  0100               	movlb	0	; () banked
  7223  000D2C  0100               	movlb	0	; () banked
  7224  000D2E  51C7               	movf	cf_checksum@i& (0+255),w,b
  7225  000D30  0D03               	mullw	3
  7226  000D32  0E02               	movlw	2
  7227  000D34  26F3               	addwf	prodl,f,c
  7228  000D36  0E00               	movlw	0
  7229  000D38  22F4               	addwfc	prodh,f,c
  7230  000D3A  0101               	movlb	1	; () banked
  7231  000D3C  0E00               	movlw	low _Cf	;volatile
  7232  000D3E  24F3               	addwf	prodl,w,c
  7233  000D40  6ED9               	movwf	fsr2l,c
  7234  000D42  0101               	movlb	1	; () banked
  7235  000D44  0E01               	movlw	high _Cf	;volatile
  7236  000D46  20F4               	addwfc	prodh,w,c
  7237  000D48  6EDA               	movwf	fsr2h,c
  7238  000D4A  50DF               	movf	indf2,w,c
  7239  000D4C  0100               	movlb	0	; () banked
  7240  000D4E  6FBD               	movwf	(??_cf_checksum+3)& (0+255),b
  7241  000D50  0100               	movlb	0	; () banked
  7242  000D52  51BD               	movf	(??_cf_checksum+3)& (0+255),w,b
  7243  000D54  0100               	movlb	0	; () banked
  7244  000D56  27BB               	addwf	(??_cf_checksum+1)& (0+255),f,b
  7245  000D58  0E00               	movlw	0
  7246  000D5A  23BC               	addwfc	(??_cf_checksum+2)& (0+255),f,b
  7247  000D5C  0100               	movlb	0	; () banked
  7248  000D5E  51BB               	movf	(??_cf_checksum+1)& (0+255),w,b
  7249  000D60  0100               	movlb	0	; () banked
  7250  000D62  0100               	movlb	0	; () banked
  7251  000D64  27C8               	addwf	cf_checksum@calcul& (0+255),f,b
  7252  000D66  0100               	movlb	0	; () banked
  7253  000D68  51BC               	movf	(??_cf_checksum+2)& (0+255),w,b
  7254  000D6A  0100               	movlb	0	; () banked
  7255  000D6C  0100               	movlb	0	; () banked
  7256  000D6E  23C9               	addwfc	(cf_checksum@calcul+1)& (0+255),f,b
  7257  000D70  0E00               	movlw	0
  7258  000D72  0100               	movlb	0	; () banked
  7259  000D74  0100               	movlb	0	; () banked
  7260  000D76  23CA               	addwfc	(cf_checksum@calcul+2)& (0+255),f,b
  7261  000D78  0E00               	movlw	0
  7262  000D7A  0100               	movlb	0	; () banked
  7263  000D7C  0100               	movlb	0	; () banked
  7264  000D7E  23CB               	addwfc	(cf_checksum@calcul+3)& (0+255),f,b
  7265                           
  7266                           ; BSR set to: 0
  7267  000D80  0100               	movlb	0	; () banked
  7268  000D82  0100               	movlb	0	; () banked
  7269  000D84  2BC7               	incf	cf_checksum@i& (0+255),f,b
  7270  000D86                     L51:
  7271                           
  7272                           ; BSR set to: 0
  7273  000D86  0E24               	movlw	36
  7274  000D88  0100               	movlb	0	; () banked
  7275  000D8A  0100               	movlb	0	; () banked
  7276  000D8C  65C7               	cpfsgt	cf_checksum@i& (0+255),b
  7277  000D8E  D7B5               	goto	l5678
  7278                           
  7279                           ; BSR set to: 0
  7280                           ;config.c: 12: }
  7281                           ;config.c: 14: if ( (((calcul >> 24) & 0x000000FF) == Cf.Data[((32 * 3 + 5 * 3) + 1)])
  7282                           ;config.c: 15: && (((calcul >> 16) & 0x000000FF) == Cf.Data[((32 * 3 + 5 * 3) + 2)])
  7283                           ;config.c: 16: && (((calcul >> 8) & 0x000000FF) == Cf.Data[((32 * 3 + 5 * 3) + 3)])
  7284                           ;config.c: 17: && ((calcul & 0x000000FF) == Cf.Data[((32 * 3 + 5 * 3) + 4)]))
  7285                           
  7286                           ; BSR set to: 0
  7287  000D90  0101               	movlb	1	; () banked
  7288  000D92  C170  F0BA         	movff	_Cf+112,??_cf_checksum	;volatile
  7289  000D96  0100               	movlb	0	; () banked
  7290  000D98  6BBB               	clrf	(??_cf_checksum+1)& (0+255),b
  7291  000D9A  6BBC               	clrf	(??_cf_checksum+2)& (0+255),b
  7292  000D9C  6BBD               	clrf	(??_cf_checksum+3)& (0+255),b
  7293  000D9E  0100               	movlb	0	; () banked
  7294  000DA0  C0C8  F0BE         	movff	cf_checksum@calcul,??_cf_checksum+4
  7295  000DA4  0100               	movlb	0	; () banked
  7296  000DA6  C0C9  F0BF         	movff	cf_checksum@calcul+1,??_cf_checksum+5
  7297  000DAA  0100               	movlb	0	; () banked
  7298  000DAC  C0CA  F0C0         	movff	cf_checksum@calcul+2,??_cf_checksum+6
  7299  000DB0  0100               	movlb	0	; () banked
  7300  000DB2  C0CB  F0C1         	movff	cf_checksum@calcul+3,??_cf_checksum+7
  7301  000DB6  0E19               	movlw	25
  7302  000DB8  D006               	goto	u4670
  7303  000DBA                     u4675:
  7304  000DBA  0100               	movlb	0	; () banked
  7305  000DBC  90D8               	bcf	status,0,c
  7306  000DBE  33C1               	rrcf	(??_cf_checksum+7)& (0+255),f,b
  7307  000DC0  33C0               	rrcf	(??_cf_checksum+6)& (0+255),f,b
  7308  000DC2  33BF               	rrcf	(??_cf_checksum+5)& (0+255),f,b
  7309  000DC4  33BE               	rrcf	(??_cf_checksum+4)& (0+255),f,b
  7310  000DC6                     u4670:
  7311  000DC6  2EE8               	decfsz	wreg,f,c
  7312  000DC8  D7F8               	goto	u4675
  7313  000DCA  0EFF               	movlw	255
  7314  000DCC  0100               	movlb	0	; () banked
  7315  000DCE  15BE               	andwf	(??_cf_checksum+4)& (0+255),w,b
  7316  000DD0  0100               	movlb	0	; () banked
  7317  000DD2  6FC2               	movwf	(??_cf_checksum+8)& (0+255),b
  7318  000DD4  0E00               	movlw	0
  7319  000DD6  0100               	movlb	0	; () banked
  7320  000DD8  15BF               	andwf	(??_cf_checksum+5)& (0+255),w,b
  7321  000DDA  0100               	movlb	0	; () banked
  7322  000DDC  6FC3               	movwf	(??_cf_checksum+9)& (0+255),b
  7323  000DDE  0E00               	movlw	0
  7324  000DE0  0100               	movlb	0	; () banked
  7325  000DE2  15C0               	andwf	(??_cf_checksum+6)& (0+255),w,b
  7326  000DE4  0100               	movlb	0	; () banked
  7327  000DE6  6FC4               	movwf	(??_cf_checksum+10)& (0+255),b
  7328  000DE8  0E00               	movlw	0
  7329  000DEA  0100               	movlb	0	; () banked
  7330  000DEC  15C1               	andwf	(??_cf_checksum+7)& (0+255),w,b
  7331  000DEE  0100               	movlb	0	; () banked
  7332  000DF0  6FC5               	movwf	(??_cf_checksum+11)& (0+255),b
  7333  000DF2  0100               	movlb	0	; () banked
  7334  000DF4  51BD               	movf	(??_cf_checksum+3)& (0+255),w,b
  7335  000DF6  0100               	movlb	0	; () banked
  7336  000DF8  19C5               	xorwf	(??_cf_checksum+11)& (0+255),w,b
  7337  000DFA  E10E               	bnz	u4685
  7338  000DFC  0100               	movlb	0	; () banked
  7339  000DFE  51BC               	movf	(??_cf_checksum+2)& (0+255),w,b
  7340  000E00  0100               	movlb	0	; () banked
  7341  000E02  19C4               	xorwf	(??_cf_checksum+10)& (0+255),w,b
  7342  000E04  E109               	bnz	u4685
  7343  000E06  0100               	movlb	0	; () banked
  7344  000E08  51BB               	movf	(??_cf_checksum+1)& (0+255),w,b
  7345  000E0A  0100               	movlb	0	; () banked
  7346  000E0C  19C3               	xorwf	(??_cf_checksum+9)& (0+255),w,b
  7347  000E0E  E104               	bnz	u4685
  7348  000E10  0100               	movlb	0	; () banked
  7349  000E12  51BA               	movf	??_cf_checksum& (0+255),w,b
  7350  000E14  0100               	movlb	0	; () banked
  7351  000E16  19C2               	xorwf	(??_cf_checksum+8)& (0+255),w,b
  7352  000E18                     u4685:
  7353  000E18  A4D8               	btfss	status,2,c
  7354  000E1A  D0C6               	goto	l5694
  7355                           
  7356                           ; BSR set to: 0
  7357  000E1C  0101               	movlb	1	; () banked
  7358  000E1E  C171  F0BA         	movff	_Cf+113,??_cf_checksum	;volatile
  7359  000E22  0100               	movlb	0	; () banked
  7360  000E24  6BBB               	clrf	(??_cf_checksum+1)& (0+255),b
  7361  000E26  6BBC               	clrf	(??_cf_checksum+2)& (0+255),b
  7362  000E28  6BBD               	clrf	(??_cf_checksum+3)& (0+255),b
  7363  000E2A  0100               	movlb	0	; () banked
  7364  000E2C  C0C8  F0BE         	movff	cf_checksum@calcul,??_cf_checksum+4
  7365  000E30  0100               	movlb	0	; () banked
  7366  000E32  C0C9  F0BF         	movff	cf_checksum@calcul+1,??_cf_checksum+5
  7367  000E36  0100               	movlb	0	; () banked
  7368  000E38  C0CA  F0C0         	movff	cf_checksum@calcul+2,??_cf_checksum+6
  7369  000E3C  0100               	movlb	0	; () banked
  7370  000E3E  C0CB  F0C1         	movff	cf_checksum@calcul+3,??_cf_checksum+7
  7371  000E42  0E11               	movlw	17
  7372  000E44  D006               	goto	u4690
  7373  000E46                     u4695:
  7374  000E46  0100               	movlb	0	; () banked
  7375  000E48  90D8               	bcf	status,0,c
  7376  000E4A  33C1               	rrcf	(??_cf_checksum+7)& (0+255),f,b
  7377  000E4C  33C0               	rrcf	(??_cf_checksum+6)& (0+255),f,b
  7378  000E4E  33BF               	rrcf	(??_cf_checksum+5)& (0+255),f,b
  7379  000E50  33BE               	rrcf	(??_cf_checksum+4)& (0+255),f,b
  7380  000E52                     u4690:
  7381  000E52  2EE8               	decfsz	wreg,f,c
  7382  000E54  D7F8               	goto	u4695
  7383  000E56  0EFF               	movlw	255
  7384  000E58  0100               	movlb	0	; () banked
  7385  000E5A  15BE               	andwf	(??_cf_checksum+4)& (0+255),w,b
  7386  000E5C  0100               	movlb	0	; () banked
  7387  000E5E  6FC2               	movwf	(??_cf_checksum+8)& (0+255),b
  7388  000E60  0E00               	movlw	0
  7389  000E62  0100               	movlb	0	; () banked
  7390  000E64  15BF               	andwf	(??_cf_checksum+5)& (0+255),w,b
  7391  000E66  0100               	movlb	0	; () banked
  7392  000E68  6FC3               	movwf	(??_cf_checksum+9)& (0+255),b
  7393  000E6A  0E00               	movlw	0
  7394  000E6C  0100               	movlb	0	; () banked
  7395  000E6E  15C0               	andwf	(??_cf_checksum+6)& (0+255),w,b
  7396  000E70  0100               	movlb	0	; () banked
  7397  000E72  6FC4               	movwf	(??_cf_checksum+10)& (0+255),b
  7398  000E74  0E00               	movlw	0
  7399  000E76  0100               	movlb	0	; () banked
  7400  000E78  15C1               	andwf	(??_cf_checksum+7)& (0+255),w,b
  7401  000E7A  0100               	movlb	0	; () banked
  7402  000E7C  6FC5               	movwf	(??_cf_checksum+11)& (0+255),b
  7403  000E7E  0100               	movlb	0	; () banked
  7404  000E80  51BD               	movf	(??_cf_checksum+3)& (0+255),w,b
  7405  000E82  0100               	movlb	0	; () banked
  7406  000E84  19C5               	xorwf	(??_cf_checksum+11)& (0+255),w,b
  7407  000E86  E10E               	bnz	u4705
  7408  000E88  0100               	movlb	0	; () banked
  7409  000E8A  51BC               	movf	(??_cf_checksum+2)& (0+255),w,b
  7410  000E8C  0100               	movlb	0	; () banked
  7411  000E8E  19C4               	xorwf	(??_cf_checksum+10)& (0+255),w,b
  7412  000E90  E109               	bnz	u4705
  7413  000E92  0100               	movlb	0	; () banked
  7414  000E94  51BB               	movf	(??_cf_checksum+1)& (0+255),w,b
  7415  000E96  0100               	movlb	0	; () banked
  7416  000E98  19C3               	xorwf	(??_cf_checksum+9)& (0+255),w,b
  7417  000E9A  E104               	bnz	u4705
  7418  000E9C  0100               	movlb	0	; () banked
  7419  000E9E  51BA               	movf	??_cf_checksum& (0+255),w,b
  7420  000EA0  0100               	movlb	0	; () banked
  7421  000EA2  19C2               	xorwf	(??_cf_checksum+8)& (0+255),w,b
  7422  000EA4                     u4705:
  7423  000EA4  A4D8               	btfss	status,2,c
  7424  000EA6  D080               	goto	l5694
  7425                           
  7426                           ; BSR set to: 0
  7427  000EA8  0101               	movlb	1	; () banked
  7428  000EAA  C172  F0BA         	movff	_Cf+114,??_cf_checksum	;volatile
  7429  000EAE  0100               	movlb	0	; () banked
  7430  000EB0  6BBB               	clrf	(??_cf_checksum+1)& (0+255),b
  7431  000EB2  6BBC               	clrf	(??_cf_checksum+2)& (0+255),b
  7432  000EB4  6BBD               	clrf	(??_cf_checksum+3)& (0+255),b
  7433  000EB6  0EFF               	movlw	255
  7434  000EB8  0100               	movlb	0	; () banked
  7435  000EBA  C0C8  F0BE         	movff	cf_checksum@calcul,??_cf_checksum+4
  7436  000EBE  0100               	movlb	0	; () banked
  7437  000EC0  C0C9  F0BF         	movff	cf_checksum@calcul+1,??_cf_checksum+5
  7438  000EC4  0100               	movlb	0	; () banked
  7439  000EC6  C0CA  F0C0         	movff	cf_checksum@calcul+2,??_cf_checksum+6
  7440  000ECA  0100               	movlb	0	; () banked
  7441  000ECC  C0CB  F0C1         	movff	cf_checksum@calcul+3,??_cf_checksum+7
  7442  000ED0  C0BF  F0BE         	movff	??_cf_checksum+5,??_cf_checksum+4
  7443  000ED4  C0C0  F0BF         	movff	??_cf_checksum+6,??_cf_checksum+5
  7444  000ED8  C0C1  F0C0         	movff	??_cf_checksum+7,??_cf_checksum+6
  7445  000EDC  0100               	movlb	0	; () banked
  7446  000EDE  6BC1               	clrf	(??_cf_checksum+7)& (0+255),b
  7447  000EE0  0100               	movlb	0	; () banked
  7448  000EE2  15BE               	andwf	(??_cf_checksum+4)& (0+255),w,b
  7449  000EE4  0100               	movlb	0	; () banked
  7450  000EE6  6FC2               	movwf	(??_cf_checksum+8)& (0+255),b
  7451  000EE8  0E00               	movlw	0
  7452  000EEA  0100               	movlb	0	; () banked
  7453  000EEC  15BF               	andwf	(??_cf_checksum+5)& (0+255),w,b
  7454  000EEE  0100               	movlb	0	; () banked
  7455  000EF0  6FC3               	movwf	(??_cf_checksum+9)& (0+255),b
  7456  000EF2  0E00               	movlw	0
  7457  000EF4  0100               	movlb	0	; () banked
  7458  000EF6  15C0               	andwf	(??_cf_checksum+6)& (0+255),w,b
  7459  000EF8  0100               	movlb	0	; () banked
  7460  000EFA  6FC4               	movwf	(??_cf_checksum+10)& (0+255),b
  7461  000EFC  0E00               	movlw	0
  7462  000EFE  0100               	movlb	0	; () banked
  7463  000F00  15C1               	andwf	(??_cf_checksum+7)& (0+255),w,b
  7464  000F02  0100               	movlb	0	; () banked
  7465  000F04  6FC5               	movwf	(??_cf_checksum+11)& (0+255),b
  7466  000F06  0100               	movlb	0	; () banked
  7467  000F08  51BD               	movf	(??_cf_checksum+3)& (0+255),w,b
  7468  000F0A  0100               	movlb	0	; () banked
  7469  000F0C  19C5               	xorwf	(??_cf_checksum+11)& (0+255),w,b
  7470  000F0E  E10E               	bnz	u4715
  7471  000F10  0100               	movlb	0	; () banked
  7472  000F12  51BC               	movf	(??_cf_checksum+2)& (0+255),w,b
  7473  000F14  0100               	movlb	0	; () banked
  7474  000F16  19C4               	xorwf	(??_cf_checksum+10)& (0+255),w,b
  7475  000F18  E109               	bnz	u4715
  7476  000F1A  0100               	movlb	0	; () banked
  7477  000F1C  51BB               	movf	(??_cf_checksum+1)& (0+255),w,b
  7478  000F1E  0100               	movlb	0	; () banked
  7479  000F20  19C3               	xorwf	(??_cf_checksum+9)& (0+255),w,b
  7480  000F22  E104               	bnz	u4715
  7481  000F24  0100               	movlb	0	; () banked
  7482  000F26  51BA               	movf	??_cf_checksum& (0+255),w,b
  7483  000F28  0100               	movlb	0	; () banked
  7484  000F2A  19C2               	xorwf	(??_cf_checksum+8)& (0+255),w,b
  7485  000F2C                     u4715:
  7486  000F2C  A4D8               	btfss	status,2,c
  7487  000F2E  D03C               	goto	l5694
  7488                           
  7489                           ; BSR set to: 0
  7490  000F30  0101               	movlb	1	; () banked
  7491  000F32  C173  F0BA         	movff	_Cf+115,??_cf_checksum	;volatile
  7492  000F36  0100               	movlb	0	; () banked
  7493  000F38  6BBB               	clrf	(??_cf_checksum+1)& (0+255),b
  7494  000F3A  6BBC               	clrf	(??_cf_checksum+2)& (0+255),b
  7495  000F3C  6BBD               	clrf	(??_cf_checksum+3)& (0+255),b
  7496  000F3E  0EFF               	movlw	255
  7497  000F40  0100               	movlb	0	; () banked
  7498  000F42  0100               	movlb	0	; () banked
  7499  000F44  15C8               	andwf	cf_checksum@calcul& (0+255),w,b
  7500  000F46  0100               	movlb	0	; () banked
  7501  000F48  6FBE               	movwf	(??_cf_checksum+4)& (0+255),b
  7502  000F4A  0E00               	movlw	0
  7503  000F4C  0100               	movlb	0	; () banked
  7504  000F4E  0100               	movlb	0	; () banked
  7505  000F50  15C9               	andwf	(cf_checksum@calcul+1)& (0+255),w,b
  7506  000F52  0100               	movlb	0	; () banked
  7507  000F54  6FBF               	movwf	(??_cf_checksum+5)& (0+255),b
  7508  000F56  0E00               	movlw	0
  7509  000F58  0100               	movlb	0	; () banked
  7510  000F5A  0100               	movlb	0	; () banked
  7511  000F5C  15CA               	andwf	(cf_checksum@calcul+2)& (0+255),w,b
  7512  000F5E  0100               	movlb	0	; () banked
  7513  000F60  6FC0               	movwf	(??_cf_checksum+6)& (0+255),b
  7514  000F62  0E00               	movlw	0
  7515  000F64  0100               	movlb	0	; () banked
  7516  000F66  0100               	movlb	0	; () banked
  7517  000F68  15CB               	andwf	(cf_checksum@calcul+3)& (0+255),w,b
  7518  000F6A  0100               	movlb	0	; () banked
  7519  000F6C  6FC1               	movwf	(??_cf_checksum+7)& (0+255),b
  7520  000F6E  0100               	movlb	0	; () banked
  7521  000F70  51BD               	movf	(??_cf_checksum+3)& (0+255),w,b
  7522  000F72  0100               	movlb	0	; () banked
  7523  000F74  19C1               	xorwf	(??_cf_checksum+7)& (0+255),w,b
  7524  000F76  E10E               	bnz	u4725
  7525  000F78  0100               	movlb	0	; () banked
  7526  000F7A  51BC               	movf	(??_cf_checksum+2)& (0+255),w,b
  7527  000F7C  0100               	movlb	0	; () banked
  7528  000F7E  19C0               	xorwf	(??_cf_checksum+6)& (0+255),w,b
  7529  000F80  E109               	bnz	u4725
  7530  000F82  0100               	movlb	0	; () banked
  7531  000F84  51BB               	movf	(??_cf_checksum+1)& (0+255),w,b
  7532  000F86  0100               	movlb	0	; () banked
  7533  000F88  19BF               	xorwf	(??_cf_checksum+5)& (0+255),w,b
  7534  000F8A  E104               	bnz	u4725
  7535  000F8C  0100               	movlb	0	; () banked
  7536  000F8E  51BA               	movf	??_cf_checksum& (0+255),w,b
  7537  000F90  0100               	movlb	0	; () banked
  7538  000F92  19BE               	xorwf	(??_cf_checksum+4)& (0+255),w,b
  7539  000F94                     u4725:
  7540  000F94  A4D8               	btfss	status,2,c
  7541  000F96  D008               	goto	l5694
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;config.c: 18: {
  7545                           ;config.c: 19: valid = 1;
  7546  000F98  0100               	movlb	0	; () banked
  7547  000F9A  6FBA               	movwf	??_cf_checksum& (0+255),b
  7548  000F9C  0E01               	movlw	1
  7549  000F9E  0100               	movlb	0	; () banked
  7550  000FA0  0100               	movlb	0	; () banked
  7551  000FA2  6FC6               	movwf	cf_checksum@valid& (0+255),b
  7552  000FA4  0100               	movlb	0	; () banked
  7553  000FA6  51BA               	movf	??_cf_checksum& (0+255),w,b
  7554  000FA8                     l5694:
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;config.c: 20: }
  7558                           ;config.c: 22: if ((Cf.Data[((32 * 3 + 5 * 3) + 1)] == 0) && (Cf.Data[((32 * 3 + 5 * 3) 
      +                          + 2)] == 0) && (Cf.Data[((32 * 3 + 5 * 3) + 3)] == 0) && (Cf.Data[((32 * 3 + 5 * 3) + 4)
      +                          ] == 0))
  7559  000FA8  0101               	movlb	1	; () banked
  7560  000FAA  0101               	movlb	1	; () banked
  7561  000FAC  6770               	tstfsz	(_Cf+112)& (0+255),b	;volatile
  7562  000FAE  D00D               	goto	l5704
  7563                           
  7564                           ; BSR set to: 1
  7565  000FB0  0101               	movlb	1	; () banked
  7566  000FB2  0101               	movlb	1	; () banked
  7567  000FB4  6771               	tstfsz	(_Cf+113)& (0+255),b	;volatile
  7568  000FB6  D009               	goto	l5704
  7569                           
  7570                           ; BSR set to: 1
  7571  000FB8  0101               	movlb	1	; () banked
  7572  000FBA  0101               	movlb	1	; () banked
  7573  000FBC  6772               	tstfsz	(_Cf+114)& (0+255),b	;volatile
  7574  000FBE  D005               	goto	l5704
  7575                           
  7576                           ; BSR set to: 1
  7577  000FC0  0101               	movlb	1	; () banked
  7578  000FC2  0101               	movlb	1	; () banked
  7579  000FC4  6773               	tstfsz	(_Cf+115)& (0+255),b	;volatile
  7580  000FC6  D001               	goto	l5704
  7581                           
  7582                           ; BSR set to: 1
  7583                           ;config.c: 23: {
  7584                           ;config.c: 24: Micro.Mod.P_00 = 1;
  7585  000FC8  8257               	bsf	_Micro+5,1,c
  7586  000FCA                     l5704:
  7587                           
  7588                           ; BSR set to: 1
  7589                           ;config.c: 25: }
  7590                           ;config.c: 27: if (calcul > 0x0000FFFF) {Cf.IsLong = 1;}
  7591  000FCA  0E00               	movlw	0
  7592  000FCC  0100               	movlb	0	; () banked
  7593  000FCE  0100               	movlb	0	; () banked
  7594  000FD0  5DC8               	subwf	cf_checksum@calcul& (0+255),w,b
  7595  000FD2  0E00               	movlw	0
  7596  000FD4  0100               	movlb	0	; () banked
  7597  000FD6  59C9               	subwfb	(cf_checksum@calcul+1)& (0+255),w,b
  7598  000FD8  0E01               	movlw	1
  7599  000FDA  0100               	movlb	0	; () banked
  7600  000FDC  59CA               	subwfb	(cf_checksum@calcul+2)& (0+255),w,b
  7601  000FDE  0E00               	movlw	0
  7602  000FE0  0100               	movlb	0	; () banked
  7603  000FE2  0100               	movlb	0	; () banked
  7604  000FE4  59CB               	subwfb	(cf_checksum@calcul+3)& (0+255),w,b
  7605  000FE6  A0D8               	btfss	status,0,c
  7606  000FE8  D003               	goto	l5708
  7607                           
  7608                           ; BSR set to: 0
  7609  000FEA  0101               	movlb	1	; () banked
  7610  000FEC  0101               	movlb	1	; () banked
  7611  000FEE  8179               	bsf	(_Cf+121)& (0+255),0,b	;volatile
  7612  000FF0                     l5708:
  7613                           
  7614                           ;config.c: 29: return valid;
  7615  000FF0  C0C6  F0BA         	movff	cf_checksum@valid,??_cf_checksum
  7616  000FF4  0100               	movlb	0	; () banked
  7617  000FF6  31BA               	rrcf	??_cf_checksum& (0+255),w,b
  7618                           
  7619                           ; BSR set to: 0
  7620                           
  7621                           ; BSR set to: 0
  7622  000FF8  0012               	return	
  7623  000FFA  FFFF               	dw	65535	; errata NOP
  7624  000FFC                     __end_of_cf_checksum:
  7625                           	opt stack 0
  7626                           tblptru	equ	0xFF8
  7627                           tblptrh	equ	0xFF7
  7628                           tblptrl	equ	0xFF6
  7629                           tablat	equ	0xFF5
  7630                           prodh	equ	0xFF4
  7631                           prodl	equ	0xFF3
  7632                           intcon	equ	0xFF2
  7633                           intcon2	equ	0xFF1
  7634                           postinc0	equ	0xFEE
  7635                           wreg	equ	0xFE8
  7636                           postdec1	equ	0xFE5
  7637                           fsr1l	equ	0xFE1
  7638                           indf2	equ	0xFDF
  7639                           postinc2	equ	0xFDE
  7640                           postdec2	equ	0xFDD
  7641                           fsr2h	equ	0xFDA
  7642                           fsr2l	equ	0xFD9
  7643                           status	equ	0xFD8
  7644                           
  7645 ;; *************** function _cf_checkrange *****************
  7646 ;; Defined at:
  7647 ;;		line 66 in file "config.c"
  7648 ;; Parameters:    Size  Location     Type
  7649 ;;		None
  7650 ;; Auto vars:     Size  Location     Type
  7651 ;;  i               1    2[BANK0 ] unsigned char 
  7652 ;;  valid           1    1[BANK0 ] unsigned char 
  7653 ;; Return value:  Size  Location     Type
  7654 ;;		None               void
  7655 ;; Registers used:
  7656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7662 ;;      Params:         0       0       0       0       0       0       0
  7663 ;;      Locals:         0       2       0       0       0       0       0
  7664 ;;      Temps:          0       1       0       0       0       0       0
  7665 ;;      Totals:         0       3       0       0       0       0       0
  7666 ;;Total ram usage:        3 bytes
  7667 ;; Hardware stack levels used:    1
  7668 ;; Hardware stack levels required when called:    3
  7669 ;; This function calls:
  7670 ;;		Nothing
  7671 ;; This function is called by:
  7672 ;;		_cf_check
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           	psect	text30
  7677  002EE8                     __ptext30:
  7678                           	opt stack 0
  7679  002EE8                     _cf_checkrange:
  7680                           	opt stack 24
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;incstack = 0
  7684  002EE8  FFFF               	dw	65535
  7685                           
  7686                           ;config.c: 68: unsigned char i, valid = 0;
  7687  002EEA  0100               	movlb	0	; () banked
  7688  002EEC  6FBA               	movwf	??_cf_checkrange& (0+255),b
  7689  002EEE  0E00               	movlw	0
  7690  002EF0  0100               	movlb	0	; () banked
  7691  002EF2  0100               	movlb	0	; () banked
  7692  002EF4  6FBB               	movwf	cf_checkrange@valid& (0+255),b
  7693  002EF6  0100               	movlb	0	; () banked
  7694  002EF8  51BA               	movf	??_cf_checkrange& (0+255),w,b
  7695                           
  7696                           ;config.c: 70: for (i = 0; i < (32 + 5); i ++)
  7697  002EFA  0100               	movlb	0	; () banked
  7698  002EFC  6FBA               	movwf	??_cf_checkrange& (0+255),b
  7699  002EFE  0E00               	movlw	0
  7700  002F00  0100               	movlb	0	; () banked
  7701  002F02  0100               	movlb	0	; () banked
  7702  002F04  6FBC               	movwf	cf_checkrange@i& (0+255),b
  7703  002F06  0100               	movlb	0	; () banked
  7704  002F08  51BA               	movf	??_cf_checkrange& (0+255),w,b
  7705  002F0A  D022               	goto	L53
  7706  002F0C                     l5756:
  7707                           
  7708                           ; BSR set to: 0
  7709                           ;config.c: 71: {
  7710                           ;config.c: 72: if ( (Cf.Data[i*3] > 32)
  7711                           ;config.c: 73: && (Cf.Data[i*3] != 99))
  7712  002F0C  0100               	movlb	0	; () banked
  7713  002F0E  0100               	movlb	0	; () banked
  7714  002F10  51BC               	movf	cf_checkrange@i& (0+255),w,b
  7715  002F12  0D03               	mullw	3
  7716  002F14  0101               	movlb	1	; () banked
  7717  002F16  0E00               	movlw	low _Cf	;volatile
  7718  002F18  24F3               	addwf	prodl,w,c
  7719  002F1A  6ED9               	movwf	fsr2l,c
  7720  002F1C  0101               	movlb	1	; () banked
  7721  002F1E  0E01               	movlw	high _Cf	;volatile
  7722  002F20  20F4               	addwfc	prodh,w,c
  7723  002F22  6EDA               	movwf	fsr2h,c
  7724  002F24  0E20               	movlw	32
  7725  002F26  64DF               	cpfsgt	indf2,c
  7726  002F28  D010               	goto	l5764
  7727                           
  7728                           ; BSR set to: 1
  7729  002F2A  0100               	movlb	0	; () banked
  7730  002F2C  0100               	movlb	0	; () banked
  7731  002F2E  51BC               	movf	cf_checkrange@i& (0+255),w,b
  7732  002F30  0D03               	mullw	3
  7733  002F32  0101               	movlb	1	; () banked
  7734  002F34  0E00               	movlw	low _Cf	;volatile
  7735  002F36  24F3               	addwf	prodl,w,c
  7736  002F38  6ED9               	movwf	fsr2l,c
  7737  002F3A  0101               	movlb	1	; () banked
  7738  002F3C  0E01               	movlw	high _Cf	;volatile
  7739  002F3E  20F4               	addwfc	prodh,w,c
  7740  002F40  6EDA               	movwf	fsr2h,c
  7741  002F42  50DF               	movf	indf2,w,c
  7742  002F44  0A63               	xorlw	99
  7743  002F46  A4D8               	btfss	status,2,c
  7744  002F48  D010               	goto	L52
  7745  002F4A                     l5764:
  7746  002F4A  0100               	movlb	0	; () banked
  7747  002F4C  0100               	movlb	0	; () banked
  7748  002F4E  2BBC               	incf	cf_checkrange@i& (0+255),f,b
  7749  002F50                     L53:
  7750                           
  7751                           ; BSR set to: 0
  7752  002F50  0E24               	movlw	36
  7753  002F52  0100               	movlb	0	; () banked
  7754  002F54  0100               	movlb	0	; () banked
  7755  002F56  65BC               	cpfsgt	cf_checkrange@i& (0+255),b
  7756  002F58  D7D9               	goto	l5756
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;config.c: 76: }
  7760                           ;config.c: 77: }
  7761                           ;config.c: 79: valid = 1;
  7762                           
  7763                           ; BSR set to: 0
  7764  002F5A  0100               	movlb	0	; () banked
  7765  002F5C  6FBA               	movwf	??_cf_checkrange& (0+255),b
  7766  002F5E  0E01               	movlw	1
  7767  002F60  0100               	movlb	0	; () banked
  7768  002F62  0100               	movlb	0	; () banked
  7769  002F64  6FBB               	movwf	cf_checkrange@valid& (0+255),b
  7770  002F66  0100               	movlb	0	; () banked
  7771  002F68  51BA               	movf	??_cf_checkrange& (0+255),w,b
  7772  002F6A                     L52:
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;config.c: 81: return valid;
  7776  002F6A  C0BB  F0BA         	movff	cf_checkrange@valid,??_cf_checkrange
  7777  002F6E  0100               	movlb	0	; () banked
  7778  002F70  31BA               	rrcf	??_cf_checkrange& (0+255),w,b
  7779                           
  7780                           ; BSR set to: 0
  7781                           
  7782                           ; BSR set to: 0
  7783  002F72  0012               	return	
  7784  002F74  FFFF               	dw	65535	; errata NOP
  7785  002F76                     __end_of_cf_checkrange:
  7786                           	opt stack 0
  7787                           tblptru	equ	0xFF8
  7788                           tblptrh	equ	0xFF7
  7789                           tblptrl	equ	0xFF6
  7790                           tablat	equ	0xFF5
  7791                           prodh	equ	0xFF4
  7792                           prodl	equ	0xFF3
  7793                           intcon	equ	0xFF2
  7794                           intcon2	equ	0xFF1
  7795                           postinc0	equ	0xFEE
  7796                           wreg	equ	0xFE8
  7797                           postdec1	equ	0xFE5
  7798                           fsr1l	equ	0xFE1
  7799                           indf2	equ	0xFDF
  7800                           postinc2	equ	0xFDE
  7801                           postdec2	equ	0xFDD
  7802                           fsr2h	equ	0xFDA
  7803                           fsr2l	equ	0xFD9
  7804                           status	equ	0xFD8
  7805                           
  7806 ;; *************** function _cf_checkout *****************
  7807 ;; Defined at:
  7808 ;;		line 33 in file "config.c"
  7809 ;; Parameters:    Size  Location     Type
  7810 ;;		None
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;  i               1    9[BANK0 ] unsigned char 
  7813 ;;  last_out        1    8[BANK0 ] unsigned char 
  7814 ;;  valid           1    7[BANK0 ] unsigned char 
  7815 ;; Return value:  Size  Location     Type
  7816 ;;		None               void
  7817 ;; Registers used:
  7818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7824 ;;      Params:         0       0       0       0       0       0       0
  7825 ;;      Locals:         0       3       0       0       0       0       0
  7826 ;;      Temps:          0       1       0       0       0       0       0
  7827 ;;      Totals:         0       4       0       0       0       0       0
  7828 ;;Total ram usage:        4 bytes
  7829 ;; Hardware stack levels used:    1
  7830 ;; Hardware stack levels required when called:    4
  7831 ;; This function calls:
  7832 ;;		___wmul
  7833 ;; This function is called by:
  7834 ;;		_cf_check
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           	psect	text31
  7839  002416                     __ptext31:
  7840                           	opt stack 0
  7841  002416                     _cf_checkout:
  7842                           	opt stack 23
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;incstack = 0
  7846  002416  FFFF               	dw	65535
  7847                           
  7848                           ;config.c: 35: unsigned char i, valid = 0;
  7849  002418  0100               	movlb	0	; () banked
  7850  00241A  6FC0               	movwf	??_cf_checkout& (0+255),b
  7851  00241C  0E00               	movlw	0
  7852  00241E  0100               	movlb	0	; () banked
  7853  002420  0100               	movlb	0	; () banked
  7854  002422  6FC1               	movwf	cf_checkout@valid& (0+255),b
  7855  002424  0100               	movlb	0	; () banked
  7856  002426  51C0               	movf	??_cf_checkout& (0+255),w,b
  7857                           
  7858                           ;config.c: 36: unsigned char last_out = 0;
  7859  002428  0100               	movlb	0	; () banked
  7860  00242A  6FC0               	movwf	??_cf_checkout& (0+255),b
  7861  00242C  0E00               	movlw	0
  7862  00242E  0100               	movlb	0	; () banked
  7863  002430  0100               	movlb	0	; () banked
  7864  002432  6FC2               	movwf	cf_checkout@last_out& (0+255),b
  7865  002434  0100               	movlb	0	; () banked
  7866  002436  51C0               	movf	??_cf_checkout& (0+255),w,b
  7867                           
  7868                           ;config.c: 38: for (i = 0; i < (32 + 5); i ++)
  7869  002438  0100               	movlb	0	; () banked
  7870  00243A  6FC0               	movwf	??_cf_checkout& (0+255),b
  7871  00243C  0E00               	movlw	0
  7872  00243E  0100               	movlb	0	; () banked
  7873  002440  0100               	movlb	0	; () banked
  7874  002442  6FC3               	movwf	cf_checkout@i& (0+255),b
  7875  002444  0100               	movlb	0	; () banked
  7876  002446  51C0               	movf	??_cf_checkout& (0+255),w,b
  7877  002448  D046               	goto	L54
  7878  00244A                     l5718:
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;config.c: 39: {
  7882                           ;config.c: 40: if (Cf.Data[i*3] == 0)
  7883  00244A  0100               	movlb	0	; () banked
  7884  00244C  0100               	movlb	0	; () banked
  7885  00244E  51C3               	movf	cf_checkout@i& (0+255),w,b
  7886  002450  0D03               	mullw	3
  7887  002452  0101               	movlb	1	; () banked
  7888  002454  0E00               	movlw	low _Cf	;volatile
  7889  002456  24F3               	addwf	prodl,w,c
  7890  002458  6ED9               	movwf	fsr2l,c
  7891  00245A  0101               	movlb	1	; () banked
  7892  00245C  0E01               	movlw	high _Cf	;volatile
  7893  00245E  20F4               	addwfc	prodh,w,c
  7894  002460  6EDA               	movwf	fsr2h,c
  7895  002462  50DF               	movf	indf2,w,c
  7896  002464  A4D8               	btfss	status,2,c
  7897  002466  D02F               	goto	l5728
  7898                           
  7899                           ; BSR set to: 1
  7900                           ;config.c: 41: {
  7901                           ;config.c: 42: if (i == 0) {return valid;}
  7902  002468  0100               	movlb	0	; () banked
  7903  00246A  0100               	movlb	0	; () banked
  7904  00246C  67C3               	tstfsz	cf_checkout@i& (0+255),b
  7905  00246E  D001               	goto	l417
  7906  002470  D061               	goto	l5746
  7907  002472                     l417:
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;config.c: 44: if (last_out == 0)
  7911  002472  0100               	movlb	0	; () banked
  7912  002474  0100               	movlb	0	; () banked
  7913  002476  67C2               	tstfsz	cf_checkout@last_out& (0+255),b
  7914  002478  D02B               	goto	l5734
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;config.c: 45: {
  7918                           ;config.c: 46: last_out = Cf.Data[(i - 1) * 3];
  7919  00247A  0EFF               	movlw	255
  7920  00247C  0100               	movlb	0	; () banked
  7921  00247E  0100               	movlb	0	; () banked
  7922  002480  25C3               	addwf	cf_checkout@i& (0+255),w,b
  7923  002482  0100               	movlb	0	; () banked
  7924  002484  0100               	movlb	0	; () banked
  7925  002486  6FBA               	movwf	___wmul@multiplier& (0+255),b
  7926  002488  0100               	movlb	0	; () banked
  7927  00248A  0100               	movlb	0	; () banked
  7928  00248C  6BBB               	clrf	(___wmul@multiplier+1)& (0+255),b
  7929  00248E  0EFF               	movlw	255
  7930  002490  23BB               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  7931  002492  0E00               	movlw	0
  7932  002494  0100               	movlb	0	; () banked
  7933  002496  0100               	movlb	0	; () banked
  7934  002498  6FBD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7935  00249A  0E03               	movlw	3
  7936  00249C  0100               	movlb	0	; () banked
  7937  00249E  6FBC               	movwf	___wmul@multiplicand& (0+255),b
  7938  0024A0  ECB7  F018         	call	___wmul	;wreg free
  7939  0024A4  0101               	movlb	1	; () banked
  7940  0024A6  0E00               	movlw	low _Cf	;volatile
  7941  0024A8  0100               	movlb	0	; () banked
  7942  0024AA  0100               	movlb	0	; () banked
  7943  0024AC  25BA               	addwf	?___wmul& (0+255),w,b
  7944  0024AE  6ED9               	movwf	fsr2l,c
  7945  0024B0  0101               	movlb	1	; () banked
  7946  0024B2  0E01               	movlw	high _Cf	;volatile
  7947  0024B4  0100               	movlb	0	; () banked
  7948  0024B6  0100               	movlb	0	; () banked
  7949  0024B8  21BB               	addwfc	(?___wmul+1)& (0+255),w,b
  7950  0024BA  6EDA               	movwf	fsr2h,c
  7951  0024BC  50DF               	movf	indf2,w,c
  7952  0024BE  0100               	movlb	0	; () banked
  7953  0024C0  0100               	movlb	0	; () banked
  7954  0024C2  6FC2               	movwf	cf_checkout@last_out& (0+255),b
  7955  0024C4  D005               	goto	l5734
  7956  0024C6                     l5728:
  7957                           
  7958                           ;config.c: 49: else
  7959                           ;config.c: 50: {
  7960                           ;config.c: 51: if (last_out != 0) {return valid;}
  7961  0024C6  0100               	movlb	0	; () banked
  7962  0024C8  0100               	movlb	0	; () banked
  7963  0024CA  51C2               	movf	cf_checkout@last_out& (0+255),w,b
  7964  0024CC  A4D8               	btfss	status,2,c
  7965  0024CE  D032               	goto	l5746
  7966  0024D0                     l5734:
  7967                           
  7968                           ; BSR set to: 0
  7969  0024D0  0100               	movlb	0	; () banked
  7970  0024D2  0100               	movlb	0	; () banked
  7971  0024D4  2BC3               	incf	cf_checkout@i& (0+255),f,b
  7972  0024D6                     L54:
  7973                           
  7974                           ; BSR set to: 0
  7975  0024D6  0E24               	movlw	36
  7976  0024D8  0100               	movlb	0	; () banked
  7977  0024DA  0100               	movlb	0	; () banked
  7978  0024DC  65C3               	cpfsgt	cf_checkout@i& (0+255),b
  7979  0024DE  D7B5               	goto	l5718
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;config.c: 52: }
  7983                           ;config.c: 53: }
  7984                           ;config.c: 55: if ( ((last_out != 0) && (last_out == Cf.Data[(32 * 3 + 5 * 3)]))
  7985                           ;config.c: 56: || ((last_out == 0) && (Cf.Data[i*3] == Cf.Data[(32 * 3 + 5 * 3)])))
  7986                           
  7987                           ; BSR set to: 0
  7988  0024E0  0100               	movlb	0	; () banked
  7989  0024E2  0100               	movlb	0	; () banked
  7990  0024E4  51C2               	movf	cf_checkout@last_out& (0+255),w,b
  7991  0024E6  B4D8               	btfsc	status,2,c
  7992  0024E8  D008               	goto	l426
  7993                           
  7994                           ; BSR set to: 0
  7995  0024EA  0101               	movlb	1	; () banked
  7996  0024EC  0101               	movlb	1	; () banked
  7997  0024EE  516F               	movf	(_Cf+111)& (0+255),w,b	;volatile
  7998  0024F0  0100               	movlb	0	; () banked
  7999  0024F2  0100               	movlb	0	; () banked
  8000  0024F4  19C2               	xorwf	cf_checkout@last_out& (0+255),w,b
  8001  0024F6  B4D8               	btfsc	status,2,c
  8002  0024F8  D015               	goto	l5744
  8003  0024FA                     l426:
  8004                           
  8005                           ; BSR set to: 0
  8006  0024FA  0100               	movlb	0	; () banked
  8007  0024FC  0100               	movlb	0	; () banked
  8008  0024FE  67C2               	tstfsz	cf_checkout@last_out& (0+255),b
  8009  002500  D019               	goto	l5746
  8010                           
  8011                           ; BSR set to: 0
  8012  002502  0100               	movlb	0	; () banked
  8013  002504  0100               	movlb	0	; () banked
  8014  002506  51C3               	movf	cf_checkout@i& (0+255),w,b
  8015  002508  0D03               	mullw	3
  8016  00250A  0101               	movlb	1	; () banked
  8017  00250C  0E00               	movlw	low _Cf	;volatile
  8018  00250E  24F3               	addwf	prodl,w,c
  8019  002510  6ED9               	movwf	fsr2l,c
  8020  002512  0101               	movlb	1	; () banked
  8021  002514  0E01               	movlw	high _Cf	;volatile
  8022  002516  20F4               	addwfc	prodh,w,c
  8023  002518  6EDA               	movwf	fsr2h,c
  8024  00251A  0101               	movlb	1	; () banked
  8025  00251C  0101               	movlb	1	; () banked
  8026  00251E  516F               	movf	(_Cf+111)& (0+255),w,b	;volatile
  8027  002520  62DF               	cpfseq	indf2,c
  8028  002522  D008               	goto	l5746
  8029  002524                     l5744:
  8030                           
  8031                           ;config.c: 57: {
  8032                           ;config.c: 58: valid = 1;
  8033  002524  0100               	movlb	0	; () banked
  8034  002526  6FC0               	movwf	??_cf_checkout& (0+255),b
  8035  002528  0E01               	movlw	1
  8036  00252A  0100               	movlb	0	; () banked
  8037  00252C  0100               	movlb	0	; () banked
  8038  00252E  6FC1               	movwf	cf_checkout@valid& (0+255),b
  8039  002530  0100               	movlb	0	; () banked
  8040  002532  51C0               	movf	??_cf_checkout& (0+255),w,b
  8041  002534                     l5746:
  8042                           
  8043                           ;config.c: 59: }
  8044                           ;config.c: 61: return valid;
  8045  002534  C0C1  F0C0         	movff	cf_checkout@valid,??_cf_checkout
  8046  002538  0100               	movlb	0	; () banked
  8047  00253A  31C0               	rrcf	??_cf_checkout& (0+255),w,b
  8048                           
  8049                           ; BSR set to: 0
  8050                           
  8051                           ; BSR set to: 0
  8052  00253C  0012               	return	
  8053  00253E  FFFF               	dw	65535	; errata NOP
  8054  002540                     __end_of_cf_checkout:
  8055                           	opt stack 0
  8056                           tblptru	equ	0xFF8
  8057                           tblptrh	equ	0xFF7
  8058                           tblptrl	equ	0xFF6
  8059                           tablat	equ	0xFF5
  8060                           prodh	equ	0xFF4
  8061                           prodl	equ	0xFF3
  8062                           intcon	equ	0xFF2
  8063                           intcon2	equ	0xFF1
  8064                           postinc0	equ	0xFEE
  8065                           wreg	equ	0xFE8
  8066                           postdec1	equ	0xFE5
  8067                           fsr1l	equ	0xFE1
  8068                           indf2	equ	0xFDF
  8069                           postinc2	equ	0xFDE
  8070                           postdec2	equ	0xFDD
  8071                           fsr2h	equ	0xFDA
  8072                           fsr2l	equ	0xFD9
  8073                           status	equ	0xFD8
  8074                           
  8075 ;; *************** function ___wmul *****************
  8076 ;; Defined at:
  8077 ;;		line 3 in file "E:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\wmul.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8080 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;  product         2    4[BANK0 ] unsigned int 
  8083 ;; Return value:  Size  Location     Type
  8084 ;;                  2    0[BANK0 ] unsigned int 
  8085 ;; Registers used:
  8086 ;;		wreg, status,2, status,0, prodl, prodh
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8092 ;;      Params:         0       4       0       0       0       0       0
  8093 ;;      Locals:         0       2       0       0       0       0       0
  8094 ;;      Temps:          0       0       0       0       0       0       0
  8095 ;;      Totals:         0       6       0       0       0       0       0
  8096 ;;Total ram usage:        6 bytes
  8097 ;; Hardware stack levels used:    1
  8098 ;; Hardware stack levels required when called:    3
  8099 ;; This function calls:
  8100 ;;		Nothing
  8101 ;; This function is called by:
  8102 ;;		_cf_checkout
  8103 ;;		_DecToStr
  8104 ;;		_delay_s
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           	psect	text32
  8109  00316E                     __ptext32:
  8110                           	opt stack 0
  8111  00316E                     ___wmul:
  8112                           	opt stack 24
  8113                           
  8114                           ; BSR set to: 0
  8115                           ;incstack = 0
  8116  00316E  FFFF               	dw	65535
  8117  003170  0100               	movlb	0	; () banked
  8118  003172  0100               	movlb	0	; () banked
  8119  003174  51BA               	movf	___wmul@multiplier& (0+255),w,b
  8120  003176  0100               	movlb	0	; () banked
  8121  003178  0100               	movlb	0	; () banked
  8122  00317A  03BC               	mulwf	___wmul@multiplicand& (0+255),b
  8123  00317C  CFF3 F0BE          	movff	prodl,___wmul@product
  8124  003180  CFF4 F0BF          	movff	prodh,___wmul@product+1
  8125  003184  0100               	movlb	0	; () banked
  8126  003186  0100               	movlb	0	; () banked
  8127  003188  51BA               	movf	___wmul@multiplier& (0+255),w,b
  8128  00318A  0100               	movlb	0	; () banked
  8129  00318C  0100               	movlb	0	; () banked
  8130  00318E  03BD               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8131  003190  CFF3 FFF4          	movff	prodl,prodh
  8132  003194  6AF3               	clrf	prodl,c
  8133  003196  50F3               	movf	prodl,w,c
  8134  003198  0100               	movlb	0	; () banked
  8135  00319A  0100               	movlb	0	; () banked
  8136  00319C  27BE               	addwf	___wmul@product& (0+255),f,b
  8137  00319E  50F4               	movf	prodh,w,c
  8138  0031A0  0100               	movlb	0	; () banked
  8139  0031A2  0100               	movlb	0	; () banked
  8140  0031A4  23BF               	addwfc	(___wmul@product+1)& (0+255),f,b
  8141  0031A6  0100               	movlb	0	; () banked
  8142  0031A8  0100               	movlb	0	; () banked
  8143  0031AA  51BB               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8144  0031AC  0100               	movlb	0	; () banked
  8145  0031AE  0100               	movlb	0	; () banked
  8146  0031B0  03BC               	mulwf	___wmul@multiplicand& (0+255),b
  8147  0031B2  CFF3 FFF4          	movff	prodl,prodh
  8148  0031B6  6AF3               	clrf	prodl,c
  8149  0031B8  50F3               	movf	prodl,w,c
  8150  0031BA  0100               	movlb	0	; () banked
  8151  0031BC  0100               	movlb	0	; () banked
  8152  0031BE  27BE               	addwf	___wmul@product& (0+255),f,b
  8153  0031C0  50F4               	movf	prodh,w,c
  8154  0031C2  0100               	movlb	0	; () banked
  8155  0031C4  0100               	movlb	0	; () banked
  8156  0031C6  23BF               	addwfc	(___wmul@product+1)& (0+255),f,b
  8157                           
  8158                           ; BSR set to: 0
  8159  0031C8  C0BE  F0BA         	movff	___wmul@product,?___wmul
  8160  0031CC  C0BF  F0BB         	movff	___wmul@product+1,?___wmul+1
  8161                           
  8162                           ; BSR set to: 0
  8163                           
  8164                           ; BSR set to: 0
  8165  0031D0  0012               	return	
  8166  0031D2  FFFF               	dw	65535	; errata NOP
  8167  0031D4                     __end_of___wmul:
  8168                           	opt stack 0
  8169                           tblptru	equ	0xFF8
  8170                           tblptrh	equ	0xFF7
  8171                           tblptrl	equ	0xFF6
  8172                           tablat	equ	0xFF5
  8173                           prodh	equ	0xFF4
  8174                           prodl	equ	0xFF3
  8175                           intcon	equ	0xFF2
  8176                           intcon2	equ	0xFF1
  8177                           postinc0	equ	0xFEE
  8178                           wreg	equ	0xFE8
  8179                           postdec1	equ	0xFE5
  8180                           fsr1l	equ	0xFE1
  8181                           indf2	equ	0xFDF
  8182                           postinc2	equ	0xFDE
  8183                           postdec2	equ	0xFDD
  8184                           fsr2h	equ	0xFDA
  8185                           fsr2l	equ	0xFD9
  8186                           status	equ	0xFD8
  8187                           
  8188 ;; *************** function _HexToAscii *****************
  8189 ;; Defined at:
  8190 ;;		line 28 in file "utils.c"
  8191 ;; Parameters:    Size  Location     Type
  8192 ;;  Value           1    wreg     unsigned char 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;  Value           1    1[BANK0 ] unsigned char 
  8195 ;;  character       1    0[BANK0 ] unsigned char 
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  1    wreg      unsigned char 
  8198 ;; Registers used:
  8199 ;;		wreg, status,2, status,0
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8205 ;;      Params:         0       0       0       0       0       0       0
  8206 ;;      Locals:         0       2       0       0       0       0       0
  8207 ;;      Temps:          0       0       0       0       0       0       0
  8208 ;;      Totals:         0       2       0       0       0       0       0
  8209 ;;Total ram usage:        2 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; Hardware stack levels required when called:    3
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_cf_check_and_display
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           	psect	text33
  8220  00368A                     __ptext33:
  8221                           	opt stack 0
  8222  00368A                     _HexToAscii:
  8223                           	opt stack 26
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;incstack = 0
  8227  00368A  FFFF               	dw	65535
  8228                           
  8229                           ;HexToAscii@Value stored from wreg
  8230  00368C  CFE8 F0BB          	movff	wreg,HexToAscii@Value
  8231                           
  8232                           ;utils.c: 30: char character;
  8233                           ;utils.c: 32: if (Value < 10)
  8234  003690  0E0A               	movlw	10
  8235  003692  0100               	movlb	0	; () banked
  8236  003694  0100               	movlb	0	; () banked
  8237  003696  5DBB               	subwf	HexToAscii@Value& (0+255),w,b
  8238  003698  B0D8               	btfsc	status,0,c
  8239  00369A  D005               	goto	l6210
  8240                           
  8241                           ; BSR set to: 0
  8242                           ;utils.c: 33: {
  8243                           ;utils.c: 34: character = Value + 0x30;
  8244  00369C  0100               	movlb	0	; () banked
  8245  00369E  0100               	movlb	0	; () banked
  8246  0036A0  51BB               	movf	HexToAscii@Value& (0+255),w,b
  8247  0036A2  0F30               	addlw	48
  8248  0036A4  D004               	goto	L55
  8249  0036A6                     l6210:
  8250                           
  8251                           ; BSR set to: 0
  8252                           ;utils.c: 36: else
  8253                           ;utils.c: 37: {
  8254                           ;utils.c: 38: character = Value - 9 + 0x40;
  8255  0036A6  0100               	movlb	0	; () banked
  8256  0036A8  0100               	movlb	0	; () banked
  8257  0036AA  51BB               	movf	HexToAscii@Value& (0+255),w,b
  8258  0036AC  0F37               	addlw	55
  8259  0036AE                     L55:
  8260  0036AE  0100               	movlb	0	; () banked
  8261  0036B0  0100               	movlb	0	; () banked
  8262  0036B2  6FBA               	movwf	HexToAscii@character& (0+255),b
  8263                           
  8264                           ; BSR set to: 0
  8265                           ;utils.c: 39: }
  8266                           ;utils.c: 41: return character;
  8267                           
  8268                           ; BSR set to: 0
  8269  0036B4  0100               	movlb	0	; () banked
  8270  0036B6  0100               	movlb	0	; () banked
  8271  0036B8  51BA               	movf	HexToAscii@character& (0+255),w,b
  8272                           
  8273                           ; BSR set to: 0
  8274                           
  8275                           ; BSR set to: 0
  8276  0036BA  0012               	return	
  8277  0036BC  FFFF               	dw	65535	; errata NOP
  8278  0036BE                     __end_of_HexToAscii:
  8279                           	opt stack 0
  8280                           tblptru	equ	0xFF8
  8281                           tblptrh	equ	0xFF7
  8282                           tblptrl	equ	0xFF6
  8283                           tablat	equ	0xFF5
  8284                           prodh	equ	0xFF4
  8285                           prodl	equ	0xFF3
  8286                           intcon	equ	0xFF2
  8287                           intcon2	equ	0xFF1
  8288                           postinc0	equ	0xFEE
  8289                           wreg	equ	0xFE8
  8290                           postdec1	equ	0xFE5
  8291                           fsr1l	equ	0xFE1
  8292                           indf2	equ	0xFDF
  8293                           postinc2	equ	0xFDE
  8294                           postdec2	equ	0xFDD
  8295                           fsr2h	equ	0xFDA
  8296                           fsr2l	equ	0xFD9
  8297                           status	equ	0xFD8
  8298                           
  8299 ;; *************** function _bouton_refresh *****************
  8300 ;; Defined at:
  8301 ;;		line 11 in file "bouton.c"
  8302 ;; Parameters:    Size  Location     Type
  8303 ;;		None
  8304 ;; Auto vars:     Size  Location     Type
  8305 ;;  temp            1    4[BANK0 ] unsigned char 
  8306 ;;  i               1    5[BANK0 ] unsigned char 
  8307 ;; Return value:  Size  Location     Type
  8308 ;;		None               void
  8309 ;; Registers used:
  8310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8311 ;; Tracked objects:
  8312 ;;		On entry : 0/0
  8313 ;;		On exit  : 0/0
  8314 ;;		Unchanged: 0/0
  8315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8316 ;;      Params:         0       0       0       0       0       0       0
  8317 ;;      Locals:         0       4       0       0       0       0       0
  8318 ;;      Temps:          0       2       0       0       0       0       0
  8319 ;;      Totals:         0       6       0       0       0       0       0
  8320 ;;Total ram usage:        6 bytes
  8321 ;; Hardware stack levels used:    1
  8322 ;; Hardware stack levels required when called:    3
  8323 ;; This function calls:
  8324 ;;		Nothing
  8325 ;; This function is called by:
  8326 ;;		_main
  8327 ;; This function uses a non-reentrant model
  8328 ;;
  8329                           
  8330                           	psect	text34
  8331  0012C8                     __ptext34:
  8332                           	opt stack 0
  8333  0012C8                     _bouton_refresh:
  8334                           	opt stack 27
  8335                           
  8336                           ; BSR set to: 0
  8337                           ;incstack = 0
  8338  0012C8  FFFF               	dw	65535
  8339                           
  8340                           ;bouton.c: 13: unsigned char i;
  8341                           ;bouton.c: 15: for (i = 0; i < Bp_Max; i++)
  8342  0012CA  0100               	movlb	0	; () banked
  8343  0012CC  6FBA               	movwf	??_bouton_refresh& (0+255),b
  8344  0012CE  0E00               	movlw	0
  8345  0012D0  0100               	movlb	0	; () banked
  8346  0012D2  0100               	movlb	0	; () banked
  8347  0012D4  6FBF               	movwf	bouton_refresh@i& (0+255),b
  8348  0012D6  0100               	movlb	0	; () banked
  8349  0012D8  51BA               	movf	??_bouton_refresh& (0+255),w,b
  8350  0012DA  D109               	goto	L57
  8351  0012DC                     l6556:
  8352                           
  8353                           ; BSR set to: 0
  8354  0012DC  0E00               	movlw	0
  8355  0012DE  B084               	btfsc	3972,0,c	;volatile
  8356  0012E0  0E01               	movlw	1
  8357  0012E2  0100               	movlb	0	; () banked
  8358  0012E4  0100               	movlb	0	; () banked
  8359  0012E6  6FBE               	movwf	bouton_refresh@temp& (0+255),b
  8360  0012E8  D024               	goto	l6568
  8361  0012EA                     l6558:
  8362                           
  8363                           ; BSR set to: 0
  8364  0012EA  0E00               	movlw	0
  8365  0012EC  B284               	btfsc	3972,1,c	;volatile
  8366  0012EE  0E01               	movlw	1
  8367  0012F0  0100               	movlb	0	; () banked
  8368  0012F2  0100               	movlb	0	; () banked
  8369  0012F4  6FBE               	movwf	bouton_refresh@temp& (0+255),b
  8370  0012F6  D01D               	goto	l6568
  8371  0012F8                     l6560:
  8372                           
  8373                           ; BSR set to: 0
  8374  0012F8  0E00               	movlw	0
  8375  0012FA  BA82               	btfsc	3970,5,c	;volatile
  8376  0012FC  0E01               	movlw	1
  8377  0012FE  0100               	movlb	0	; () banked
  8378  001300  0100               	movlb	0	; () banked
  8379  001302  6FBE               	movwf	bouton_refresh@temp& (0+255),b
  8380  001304  D016               	goto	l6568
  8381  001306                     l6562:
  8382                           
  8383                           ; BSR set to: 0
  8384  001306  0E00               	movlw	0
  8385  001308  B081               	btfsc	3969,0,c	;volatile
  8386  00130A  0E01               	movlw	1
  8387  00130C  0100               	movlb	0	; () banked
  8388  00130E  0100               	movlb	0	; () banked
  8389  001310  6FBE               	movwf	bouton_refresh@temp& (0+255),b
  8390  001312  D00F               	goto	l6568
  8391  001314                     l6566:
  8392                           
  8393                           ; BSR set to: 0
  8394  001314  0100               	movlb	0	; () banked
  8395  001316  0100               	movlb	0	; () banked
  8396  001318  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8397                           
  8398                           ; Switch size 1, requested type "space"
  8399                           ; Number of cases is 4, Range of values is 0 to 3
  8400                           ; switch strategies available:
  8401                           ; Name         Instructions Cycles
  8402                           ; simple_byte           13     7 (average)
  8403                           ;	Chosen strategy is simple_byte
  8404  00131A  0A00               	xorlw	0	; case 0
  8405  00131C  B4D8               	btfsc	status,2,c
  8406  00131E  D7DE               	goto	l6556
  8407  001320  0A01               	xorlw	1	; case 1
  8408  001322  B4D8               	btfsc	status,2,c
  8409  001324  D7E2               	goto	l6558
  8410  001326  0A03               	xorlw	3	; case 2
  8411  001328  B4D8               	btfsc	status,2,c
  8412  00132A  D7E6               	goto	l6560
  8413  00132C  0A01               	xorlw	1	; case 3
  8414  00132E  B4D8               	btfsc	status,2,c
  8415  001330  D7EA               	goto	l6562
  8416  001332                     l6568:
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;bouton.c: 28: if (temp == Bouton[i].Memo)
  8420  001332  0100               	movlb	0	; () banked
  8421  001334  0100               	movlb	0	; () banked
  8422  001336  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8423  001338  0D03               	mullw	3
  8424  00133A  0E02               	movlw	2
  8425  00133C  26F3               	addwf	prodl,f,c
  8426  00133E  0E00               	movlw	0
  8427  001340  22F4               	addwfc	prodh,f,c
  8428  001342  0100               	movlb	0	; () banked
  8429  001344  0E8E               	movlw	low _Bouton
  8430  001346  24F3               	addwf	prodl,w,c
  8431  001348  6ED9               	movwf	fsr2l,c
  8432  00134A  0100               	movlb	0	; () banked
  8433  00134C  0E00               	movlw	high _Bouton
  8434  00134E  20F4               	addwfc	prodh,w,c
  8435  001350  6EDA               	movwf	fsr2h,c
  8436  001352  A0DF               	btfss	indf2,0,c
  8437  001354  D002               	goto	u5890
  8438  001356  0E01               	movlw	1
  8439  001358  D001               	goto	u5896
  8440  00135A                     u5890:
  8441  00135A  0E00               	movlw	0
  8442  00135C                     u5896:
  8443  00135C  0100               	movlb	0	; () banked
  8444  00135E  0100               	movlb	0	; () banked
  8445  001360  19BE               	xorwf	bouton_refresh@temp& (0+255),w,b
  8446  001362  A4D8               	btfss	status,2,c
  8447  001364  D098               	goto	l6584
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;bouton.c: 29: {
  8451                           ;bouton.c: 30: if (Bouton[i].State != Bouton[i].Memo)
  8452  001366  0100               	movlb	0	; () banked
  8453  001368  0100               	movlb	0	; () banked
  8454  00136A  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8455  00136C  0D03               	mullw	3
  8456  00136E  0E02               	movlw	2
  8457  001370  26F3               	addwf	prodl,f,c
  8458  001372  0E00               	movlw	0
  8459  001374  22F4               	addwfc	prodh,f,c
  8460  001376  0100               	movlb	0	; () banked
  8461  001378  0E8E               	movlw	low _Bouton
  8462  00137A  24F3               	addwf	prodl,w,c
  8463  00137C  6ED9               	movwf	fsr2l,c
  8464  00137E  0100               	movlb	0	; () banked
  8465  001380  0E00               	movlw	high _Bouton
  8466  001382  20F4               	addwfc	prodh,w,c
  8467  001384  6EDA               	movwf	fsr2h,c
  8468  001386  A0DF               	btfss	indf2,0,c
  8469  001388  D002               	goto	u5910
  8470  00138A  0E01               	movlw	1
  8471  00138C  D001               	goto	u5912
  8472  00138E                     u5910:
  8473  00138E  0E00               	movlw	0
  8474  001390                     u5912:
  8475  001390  0100               	movlb	0	; () banked
  8476  001392  6FBA               	movwf	??_bouton_refresh& (0+255),b
  8477  001394  0100               	movlb	0	; () banked
  8478  001396  0100               	movlb	0	; () banked
  8479  001398  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8480  00139A  0D03               	mullw	3
  8481  00139C  0E02               	movlw	2
  8482  00139E  26F3               	addwf	prodl,f,c
  8483  0013A0  0E00               	movlw	0
  8484  0013A2  22F4               	addwfc	prodh,f,c
  8485  0013A4  0100               	movlb	0	; () banked
  8486  0013A6  0E8E               	movlw	low _Bouton
  8487  0013A8  24F3               	addwf	prodl,w,c
  8488  0013AA  6ED9               	movwf	fsr2l,c
  8489  0013AC  0100               	movlb	0	; () banked
  8490  0013AE  0E00               	movlw	high _Bouton
  8491  0013B0  20F4               	addwfc	prodh,w,c
  8492  0013B2  6EDA               	movwf	fsr2h,c
  8493  0013B4  A2DF               	btfss	indf2,1,c
  8494  0013B6  D002               	goto	u5920
  8495  0013B8  0E01               	movlw	1
  8496  0013BA  D001               	goto	u5922
  8497  0013BC                     u5920:
  8498  0013BC  0E00               	movlw	0
  8499  0013BE                     u5922:
  8500  0013BE  0100               	movlb	0	; () banked
  8501  0013C0  1BBA               	xorwf	??_bouton_refresh& (0+255),f,b
  8502  0013C2  B4D8               	btfsc	status,2,c
  8503  0013C4  D091               	goto	l6586
  8504                           
  8505                           ; BSR set to: 0
  8506                           ;bouton.c: 31: {
  8507                           ;bouton.c: 32: if ((((unsigned short) (Cptms - Bouton[i].Time) > (((i == Bp_Start) && (M
      +                          icro.Mods == 1)) ? 5 : 100)) ? 1 : 0))
  8508  0013C6  0100               	movlb	0	; () banked
  8509  0013C8  0100               	movlb	0	; () banked
  8510  0013CA  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8511  0013CC  0A03               	xorlw	3
  8512  0013CE  A4D8               	btfss	status,2,c
  8513  0013D0  D003               	goto	l6576
  8514                           
  8515                           ; BSR set to: 0
  8516  0013D2  0457               	decf	_Micro+5,w,c
  8517  0013D4  B4D8               	btfsc	status,2,c
  8518  0013D6  D006               	goto	l6578
  8519  0013D8                     l6576:
  8520                           
  8521                           ; BSR set to: 0
  8522  0013D8  0E00               	movlw	0
  8523  0013DA  0100               	movlb	0	; () banked
  8524  0013DC  0100               	movlb	0	; () banked
  8525  0013DE  6FBD               	movwf	(_bouton_refresh$2134+1)& (0+255),b
  8526  0013E0  0E64               	movlw	100
  8527  0013E2  D005               	goto	L56
  8528  0013E4                     l6578:
  8529                           
  8530                           ; BSR set to: 0
  8531  0013E4  0E00               	movlw	0
  8532  0013E6  0100               	movlb	0	; () banked
  8533  0013E8  0100               	movlb	0	; () banked
  8534  0013EA  6FBD               	movwf	(_bouton_refresh$2134+1)& (0+255),b
  8535  0013EC  0E05               	movlw	5
  8536  0013EE                     L56:
  8537  0013EE  0100               	movlb	0	; () banked
  8538  0013F0  6FBC               	movwf	_bouton_refresh$2134& (0+255),b
  8539                           
  8540                           ; BSR set to: 0
  8541                           
  8542                           ; BSR set to: 0
  8543  0013F2  0100               	movlb	0	; () banked
  8544  0013F4  0100               	movlb	0	; () banked
  8545  0013F6  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8546  0013F8  0D03               	mullw	3
  8547  0013FA  0100               	movlb	0	; () banked
  8548  0013FC  0E8E               	movlw	low _Bouton
  8549  0013FE  24F3               	addwf	prodl,w,c
  8550  001400  6ED9               	movwf	fsr2l,c
  8551  001402  0100               	movlb	0	; () banked
  8552  001404  0E00               	movlw	high _Bouton
  8553  001406  20F4               	addwfc	prodh,w,c
  8554  001408  6EDA               	movwf	fsr2h,c
  8555  00140A  CFDE F0BA          	movff	postinc2,??_bouton_refresh
  8556  00140E  CFDD F0BB          	movff	postdec2,??_bouton_refresh+1
  8557  001412  0100               	movlb	0	; () banked
  8558  001414  1FBA               	comf	??_bouton_refresh& (0+255),f,b
  8559  001416  1FBB               	comf	(??_bouton_refresh+1)& (0+255),f,b
  8560  001418  4BBA               	infsnz	??_bouton_refresh& (0+255),f,b
  8561  00141A  2BBB               	incf	(??_bouton_refresh+1)& (0+255),f,b
  8562  00141C  504F               	movf	_Cptms,w,c	;volatile
  8563  00141E  0100               	movlb	0	; () banked
  8564  001420  27BA               	addwf	??_bouton_refresh& (0+255),f,b
  8565  001422  5050               	movf	_Cptms+1,w,c	;volatile
  8566  001424  0100               	movlb	0	; () banked
  8567  001426  23BB               	addwfc	(??_bouton_refresh+1)& (0+255),f,b
  8568  001428  0100               	movlb	0	; () banked
  8569  00142A  51BA               	movf	??_bouton_refresh& (0+255),w,b
  8570  00142C  0100               	movlb	0	; () banked
  8571  00142E  0100               	movlb	0	; () banked
  8572  001430  5DBC               	subwf	_bouton_refresh$2134& (0+255),w,b
  8573  001432  0100               	movlb	0	; () banked
  8574  001434  51BB               	movf	(??_bouton_refresh+1)& (0+255),w,b
  8575  001436  0100               	movlb	0	; () banked
  8576  001438  0100               	movlb	0	; () banked
  8577  00143A  59BD               	subwfb	(_bouton_refresh$2134+1)& (0+255),w,b
  8578  00143C  B0D8               	btfsc	status,0,c
  8579  00143E  D054               	goto	l6586
  8580                           
  8581                           ; BSR set to: 0
  8582                           ;bouton.c: 33: {
  8583                           ;bouton.c: 34: Bouton[i].State = Bouton[i].Memo;
  8584  001440  0100               	movlb	0	; () banked
  8585  001442  0100               	movlb	0	; () banked
  8586  001444  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8587  001446  0D03               	mullw	3
  8588  001448  0E02               	movlw	2
  8589  00144A  26F3               	addwf	prodl,f,c
  8590  00144C  0E00               	movlw	0
  8591  00144E  22F4               	addwfc	prodh,f,c
  8592  001450  0100               	movlb	0	; () banked
  8593  001452  0E8E               	movlw	low _Bouton
  8594  001454  24F3               	addwf	prodl,w,c
  8595  001456  6ED9               	movwf	fsr2l,c
  8596  001458  0100               	movlb	0	; () banked
  8597  00145A  0E00               	movlw	high _Bouton
  8598  00145C  20F4               	addwfc	prodh,w,c
  8599  00145E  6EDA               	movwf	fsr2h,c
  8600  001460  0100               	movlb	0	; () banked
  8601  001462  0100               	movlb	0	; () banked
  8602  001464  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8603  001466  0D03               	mullw	3
  8604  001468  0E02               	movlw	2
  8605  00146A  26F3               	addwf	prodl,f,c
  8606  00146C  0E00               	movlw	0
  8607  00146E  22F4               	addwfc	prodh,f,c
  8608  001470  0100               	movlb	0	; () banked
  8609  001472  0E8E               	movlw	low _Bouton
  8610  001474  24F3               	addwf	prodl,w,c
  8611  001476  6EE1               	movwf	fsr1l,c
  8612  001478  0100               	movlb	0	; () banked
  8613  00147A  0E00               	movlw	high _Bouton
  8614  00147C  20F4               	addwfc	prodh,w,c
  8615  00147E  6EE2               	movwf	fsr1h,c
  8616  001480  0100               	movlb	0	; () banked
  8617  001482  A0DF               	btfss	indf2,0,c
  8618  001484  D002               	bra	u5975
  8619  001486  0100               	movlb	0	; () banked
  8620  001488  82E7               	bsf	indf1,1,c
  8621  00148A                     u5975:
  8622  00148A  0100               	movlb	0	; () banked
  8623  00148C  B0DF               	btfsc	indf2,0,c
  8624  00148E  D002               	bra	u5976
  8625  001490  0100               	movlb	0	; () banked
  8626  001492  92E7               	bcf	indf1,1,c
  8627  001494                     u5976:
  8628  001494  D029               	goto	l6586
  8629  001496                     l6584:
  8630                           
  8631                           ; BSR set to: 0
  8632                           ;bouton.c: 38: else
  8633                           ;bouton.c: 39: {
  8634                           ;bouton.c: 40: Bouton[i].Memo = temp;
  8635  001496  0100               	movlb	0	; () banked
  8636  001498  0100               	movlb	0	; () banked
  8637  00149A  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8638  00149C  0D03               	mullw	3
  8639  00149E  0E02               	movlw	2
  8640  0014A0  26F3               	addwf	prodl,f,c
  8641  0014A2  0E00               	movlw	0
  8642  0014A4  22F4               	addwfc	prodh,f,c
  8643  0014A6  0100               	movlb	0	; () banked
  8644  0014A8  0E8E               	movlw	low _Bouton
  8645  0014AA  24F3               	addwf	prodl,w,c
  8646  0014AC  6ED9               	movwf	fsr2l,c
  8647  0014AE  0100               	movlb	0	; () banked
  8648  0014B0  0E00               	movlw	high _Bouton
  8649  0014B2  20F4               	addwfc	prodh,w,c
  8650  0014B4  6EDA               	movwf	fsr2h,c
  8651  0014B6  0100               	movlb	0	; () banked
  8652  0014B8  0100               	movlb	0	; () banked
  8653  0014BA  B1BE               	btfsc	bouton_refresh@temp& (0+255),0,b
  8654  0014BC  D003               	bra	u5985
  8655  0014BE  0100               	movlb	0	; () banked
  8656  0014C0  90DF               	bcf	indf2,0,c
  8657  0014C2  D002               	bra	u5986
  8658  0014C4                     u5985:
  8659  0014C4  0100               	movlb	0	; () banked
  8660  0014C6  80DF               	bsf	indf2,0,c
  8661  0014C8                     u5986:
  8662                           
  8663                           ;bouton.c: 41: Bouton[i].Time = Cptms;
  8664  0014C8  0100               	movlb	0	; () banked
  8665  0014CA  0100               	movlb	0	; () banked
  8666  0014CC  51BF               	movf	bouton_refresh@i& (0+255),w,b
  8667  0014CE  0D03               	mullw	3
  8668  0014D0  0100               	movlb	0	; () banked
  8669  0014D2  0E8E               	movlw	low _Bouton
  8670  0014D4  24F3               	addwf	prodl,w,c
  8671  0014D6  6ED9               	movwf	fsr2l,c
  8672  0014D8  0100               	movlb	0	; () banked
  8673  0014DA  0E00               	movlw	high _Bouton
  8674  0014DC  20F4               	addwfc	prodh,w,c
  8675  0014DE  6EDA               	movwf	fsr2h,c
  8676  0014E0  C04F  FFDE         	movff	_Cptms,postinc2	;volatile
  8677  0014E4  C050  FFDD         	movff	_Cptms+1,postdec2	;volatile
  8678  0014E8                     l6586:
  8679                           
  8680                           ; BSR set to: 0
  8681  0014E8  0100               	movlb	0	; () banked
  8682  0014EA  0100               	movlb	0	; () banked
  8683  0014EC  2BBF               	incf	bouton_refresh@i& (0+255),f,b
  8684  0014EE                     L57:
  8685                           
  8686                           ; BSR set to: 0
  8687  0014EE  0E03               	movlw	3
  8688  0014F0  0100               	movlb	0	; () banked
  8689  0014F2  0100               	movlb	0	; () banked
  8690  0014F4  65BF               	cpfsgt	bouton_refresh@i& (0+255),b
  8691  0014F6  D70E               	goto	l6566
  8692                           
  8693                           ; BSR set to: 0
  8694                           
  8695                           ; BSR set to: 0
  8696  0014F8  0012               	return	
  8697  0014FA  FFFF               	dw	65535	; errata NOP
  8698  0014FC                     __end_of_bouton_refresh:
  8699                           	opt stack 0
  8700                           tblptru	equ	0xFF8
  8701                           tblptrh	equ	0xFF7
  8702                           tblptrl	equ	0xFF6
  8703                           tablat	equ	0xFF5
  8704                           prodh	equ	0xFF4
  8705                           prodl	equ	0xFF3
  8706                           intcon	equ	0xFF2
  8707                           intcon2	equ	0xFF1
  8708                           postinc0	equ	0xFEE
  8709                           wreg	equ	0xFE8
  8710                           indf1	equ	0xFE7
  8711                           postdec1	equ	0xFE5
  8712                           fsr1h	equ	0xFE2
  8713                           fsr1l	equ	0xFE1
  8714                           indf2	equ	0xFDF
  8715                           postinc2	equ	0xFDE
  8716                           postdec2	equ	0xFDD
  8717                           fsr2h	equ	0xFDA
  8718                           fsr2l	equ	0xFD9
  8719                           status	equ	0xFD8
  8720                           
  8721 ;; *************** function _bouton_init *****************
  8722 ;; Defined at:
  8723 ;;		line 3 in file "bouton.c"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;		None
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;		None
  8728 ;; Return value:  Size  Location     Type
  8729 ;;		None               void
  8730 ;; Registers used:
  8731 ;;		None
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/0
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8737 ;;      Params:         0       0       0       0       0       0       0
  8738 ;;      Locals:         0       0       0       0       0       0       0
  8739 ;;      Temps:          0       0       0       0       0       0       0
  8740 ;;      Totals:         0       0       0       0       0       0       0
  8741 ;;Total ram usage:        0 bytes
  8742 ;; Hardware stack levels used:    1
  8743 ;; Hardware stack levels required when called:    3
  8744 ;; This function calls:
  8745 ;;		Nothing
  8746 ;; This function is called by:
  8747 ;;		_main
  8748 ;; This function uses a non-reentrant model
  8749 ;;
  8750                           
  8751                           	psect	text35
  8752  0034DC                     __ptext35:
  8753                           	opt stack 0
  8754  0034DC                     _bouton_init:
  8755                           	opt stack 27
  8756                           
  8757                           ; BSR set to: 0
  8758                           ;incstack = 0
  8759  0034DC  FFFF               	dw	65535
  8760                           
  8761                           ;bouton.c: 5: Bouton[Bp_On].State = PORTEbits.RE0;
  8762  0034DE  A084               	btfss	3972,0,c	;volatile
  8763  0034E0  D004               	bra	u5845
  8764  0034E2  0100               	movlb	0	; () banked
  8765  0034E4  0100               	movlb	0	; () banked
  8766  0034E6  8390               	bsf	(_Bouton+2)& (0+255),1,b
  8767  0034E8  D003               	bra	u5847
  8768  0034EA                     u5845:
  8769  0034EA  0100               	movlb	0	; () banked
  8770  0034EC  0100               	movlb	0	; () banked
  8771  0034EE  9390               	bcf	(_Bouton+2)& (0+255),1,b
  8772  0034F0                     u5847:
  8773                           
  8774                           ;bouton.c: 6: Bouton[Bp_IdTest].State = PORTEbits.RE1;
  8775  0034F0  A284               	btfss	3972,1,c	;volatile
  8776  0034F2  D004               	bra	u5855
  8777  0034F4  0100               	movlb	0	; () banked
  8778  0034F6  0100               	movlb	0	; () banked
  8779  0034F8  8393               	bsf	(_Bouton+5)& (0+255),1,b
  8780  0034FA  D003               	bra	u5857
  8781  0034FC                     u5855:
  8782  0034FC  0100               	movlb	0	; () banked
  8783  0034FE  0100               	movlb	0	; () banked
  8784  003500  9393               	bcf	(_Bouton+5)& (0+255),1,b
  8785  003502                     u5857:
  8786                           
  8787                           ;bouton.c: 7: Bouton[Comu_Test].State = PORTCbits.RC5;
  8788  003502  AA82               	btfss	3970,5,c	;volatile
  8789  003504  D004               	bra	u5865
  8790  003506  0100               	movlb	0	; () banked
  8791  003508  0100               	movlb	0	; () banked
  8792  00350A  8396               	bsf	(_Bouton+8)& (0+255),1,b
  8793  00350C  D003               	bra	u5867
  8794  00350E                     u5865:
  8795  00350E  0100               	movlb	0	; () banked
  8796  003510  0100               	movlb	0	; () banked
  8797  003512  9396               	bcf	(_Bouton+8)& (0+255),1,b
  8798  003514                     u5867:
  8799                           
  8800                           ;bouton.c: 8: Bouton[Bp_Start].State = PORTBbits.RB0;
  8801  003514  A081               	btfss	3969,0,c	;volatile
  8802  003516  D004               	bra	u5875
  8803  003518  0100               	movlb	0	; () banked
  8804  00351A  0100               	movlb	0	; () banked
  8805  00351C  8399               	bsf	(_Bouton+11)& (0+255),1,b
  8806  00351E  D003               	bra	u5877
  8807  003520                     u5875:
  8808  003520  0100               	movlb	0	; () banked
  8809  003522  0100               	movlb	0	; () banked
  8810  003524  9399               	bcf	(_Bouton+11)& (0+255),1,b
  8811  003526                     u5877:
  8812                           
  8813                           ; BSR set to: 0
  8814  003526  0012               	return	
  8815  003528  FFFF               	dw	65535	; errata NOP
  8816  00352A                     __end_of_bouton_init:
  8817                           	opt stack 0
  8818                           tblptru	equ	0xFF8
  8819                           tblptrh	equ	0xFF7
  8820                           tblptrl	equ	0xFF6
  8821                           tablat	equ	0xFF5
  8822                           prodh	equ	0xFF4
  8823                           prodl	equ	0xFF3
  8824                           intcon	equ	0xFF2
  8825                           intcon2	equ	0xFF1
  8826                           postinc0	equ	0xFEE
  8827                           wreg	equ	0xFE8
  8828                           indf1	equ	0xFE7
  8829                           postdec1	equ	0xFE5
  8830                           fsr1h	equ	0xFE2
  8831                           fsr1l	equ	0xFE1
  8832                           indf2	equ	0xFDF
  8833                           postinc2	equ	0xFDE
  8834                           postdec2	equ	0xFDD
  8835                           fsr2h	equ	0xFDA
  8836                           fsr2l	equ	0xFD9
  8837                           status	equ	0xFD8
  8838                           
  8839 ;; *************** function _armement_process *****************
  8840 ;; Defined at:
  8841 ;;		line 24 in file "armement.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;		None
  8844 ;; Auto vars:     Size  Location     Type
  8845 ;;  temp            2   38[BANK0 ] unsigned short 
  8846 ;; Return value:  Size  Location     Type
  8847 ;;		None               void
  8848 ;; Registers used:
  8849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8855 ;;      Params:         0       0       0       0       0       0       0
  8856 ;;      Locals:         0       2       0       0       0       0       0
  8857 ;;      Temps:          0       2       0       0       0       0       0
  8858 ;;      Totals:         0       4       0       0       0       0       0
  8859 ;;Total ram usage:        4 bytes
  8860 ;; Hardware stack levels used:    1
  8861 ;; Hardware stack levels required when called:    7
  8862 ;; This function calls:
  8863 ;;		_arm_UAlim_1A
  8864 ;;		_check_comutest
  8865 ;;		_ecran_blank
  8866 ;;		_ecran_wait
  8867 ;;		_itoa
  8868 ;; This function is called by:
  8869 ;;		_main
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           
  8873                           	psect	text36
  8874  001A54                     __ptext36:
  8875                           	opt stack 0
  8876  001A54                     _armement_process:
  8877                           	opt stack 23
  8878                           
  8879                           ; BSR set to: 0
  8880                           ;incstack = 0
  8881  001A54  FFFF               	dw	65535
  8882                           
  8883                           ;armement.c: 26: unsigned short temp;
  8884                           ;armement.c: 28: switch(Arm.Step)
  8885  001A56  D0B8               	goto	l6884
  8886  001A58                     l1040:
  8887                           
  8888                           ; BSR set to: 0
  8889                           ;armement.c: 31: if (Bouton[Bp_On].State == 1)
  8890  001A58  0100               	movlb	0	; () banked
  8891  001A5A  A390               	btfss	(_Bouton+2)& (0+255),1,b
  8892  001A5C  D0C4               	goto	l1054
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;armement.c: 32: {
  8896                           ;armement.c: 33: Arm.Step = 0x00;
  8897  001A5E  0100               	movlb	0	; () banked
  8898  001A60  6FDE               	movwf	??_armement_process& (0+255),b
  8899  001A62  0E00               	movlw	0
  8900  001A64  D04D               	goto	L58
  8901  001A66                     l6844:
  8902                           
  8903                           ; BSR set to: 0
  8904                           ;armement.c: 37: check_comutest(1);
  8905  001A66  0E01               	movlw	1
  8906  001A68  ECA5  F019         	call	_check_comutest
  8907                           
  8908                           ;armement.c: 39: temp = arm_UAlim_1A();
  8909  001A6C  ECB5  F013         	call	_arm_UAlim_1A	;wreg free
  8910  001A70  0100               	movlb	0	; () banked
  8911  001A72  C0D6  F0E0         	movff	?_arm_UAlim_1A,armement_process@temp
  8912  001A76  0100               	movlb	0	; () banked
  8913  001A78  C0D7  F0E1         	movff	?_arm_UAlim_1A+1,armement_process@temp+1
  8914                           
  8915                           ; BSR set to: 0
  8916                           ;armement.c: 41: Ecran.Digits = PrintTest;
  8917  001A7C  0100               	movlb	0	; () banked
  8918  001A7E  0E00               	movlw	high _PrintTest
  8919  001A80  0100               	movlb	0	; () banked
  8920  001A82  0100               	movlb	0	; () banked
  8921  001A84  6FAF               	movwf	(_Ecran+5)& (0+255),b
  8922  001A86  0100               	movlb	0	; () banked
  8923  001A88  0EE5               	movlw	low _PrintTest
  8924  001A8A  0100               	movlb	0	; () banked
  8925  001A8C  0100               	movlb	0	; () banked
  8926  001A8E  6FAE               	movwf	(_Ecran+4)& (0+255),b
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;armement.c: 43: itoa(Ecran.Digits,temp,10);
  8930  001A90  0100               	movlb	0	; () banked
  8931  001A92  0100               	movlb	0	; () banked
  8932  001A94  C0AF  F0CC         	movff	_Ecran+5,itoa@buf+1
  8933  001A98  0100               	movlb	0	; () banked
  8934  001A9A  0100               	movlb	0	; () banked
  8935  001A9C  C0AE  F0CB         	movff	_Ecran+4,itoa@buf
  8936  001AA0  C0E0  F0CD         	movff	armement_process@temp,itoa@val
  8937  001AA4  C0E1  F0CE         	movff	armement_process@temp+1,itoa@val+1
  8938  001AA8  0E00               	movlw	0
  8939  001AAA  0100               	movlb	0	; () banked
  8940  001AAC  0100               	movlb	0	; () banked
  8941  001AAE  6FD0               	movwf	(itoa@base+1)& (0+255),b
  8942  001AB0  0E0A               	movlw	10
  8943  001AB2  0100               	movlb	0	; () banked
  8944  001AB4  6FCF               	movwf	itoa@base& (0+255),b
  8945  001AB6  EC2C  F017         	call	_itoa	;wreg free
  8946                           
  8947                           ;armement.c: 45: Ecran.Dot[0] = 0;
  8948  001ABA  0100               	movlb	0	; () banked
  8949  001ABC  6FDE               	movwf	??_armement_process& (0+255),b
  8950  001ABE  0E00               	movlw	0
  8951  001AC0  0100               	movlb	0	; () banked
  8952  001AC2  0100               	movlb	0	; () banked
  8953  001AC4  6FB0               	movwf	(_Ecran+6)& (0+255),b
  8954  001AC6  0100               	movlb	0	; () banked
  8955  001AC8  51DE               	movf	??_armement_process& (0+255),w,b
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;armement.c: 46: Ecran.Dot[1] = 1;
  8959  001ACA  0100               	movlb	0	; () banked
  8960  001ACC  6FDE               	movwf	??_armement_process& (0+255),b
  8961  001ACE  0E01               	movlw	1
  8962  001AD0  0100               	movlb	0	; () banked
  8963  001AD2  0100               	movlb	0	; () banked
  8964  001AD4  6FB1               	movwf	(_Ecran+7)& (0+255),b
  8965  001AD6  0100               	movlb	0	; () banked
  8966  001AD8  51DE               	movf	??_armement_process& (0+255),w,b
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;armement.c: 47: Ecran.Dot[2] = 0;
  8970  001ADA  0100               	movlb	0	; () banked
  8971  001ADC  6FDE               	movwf	??_armement_process& (0+255),b
  8972  001ADE  0E00               	movlw	0
  8973  001AE0  0100               	movlb	0	; () banked
  8974  001AE2  0100               	movlb	0	; () banked
  8975  001AE4  6FB2               	movwf	(_Ecran+8)& (0+255),b
  8976  001AE6  0100               	movlb	0	; () banked
  8977  001AE8  51DE               	movf	??_armement_process& (0+255),w,b
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;armement.c: 48: Ecran.Dot[3] = 0;
  8981  001AEA  0100               	movlb	0	; () banked
  8982  001AEC  6FDE               	movwf	??_armement_process& (0+255),b
  8983  001AEE  0E00               	movlw	0
  8984  001AF0  0100               	movlb	0	; () banked
  8985  001AF2  0100               	movlb	0	; () banked
  8986  001AF4  6FB3               	movwf	(_Ecran+9)& (0+255),b
  8987  001AF6  0100               	movlb	0	; () banked
  8988  001AF8  51DE               	movf	??_armement_process& (0+255),w,b
  8989                           
  8990                           ; BSR set to: 0
  8991                           ;armement.c: 50: Arm.Step = 0x02;
  8992  001AFA  0100               	movlb	0	; () banked
  8993  001AFC  6FDE               	movwf	??_armement_process& (0+255),b
  8994  001AFE  0E02               	movlw	2
  8995  001B00                     L58:
  8996  001B00  0100               	movlb	0	; () banked
  8997  001B02  0100               	movlb	0	; () banked
  8998  001B04  6F9A               	movwf	_Arm& (0+255),b
  8999  001B06  D05D               	goto	L59
  9000  001B08                     l1044:
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;armement.c: 53: if (Bouton[Bp_On].State == 0)
  9004  001B08  0100               	movlb	0	; () banked
  9005  001B0A  B390               	btfsc	(_Bouton+2)& (0+255),1,b
  9006  001B0C  D06C               	goto	l1054
  9007                           
  9008                           ; BSR set to: 0
  9009                           ;armement.c: 54: {
  9010                           ;armement.c: 55: Arm.Time = Cptms;
  9011  001B0E  C04F  F09C         	movff	_Cptms,_Arm+2	;volatile
  9012  001B12  C050  F09D         	movff	_Cptms+1,_Arm+3	;volatile
  9013                           
  9014                           ; BSR set to: 0
  9015                           ;armement.c: 56: Arm.Step = 0x03;
  9016  001B16  0100               	movlb	0	; () banked
  9017  001B18  6FDE               	movwf	??_armement_process& (0+255),b
  9018  001B1A  0E03               	movlw	3
  9019  001B1C  0100               	movlb	0	; () banked
  9020  001B1E  0100               	movlb	0	; () banked
  9021  001B20  6F9A               	movwf	_Arm& (0+255),b
  9022  001B22  0100               	movlb	0	; () banked
  9023  001B24  51DE               	movf	??_armement_process& (0+255),w,b
  9024                           
  9025                           ; BSR set to: 0
  9026                           ;armement.c: 58: ecran_blank();
  9027  001B26  ECEA  F018         	call	_ecran_blank	;wreg free
  9028  001B2A  D05D               	goto	l1054
  9029  001B2C                     l1046:
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;armement.c: 62: if (Bouton[Bp_On].State == 1)
  9033  001B2C  0100               	movlb	0	; () banked
  9034  001B2E  A390               	btfss	(_Bouton+2)& (0+255),1,b
  9035  001B30  D009               	goto	l1047
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;armement.c: 63: {
  9039                           ;armement.c: 64: Micro.Phase = 0x00;
  9040  001B32  0100               	movlb	0	; () banked
  9041  001B34  6FDE               	movwf	??_armement_process& (0+255),b
  9042  001B36  0E00               	movlw	0
  9043  001B38  6E54               	movwf	_Micro+2,c
  9044  001B3A  0100               	movlb	0	; () banked
  9045  001B3C  51DE               	movf	??_armement_process& (0+255),w,b
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;armement.c: 66: ecran_wait();
  9049  001B3E  ECA3  F01B         	call	_ecran_wait	;wreg free
  9050                           
  9051                           ;armement.c: 67: }
  9052  001B42  D051               	goto	l1054
  9053  001B44                     l1047:
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;armement.c: 68: else if (Bouton[Bp_Start].State == 0)
  9057  001B44  0100               	movlb	0	; () banked
  9058  001B46  A399               	btfss	(_Bouton+11)& (0+255),1,b
  9059  001B48  D04E               	goto	l1054
  9060                           
  9061                           ; BSR set to: 0
  9062                           ;armement.c: 72: else if ((((unsigned short) (Cptms - Arm.Time) > 4000) ? 1 : 0))
  9063                           
  9064                           ; BSR set to: 0
  9065                           
  9066                           ; BSR set to: 0
  9067                           ;armement.c: 69: {
  9068                           ;armement.c: 71: }
  9069  001B4A  0100               	movlb	0	; () banked
  9070  001B4C  EE20  F09C         	lfsr	2,_Arm+2
  9071  001B50  CFDE F0DE          	movff	postinc2,??_armement_process
  9072  001B54  CFDD F0DF          	movff	postdec2,??_armement_process+1
  9073  001B58  0100               	movlb	0	; () banked
  9074  001B5A  1FDE               	comf	??_armement_process& (0+255),f,b
  9075  001B5C  1FDF               	comf	(??_armement_process+1)& (0+255),f,b
  9076  001B5E  4BDE               	infsnz	??_armement_process& (0+255),f,b
  9077  001B60  2BDF               	incf	(??_armement_process+1)& (0+255),f,b
  9078  001B62  504F               	movf	_Cptms,w,c	;volatile
  9079  001B64  0100               	movlb	0	; () banked
  9080  001B66  27DE               	addwf	??_armement_process& (0+255),f,b
  9081  001B68  5050               	movf	_Cptms+1,w,c	;volatile
  9082  001B6A  0100               	movlb	0	; () banked
  9083  001B6C  23DF               	addwfc	(??_armement_process+1)& (0+255),f,b
  9084  001B6E  0EA1               	movlw	161
  9085  001B70  0100               	movlb	0	; () banked
  9086  001B72  5DDE               	subwf	??_armement_process& (0+255),w,b
  9087  001B74  0E0F               	movlw	15
  9088  001B76  59DF               	subwfb	(??_armement_process+1)& (0+255),w,b
  9089  001B78  B0D8               	btfsc	status,0,c
  9090  001B7A  D035               	goto	l1054
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;armement.c: 76: else if ((((unsigned short) (Cptms - Arm.Time) > 3000) ? 1 : 0))
  9094                           
  9095                           ; BSR set to: 0
  9096                           
  9097                           ; BSR set to: 0
  9098                           ;armement.c: 73: {
  9099                           ;armement.c: 75: }
  9100  001B7C  0100               	movlb	0	; () banked
  9101  001B7E  EE20  F09C         	lfsr	2,_Arm+2
  9102  001B82  CFDE F0DE          	movff	postinc2,??_armement_process
  9103  001B86  CFDD F0DF          	movff	postdec2,??_armement_process+1
  9104  001B8A  0100               	movlb	0	; () banked
  9105  001B8C  1FDE               	comf	??_armement_process& (0+255),f,b
  9106  001B8E  1FDF               	comf	(??_armement_process+1)& (0+255),f,b
  9107  001B90  4BDE               	infsnz	??_armement_process& (0+255),f,b
  9108  001B92  2BDF               	incf	(??_armement_process+1)& (0+255),f,b
  9109  001B94  504F               	movf	_Cptms,w,c	;volatile
  9110  001B96  0100               	movlb	0	; () banked
  9111  001B98  27DE               	addwf	??_armement_process& (0+255),f,b
  9112  001B9A  5050               	movf	_Cptms+1,w,c	;volatile
  9113  001B9C  0100               	movlb	0	; () banked
  9114  001B9E  23DF               	addwfc	(??_armement_process+1)& (0+255),f,b
  9115  001BA0  0EB9               	movlw	185
  9116  001BA2  0100               	movlb	0	; () banked
  9117  001BA4  5DDE               	subwf	??_armement_process& (0+255),w,b
  9118  001BA6  0E0B               	movlw	11
  9119  001BA8  59DF               	subwfb	(??_armement_process+1)& (0+255),w,b
  9120  001BAA  A0D8               	btfss	status,0,c
  9121  001BAC  D01C               	goto	l1054
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;armement.c: 77: {
  9125                           ;armement.c: 78: Micro.Phase = 0x03;
  9126  001BAE  0100               	movlb	0	; () banked
  9127  001BB0  6FDE               	movwf	??_armement_process& (0+255),b
  9128  001BB2  0E03               	movlw	3
  9129  001BB4  6E54               	movwf	_Micro+2,c
  9130  001BB6  0100               	movlb	0	; () banked
  9131  001BB8  51DE               	movf	??_armement_process& (0+255),w,b
  9132                           
  9133                           ;armement.c: 79: Micro.State = 0x01;
  9134  001BBA  0100               	movlb	0	; () banked
  9135  001BBC  6FDE               	movwf	??_armement_process& (0+255),b
  9136  001BBE  0E01               	movlw	1
  9137  001BC0  6E56               	movwf	_Micro+4,c
  9138  001BC2                     L59:
  9139  001BC2  0100               	movlb	0	; () banked
  9140  001BC4  51DE               	movf	??_armement_process& (0+255),w,b
  9141  001BC6  D00F               	goto	l1054
  9142  001BC8                     l6884:
  9143  001BC8  0100               	movlb	0	; () banked
  9144  001BCA  0100               	movlb	0	; () banked
  9145  001BCC  519A               	movf	_Arm& (0+255),w,b
  9146                           
  9147                           ; Switch size 1, requested type "space"
  9148                           ; Number of cases is 4, Range of values is 0 to 3
  9149                           ; switch strategies available:
  9150                           ; Name         Instructions Cycles
  9151                           ; simple_byte           13     7 (average)
  9152                           ;	Chosen strategy is simple_byte
  9153  001BCE  0A00               	xorlw	0	; case 0
  9154  001BD0  B4D8               	btfsc	status,2,c
  9155  001BD2  D749               	goto	l6844
  9156  001BD4  0A01               	xorlw	1	; case 1
  9157  001BD6  B4D8               	btfsc	status,2,c
  9158  001BD8  D73F               	goto	l1040
  9159  001BDA  0A03               	xorlw	3	; case 2
  9160  001BDC  B4D8               	btfsc	status,2,c
  9161  001BDE  D794               	goto	l1044
  9162  001BE0  0A01               	xorlw	1	; case 3
  9163  001BE2  B4D8               	btfsc	status,2,c
  9164  001BE4  D7A3               	goto	l1046
  9165  001BE6                     l1054:
  9166  001BE6  0012               	return	
  9167  001BE8  FFFF               	dw	65535	; errata NOP
  9168  001BEA                     __end_of_armement_process:
  9169                           	opt stack 0
  9170                           tblptru	equ	0xFF8
  9171                           tblptrh	equ	0xFF7
  9172                           tblptrl	equ	0xFF6
  9173                           tablat	equ	0xFF5
  9174                           prodh	equ	0xFF4
  9175                           prodl	equ	0xFF3
  9176                           intcon	equ	0xFF2
  9177                           intcon2	equ	0xFF1
  9178                           postinc0	equ	0xFEE
  9179                           wreg	equ	0xFE8
  9180                           indf1	equ	0xFE7
  9181                           postdec1	equ	0xFE5
  9182                           fsr1h	equ	0xFE2
  9183                           fsr1l	equ	0xFE1
  9184                           indf2	equ	0xFDF
  9185                           postinc2	equ	0xFDE
  9186                           postdec2	equ	0xFDD
  9187                           fsr2h	equ	0xFDA
  9188                           fsr2l	equ	0xFD9
  9189                           status	equ	0xFD8
  9190                           
  9191 ;; *************** function _itoa *****************
  9192 ;; Defined at:
  9193 ;;		line 4 in file "E:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\itoa.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;  buf             2   17[BANK0 ] PTR unsigned char 
  9196 ;;		 -> Version(5), ErreurTir(5), Blank(5), Ecran.Digit(4), 
  9197 ;;		 -> Ecran(16), PrintTest(5), 
  9198 ;;  val             2   19[BANK0 ] int 
  9199 ;;  base            2   21[BANK0 ] int 
  9200 ;; Auto vars:     Size  Location     Type
  9201 ;;  cp              2   23[BANK0 ] PTR unsigned char 
  9202 ;;		 -> Version(5), ErreurTir(5), Blank(5), Ecran.Digit(4), 
  9203 ;;		 -> Ecran(16), PrintTest(5), 
  9204 ;; Return value:  Size  Location     Type
  9205 ;;                  2   17[BANK0 ] PTR unsigned char 
  9206 ;; Registers used:
  9207 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  9208 ;; Tracked objects:
  9209 ;;		On entry : 0/0
  9210 ;;		On exit  : 0/0
  9211 ;;		Unchanged: 0/0
  9212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9213 ;;      Params:         0       6       0       0       0       0       0
  9214 ;;      Locals:         0       2       0       0       0       0       0
  9215 ;;      Temps:          0       0       0       0       0       0       0
  9216 ;;      Totals:         0       8       0       0       0       0       0
  9217 ;;Total ram usage:        8 bytes
  9218 ;; Hardware stack levels used:    1
  9219 ;; Hardware stack levels required when called:    5
  9220 ;; This function calls:
  9221 ;;		_utoa
  9222 ;; This function is called by:
  9223 ;;		_test_process
  9224 ;;		_armement_process
  9225 ;; This function uses a non-reentrant model
  9226 ;;
  9227                           
  9228                           	psect	text37
  9229  002E58                     __ptext37:
  9230                           	opt stack 0
  9231  002E58                     _itoa:
  9232                           	opt stack 24
  9233                           
  9234                           ;incstack = 0
  9235  002E58  FFFF               	dw	65535
  9236  002E5A  0100               	movlb	0	; () banked
  9237  002E5C  0100               	movlb	0	; () banked
  9238  002E5E  C0CC  F0D2         	movff	itoa@buf+1,itoa@cp+1
  9239  002E62  0100               	movlb	0	; () banked
  9240  002E64  0100               	movlb	0	; () banked
  9241  002E66  C0CB  F0D1         	movff	itoa@buf,itoa@cp
  9242                           
  9243                           ; BSR set to: 0
  9244  002E6A  0100               	movlb	0	; () banked
  9245  002E6C  0100               	movlb	0	; () banked
  9246  002E6E  51CE               	movf	(itoa@val+1)& (0+255),w,b
  9247  002E70  0A80               	xorlw	128
  9248  002E72  6EF3               	movwf	prodl,c
  9249  002E74  0E80               	movlw	128
  9250  002E76  5CF3               	subwf	prodl,w,c
  9251  002E78  0E00               	movlw	0
  9252  002E7A  B4D8               	btfsc	status,2,c
  9253  002E7C  5DCD               	subwf	itoa@val& (0+255),w,b
  9254  002E7E  B0D8               	btfsc	status,0,c
  9255  002E80  D01F               	goto	l6318
  9256                           
  9257                           ; BSR set to: 0
  9258  002E82  0100               	movlb	0	; () banked
  9259  002E84  C0CB  FFF6         	movff	itoa@buf,tblptrl
  9260  002E88  0100               	movlb	0	; () banked
  9261  002E8A  C0CC  FFF7         	movff	itoa@buf+1,tblptrh
  9262  002E8E  6AF8               	clrf	tblptru,c
  9263  002E90  0E05               	movlw	(high __ramtop+-1)
  9264  002E92  64F7               	cpfsgt	tblptrh,c
  9265  002E94  D004               	bra	u5667
  9266  002E96  0E2D               	movlw	45
  9267  002E98  6EF5               	movwf	tablat,c
  9268  002E9A  000C               	tblwt		*
  9269  002E9C  D006               	bra	u5660
  9270  002E9E                     u5667:
  9271  002E9E  CFF6 FFE1          	movff	tblptrl,fsr1l
  9272  002EA2  CFF7 FFE2          	movff	tblptrh,fsr1h
  9273  002EA6  0E2D               	movlw	45
  9274  002EA8  6EE7               	movwf	indf1,c
  9275  002EAA                     u5660:
  9276  002EAA  0100               	movlb	0	; () banked
  9277  002EAC  0100               	movlb	0	; () banked
  9278  002EAE  4BCB               	infsnz	itoa@buf& (0+255),f,b
  9279  002EB0  2BCC               	incf	(itoa@buf+1)& (0+255),f,b
  9280                           
  9281                           ; BSR set to: 0
  9282  002EB2  0100               	movlb	0	; () banked
  9283  002EB4  0100               	movlb	0	; () banked
  9284  002EB6  6DCD               	negf	itoa@val& (0+255),b
  9285  002EB8  0100               	movlb	0	; () banked
  9286  002EBA  1FCE               	comf	(itoa@val+1)& (0+255),f,b
  9287  002EBC  B0D8               	btfsc	status,0,c
  9288  002EBE  2BCE               	incf	(itoa@val+1)& (0+255),f,b
  9289  002EC0                     l6318:
  9290                           
  9291                           ; BSR set to: 0
  9292  002EC0  0100               	movlb	0	; () banked
  9293  002EC2  0100               	movlb	0	; () banked
  9294  002EC4  C0CC  F0C3         	movff	itoa@buf+1,utoa@buf+1
  9295  002EC8  0100               	movlb	0	; () banked
  9296  002ECA  0100               	movlb	0	; () banked
  9297  002ECC  C0CB  F0C2         	movff	itoa@buf,utoa@buf
  9298  002ED0  C0CD  F0C4         	movff	itoa@val,utoa@val
  9299  002ED4  C0CE  F0C5         	movff	itoa@val+1,utoa@val+1
  9300  002ED8  C0CF  F0C6         	movff	itoa@base,utoa@base
  9301  002EDC  C0D0  F0C7         	movff	itoa@base+1,utoa@base+1
  9302  002EE0  ECA0  F012         	call	_utoa	;wreg free
  9303                           
  9304                           ;	Return value of _itoa is never used
  9305  002EE4  0012               	return	
  9306  002EE6  FFFF               	dw	65535	; errata NOP
  9307  002EE8                     __end_of_itoa:
  9308                           	opt stack 0
  9309                           tblptru	equ	0xFF8
  9310                           tblptrh	equ	0xFF7
  9311                           tblptrl	equ	0xFF6
  9312                           tablat	equ	0xFF5
  9313                           prodh	equ	0xFF4
  9314                           prodl	equ	0xFF3
  9315                           intcon	equ	0xFF2
  9316                           intcon2	equ	0xFF1
  9317                           postinc0	equ	0xFEE
  9318                           wreg	equ	0xFE8
  9319                           indf1	equ	0xFE7
  9320                           postdec1	equ	0xFE5
  9321                           fsr1h	equ	0xFE2
  9322                           fsr1l	equ	0xFE1
  9323                           indf2	equ	0xFDF
  9324                           postinc2	equ	0xFDE
  9325                           postdec2	equ	0xFDD
  9326                           fsr2h	equ	0xFDA
  9327                           fsr2l	equ	0xFD9
  9328                           status	equ	0xFD8
  9329                           
  9330 ;; *************** function _utoa *****************
  9331 ;; Defined at:
  9332 ;;		line 17 in file "E:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\itoa.c"
  9333 ;; Parameters:    Size  Location     Type
  9334 ;;  buf             2    8[BANK0 ] PTR unsigned char 
  9335 ;;		 -> Version(5), ErreurTir(5), Blank(5), Ecran.Digit(4), 
  9336 ;;		 -> Ecran(16), PrintTest(5), 
  9337 ;;  val             2   10[BANK0 ] unsigned int 
  9338 ;;  base            2   12[BANK0 ] int 
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;  v               2   14[BANK0 ] unsigned int 
  9341 ;;  c               1   16[BANK0 ] unsigned char 
  9342 ;; Return value:  Size  Location     Type
  9343 ;;                  2    8[BANK0 ] PTR unsigned char 
  9344 ;; Registers used:
  9345 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9346 ;; Tracked objects:
  9347 ;;		On entry : 0/0
  9348 ;;		On exit  : 0/0
  9349 ;;		Unchanged: 0/0
  9350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9351 ;;      Params:         0       6       0       0       0       0       0
  9352 ;;      Locals:         0       3       0       0       0       0       0
  9353 ;;      Temps:          0       0       0       0       0       0       0
  9354 ;;      Totals:         0       9       0       0       0       0       0
  9355 ;;Total ram usage:        9 bytes
  9356 ;; Hardware stack levels used:    1
  9357 ;; Hardware stack levels required when called:    4
  9358 ;; This function calls:
  9359 ;;		___lwdiv
  9360 ;;		___lwmod
  9361 ;; This function is called by:
  9362 ;;		_itoa
  9363 ;; This function uses a non-reentrant model
  9364 ;;
  9365                           
  9366                           	psect	text38
  9367  002540                     __ptext38:
  9368                           	opt stack 0
  9369  002540                     _utoa:
  9370                           	opt stack 24
  9371                           
  9372                           ;incstack = 0
  9373  002540  FFFF               	dw	65535
  9374  002542  C0C4  F0C8         	movff	utoa@val,utoa@v
  9375  002546  C0C5  F0C9         	movff	utoa@val+1,utoa@v+1
  9376  00254A                     l6132:
  9377  00254A  C0C8  F0BA         	movff	utoa@v,___lwdiv@dividend
  9378  00254E  C0C9  F0BB         	movff	utoa@v+1,___lwdiv@dividend+1
  9379  002552  C0C6  F0BC         	movff	utoa@base,___lwdiv@divisor
  9380  002556  C0C7  F0BD         	movff	utoa@base+1,___lwdiv@divisor+1
  9381  00255A  ECD5  F016         	call	___lwdiv	;wreg free
  9382  00255E  0100               	movlb	0	; () banked
  9383  002560  C0BA  F0C8         	movff	?___lwdiv,utoa@v
  9384  002564  0100               	movlb	0	; () banked
  9385  002566  C0BB  F0C9         	movff	?___lwdiv+1,utoa@v+1
  9386                           
  9387                           ; BSR set to: 0
  9388  00256A  0100               	movlb	0	; () banked
  9389  00256C  0100               	movlb	0	; () banked
  9390  00256E  4BC2               	infsnz	utoa@buf& (0+255),f,b
  9391  002570  2BC3               	incf	(utoa@buf+1)& (0+255),f,b
  9392                           
  9393                           ; BSR set to: 0
  9394  002572  0100               	movlb	0	; () banked
  9395  002574  0100               	movlb	0	; () banked
  9396  002576  51C9               	movf	(utoa@v+1)& (0+255),w,b
  9397  002578  11C8               	iorwf	utoa@v& (0+255),w,b
  9398  00257A  A4D8               	btfss	status,2,c
  9399  00257C  D7E6               	goto	l6132
  9400                           
  9401                           ; BSR set to: 0
  9402                           
  9403                           ; BSR set to: 0
  9404  00257E  0100               	movlb	0	; () banked
  9405  002580  C0C2  FFF6         	movff	utoa@buf,tblptrl
  9406  002584  0100               	movlb	0	; () banked
  9407  002586  C0C3  FFF7         	movff	utoa@buf+1,tblptrh
  9408  00258A  6AF8               	clrf	tblptru,c
  9409  00258C  0E05               	movlw	(high __ramtop+-1)
  9410  00258E  64F7               	cpfsgt	tblptrh,c
  9411  002590  D004               	bra	u5477
  9412  002592  0E00               	movlw	0
  9413  002594  6EF5               	movwf	tablat,c
  9414  002596  000C               	tblwt		*
  9415  002598  D006               	bra	u5470
  9416  00259A                     u5477:
  9417  00259A  CFF6 FFE1          	movff	tblptrl,fsr1l
  9418  00259E  CFF7 FFE2          	movff	tblptrh,fsr1h
  9419  0025A2  0E00               	movlw	0
  9420  0025A4  6EE7               	movwf	indf1,c
  9421  0025A6                     u5470:
  9422  0025A6  0100               	movlb	0	; () banked
  9423  0025A8  0100               	movlb	0	; () banked
  9424  0025AA  07C2               	decf	utoa@buf& (0+255),f,b
  9425  0025AC  A0D8               	btfss	status,0,c
  9426  0025AE  07C3               	decf	(utoa@buf+1)& (0+255),f,b
  9427  0025B0                     l6142:
  9428                           
  9429                           ; BSR set to: 0
  9430  0025B0  C0C4  F0BA         	movff	utoa@val,___lwmod@dividend
  9431  0025B4  C0C5  F0BB         	movff	utoa@val+1,___lwmod@dividend+1
  9432  0025B8  C0C6  F0BC         	movff	utoa@base,___lwmod@divisor
  9433  0025BC  C0C7  F0BD         	movff	utoa@base+1,___lwmod@divisor+1
  9434  0025C0  ECBB  F017         	call	___lwmod	;wreg free
  9435  0025C4  0100               	movlb	0	; () banked
  9436  0025C6  0100               	movlb	0	; () banked
  9437  0025C8  51BA               	movf	?___lwmod& (0+255),w,b
  9438  0025CA  0100               	movlb	0	; () banked
  9439  0025CC  0100               	movlb	0	; () banked
  9440  0025CE  6FCA               	movwf	utoa@c& (0+255),b
  9441                           
  9442                           ; BSR set to: 0
  9443  0025D0  C0C4  F0BA         	movff	utoa@val,___lwdiv@dividend
  9444  0025D4  C0C5  F0BB         	movff	utoa@val+1,___lwdiv@dividend+1
  9445  0025D8  C0C6  F0BC         	movff	utoa@base,___lwdiv@divisor
  9446  0025DC  C0C7  F0BD         	movff	utoa@base+1,___lwdiv@divisor+1
  9447  0025E0  ECD5  F016         	call	___lwdiv	;wreg free
  9448  0025E4  0100               	movlb	0	; () banked
  9449  0025E6  C0BA  F0C4         	movff	?___lwdiv,utoa@val
  9450  0025EA  0100               	movlb	0	; () banked
  9451  0025EC  C0BB  F0C5         	movff	?___lwdiv+1,utoa@val+1
  9452                           
  9453                           ; BSR set to: 0
  9454  0025F0  0E09               	movlw	9
  9455  0025F2  0100               	movlb	0	; () banked
  9456  0025F4  0100               	movlb	0	; () banked
  9457  0025F6  65CA               	cpfsgt	utoa@c& (0+255),b
  9458  0025F8  D004               	goto	l1606
  9459                           
  9460                           ; BSR set to: 0
  9461  0025FA  0E07               	movlw	7
  9462  0025FC  0100               	movlb	0	; () banked
  9463  0025FE  0100               	movlb	0	; () banked
  9464  002600  27CA               	addwf	utoa@c& (0+255),f,b
  9465  002602                     l1606:
  9466                           
  9467                           ; BSR set to: 0
  9468  002602  0E30               	movlw	48
  9469  002604  0100               	movlb	0	; () banked
  9470  002606  0100               	movlb	0	; () banked
  9471  002608  27CA               	addwf	utoa@c& (0+255),f,b
  9472                           
  9473                           ; BSR set to: 0
  9474  00260A  0100               	movlb	0	; () banked
  9475  00260C  C0C2  FFF6         	movff	utoa@buf,tblptrl
  9476  002610  0100               	movlb	0	; () banked
  9477  002612  C0C3  FFF7         	movff	utoa@buf+1,tblptrh
  9478  002616  6AF8               	clrf	tblptru,c
  9479  002618  0E05               	movlw	(high __ramtop+-1)
  9480  00261A  64F7               	cpfsgt	tblptrh,c
  9481  00261C  D005               	bra	u5497
  9482  00261E  0100               	movlb	0	; () banked
  9483  002620  C0CA  FFF5         	movff	utoa@c,tablat
  9484  002624  000C               	tblwt		*
  9485  002626  D007               	bra	u5490
  9486  002628                     u5497:
  9487  002628  CFF6 FFE1          	movff	tblptrl,fsr1l
  9488  00262C  CFF7 FFE2          	movff	tblptrh,fsr1h
  9489  002630  0100               	movlb	0	; () banked
  9490  002632  C0CA  FFE7         	movff	utoa@c,indf1
  9491  002636                     u5490:
  9492  002636  0100               	movlb	0	; () banked
  9493  002638  0100               	movlb	0	; () banked
  9494  00263A  07C2               	decf	utoa@buf& (0+255),f,b
  9495  00263C  A0D8               	btfss	status,0,c
  9496  00263E  07C3               	decf	(utoa@buf+1)& (0+255),f,b
  9497                           
  9498                           ; BSR set to: 0
  9499  002640  0100               	movlb	0	; () banked
  9500  002642  0100               	movlb	0	; () banked
  9501  002644  51C5               	movf	(utoa@val+1)& (0+255),w,b
  9502  002646  11C4               	iorwf	utoa@val& (0+255),w,b
  9503  002648  A4D8               	btfss	status,2,c
  9504  00264A  D7B2               	goto	l6142
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;	Return value of _utoa is never used
  9508                           
  9509                           ; BSR set to: 0
  9510  00264C  0100               	movlb	0	; () banked
  9511  00264E  0100               	movlb	0	; () banked
  9512  002650  4BC2               	infsnz	utoa@buf& (0+255),f,b
  9513  002652  2BC3               	incf	(utoa@buf+1)& (0+255),f,b
  9514                           
  9515                           ; BSR set to: 0
  9516                           
  9517                           ; BSR set to: 0
  9518  002654  0012               	return	
  9519  002656  FFFF               	dw	65535	; errata NOP
  9520  002658                     __end_of_utoa:
  9521                           	opt stack 0
  9522                           tblptru	equ	0xFF8
  9523                           tblptrh	equ	0xFF7
  9524                           tblptrl	equ	0xFF6
  9525                           tablat	equ	0xFF5
  9526                           prodh	equ	0xFF4
  9527                           prodl	equ	0xFF3
  9528                           intcon	equ	0xFF2
  9529                           intcon2	equ	0xFF1
  9530                           postinc0	equ	0xFEE
  9531                           wreg	equ	0xFE8
  9532                           indf1	equ	0xFE7
  9533                           postdec1	equ	0xFE5
  9534                           fsr1h	equ	0xFE2
  9535                           fsr1l	equ	0xFE1
  9536                           indf2	equ	0xFDF
  9537                           postinc2	equ	0xFDE
  9538                           postdec2	equ	0xFDD
  9539                           fsr2h	equ	0xFDA
  9540                           fsr2l	equ	0xFD9
  9541                           status	equ	0xFD8
  9542                           
  9543 ;; *************** function ___lwmod *****************
  9544 ;; Defined at:
  9545 ;;		line 8 in file "E:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwmod.c"
  9546 ;; Parameters:    Size  Location     Type
  9547 ;;  dividend        2    0[BANK0 ] unsigned int 
  9548 ;;  divisor         2    2[BANK0 ] unsigned int 
  9549 ;; Auto vars:     Size  Location     Type
  9550 ;;  counter         1    5[BANK0 ] unsigned char 
  9551 ;; Return value:  Size  Location     Type
  9552 ;;                  2    0[BANK0 ] unsigned int 
  9553 ;; Registers used:
  9554 ;;		wreg, status,2, status,0
  9555 ;; Tracked objects:
  9556 ;;		On entry : 0/0
  9557 ;;		On exit  : 0/0
  9558 ;;		Unchanged: 0/0
  9559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9560 ;;      Params:         0       4       0       0       0       0       0
  9561 ;;      Locals:         0       1       0       0       0       0       0
  9562 ;;      Temps:          0       1       0       0       0       0       0
  9563 ;;      Totals:         0       6       0       0       0       0       0
  9564 ;;Total ram usage:        6 bytes
  9565 ;; Hardware stack levels used:    1
  9566 ;; Hardware stack levels required when called:    3
  9567 ;; This function calls:
  9568 ;;		Nothing
  9569 ;; This function is called by:
  9570 ;;		_utoa
  9571 ;; This function uses a non-reentrant model
  9572 ;;
  9573                           
  9574                           	psect	text39
  9575  002F76                     __ptext39:
  9576                           	opt stack 0
  9577  002F76                     ___lwmod:
  9578                           	opt stack 24
  9579                           
  9580                           ; BSR set to: 0
  9581                           ;incstack = 0
  9582  002F76  FFFF               	dw	65535
  9583  002F78  0100               	movlb	0	; () banked
  9584  002F7A  0100               	movlb	0	; () banked
  9585  002F7C  51BD               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9586  002F7E  11BC               	iorwf	___lwmod@divisor& (0+255),w,b
  9587  002F80  B4D8               	btfsc	status,2,c
  9588  002F82  D03A               	goto	l1716
  9589                           
  9590                           ; BSR set to: 0
  9591  002F84  0100               	movlb	0	; () banked
  9592  002F86  6FBE               	movwf	??___lwmod& (0+255),b
  9593  002F88  0E01               	movlw	1
  9594  002F8A  0100               	movlb	0	; () banked
  9595  002F8C  0100               	movlb	0	; () banked
  9596  002F8E  6FBF               	movwf	___lwmod@counter& (0+255),b
  9597  002F90  0100               	movlb	0	; () banked
  9598  002F92  51BE               	movf	??___lwmod& (0+255),w,b
  9599  002F94  D009               	goto	l5900
  9600  002F96                     l5898:
  9601                           
  9602                           ; BSR set to: 0
  9603  002F96  0100               	movlb	0	; () banked
  9604  002F98  0100               	movlb	0	; () banked
  9605  002F9A  0100               	movlb	0	; () banked
  9606  002F9C  90D8               	bcf	status,0,c
  9607  002F9E  37BC               	rlcf	___lwmod@divisor& (0+255),f,b
  9608  002FA0  37BD               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  9609  002FA2  0100               	movlb	0	; () banked
  9610  002FA4  0100               	movlb	0	; () banked
  9611  002FA6  2BBF               	incf	___lwmod@counter& (0+255),f,b
  9612  002FA8                     l5900:
  9613                           
  9614                           ; BSR set to: 0
  9615  002FA8  0100               	movlb	0	; () banked
  9616  002FAA  0100               	movlb	0	; () banked
  9617  002FAC  AFBD               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  9618  002FAE  D7F3               	goto	l5898
  9619  002FB0                     l5902:
  9620                           
  9621                           ; BSR set to: 0
  9622  002FB0  0100               	movlb	0	; () banked
  9623  002FB2  0100               	movlb	0	; () banked
  9624  002FB4  51BC               	movf	___lwmod@divisor& (0+255),w,b
  9625  002FB6  0100               	movlb	0	; () banked
  9626  002FB8  0100               	movlb	0	; () banked
  9627  002FBA  5DBA               	subwf	___lwmod@dividend& (0+255),w,b
  9628  002FBC  0100               	movlb	0	; () banked
  9629  002FBE  0100               	movlb	0	; () banked
  9630  002FC0  51BD               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9631  002FC2  0100               	movlb	0	; () banked
  9632  002FC4  0100               	movlb	0	; () banked
  9633  002FC6  59BB               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  9634  002FC8  A0D8               	btfss	status,0,c
  9635  002FCA  D00C               	goto	l5906
  9636                           
  9637                           ; BSR set to: 0
  9638  002FCC  0100               	movlb	0	; () banked
  9639  002FCE  0100               	movlb	0	; () banked
  9640  002FD0  51BC               	movf	___lwmod@divisor& (0+255),w,b
  9641  002FD2  0100               	movlb	0	; () banked
  9642  002FD4  0100               	movlb	0	; () banked
  9643  002FD6  5FBA               	subwf	___lwmod@dividend& (0+255),f,b
  9644  002FD8  0100               	movlb	0	; () banked
  9645  002FDA  0100               	movlb	0	; () banked
  9646  002FDC  51BD               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9647  002FDE  0100               	movlb	0	; () banked
  9648  002FE0  0100               	movlb	0	; () banked
  9649  002FE2  5BBB               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  9650  002FE4                     l5906:
  9651                           
  9652                           ; BSR set to: 0
  9653  002FE4  0100               	movlb	0	; () banked
  9654  002FE6  0100               	movlb	0	; () banked
  9655  002FE8  0100               	movlb	0	; () banked
  9656  002FEA  90D8               	bcf	status,0,c
  9657  002FEC  33BD               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  9658  002FEE  33BC               	rrcf	___lwmod@divisor& (0+255),f,b
  9659                           
  9660                           ; BSR set to: 0
  9661  002FF0  0100               	movlb	0	; () banked
  9662  002FF2  0100               	movlb	0	; () banked
  9663  002FF4  2FBF               	decfsz	___lwmod@counter& (0+255),f,b
  9664  002FF6  D7DC               	goto	l5902
  9665  002FF8                     l1716:
  9666                           
  9667                           ; BSR set to: 0
  9668  002FF8  C0BA  F0BA         	movff	___lwmod@dividend,?___lwmod
  9669  002FFC  C0BB  F0BB         	movff	___lwmod@dividend+1,?___lwmod+1
  9670                           
  9671                           ; BSR set to: 0
  9672  003000  0012               	return	
  9673  003002  FFFF               	dw	65535	; errata NOP
  9674  003004                     __end_of___lwmod:
  9675                           	opt stack 0
  9676                           tblptru	equ	0xFF8
  9677                           tblptrh	equ	0xFF7
  9678                           tblptrl	equ	0xFF6
  9679                           tablat	equ	0xFF5
  9680                           prodh	equ	0xFF4
  9681                           prodl	equ	0xFF3
  9682                           intcon	equ	0xFF2
  9683                           intcon2	equ	0xFF1
  9684                           postinc0	equ	0xFEE
  9685                           wreg	equ	0xFE8
  9686                           indf1	equ	0xFE7
  9687                           postdec1	equ	0xFE5
  9688                           fsr1h	equ	0xFE2
  9689                           fsr1l	equ	0xFE1
  9690                           indf2	equ	0xFDF
  9691                           postinc2	equ	0xFDE
  9692                           postdec2	equ	0xFDD
  9693                           fsr2h	equ	0xFDA
  9694                           fsr2l	equ	0xFD9
  9695                           status	equ	0xFD8
  9696                           
  9697 ;; *************** function ___lwdiv *****************
  9698 ;; Defined at:
  9699 ;;		line 8 in file "E:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwdiv.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;  dividend        2    0[BANK0 ] unsigned int 
  9702 ;;  divisor         2    2[BANK0 ] unsigned int 
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;  quotient        2    6[BANK0 ] unsigned int 
  9705 ;;  counter         1    5[BANK0 ] unsigned char 
  9706 ;; Return value:  Size  Location     Type
  9707 ;;                  2    0[BANK0 ] unsigned int 
  9708 ;; Registers used:
  9709 ;;		wreg, status,2, status,0
  9710 ;; Tracked objects:
  9711 ;;		On entry : 0/0
  9712 ;;		On exit  : 0/0
  9713 ;;		Unchanged: 0/0
  9714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9715 ;;      Params:         0       4       0       0       0       0       0
  9716 ;;      Locals:         0       3       0       0       0       0       0
  9717 ;;      Temps:          0       1       0       0       0       0       0
  9718 ;;      Totals:         0       8       0       0       0       0       0
  9719 ;;Total ram usage:        8 bytes
  9720 ;; Hardware stack levels used:    1
  9721 ;; Hardware stack levels required when called:    3
  9722 ;; This function calls:
  9723 ;;		Nothing
  9724 ;; This function is called by:
  9725 ;;		_utoa
  9726 ;; This function uses a non-reentrant model
  9727 ;;
  9728                           
  9729                           	psect	text40
  9730  002DAA                     __ptext40:
  9731                           	opt stack 0
  9732  002DAA                     ___lwdiv:
  9733                           	opt stack 24
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;incstack = 0
  9737  002DAA  FFFF               	dw	65535
  9738  002DAC  0E00               	movlw	0
  9739  002DAE  0100               	movlb	0	; () banked
  9740  002DB0  0100               	movlb	0	; () banked
  9741  002DB2  6FC1               	movwf	(___lwdiv@quotient+1)& (0+255),b
  9742  002DB4  0E00               	movlw	0
  9743  002DB6  0100               	movlb	0	; () banked
  9744  002DB8  6FC0               	movwf	___lwdiv@quotient& (0+255),b
  9745                           
  9746                           ; BSR set to: 0
  9747  002DBA  0100               	movlb	0	; () banked
  9748  002DBC  0100               	movlb	0	; () banked
  9749  002DBE  51BD               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9750  002DC0  11BC               	iorwf	___lwdiv@divisor& (0+255),w,b
  9751  002DC2  B4D8               	btfsc	status,2,c
  9752  002DC4  D043               	goto	l1706
  9753                           
  9754                           ; BSR set to: 0
  9755  002DC6  0100               	movlb	0	; () banked
  9756  002DC8  6FBE               	movwf	??___lwdiv& (0+255),b
  9757  002DCA  0E01               	movlw	1
  9758  002DCC  0100               	movlb	0	; () banked
  9759  002DCE  0100               	movlb	0	; () banked
  9760  002DD0  6FBF               	movwf	___lwdiv@counter& (0+255),b
  9761  002DD2  0100               	movlb	0	; () banked
  9762  002DD4  51BE               	movf	??___lwdiv& (0+255),w,b
  9763  002DD6  D009               	goto	l5880
  9764  002DD8                     l5878:
  9765                           
  9766                           ; BSR set to: 0
  9767  002DD8  0100               	movlb	0	; () banked
  9768  002DDA  0100               	movlb	0	; () banked
  9769  002DDC  0100               	movlb	0	; () banked
  9770  002DDE  90D8               	bcf	status,0,c
  9771  002DE0  37BC               	rlcf	___lwdiv@divisor& (0+255),f,b
  9772  002DE2  37BD               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  9773  002DE4  0100               	movlb	0	; () banked
  9774  002DE6  0100               	movlb	0	; () banked
  9775  002DE8  2BBF               	incf	___lwdiv@counter& (0+255),f,b
  9776  002DEA                     l5880:
  9777                           
  9778                           ; BSR set to: 0
  9779  002DEA  0100               	movlb	0	; () banked
  9780  002DEC  0100               	movlb	0	; () banked
  9781  002DEE  AFBD               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  9782  002DF0  D7F3               	goto	l5878
  9783  002DF2                     l5882:
  9784                           
  9785                           ; BSR set to: 0
  9786  002DF2  0100               	movlb	0	; () banked
  9787  002DF4  0100               	movlb	0	; () banked
  9788  002DF6  0100               	movlb	0	; () banked
  9789  002DF8  90D8               	bcf	status,0,c
  9790  002DFA  37C0               	rlcf	___lwdiv@quotient& (0+255),f,b
  9791  002DFC  37C1               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  9792                           
  9793                           ; BSR set to: 0
  9794  002DFE  0100               	movlb	0	; () banked
  9795  002E00  0100               	movlb	0	; () banked
  9796  002E02  51BC               	movf	___lwdiv@divisor& (0+255),w,b
  9797  002E04  0100               	movlb	0	; () banked
  9798  002E06  0100               	movlb	0	; () banked
  9799  002E08  5DBA               	subwf	___lwdiv@dividend& (0+255),w,b
  9800  002E0A  0100               	movlb	0	; () banked
  9801  002E0C  0100               	movlb	0	; () banked
  9802  002E0E  51BD               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9803  002E10  0100               	movlb	0	; () banked
  9804  002E12  0100               	movlb	0	; () banked
  9805  002E14  59BB               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  9806  002E16  A0D8               	btfss	status,0,c
  9807  002E18  D00F               	goto	l5890
  9808                           
  9809                           ; BSR set to: 0
  9810  002E1A  0100               	movlb	0	; () banked
  9811  002E1C  0100               	movlb	0	; () banked
  9812  002E1E  51BC               	movf	___lwdiv@divisor& (0+255),w,b
  9813  002E20  0100               	movlb	0	; () banked
  9814  002E22  0100               	movlb	0	; () banked
  9815  002E24  5FBA               	subwf	___lwdiv@dividend& (0+255),f,b
  9816  002E26  0100               	movlb	0	; () banked
  9817  002E28  0100               	movlb	0	; () banked
  9818  002E2A  51BD               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9819  002E2C  0100               	movlb	0	; () banked
  9820  002E2E  0100               	movlb	0	; () banked
  9821  002E30  5BBB               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  9822                           
  9823                           ; BSR set to: 0
  9824  002E32  0100               	movlb	0	; () banked
  9825  002E34  0100               	movlb	0	; () banked
  9826  002E36  81C0               	bsf	___lwdiv@quotient& (0+255),0,b
  9827  002E38                     l5890:
  9828                           
  9829                           ; BSR set to: 0
  9830  002E38  0100               	movlb	0	; () banked
  9831  002E3A  0100               	movlb	0	; () banked
  9832  002E3C  0100               	movlb	0	; () banked
  9833  002E3E  90D8               	bcf	status,0,c
  9834  002E40  33BD               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  9835  002E42  33BC               	rrcf	___lwdiv@divisor& (0+255),f,b
  9836                           
  9837                           ; BSR set to: 0
  9838  002E44  0100               	movlb	0	; () banked
  9839  002E46  0100               	movlb	0	; () banked
  9840  002E48  2FBF               	decfsz	___lwdiv@counter& (0+255),f,b
  9841  002E4A  D7D3               	goto	l5882
  9842  002E4C                     l1706:
  9843                           
  9844                           ; BSR set to: 0
  9845  002E4C  C0C0  F0BA         	movff	___lwdiv@quotient,?___lwdiv
  9846  002E50  C0C1  F0BB         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9847                           
  9848                           ; BSR set to: 0
  9849  002E54  0012               	return	
  9850  002E56  FFFF               	dw	65535	; errata NOP
  9851  002E58                     __end_of___lwdiv:
  9852                           	opt stack 0
  9853                           tblptru	equ	0xFF8
  9854                           tblptrh	equ	0xFF7
  9855                           tblptrl	equ	0xFF6
  9856                           tablat	equ	0xFF5
  9857                           prodh	equ	0xFF4
  9858                           prodl	equ	0xFF3
  9859                           intcon	equ	0xFF2
  9860                           intcon2	equ	0xFF1
  9861                           postinc0	equ	0xFEE
  9862                           wreg	equ	0xFE8
  9863                           indf1	equ	0xFE7
  9864                           postdec1	equ	0xFE5
  9865                           fsr1h	equ	0xFE2
  9866                           fsr1l	equ	0xFE1
  9867                           indf2	equ	0xFDF
  9868                           postinc2	equ	0xFDE
  9869                           postdec2	equ	0xFDD
  9870                           fsr2h	equ	0xFDA
  9871                           fsr2l	equ	0xFD9
  9872                           status	equ	0xFD8
  9873                           
  9874 ;; *************** function _ecran_wait *****************
  9875 ;; Defined at:
  9876 ;;		line 91 in file "ecran.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;		None
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;		None
  9881 ;; Return value:  Size  Location     Type
  9882 ;;		None               void
  9883 ;; Registers used:
  9884 ;;		wreg, status,2, status,0, cstack
  9885 ;; Tracked objects:
  9886 ;;		On entry : 0/0
  9887 ;;		On exit  : 0/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9890 ;;      Params:         0       0       0       0       0       0       0
  9891 ;;      Locals:         0       0       0       0       0       0       0
  9892 ;;      Temps:          0       1       0       0       0       0       0
  9893 ;;      Totals:         0       1       0       0       0       0       0
  9894 ;;Total ram usage:        1 bytes
  9895 ;; Hardware stack levels used:    1
  9896 ;; Hardware stack levels required when called:    4
  9897 ;; This function calls:
  9898 ;;		_ecran_dot
  9899 ;;		_ecran_raz_digit
  9900 ;; This function is called by:
  9901 ;;		_check_program_0
  9902 ;;		_test_process
  9903 ;;		_micro_wait
  9904 ;;		_armement_process
  9905 ;; This function uses a non-reentrant model
  9906 ;;
  9907                           
  9908                           	psect	text41
  9909  003746                     __ptext41:
  9910                           	opt stack 0
  9911  003746                     _ecran_wait:
  9912                           	opt stack 25
  9913                           
  9914                           ; BSR set to: 0
  9915                           ;incstack = 0
  9916  003746  FFFF               	dw	65535
  9917                           
  9918                           ;ecran.c: 94: ecran_raz_digit();
  9919  003748  EC04  F01C         	call	_ecran_raz_digit	;wreg free
  9920                           
  9921                           ;ecran.c: 96: ecran_dot(1);
  9922  00374C  0E01               	movlw	1
  9923  00374E  ECFA  F01B         	call	_ecran_dot
  9924                           
  9925                           ;ecran.c: 98: PORTCbits.RC2 = 1;
  9926  003752  8482               	bsf	3970,2,c	;volatile
  9927                           
  9928                           ;ecran.c: 100: Ecran.Solid = 1;
  9929  003754  0100               	movlb	0	; () banked
  9930  003756  6FBB               	movwf	??_ecran_wait& (0+255),b
  9931  003758  0E01               	movlw	1
  9932  00375A  0100               	movlb	0	; () banked
  9933  00375C  0100               	movlb	0	; () banked
  9934  00375E  6FB9               	movwf	(_Ecran+15)& (0+255),b
  9935  003760  0100               	movlb	0	; () banked
  9936  003762  51BB               	movf	??_ecran_wait& (0+255),w,b
  9937                           
  9938                           ; BSR set to: 0
  9939  003764  0012               	return	
  9940  003766  FFFF               	dw	65535	; errata NOP
  9941  003768                     __end_of_ecran_wait:
  9942                           	opt stack 0
  9943                           tblptru	equ	0xFF8
  9944                           tblptrh	equ	0xFF7
  9945                           tblptrl	equ	0xFF6
  9946                           tablat	equ	0xFF5
  9947                           prodh	equ	0xFF4
  9948                           prodl	equ	0xFF3
  9949                           intcon	equ	0xFF2
  9950                           intcon2	equ	0xFF1
  9951                           postinc0	equ	0xFEE
  9952                           wreg	equ	0xFE8
  9953                           indf1	equ	0xFE7
  9954                           postdec1	equ	0xFE5
  9955                           fsr1h	equ	0xFE2
  9956                           fsr1l	equ	0xFE1
  9957                           indf2	equ	0xFDF
  9958                           postinc2	equ	0xFDE
  9959                           postdec2	equ	0xFDD
  9960                           fsr2h	equ	0xFDA
  9961                           fsr2l	equ	0xFD9
  9962                           status	equ	0xFD8
  9963                           
  9964 ;; *************** function _check_comutest *****************
  9965 ;; Defined at:
  9966 ;;		line 3 in file "test.c"
  9967 ;; Parameters:    Size  Location     Type
  9968 ;;  State           1    wreg     unsigned char 
  9969 ;; Auto vars:     Size  Location     Type
  9970 ;;  State           1    6[BANK0 ] unsigned char 
  9971 ;; Return value:  Size  Location     Type
  9972 ;;		None               void
  9973 ;; Registers used:
  9974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9975 ;; Tracked objects:
  9976 ;;		On entry : 0/0
  9977 ;;		On exit  : 0/0
  9978 ;;		Unchanged: 0/0
  9979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9980 ;;      Params:         0       0       0       0       0       0       0
  9981 ;;      Locals:         0       1       0       0       0       0       0
  9982 ;;      Temps:          0       1       0       0       0       0       0
  9983 ;;      Totals:         0       2       0       0       0       0       0
  9984 ;;Total ram usage:        2 bytes
  9985 ;; Hardware stack levels used:    1
  9986 ;; Hardware stack levels required when called:    6
  9987 ;; This function calls:
  9988 ;;		_ecran_blank
  9989 ;;		_ecran_refresh
  9990 ;; This function is called by:
  9991 ;;		_main
  9992 ;;		_test_process
  9993 ;;		_micro_wait
  9994 ;;		_armement_process
  9995 ;; This function uses a non-reentrant model
  9996 ;;
  9997                           
  9998                           	psect	text42
  9999  00334A                     __ptext42:
 10000                           	opt stack 0
 10001  00334A                     _check_comutest:
 10002                           	opt stack 23
 10003                           
 10004                           ; BSR set to: 0
 10005                           ;incstack = 0
 10006  00334A  FFFF               	dw	65535
 10007                           
 10008                           ;check_comutest@State stored from wreg
 10009  00334C  CFE8 F0C0          	movff	wreg,check_comutest@State
 10010                           
 10011                           ;test.c: 5: ecran_blank();
 10012  003350  ECEA  F018         	call	_ecran_blank	;wreg free
 10013                           
 10014                           ;test.c: 6: while(PORTCbits.RC5 == State)
 10015  003354  D017               	goto	l6178
 10016  003356                     l6166:
 10017                           
 10018                           ;test.c: 7: {
 10019                           ;test.c: 8: Ecran.Digits = (char *) ErreurTir;
 10020  003356  0E06               	movlw	high _ErreurTir
 10021  003358  0100               	movlb	0	; () banked
 10022  00335A  0100               	movlb	0	; () banked
 10023  00335C  6FAF               	movwf	(_Ecran+5)& (0+255),b
 10024  00335E  0E0B               	movlw	low _ErreurTir
 10025  003360  0100               	movlb	0	; () banked
 10026  003362  0100               	movlb	0	; () banked
 10027  003364  6FAE               	movwf	(_Ecran+4)& (0+255),b
 10028                           
 10029                           ; BSR set to: 0
 10030                           ;test.c: 9: ecran_refresh();
 10031  003366  EC7C  F016         	call	_ecran_refresh	;wreg free
 10032                           
 10033                           ;test.c: 11: if ((PORTCbits.RC5 == 0) && (Micro.Phase == 0x01))
 10034  00336A  BA82               	btfsc	3970,5,c	;volatile
 10035  00336C  D00B               	goto	l6178
 10036  00336E  0454               	decf	_Micro+2,w,c
 10037  003370  A4D8               	btfss	status,2,c
 10038  003372  D008               	goto	l6178
 10039                           
 10040                           ;test.c: 12: {
 10041                           ;test.c: 13: Test.Step = 0x01;
 10042  003374  0100               	movlb	0	; () banked
 10043  003376  6FBF               	movwf	??_check_comutest& (0+255),b
 10044  003378  0E01               	movlw	1
 10045  00337A  6E2E               	movwf	_Test,c
 10046  00337C  0100               	movlb	0	; () banked
 10047  00337E  51BF               	movf	??_check_comutest& (0+255),w,b
 10048                           
 10049                           ; BSR set to: 0
 10050                           ;test.c: 14: ecran_blank();
 10051  003380  ECEA  F018         	call	_ecran_blank	;wreg free
 10052  003384                     l6178:
 10053  003384  AA82               	btfss	3970,5,c	;volatile
 10054  003386  D002               	goto	u5530
 10055  003388  0E01               	movlw	1
 10056  00338A  D001               	goto	u5536
 10057  00338C                     u5530:
 10058  00338C  0E00               	movlw	0
 10059  00338E                     u5536:
 10060  00338E  0100               	movlb	0	; () banked
 10061  003390  0100               	movlb	0	; () banked
 10062  003392  19C0               	xorwf	check_comutest@State& (0+255),w,b
 10063  003394  A4D8               	btfss	status,2,c
 10064                           
 10065                           ; BSR set to: 0
 10066                           
 10067                           ; BSR set to: 0
 10068  003396  0012               	return	
 10069  003398  FFFF               	dw	65535	; assembler added errata NOP
 10070  00339A  D7DD               	goto	l6166
 10071  00339C  FFFF               	dw	65535	; errata NOP
 10072  00339E                     __end_of_check_comutest:
 10073                           	opt stack 0
 10074                           tblptru	equ	0xFF8
 10075                           tblptrh	equ	0xFF7
 10076                           tblptrl	equ	0xFF6
 10077                           tablat	equ	0xFF5
 10078                           prodh	equ	0xFF4
 10079                           prodl	equ	0xFF3
 10080                           intcon	equ	0xFF2
 10081                           intcon2	equ	0xFF1
 10082                           postinc0	equ	0xFEE
 10083                           wreg	equ	0xFE8
 10084                           indf1	equ	0xFE7
 10085                           postdec1	equ	0xFE5
 10086                           fsr1h	equ	0xFE2
 10087                           fsr1l	equ	0xFE1
 10088                           indf2	equ	0xFDF
 10089                           postinc2	equ	0xFDE
 10090                           postdec2	equ	0xFDD
 10091                           fsr2h	equ	0xFDA
 10092                           fsr2l	equ	0xFD9
 10093                           status	equ	0xFD8
 10094                           
 10095 ;; *************** function _ecran_refresh *****************
 10096 ;; Defined at:
 10097 ;;		line 116 in file "ecran.c"
 10098 ;; Parameters:    Size  Location     Type
 10099 ;;		None
 10100 ;; Auto vars:     Size  Location     Type
 10101 ;;		None
 10102 ;; Return value:  Size  Location     Type
 10103 ;;		None               void
 10104 ;; Registers used:
 10105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10106 ;; Tracked objects:
 10107 ;;		On entry : 0/0
 10108 ;;		On exit  : 0/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10111 ;;      Params:         0       0       0       0       0       0       0
 10112 ;;      Locals:         0       0       0       0       0       0       0
 10113 ;;      Temps:          0       2       0       0       0       0       0
 10114 ;;      Totals:         0       2       0       0       0       0       0
 10115 ;;Total ram usage:        2 bytes
 10116 ;; Hardware stack levels used:    1
 10117 ;; Hardware stack levels required when called:    5
 10118 ;; This function calls:
 10119 ;;		_ecran_dot
 10120 ;;		_ecran_print_one_char
 10121 ;; This function is called by:
 10122 ;;		_main
 10123 ;;		_cf_check_and_display
 10124 ;;		_check_comutest
 10125 ;;		_check_program_0
 10126 ;; This function uses a non-reentrant model
 10127 ;;
 10128                           
 10129                           	psect	text43
 10130  002CF8                     __ptext43:
 10131                           	opt stack 0
 10132  002CF8                     _ecran_refresh:
 10133                           	opt stack 23
 10134                           
 10135                           ; BSR set to: 0
 10136                           ;incstack = 0
 10137  002CF8  FFFF               	dw	65535
 10138                           
 10139                           ;ecran.c: 118: if ( (Ecran.Solid == 0)
 10140                           ;ecran.c: 119: && ((++ Ecran.Cpt) <= Ecran.tRate))
 10141  002CFA  0100               	movlb	0	; () banked
 10142  002CFC  0100               	movlb	0	; () banked
 10143  002CFE  67B9               	tstfsz	(_Ecran+15)& (0+255),b
 10144  002D00  D052               	goto	l280
 10145                           
 10146                           ; BSR set to: 0
 10147  002D02  0100               	movlb	0	; () banked
 10148  002D04  0100               	movlb	0	; () banked
 10149  002D06  2BB5               	incf	(_Ecran+11)& (0+255),f,b
 10150  002D08  0100               	movlb	0	; () banked
 10151  002D0A  51B5               	movf	(_Ecran+11)& (0+255),w,b
 10152  002D0C  0100               	movlb	0	; () banked
 10153  002D0E  0100               	movlb	0	; () banked
 10154  002D10  5DB6               	subwf	(_Ecran+12)& (0+255),w,b
 10155  002D12  A0D8               	btfss	status,0,c
 10156  002D14  D048               	goto	l280
 10157                           
 10158                           ; BSR set to: 0
 10159                           ;ecran.c: 120: {
 10160                           ;ecran.c: 121: ecran_print_one_char(Ecran.Index, Ecran.Digits[Ecran.Index]);
 10161  002D16  0100               	movlb	0	; () banked
 10162  002D18  0100               	movlb	0	; () banked
 10163  002D1A  51B4               	movf	(_Ecran+10)& (0+255),w,b
 10164  002D1C  0D01               	mullw	1
 10165  002D1E  0100               	movlb	0	; () banked
 10166  002D20  EE20  F0AE         	lfsr	2,_Ecran+4
 10167  002D24  CFDE F0BD          	movff	postinc2,??_ecran_refresh
 10168  002D28  CFDD F0BE          	movff	postdec2,??_ecran_refresh+1
 10169  002D2C  50F3               	movf	prodl,w,c
 10170  002D2E  0100               	movlb	0	; () banked
 10171  002D30  27BD               	addwf	??_ecran_refresh& (0+255),f,b
 10172  002D32  50F4               	movf	prodh,w,c
 10173  002D34  0100               	movlb	0	; () banked
 10174  002D36  23BE               	addwfc	(??_ecran_refresh+1)& (0+255),f,b
 10175  002D38  C0BD  FFF6         	movff	??_ecran_refresh,tblptrl
 10176  002D3C  C0BE  FFF7         	movff	??_ecran_refresh+1,tblptrh
 10177  002D40  6AF8               	clrf	tblptru,c
 10178  002D42  0E05               	movlw	(high __ramtop+-1)
 10179  002D44  64F7               	cpfsgt	tblptrh,c
 10180  002D46  D004               	bra	u5177
 10181  002D48  0008               	tblrd		*
 10182  002D4A  FFFF               	dw	65535	; errata NOP
 10183  002D4C  50F5               	movf	tablat,w,c
 10184  002D4E  D005               	bra	u5170
 10185  002D50                     u5177:
 10186  002D50  CFF6 FFE1          	movff	tblptrl,fsr1l
 10187  002D54  CFF7 FFE2          	movff	tblptrh,fsr1h
 10188  002D58  50E7               	movf	indf1,w,c
 10189  002D5A                     u5170:
 10190  002D5A  0100               	movlb	0	; () banked
 10191  002D5C  0100               	movlb	0	; () banked
 10192  002D5E  6FBB               	movwf	ecran_print_one_char@Character& (0+255),b
 10193  002D60  0100               	movlb	0	; () banked
 10194  002D62  0100               	movlb	0	; () banked
 10195  002D64  51B4               	movf	(_Ecran+10)& (0+255),w,b
 10196  002D66  ECE0  F01A         	call	_ecran_print_one_char
 10197                           
 10198                           ;ecran.c: 123: ecran_dot(Ecran.Dot[Ecran.Index]);
 10199  002D6A  0100               	movlb	0	; () banked
 10200  002D6C  0100               	movlb	0	; () banked
 10201  002D6E  51B4               	movf	(_Ecran+10)& (0+255),w,b
 10202  002D70  0D01               	mullw	1
 10203  002D72  0100               	movlb	0	; () banked
 10204  002D74  0EB0               	movlw	low (_Ecran+6)
 10205  002D76  24F3               	addwf	prodl,w,c
 10206  002D78  6ED9               	movwf	fsr2l,c
 10207  002D7A  0100               	movlb	0	; () banked
 10208  002D7C  0E00               	movlw	high (_Ecran+6)
 10209  002D7E  20F4               	addwfc	prodh,w,c
 10210  002D80  6EDA               	movwf	fsr2h,c
 10211  002D82  50DF               	movf	indf2,w,c
 10212  002D84  ECFA  F01B         	call	_ecran_dot
 10213                           
 10214                           ;ecran.c: 125: if (++ Ecran.Index > 3) {Ecran.Index = 0;}
 10215  002D88  0100               	movlb	0	; () banked
 10216  002D8A  EE20  F0B4         	lfsr	2,_Ecran+10
 10217  002D8E  2ADF               	incf	indf2,f,c
 10218  002D90  0E03               	movlw	3
 10219  002D92  64DF               	cpfsgt	indf2,c
 10220  002D94  D008               	goto	l280
 10221                           
 10222                           ; BSR set to: 0
 10223  002D96  0100               	movlb	0	; () banked
 10224  002D98  6FBD               	movwf	??_ecran_refresh& (0+255),b
 10225  002D9A  0E00               	movlw	0
 10226  002D9C  0100               	movlb	0	; () banked
 10227  002D9E  0100               	movlb	0	; () banked
 10228  002DA0  6FB4               	movwf	(_Ecran+10)& (0+255),b
 10229  002DA2  0100               	movlb	0	; () banked
 10230  002DA4  51BD               	movf	??_ecran_refresh& (0+255),w,b
 10231  002DA6                     l280:
 10232                           
 10233                           ; BSR set to: 0
 10234  002DA6  0012               	return	
 10235  002DA8  FFFF               	dw	65535	; errata NOP
 10236  002DAA                     __end_of_ecran_refresh:
 10237                           	opt stack 0
 10238                           tblptru	equ	0xFF8
 10239                           tblptrh	equ	0xFF7
 10240                           tblptrl	equ	0xFF6
 10241                           tablat	equ	0xFF5
 10242                           prodh	equ	0xFF4
 10243                           prodl	equ	0xFF3
 10244                           intcon	equ	0xFF2
 10245                           intcon2	equ	0xFF1
 10246                           postinc0	equ	0xFEE
 10247                           wreg	equ	0xFE8
 10248                           indf1	equ	0xFE7
 10249                           postdec1	equ	0xFE5
 10250                           fsr1h	equ	0xFE2
 10251                           fsr1l	equ	0xFE1
 10252                           indf2	equ	0xFDF
 10253                           postinc2	equ	0xFDE
 10254                           postdec2	equ	0xFDD
 10255                           fsr2h	equ	0xFDA
 10256                           fsr2l	equ	0xFD9
 10257                           status	equ	0xFD8
 10258                           
 10259 ;; *************** function _ecran_print_one_char *****************
 10260 ;; Defined at:
 10261 ;;		line 50 in file "ecran.c"
 10262 ;; Parameters:    Size  Location     Type
 10263 ;;  Digit           1    wreg     unsigned char 
 10264 ;;  Character       1    1[BANK0 ] unsigned char 
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;  Digit           1    2[BANK0 ] unsigned char 
 10267 ;; Return value:  Size  Location     Type
 10268 ;;		None               void
 10269 ;; Registers used:
 10270 ;;		wreg, status,2, status,0, cstack
 10271 ;; Tracked objects:
 10272 ;;		On entry : 0/0
 10273 ;;		On exit  : 0/0
 10274 ;;		Unchanged: 0/0
 10275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10276 ;;      Params:         0       1       0       0       0       0       0
 10277 ;;      Locals:         0       1       0       0       0       0       0
 10278 ;;      Temps:          0       0       0       0       0       0       0
 10279 ;;      Totals:         0       2       0       0       0       0       0
 10280 ;;Total ram usage:        2 bytes
 10281 ;; Hardware stack levels used:    1
 10282 ;; Hardware stack levels required when called:    4
 10283 ;; This function calls:
 10284 ;;		_ecran_digit
 10285 ;;		_ecran_raz_digit
 10286 ;; This function is called by:
 10287 ;;		_ecran_refresh
 10288 ;;		_cf_check_and_display
 10289 ;;		_cf_rcv
 10290 ;;		_check_idtest
 10291 ;;		_check_bpon
 10292 ;;		_micro_wait
 10293 ;;		_feu_check_bp
 10294 ;; This function uses a non-reentrant model
 10295 ;;
 10296                           
 10297                           	psect	text44
 10298  0035C0                     __ptext44:
 10299                           	opt stack 0
 10300  0035C0                     _ecran_print_one_char:
 10301                           	opt stack 23
 10302                           
 10303                           ; BSR set to: 0
 10304                           ;incstack = 0
 10305  0035C0  FFFF               	dw	65535
 10306                           
 10307                           ;ecran_print_one_char@Digit stored from wreg
 10308  0035C2  CFE8 F0BC          	movff	wreg,ecran_print_one_char@Digit
 10309                           
 10310                           ;ecran.c: 52: ecran_raz_digit();
 10311  0035C6  EC04  F01C         	call	_ecran_raz_digit	;wreg free
 10312                           
 10313                           ;ecran.c: 54: ecran_digit(Character);
 10314  0035CA  0100               	movlb	0	; () banked
 10315  0035CC  0100               	movlb	0	; () banked
 10316  0035CE  51BB               	movf	ecran_print_one_char@Character& (0+255),w,b
 10317  0035D0  ECBE  F014         	call	_ecran_digit
 10318                           
 10319                           ;ecran.c: 56: switch (Digit)
 10320  0035D4  D008               	goto	l5636
 10321  0035D6                     l258:
 10322                           
 10323                           ; BSR set to: 0
 10324  0035D6  8282               	bsf	3970,1,c	;volatile
 10325  0035D8  D015               	goto	l264
 10326  0035DA                     l260:
 10327                           
 10328                           ; BSR set to: 0
 10329  0035DA  8482               	bsf	3970,2,c	;volatile
 10330  0035DC  D013               	goto	l264
 10331  0035DE                     l261:
 10332                           
 10333                           ; BSR set to: 0
 10334  0035DE  8682               	bsf	3970,3,c	;volatile
 10335  0035E0  D011               	goto	l264
 10336  0035E2                     l262:
 10337                           
 10338                           ; BSR set to: 0
 10339  0035E2  8082               	bsf	3970,0,c	;volatile
 10340  0035E4  D00F               	goto	l264
 10341  0035E6                     l5636:
 10342  0035E6  0100               	movlb	0	; () banked
 10343  0035E8  0100               	movlb	0	; () banked
 10344  0035EA  51BC               	movf	ecran_print_one_char@Digit& (0+255),w,b
 10345                           
 10346                           ; Switch size 1, requested type "space"
 10347                           ; Number of cases is 4, Range of values is 0 to 3
 10348                           ; switch strategies available:
 10349                           ; Name         Instructions Cycles
 10350                           ; simple_byte           13     7 (average)
 10351                           ;	Chosen strategy is simple_byte
 10352  0035EC  0A00               	xorlw	0	; case 0
 10353  0035EE  B4D8               	btfsc	status,2,c
 10354  0035F0  D7F2               	goto	l258
 10355  0035F2  0A01               	xorlw	1	; case 1
 10356  0035F4  B4D8               	btfsc	status,2,c
 10357  0035F6  D7F1               	goto	l260
 10358  0035F8  0A03               	xorlw	3	; case 2
 10359  0035FA  B4D8               	btfsc	status,2,c
 10360  0035FC  D7F0               	goto	l261
 10361  0035FE  0A01               	xorlw	1	; case 3
 10362  003600  B4D8               	btfsc	status,2,c
 10363  003602  D7EF               	goto	l262
 10364  003604                     l264:
 10365                           
 10366                           ; BSR set to: 0
 10367  003604  0012               	return	
 10368  003606  FFFF               	dw	65535	; errata NOP
 10369  003608                     __end_of_ecran_print_one_char:
 10370                           	opt stack 0
 10371                           tblptru	equ	0xFF8
 10372                           tblptrh	equ	0xFF7
 10373                           tblptrl	equ	0xFF6
 10374                           tablat	equ	0xFF5
 10375                           prodh	equ	0xFF4
 10376                           prodl	equ	0xFF3
 10377                           intcon	equ	0xFF2
 10378                           intcon2	equ	0xFF1
 10379                           postinc0	equ	0xFEE
 10380                           wreg	equ	0xFE8
 10381                           indf1	equ	0xFE7
 10382                           postdec1	equ	0xFE5
 10383                           fsr1h	equ	0xFE2
 10384                           fsr1l	equ	0xFE1
 10385                           indf2	equ	0xFDF
 10386                           postinc2	equ	0xFDE
 10387                           postdec2	equ	0xFDD
 10388                           fsr2h	equ	0xFDA
 10389                           fsr2l	equ	0xFD9
 10390                           status	equ	0xFD8
 10391                           
 10392 ;; *************** function _ecran_raz_digit *****************
 10393 ;; Defined at:
 10394 ;;		line 3 in file "ecran.c"
 10395 ;; Parameters:    Size  Location     Type
 10396 ;;		None
 10397 ;; Auto vars:     Size  Location     Type
 10398 ;;		None
 10399 ;; Return value:  Size  Location     Type
 10400 ;;		None               void
 10401 ;; Registers used:
 10402 ;;		wreg, status,2, status,0
 10403 ;; Tracked objects:
 10404 ;;		On entry : 0/0
 10405 ;;		On exit  : 0/0
 10406 ;;		Unchanged: 0/0
 10407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10408 ;;      Params:         0       0       0       0       0       0       0
 10409 ;;      Locals:         0       0       0       0       0       0       0
 10410 ;;      Temps:          0       0       0       0       0       0       0
 10411 ;;      Totals:         0       0       0       0       0       0       0
 10412 ;;Total ram usage:        0 bytes
 10413 ;; Hardware stack levels used:    1
 10414 ;; Hardware stack levels required when called:    3
 10415 ;; This function calls:
 10416 ;;		Nothing
 10417 ;; This function is called by:
 10418 ;;		_ecran_print_one_char
 10419 ;;		_ecran_wait
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423                           	psect	text45
 10424  003808                     __ptext45:
 10425                           	opt stack 0
 10426  003808                     _ecran_raz_digit:
 10427                           	opt stack 25
 10428                           
 10429                           ; BSR set to: 0
 10430                           ;incstack = 0
 10431  003808  FFFF               	dw	65535
 10432                           
 10433                           ;ecran.c: 5: PORTD = 0;
 10434  00380A  0E00               	movlw	0
 10435  00380C  6E83               	movwf	3971,c	;volatile
 10436                           
 10437                           ;ecran.c: 6: PORTC &= 0xF0;
 10438  00380E  0EF0               	movlw	240
 10439  003810  1682               	andwf	3970,f,c	;volatile
 10440  003812  0012               	return	
 10441  003814  FFFF               	dw	65535	; errata NOP
 10442  003816                     __end_of_ecran_raz_digit:
 10443                           	opt stack 0
 10444                           tblptru	equ	0xFF8
 10445                           tblptrh	equ	0xFF7
 10446                           tblptrl	equ	0xFF6
 10447                           tablat	equ	0xFF5
 10448                           prodh	equ	0xFF4
 10449                           prodl	equ	0xFF3
 10450                           intcon	equ	0xFF2
 10451                           intcon2	equ	0xFF1
 10452                           postinc0	equ	0xFEE
 10453                           wreg	equ	0xFE8
 10454                           indf1	equ	0xFE7
 10455                           postdec1	equ	0xFE5
 10456                           fsr1h	equ	0xFE2
 10457                           fsr1l	equ	0xFE1
 10458                           indf2	equ	0xFDF
 10459                           postinc2	equ	0xFDE
 10460                           postdec2	equ	0xFDD
 10461                           fsr2h	equ	0xFDA
 10462                           fsr2l	equ	0xFD9
 10463                           status	equ	0xFD8
 10464                           
 10465 ;; *************** function _ecran_digit *****************
 10466 ;; Defined at:
 10467 ;;		line 9 in file "ecran.c"
 10468 ;; Parameters:    Size  Location     Type
 10469 ;;  Char            1    wreg     unsigned char 
 10470 ;; Auto vars:     Size  Location     Type
 10471 ;;  Char            1    0[BANK0 ] unsigned char 
 10472 ;; Return value:  Size  Location     Type
 10473 ;;		None               void
 10474 ;; Registers used:
 10475 ;;		wreg, status,2, status,0
 10476 ;; Tracked objects:
 10477 ;;		On entry : 0/0
 10478 ;;		On exit  : 0/0
 10479 ;;		Unchanged: 0/0
 10480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10481 ;;      Params:         0       0       0       0       0       0       0
 10482 ;;      Locals:         0       1       0       0       0       0       0
 10483 ;;      Temps:          0       0       0       0       0       0       0
 10484 ;;      Totals:         0       1       0       0       0       0       0
 10485 ;;Total ram usage:        1 bytes
 10486 ;; Hardware stack levels used:    1
 10487 ;; Hardware stack levels required when called:    3
 10488 ;; This function calls:
 10489 ;;		Nothing
 10490 ;; This function is called by:
 10491 ;;		_ecran_print_one_char
 10492 ;; This function uses a non-reentrant model
 10493 ;;
 10494                           
 10495                           	psect	text46
 10496  00297C                     __ptext46:
 10497                           	opt stack 0
 10498  00297C                     _ecran_digit:
 10499                           	opt stack 23
 10500                           
 10501                           ;incstack = 0
 10502  00297C  FFFF               	dw	65535
 10503                           
 10504                           ;ecran_digit@Char stored from wreg
 10505  00297E  CFE8 F0BA          	movff	wreg,ecran_digit@Char
 10506                           
 10507                           ;ecran.c: 11: switch (Char)
 10508  002982  D02B               	goto	l5620
 10509  002984                     l5568:
 10510  002984  0E00               	movlw	0
 10511  002986  D027               	goto	L83
 10512  002988                     l5570:
 10513  002988  0EB7               	movlw	183
 10514  00298A  D025               	goto	L83
 10515  00298C                     l5578:
 10516  00298C  0ED6               	movlw	214
 10517  00298E  D023               	goto	L83
 10518  002990                     l5580:
 10519  002990  0E96               	movlw	150
 10520  002992  D021               	goto	L83
 10521  002994                     l5582:
 10522  002994  0E97               	movlw	151
 10523  002996  D01F               	goto	L83
 10524  002998                     l5584:
 10525  002998  0EF2               	movlw	242
 10526  00299A  D01D               	goto	L83
 10527  00299C                     l5586:
 10528  00299C  0ED0               	movlw	208
 10529  00299E  D01B               	goto	L83
 10530  0029A0                     l5588:
 10531  0029A0  0EF1               	movlw	241
 10532  0029A2  D019               	goto	L83
 10533  0029A4                     l5592:
 10534  0029A4  0ED2               	movlw	210
 10535  0029A6  D017               	goto	L83
 10536  0029A8                     l5594:
 10537  0029A8  0E40               	movlw	64
 10538  0029AA  D015               	goto	L83
 10539  0029AC                     l5596:
 10540  0029AC  0E10               	movlw	16
 10541  0029AE  D013               	goto	L83
 10542  0029B0                     l5598:
 10543  0029B0  0EE7               	movlw	231
 10544  0029B2  D011               	goto	L83
 10545  0029B4                     l5600:
 10546  0029B4  0E21               	movlw	33
 10547  0029B6  D00F               	goto	L83
 10548  0029B8                     l5602:
 10549  0029B8  0ED5               	movlw	213
 10550  0029BA  D00D               	goto	L83
 10551  0029BC                     l5604:
 10552  0029BC  0E75               	movlw	117
 10553  0029BE  D00B               	goto	L83
 10554  0029C0                     l5606:
 10555  0029C0  0E33               	movlw	51
 10556  0029C2  D009               	goto	L83
 10557  0029C4                     l5608:
 10558  0029C4  0E76               	movlw	118
 10559  0029C6  D007               	goto	L83
 10560  0029C8                     l5610:
 10561  0029C8  0EF6               	movlw	246
 10562  0029CA  D005               	goto	L83
 10563  0029CC                     l5612:
 10564  0029CC  0E25               	movlw	37
 10565  0029CE  D003               	goto	L83
 10566  0029D0                     l5614:
 10567  0029D0  0EF7               	movlw	247
 10568  0029D2  D001               	goto	L83
 10569  0029D4                     l5616:
 10570  0029D4  0E77               	movlw	119
 10571  0029D6                     L83:
 10572  0029D6  6E83               	movwf	3971,c	;volatile
 10573  0029D8  D04E               	goto	l250
 10574  0029DA                     l5620:
 10575  0029DA  0100               	movlb	0	; () banked
 10576  0029DC  0100               	movlb	0	; () banked
 10577  0029DE  51BA               	movf	ecran_digit@Char& (0+255),w,b
 10578                           
 10579                           ; Switch size 1, requested type "space"
 10580                           ; Number of cases is 25, Range of values is 32 to 116
 10581                           ; switch strategies available:
 10582                           ; Name         Instructions Cycles
 10583                           ; simple_byte           76    39 (average)
 10584                           ;	Chosen strategy is simple_byte
 10585  0029E0  0A20               	xorlw	32	; case 32
 10586  0029E2  B4D8               	btfsc	status,2,c
 10587  0029E4  D7CF               	goto	l5568
 10588  0029E6  0A0D               	xorlw	13	; case 45
 10589  0029E8  B4D8               	btfsc	status,2,c
 10590  0029EA  D7E0               	goto	l5596
 10591  0029EC  0A1D               	xorlw	29	; case 48
 10592  0029EE  B4D8               	btfsc	status,2,c
 10593  0029F0  D7DF               	goto	l5598
 10594  0029F2  0A01               	xorlw	1	; case 49
 10595  0029F4  B4D8               	btfsc	status,2,c
 10596  0029F6  D7DE               	goto	l5600
 10597  0029F8  0A03               	xorlw	3	; case 50
 10598  0029FA  B4D8               	btfsc	status,2,c
 10599  0029FC  D7DD               	goto	l5602
 10600  0029FE  0A01               	xorlw	1	; case 51
 10601  002A00  B4D8               	btfsc	status,2,c
 10602  002A02  D7DC               	goto	l5604
 10603  002A04  0A07               	xorlw	7	; case 52
 10604  002A06  B4D8               	btfsc	status,2,c
 10605  002A08  D7DB               	goto	l5606
 10606  002A0A  0A01               	xorlw	1	; case 53
 10607  002A0C  B4D8               	btfsc	status,2,c
 10608  002A0E  D7DA               	goto	l5608
 10609  002A10  0A03               	xorlw	3	; case 54
 10610  002A12  B4D8               	btfsc	status,2,c
 10611  002A14  D7D9               	goto	l5610
 10612  002A16  0A01               	xorlw	1	; case 55
 10613  002A18  B4D8               	btfsc	status,2,c
 10614  002A1A  D7D8               	goto	l5612
 10615  002A1C  0A0F               	xorlw	15	; case 56
 10616  002A1E  B4D8               	btfsc	status,2,c
 10617  002A20  D7D7               	goto	l5614
 10618  002A22  0A01               	xorlw	1	; case 57
 10619  002A24  B4D8               	btfsc	status,2,c
 10620  002A26  D7D6               	goto	l5616
 10621  002A28  0A78               	xorlw	120	; case 65
 10622  002A2A  B4D8               	btfsc	status,2,c
 10623  002A2C  D7AD               	goto	l5570
 10624  002A2E  0A03               	xorlw	3	; case 66
 10625  002A30  B4D8               	btfsc	status,2,c
 10626  002A32  D7B2               	goto	l5584
 10627  002A34  0A01               	xorlw	1	; case 67
 10628  002A36  B4D8               	btfsc	status,2,c
 10629  002A38  D7B1               	goto	l5586
 10630  002A3A  0A07               	xorlw	7	; case 68
 10631  002A3C  B4D8               	btfsc	status,2,c
 10632  002A3E  D7B0               	goto	l5588
 10633  002A40  0A01               	xorlw	1	; case 69
 10634  002A42  B4D8               	btfsc	status,2,c
 10635  002A44  D7A3               	goto	l5578
 10636  002A46  0A03               	xorlw	3	; case 70
 10637  002A48  B4D8               	btfsc	status,2,c
 10638  002A4A  D7A2               	goto	l5580
 10639  002A4C  0A16               	xorlw	22	; case 80
 10640  002A4E  B4D8               	btfsc	status,2,c
 10641  002A50  D7A1               	goto	l5582
 10642  002A52  0A03               	xorlw	3	; case 83
 10643  002A54  B4D8               	btfsc	status,2,c
 10644  002A56  D7B6               	goto	l5608
 10645  002A58  0A0C               	xorlw	12	; case 95
 10646  002A5A  B4D8               	btfsc	status,2,c
 10647  002A5C  D7A5               	goto	l5594
 10648  002A5E  0A3D               	xorlw	61	; case 98
 10649  002A60  B4D8               	btfsc	status,2,c
 10650  002A62  D79A               	goto	l5584
 10651  002A64  0A01               	xorlw	1	; case 99
 10652  002A66  B4D8               	btfsc	status,2,c
 10653  002A68  D799               	goto	l5586
 10654  002A6A  0A07               	xorlw	7	; case 100
 10655  002A6C  B4D8               	btfsc	status,2,c
 10656  002A6E  D798               	goto	l5588
 10657  002A70  0A10               	xorlw	16	; case 116
 10658  002A72  B4D8               	btfsc	status,2,c
 10659  002A74  D797               	goto	l5592
 10660  002A76                     l250:
 10661  002A76  0012               	return	
 10662  002A78  FFFF               	dw	65535	; errata NOP
 10663  002A7A                     __end_of_ecran_digit:
 10664                           	opt stack 0
 10665                           tblptru	equ	0xFF8
 10666                           tblptrh	equ	0xFF7
 10667                           tblptrl	equ	0xFF6
 10668                           tablat	equ	0xFF5
 10669                           prodh	equ	0xFF4
 10670                           prodl	equ	0xFF3
 10671                           intcon	equ	0xFF2
 10672                           intcon2	equ	0xFF1
 10673                           postinc0	equ	0xFEE
 10674                           wreg	equ	0xFE8
 10675                           indf1	equ	0xFE7
 10676                           postdec1	equ	0xFE5
 10677                           fsr1h	equ	0xFE2
 10678                           fsr1l	equ	0xFE1
 10679                           indf2	equ	0xFDF
 10680                           postinc2	equ	0xFDE
 10681                           postdec2	equ	0xFDD
 10682                           fsr2h	equ	0xFDA
 10683                           fsr2l	equ	0xFD9
 10684                           status	equ	0xFD8
 10685                           
 10686 ;; *************** function _ecran_dot *****************
 10687 ;; Defined at:
 10688 ;;		line 42 in file "ecran.c"
 10689 ;; Parameters:    Size  Location     Type
 10690 ;;  Dot             1    wreg     unsigned char 
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;  Dot             1    0[BANK0 ] unsigned char 
 10693 ;; Return value:  Size  Location     Type
 10694 ;;		None               void
 10695 ;; Registers used:
 10696 ;;		wreg, status,2, status,0
 10697 ;; Tracked objects:
 10698 ;;		On entry : 0/0
 10699 ;;		On exit  : 0/0
 10700 ;;		Unchanged: 0/0
 10701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10702 ;;      Params:         0       0       0       0       0       0       0
 10703 ;;      Locals:         0       1       0       0       0       0       0
 10704 ;;      Temps:          0       0       0       0       0       0       0
 10705 ;;      Totals:         0       1       0       0       0       0       0
 10706 ;;Total ram usage:        1 bytes
 10707 ;; Hardware stack levels used:    1
 10708 ;; Hardware stack levels required when called:    3
 10709 ;; This function calls:
 10710 ;;		Nothing
 10711 ;; This function is called by:
 10712 ;;		_ecran_wait
 10713 ;;		_ecran_refresh
 10714 ;; This function uses a non-reentrant model
 10715 ;;
 10716                           
 10717                           	psect	text47
 10718  0037F4                     __ptext47:
 10719                           	opt stack 0
 10720  0037F4                     _ecran_dot:
 10721                           	opt stack 25
 10722                           
 10723                           ;incstack = 0
 10724  0037F4  FFFF               	dw	65535
 10725                           
 10726                           ;ecran_dot@Dot stored from wreg
 10727  0037F6  CFE8 F0BA          	movff	wreg,ecran_dot@Dot
 10728                           
 10729                           ;ecran.c: 44: if (Dot == 1)
 10730  0037FA  0100               	movlb	0	; () banked
 10731  0037FC  0100               	movlb	0	; () banked
 10732  0037FE  05BA               	decf	ecran_dot@Dot& (0+255),w,b
 10733  003800  B4D8               	btfsc	status,2,c
 10734                           
 10735                           ; BSR set to: 0
 10736                           ;ecran.c: 45: {
 10737                           ;ecran.c: 46: PORTD |= 0x08;
 10738  003802  8683               	bsf	3971,3,c	;volatile
 10739                           
 10740                           ; BSR set to: 0
 10741                           
 10742                           ; BSR set to: 0
 10743  003804  0012               	return	
 10744  003806  FFFF               	dw	65535	; errata NOP
 10745  003808                     __end_of_ecran_dot:
 10746                           	opt stack 0
 10747                           tblptru	equ	0xFF8
 10748                           tblptrh	equ	0xFF7
 10749                           tblptrl	equ	0xFF6
 10750                           tablat	equ	0xFF5
 10751                           prodh	equ	0xFF4
 10752                           prodl	equ	0xFF3
 10753                           intcon	equ	0xFF2
 10754                           intcon2	equ	0xFF1
 10755                           postinc0	equ	0xFEE
 10756                           wreg	equ	0xFE8
 10757                           indf1	equ	0xFE7
 10758                           postdec1	equ	0xFE5
 10759                           fsr1h	equ	0xFE2
 10760                           fsr1l	equ	0xFE1
 10761                           indf2	equ	0xFDF
 10762                           postinc2	equ	0xFDE
 10763                           postdec2	equ	0xFDD
 10764                           fsr2h	equ	0xFDA
 10765                           fsr2l	equ	0xFD9
 10766                           status	equ	0xFD8
 10767                           
 10768 ;; *************** function _ecran_blank *****************
 10769 ;; Defined at:
 10770 ;;		line 103 in file "ecran.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;		None
 10773 ;; Auto vars:     Size  Location     Type
 10774 ;;		None
 10775 ;; Return value:  Size  Location     Type
 10776 ;;		None               void
 10777 ;; Registers used:
 10778 ;;		wreg, status,2, status,0
 10779 ;; Tracked objects:
 10780 ;;		On entry : 0/0
 10781 ;;		On exit  : 0/0
 10782 ;;		Unchanged: 0/0
 10783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10784 ;;      Params:         0       0       0       0       0       0       0
 10785 ;;      Locals:         0       0       0       0       0       0       0
 10786 ;;      Temps:          0       1       0       0       0       0       0
 10787 ;;      Totals:         0       1       0       0       0       0       0
 10788 ;;Total ram usage:        1 bytes
 10789 ;; Hardware stack levels used:    1
 10790 ;; Hardware stack levels required when called:    3
 10791 ;; This function calls:
 10792 ;;		Nothing
 10793 ;; This function is called by:
 10794 ;;		_check_comutest
 10795 ;;		_check_program_0
 10796 ;;		_test_process
 10797 ;;		_micro_wait
 10798 ;;		_armement_process
 10799 ;; This function uses a non-reentrant model
 10800 ;;
 10801                           
 10802                           	psect	text48
 10803  0031D4                     __ptext48:
 10804                           	opt stack 0
 10805  0031D4                     _ecran_blank:
 10806                           	opt stack 26
 10807                           
 10808                           ; BSR set to: 0
 10809                           ;incstack = 0
 10810  0031D4  FFFF               	dw	65535
 10811                           
 10812                           ;ecran.c: 106: Ecran.Digits = (char *) Blank;
 10813  0031D6  0E06               	movlw	high _Blank
 10814  0031D8  0100               	movlb	0	; () banked
 10815  0031DA  0100               	movlb	0	; () banked
 10816  0031DC  6FAF               	movwf	(_Ecran+5)& (0+255),b
 10817  0031DE  0E06               	movlw	low _Blank
 10818  0031E0  0100               	movlb	0	; () banked
 10819  0031E2  0100               	movlb	0	; () banked
 10820  0031E4  6FAE               	movwf	(_Ecran+4)& (0+255),b
 10821                           
 10822                           ; BSR set to: 0
 10823                           ;ecran.c: 108: Ecran.Dot[0] = 0;
 10824  0031E6  0100               	movlb	0	; () banked
 10825  0031E8  6FBA               	movwf	??_ecran_blank& (0+255),b
 10826  0031EA  0E00               	movlw	0
 10827  0031EC  0100               	movlb	0	; () banked
 10828  0031EE  0100               	movlb	0	; () banked
 10829  0031F0  6FB0               	movwf	(_Ecran+6)& (0+255),b
 10830  0031F2  0100               	movlb	0	; () banked
 10831  0031F4  51BA               	movf	??_ecran_blank& (0+255),w,b
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;ecran.c: 109: Ecran.Dot[1] = 0;
 10835  0031F6  0100               	movlb	0	; () banked
 10836  0031F8  6FBA               	movwf	??_ecran_blank& (0+255),b
 10837  0031FA  0E00               	movlw	0
 10838  0031FC  0100               	movlb	0	; () banked
 10839  0031FE  0100               	movlb	0	; () banked
 10840  003200  6FB1               	movwf	(_Ecran+7)& (0+255),b
 10841  003202  0100               	movlb	0	; () banked
 10842  003204  51BA               	movf	??_ecran_blank& (0+255),w,b
 10843                           
 10844                           ; BSR set to: 0
 10845                           ;ecran.c: 110: Ecran.Dot[2] = 0;
 10846  003206  0100               	movlb	0	; () banked
 10847  003208  6FBA               	movwf	??_ecran_blank& (0+255),b
 10848  00320A  0E00               	movlw	0
 10849  00320C  0100               	movlb	0	; () banked
 10850  00320E  0100               	movlb	0	; () banked
 10851  003210  6FB2               	movwf	(_Ecran+8)& (0+255),b
 10852  003212  0100               	movlb	0	; () banked
 10853  003214  51BA               	movf	??_ecran_blank& (0+255),w,b
 10854                           
 10855                           ; BSR set to: 0
 10856                           ;ecran.c: 111: Ecran.Dot[3] = 0;
 10857  003216  0100               	movlb	0	; () banked
 10858  003218  6FBA               	movwf	??_ecran_blank& (0+255),b
 10859  00321A  0E00               	movlw	0
 10860  00321C  0100               	movlb	0	; () banked
 10861  00321E  0100               	movlb	0	; () banked
 10862  003220  6FB3               	movwf	(_Ecran+9)& (0+255),b
 10863  003222  0100               	movlb	0	; () banked
 10864  003224  51BA               	movf	??_ecran_blank& (0+255),w,b
 10865                           
 10866                           ; BSR set to: 0
 10867                           ;ecran.c: 113: Ecran.Solid = 0;
 10868  003226  0100               	movlb	0	; () banked
 10869  003228  6FBA               	movwf	??_ecran_blank& (0+255),b
 10870  00322A  0E00               	movlw	0
 10871  00322C  0100               	movlb	0	; () banked
 10872  00322E  0100               	movlb	0	; () banked
 10873  003230  6FB9               	movwf	(_Ecran+15)& (0+255),b
 10874  003232  0100               	movlb	0	; () banked
 10875  003234  51BA               	movf	??_ecran_blank& (0+255),w,b
 10876                           
 10877                           ; BSR set to: 0
 10878  003236  0012               	return	
 10879  003238  FFFF               	dw	65535	; errata NOP
 10880  00323A                     __end_of_ecran_blank:
 10881                           	opt stack 0
 10882                           tblptru	equ	0xFF8
 10883                           tblptrh	equ	0xFF7
 10884                           tblptrl	equ	0xFF6
 10885                           tablat	equ	0xFF5
 10886                           prodh	equ	0xFF4
 10887                           prodl	equ	0xFF3
 10888                           intcon	equ	0xFF2
 10889                           intcon2	equ	0xFF1
 10890                           postinc0	equ	0xFEE
 10891                           wreg	equ	0xFE8
 10892                           indf1	equ	0xFE7
 10893                           postdec1	equ	0xFE5
 10894                           fsr1h	equ	0xFE2
 10895                           fsr1l	equ	0xFE1
 10896                           indf2	equ	0xFDF
 10897                           postinc2	equ	0xFDE
 10898                           postdec2	equ	0xFDD
 10899                           fsr2h	equ	0xFDA
 10900                           fsr2l	equ	0xFD9
 10901                           status	equ	0xFD8
 10902                           
 10903 ;; *************** function _arm_UAlim_1A *****************
 10904 ;; Defined at:
 10905 ;;		line 3 in file "armement.c"
 10906 ;; Parameters:    Size  Location     Type
 10907 ;;		None
 10908 ;; Auto vars:     Size  Location     Type
 10909 ;;  temp            2   34[BANK0 ] unsigned short 
 10910 ;; Return value:  Size  Location     Type
 10911 ;;                  2   28[BANK0 ] unsigned short 
 10912 ;; Registers used:
 10913 ;;		wreg, status,2, status,0, cstack
 10914 ;; Tracked objects:
 10915 ;;		On entry : 0/0
 10916 ;;		On exit  : 0/0
 10917 ;;		Unchanged: 0/0
 10918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10919 ;;      Params:         0       2       0       0       0       0       0
 10920 ;;      Locals:         0       2       0       0       0       0       0
 10921 ;;      Temps:          0       4       0       0       0       0       0
 10922 ;;      Totals:         0       8       0       0       0       0       0
 10923 ;;Total ram usage:        8 bytes
 10924 ;; Hardware stack levels used:    1
 10925 ;; Hardware stack levels required when called:    5
 10926 ;; This function calls:
 10927 ;;		___ftmul
 10928 ;;		___fttol
 10929 ;;		___lwtoft
 10930 ;;		_ana_read
 10931 ;;		_delay_ms
 10932 ;; This function is called by:
 10933 ;;		_armement_process
 10934 ;; This function uses a non-reentrant model
 10935 ;;
 10936                           
 10937                           	psect	text49
 10938  00276A                     __ptext49:
 10939                           	opt stack 0
 10940  00276A                     _arm_UAlim_1A:
 10941                           	opt stack 24
 10942                           
 10943                           ; BSR set to: 0
 10944                           ;incstack = 0
 10945  00276A  FFFF               	dw	65535
 10946                           
 10947                           ;armement.c: 5: unsigned short temp = 0;
 10948  00276C  0E00               	movlw	0
 10949  00276E  0100               	movlb	0	; () banked
 10950  002770  0100               	movlb	0	; () banked
 10951  002772  6FDD               	movwf	(arm_UAlim_1A@temp+1)& (0+255),b
 10952  002774  0E00               	movlw	0
 10953  002776  0100               	movlb	0	; () banked
 10954  002778  6FDC               	movwf	arm_UAlim_1A@temp& (0+255),b
 10955                           
 10956                           ; BSR set to: 0
 10957                           ;armement.c: 7: PORTAbits.RA5 = 0;
 10958  00277A  9A80               	bcf	3968,5,c	;volatile
 10959                           
 10960                           ; BSR set to: 0
 10961                           ;armement.c: 8: PORTBbits.RB1 = 1;
 10962  00277C  8281               	bsf	3969,1,c	;volatile
 10963                           
 10964                           ; BSR set to: 0
 10965                           ;armement.c: 10: delay_ms(10);
 10966  00277E  0E00               	movlw	0
 10967  002780  0100               	movlb	0	; () banked
 10968  002782  0100               	movlb	0	; () banked
 10969  002784  6FBB               	movwf	(delay_ms@TimeToWait+1)& (0+255),b
 10970  002786  0E0A               	movlw	10
 10971  002788  0100               	movlb	0	; () banked
 10972  00278A  6FBA               	movwf	delay_ms@TimeToWait& (0+255),b
 10973  00278C  ECBB  F01A         	call	_delay_ms	;wreg free
 10974                           
 10975                           ;armement.c: 12: temp = ana_read(0);
 10976  002790  0E00               	movlw	0
 10977  002792  EC83  F018         	call	_ana_read
 10978  002796  0100               	movlb	0	; () banked
 10979  002798  C0C0  F0DC         	movff	?_ana_read,arm_UAlim_1A@temp
 10980  00279C  0100               	movlb	0	; () banked
 10981  00279E  C0C1  F0DD         	movff	?_ana_read+1,arm_UAlim_1A@temp+1
 10982                           
 10983                           ; BSR set to: 0
 10984                           ;armement.c: 14: PORTAbits.RA5 = 0;
 10985  0027A2  9A80               	bcf	3968,5,c	;volatile
 10986                           
 10987                           ; BSR set to: 0
 10988                           ;armement.c: 15: PORTBbits.RB1 = 0;
 10989  0027A4  9281               	bcf	3969,1,c	;volatile
 10990                           
 10991                           ; BSR set to: 0
 10992                           ;armement.c: 17: Arm.U_Alim_1A = (float) temp * 0.0049f;
 10993  0027A6  C0DC  F0C2         	movff	arm_UAlim_1A@temp,___lwtoft@c
 10994  0027AA  C0DD  F0C3         	movff	arm_UAlim_1A@temp+1,___lwtoft@c+1
 10995  0027AE  EC95  F01A         	call	___lwtoft	;wreg free
 10996  0027B2  C0C2  F0C7         	movff	?___lwtoft,___ftmul@f1
 10997  0027B6  C0C3  F0C8         	movff	?___lwtoft+1,___ftmul@f1+1
 10998  0027BA  C0C4  F0C9         	movff	?___lwtoft+2,___ftmul@f1+2
 10999  0027BE  0E90               	movlw	144
 11000  0027C0  0100               	movlb	0	; () banked
 11001  0027C2  0100               	movlb	0	; () banked
 11002  0027C4  6FCA               	movwf	___ftmul@f2& (0+255),b
 11003  0027C6  0EA0               	movlw	160
 11004  0027C8  0100               	movlb	0	; () banked
 11005  0027CA  0100               	movlb	0	; () banked
 11006  0027CC  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
 11007  0027CE  0E3B               	movlw	59
 11008  0027D0  0100               	movlb	0	; () banked
 11009  0027D2  0100               	movlb	0	; () banked
 11010  0027D4  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
 11011  0027D6  EC68  F00B         	call	___ftmul	;wreg free
 11012  0027DA  C0C7  F09E         	movff	?___ftmul,_Arm+4
 11013  0027DE  C0C8  F09F         	movff	?___ftmul+1,_Arm+5
 11014  0027E2  C0C9  F0A0         	movff	?___ftmul+2,_Arm+6
 11015                           
 11016                           ;armement.c: 18: Arm.U_Alim_1A = Arm.U_Alim_1A * 11.62f;
 11017  0027E6  C09E  F0C7         	movff	_Arm+4,___ftmul@f1
 11018  0027EA  C09F  F0C8         	movff	_Arm+5,___ftmul@f1+1
 11019  0027EE  C0A0  F0C9         	movff	_Arm+6,___ftmul@f1+2
 11020  0027F2  0EEC               	movlw	236
 11021  0027F4  0100               	movlb	0	; () banked
 11022  0027F6  0100               	movlb	0	; () banked
 11023  0027F8  6FCA               	movwf	___ftmul@f2& (0+255),b
 11024  0027FA  0E39               	movlw	57
 11025  0027FC  0100               	movlb	0	; () banked
 11026  0027FE  0100               	movlb	0	; () banked
 11027  002800  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
 11028  002802  0E41               	movlw	65
 11029  002804  0100               	movlb	0	; () banked
 11030  002806  0100               	movlb	0	; () banked
 11031  002808  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
 11032  00280A  EC68  F00B         	call	___ftmul	;wreg free
 11033  00280E  C0C7  F09E         	movff	?___ftmul,_Arm+4
 11034  002812  C0C8  F09F         	movff	?___ftmul+1,_Arm+5
 11035  002816  C0C9  F0A0         	movff	?___ftmul+2,_Arm+6
 11036                           
 11037                           ;armement.c: 19: Arm.U_Alim_1A = Arm.U_Alim_1A * 100.0f;
 11038  00281A  C09E  F0C7         	movff	_Arm+4,___ftmul@f1
 11039  00281E  C09F  F0C8         	movff	_Arm+5,___ftmul@f1+1
 11040  002822  C0A0  F0C9         	movff	_Arm+6,___ftmul@f1+2
 11041  002826  0E00               	movlw	0
 11042  002828  0100               	movlb	0	; () banked
 11043  00282A  0100               	movlb	0	; () banked
 11044  00282C  6FCA               	movwf	___ftmul@f2& (0+255),b
 11045  00282E  0EC8               	movlw	200
 11046  002830  0100               	movlb	0	; () banked
 11047  002832  0100               	movlb	0	; () banked
 11048  002834  6FCB               	movwf	(___ftmul@f2+1)& (0+255),b
 11049  002836  0E42               	movlw	66
 11050  002838  0100               	movlb	0	; () banked
 11051  00283A  0100               	movlb	0	; () banked
 11052  00283C  6FCC               	movwf	(___ftmul@f2+2)& (0+255),b
 11053  00283E  EC68  F00B         	call	___ftmul	;wreg free
 11054  002842  C0C7  F09E         	movff	?___ftmul,_Arm+4
 11055  002846  C0C8  F09F         	movff	?___ftmul+1,_Arm+5
 11056  00284A  C0C9  F0A0         	movff	?___ftmul+2,_Arm+6
 11057                           
 11058                           ;armement.c: 21: return (unsigned short) Arm.U_Alim_1A;
 11059  00284E  C09E  F0BA         	movff	_Arm+4,___fttol@f1
 11060  002852  C09F  F0BB         	movff	_Arm+5,___fttol@f1+1
 11061  002856  C0A0  F0BC         	movff	_Arm+6,___fttol@f1+2
 11062  00285A  ECB2  F00E         	call	___fttol	;wreg free
 11063  00285E  C0BA  F0D8         	movff	?___fttol,??_arm_UAlim_1A
 11064  002862  C0BB  F0D9         	movff	?___fttol+1,??_arm_UAlim_1A+1
 11065  002866  C0BC  F0DA         	movff	?___fttol+2,??_arm_UAlim_1A+2
 11066  00286A  C0BD  F0DB         	movff	?___fttol+3,??_arm_UAlim_1A+3
 11067  00286E  C0D8  F0D6         	movff	??_arm_UAlim_1A,?_arm_UAlim_1A
 11068  002872  C0D9  F0D7         	movff	??_arm_UAlim_1A+1,?_arm_UAlim_1A+1
 11069  002876  0012               	return	
 11070  002878  FFFF               	dw	65535	; errata NOP
 11071  00287A                     __end_of_arm_UAlim_1A:
 11072                           	opt stack 0
 11073                           tblptru	equ	0xFF8
 11074                           tblptrh	equ	0xFF7
 11075                           tblptrl	equ	0xFF6
 11076                           tablat	equ	0xFF5
 11077                           prodh	equ	0xFF4
 11078                           prodl	equ	0xFF3
 11079                           intcon	equ	0xFF2
 11080                           intcon2	equ	0xFF1
 11081                           postinc0	equ	0xFEE
 11082                           wreg	equ	0xFE8
 11083                           indf1	equ	0xFE7
 11084                           postdec1	equ	0xFE5
 11085                           fsr1h	equ	0xFE2
 11086                           fsr1l	equ	0xFE1
 11087                           indf2	equ	0xFDF
 11088                           postinc2	equ	0xFDE
 11089                           postdec2	equ	0xFDD
 11090                           fsr2h	equ	0xFDA
 11091                           fsr2l	equ	0xFD9
 11092                           status	equ	0xFD8
 11093                           
 11094 ;; *************** function _ana_read *****************
 11095 ;; Defined at:
 11096 ;;		line 4 in file "analog.c"
 11097 ;; Parameters:    Size  Location     Type
 11098 ;;  ANx             1    wreg     unsigned char 
 11099 ;; Auto vars:     Size  Location     Type
 11100 ;;  ANx             1    9[BANK0 ] unsigned char 
 11101 ;;  temp            2   10[BANK0 ] unsigned short 
 11102 ;; Return value:  Size  Location     Type
 11103 ;;                  2    6[BANK0 ] unsigned short 
 11104 ;; Registers used:
 11105 ;;		wreg, status,2, status,0, cstack
 11106 ;; Tracked objects:
 11107 ;;		On entry : 0/0
 11108 ;;		On exit  : 0/0
 11109 ;;		Unchanged: 0/0
 11110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11111 ;;      Params:         0       2       0       0       0       0       0
 11112 ;;      Locals:         0       3       0       0       0       0       0
 11113 ;;      Temps:          0       1       0       0       0       0       0
 11114 ;;      Totals:         0       6       0       0       0       0       0
 11115 ;;Total ram usage:        6 bytes
 11116 ;; Hardware stack levels used:    1
 11117 ;; Hardware stack levels required when called:    4
 11118 ;; This function calls:
 11119 ;;		_delay_ms
 11120 ;; This function is called by:
 11121 ;;		_check_UAlim
 11122 ;;		_check_UInfla
 11123 ;;		_arm_UAlim_1A
 11124 ;; This function uses a non-reentrant model
 11125 ;;
 11126                           
 11127                           	psect	text50
 11128  003106                     __ptext50:
 11129                           	opt stack 0
 11130  003106                     _ana_read:
 11131                           	opt stack 24
 11132                           
 11133                           ;incstack = 0
 11134  003106  FFFF               	dw	65535
 11135                           
 11136                           ;ana_read@ANx stored from wreg
 11137  003108  CFE8 F0C3          	movff	wreg,ana_read@ANx
 11138                           
 11139                           ;analog.c: 6: unsigned short temp = 0;
 11140  00310C  0E00               	movlw	0
 11141  00310E  0100               	movlb	0	; () banked
 11142  003110  0100               	movlb	0	; () banked
 11143  003112  6FC5               	movwf	(ana_read@temp+1)& (0+255),b
 11144  003114  0E00               	movlw	0
 11145  003116  0100               	movlb	0	; () banked
 11146  003118  6FC4               	movwf	ana_read@temp& (0+255),b
 11147                           
 11148                           ; BSR set to: 0
 11149                           ;analog.c: 8: ADCON0bits.CHS = ANx;
 11150  00311A  C0C3  F0C2         	movff	ana_read@ANx,??_ana_read
 11151  00311E  0100               	movlb	0	; () banked
 11152  003120  47C2               	rlncf	??_ana_read& (0+255),f,b
 11153  003122  47C2               	rlncf	??_ana_read& (0+255),f,b
 11154  003124  47C2               	rlncf	??_ana_read& (0+255),f,b
 11155  003126  50C2               	movf	4034,w,c	;volatile
 11156  003128  0100               	movlb	0	; () banked
 11157  00312A  19C2               	xorwf	??_ana_read& (0+255),w,b
 11158  00312C  0BC7               	andlw	-57
 11159  00312E  19C2               	xorwf	??_ana_read& (0+255),w,b
 11160  003130  6EC2               	movwf	4034,c	;volatile
 11161                           
 11162                           ; BSR set to: 0
 11163                           ;analog.c: 9: ADCON0bits.ADON = 1;
 11164  003132  80C2               	bsf	4034,0,c	;volatile
 11165                           
 11166                           ; BSR set to: 0
 11167                           ;analog.c: 11: delay_ms(5);
 11168  003134  0E00               	movlw	0
 11169  003136  0100               	movlb	0	; () banked
 11170  003138  0100               	movlb	0	; () banked
 11171  00313A  6FBB               	movwf	(delay_ms@TimeToWait+1)& (0+255),b
 11172  00313C  0E05               	movlw	5
 11173  00313E  0100               	movlb	0	; () banked
 11174  003140  6FBA               	movwf	delay_ms@TimeToWait& (0+255),b
 11175  003142  ECBB  F01A         	call	_delay_ms	;wreg free
 11176                           
 11177                           ;analog.c: 13: ADCON0bits.GO_nDONE = 1;
 11178  003146  84C2               	bsf	4034,2,c	;volatile
 11179  003148                     l980:
 11180  003148  B4C2               	btfsc	4034,2,c	;volatile
 11181  00314A  D7FE               	goto	l980
 11182                           
 11183                           ;analog.c: 16: temp = ADRESH << 8;
 11184  00314C  50C4               	movf	4036,w,c	;volatile
 11185  00314E  0100               	movlb	0	; () banked
 11186  003150  0100               	movlb	0	; () banked
 11187  003152  6FC5               	movwf	(ana_read@temp+1)& (0+255),b
 11188  003154  0100               	movlb	0	; () banked
 11189  003156  6BC4               	clrf	ana_read@temp& (0+255),b
 11190                           
 11191                           ; BSR set to: 0
 11192                           ;analog.c: 17: temp |= ADRESL;
 11193  003158  50C3               	movf	4035,w,c	;volatile
 11194  00315A  0100               	movlb	0	; () banked
 11195  00315C  0100               	movlb	0	; () banked
 11196  00315E  13C4               	iorwf	ana_read@temp& (0+255),f,b
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;analog.c: 19: ADCON0bits.ADON = 0;
 11200  003160  90C2               	bcf	4034,0,c	;volatile
 11201                           
 11202                           ; BSR set to: 0
 11203                           ;analog.c: 21: return temp;
 11204  003162  C0C4  F0C0         	movff	ana_read@temp,?_ana_read
 11205  003166  C0C5  F0C1         	movff	ana_read@temp+1,?_ana_read+1
 11206                           
 11207                           ; BSR set to: 0
 11208                           
 11209                           ; BSR set to: 0
 11210  00316A  0012               	return	
 11211  00316C  FFFF               	dw	65535	; errata NOP
 11212  00316E                     __end_of_ana_read:
 11213                           	opt stack 0
 11214                           tblptru	equ	0xFF8
 11215                           tblptrh	equ	0xFF7
 11216                           tblptrl	equ	0xFF6
 11217                           tablat	equ	0xFF5
 11218                           prodh	equ	0xFF4
 11219                           prodl	equ	0xFF3
 11220                           intcon	equ	0xFF2
 11221                           intcon2	equ	0xFF1
 11222                           postinc0	equ	0xFEE
 11223                           wreg	equ	0xFE8
 11224                           indf1	equ	0xFE7
 11225                           postdec1	equ	0xFE5
 11226                           fsr1h	equ	0xFE2
 11227                           fsr1l	equ	0xFE1
 11228                           indf2	equ	0xFDF
 11229                           postinc2	equ	0xFDE
 11230                           postdec2	equ	0xFDD
 11231                           fsr2h	equ	0xFDA
 11232                           fsr2l	equ	0xFD9
 11233                           status	equ	0xFD8
 11234                           
 11235 ;; *************** function _delay_ms *****************
 11236 ;; Defined at:
 11237 ;;		line 4 in file "time.c"
 11238 ;; Parameters:    Size  Location     Type
 11239 ;;  TimeToWait      2    0[BANK0 ] unsigned short 
 11240 ;; Auto vars:     Size  Location     Type
 11241 ;;  temp            2    4[BANK0 ] unsigned short 
 11242 ;; Return value:  Size  Location     Type
 11243 ;;		None               void
 11244 ;; Registers used:
 11245 ;;		wreg, status,2, status,0
 11246 ;; Tracked objects:
 11247 ;;		On entry : 0/0
 11248 ;;		On exit  : 0/0
 11249 ;;		Unchanged: 0/0
 11250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11251 ;;      Params:         0       2       0       0       0       0       0
 11252 ;;      Locals:         0       2       0       0       0       0       0
 11253 ;;      Temps:          0       2       0       0       0       0       0
 11254 ;;      Totals:         0       6       0       0       0       0       0
 11255 ;;Total ram usage:        6 bytes
 11256 ;; Hardware stack levels used:    1
 11257 ;; Hardware stack levels required when called:    3
 11258 ;; This function calls:
 11259 ;;		Nothing
 11260 ;; This function is called by:
 11261 ;;		_ana_read
 11262 ;;		_arm_UAlim_1A
 11263 ;;		_feu_tir
 11264 ;;		_feu_process
 11265 ;; This function uses a non-reentrant model
 11266 ;;
 11267                           
 11268                           	psect	text51
 11269  003576                     __ptext51:
 11270                           	opt stack 0
 11271  003576                     _delay_ms:
 11272                           	opt stack 24
 11273                           
 11274                           ; BSR set to: 0
 11275                           ;incstack = 0
 11276  003576  FFFF               	dw	65535
 11277                           
 11278                           ;time.c: 6: unsigned short temp = Cptms;
 11279  003578  C04F  F0BE         	movff	_Cptms,delay_ms@temp	;volatile
 11280  00357C  C050  F0BF         	movff	_Cptms+1,delay_ms@temp+1	;volatile
 11281  003580                     l5776:
 11282  003580  0100               	movlb	0	; () banked
 11283  003582  C0BE  F0BC         	movff	delay_ms@temp,??_delay_ms
 11284  003586  0100               	movlb	0	; () banked
 11285  003588  C0BF  F0BD         	movff	delay_ms@temp+1,??_delay_ms+1
 11286  00358C  0100               	movlb	0	; () banked
 11287  00358E  1FBC               	comf	??_delay_ms& (0+255),f,b
 11288  003590  1FBD               	comf	(??_delay_ms+1)& (0+255),f,b
 11289  003592  4BBC               	infsnz	??_delay_ms& (0+255),f,b
 11290  003594  2BBD               	incf	(??_delay_ms+1)& (0+255),f,b
 11291  003596  504F               	movf	_Cptms,w,c	;volatile
 11292  003598  0100               	movlb	0	; () banked
 11293  00359A  27BC               	addwf	??_delay_ms& (0+255),f,b
 11294  00359C  5050               	movf	_Cptms+1,w,c	;volatile
 11295  00359E  0100               	movlb	0	; () banked
 11296  0035A0  23BD               	addwfc	(??_delay_ms+1)& (0+255),f,b
 11297  0035A2  0100               	movlb	0	; () banked
 11298  0035A4  0100               	movlb	0	; () banked
 11299  0035A6  51BA               	movf	delay_ms@TimeToWait& (0+255),w,b
 11300  0035A8  0100               	movlb	0	; () banked
 11301  0035AA  5DBC               	subwf	??_delay_ms& (0+255),w,b
 11302  0035AC  0100               	movlb	0	; () banked
 11303  0035AE  0100               	movlb	0	; () banked
 11304  0035B0  51BB               	movf	(delay_ms@TimeToWait+1)& (0+255),w,b
 11305  0035B2  0100               	movlb	0	; () banked
 11306  0035B4  59BD               	subwfb	(??_delay_ms+1)& (0+255),w,b
 11307  0035B6  B0D8               	btfsc	status,0,c
 11308                           
 11309                           ; BSR set to: 0
 11310                           
 11311                           ; BSR set to: 0
 11312  0035B8  0012               	return	
 11313  0035BA  FFFF               	dw	65535	; assembler added errata NOP
 11314  0035BC  D7E1               	goto	l5776
 11315  0035BE  FFFF               	dw	65535	; errata NOP
 11316  0035C0                     __end_of_delay_ms:
 11317                           	opt stack 0
 11318                           tblptru	equ	0xFF8
 11319                           tblptrh	equ	0xFF7
 11320                           tblptrl	equ	0xFF6
 11321                           tablat	equ	0xFF5
 11322                           prodh	equ	0xFF4
 11323                           prodl	equ	0xFF3
 11324                           intcon	equ	0xFF2
 11325                           intcon2	equ	0xFF1
 11326                           postinc0	equ	0xFEE
 11327                           wreg	equ	0xFE8
 11328                           indf1	equ	0xFE7
 11329                           postdec1	equ	0xFE5
 11330                           fsr1h	equ	0xFE2
 11331                           fsr1l	equ	0xFE1
 11332                           indf2	equ	0xFDF
 11333                           postinc2	equ	0xFDE
 11334                           postdec2	equ	0xFDD
 11335                           fsr2h	equ	0xFDA
 11336                           fsr2l	equ	0xFD9
 11337                           status	equ	0xFD8
 11338                           
 11339 ;; *************** function ___lwtoft *****************
 11340 ;; Defined at:
 11341 ;;		line 28 in file "E:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwtoft.c"
 11342 ;; Parameters:    Size  Location     Type
 11343 ;;  c               2    8[BANK0 ] unsigned int 
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;		None
 11346 ;; Return value:  Size  Location     Type
 11347 ;;                  3    8[BANK0 ] float 
 11348 ;; Registers used:
 11349 ;;		wreg, status,2, status,0, cstack
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11355 ;;      Params:         0       3       0       0       0       0       0
 11356 ;;      Locals:         0       0       0       0       0       0       0
 11357 ;;      Temps:          0       2       0       0       0       0       0
 11358 ;;      Totals:         0       5       0       0       0       0       0
 11359 ;;Total ram usage:        5 bytes
 11360 ;; Hardware stack levels used:    1
 11361 ;; Hardware stack levels required when called:    4
 11362 ;; This function calls:
 11363 ;;		___ftpack
 11364 ;; This function is called by:
 11365 ;;		_check_UAlim
 11366 ;;		_check_UInfla
 11367 ;;		_arm_UAlim_1A
 11368 ;; This function uses a non-reentrant model
 11369 ;;
 11370                           
 11371                           	psect	text52
 11372  00352A                     __ptext52:
 11373                           	opt stack 0
 11374  00352A                     ___lwtoft:
 11375                           	opt stack 24
 11376                           
 11377                           ; BSR set to: 0
 11378                           ;incstack = 0
 11379  00352A  FFFF               	dw	65535
 11380  00352C  0100               	movlb	0	; () banked
 11381  00352E  0100               	movlb	0	; () banked
 11382  003530  C0C2  F0BA         	movff	___lwtoft@c,___ftpack@arg
 11383  003534  0100               	movlb	0	; () banked
 11384  003536  0100               	movlb	0	; () banked
 11385  003538  C0C3  F0BB         	movff	___lwtoft@c+1,___ftpack@arg+1
 11386  00353C  0100               	movlb	0	; () banked
 11387  00353E  0100               	movlb	0	; () banked
 11388  003540  6BBC               	clrf	(___ftpack@arg+2)& (0+255),b
 11389  003542  0100               	movlb	0	; () banked
 11390  003544  6FC5               	movwf	??___lwtoft& (0+255),b
 11391  003546  0E8E               	movlw	142
 11392  003548  0100               	movlb	0	; () banked
 11393  00354A  0100               	movlb	0	; () banked
 11394  00354C  6FBD               	movwf	___ftpack@exp& (0+255),b
 11395  00354E  0100               	movlb	0	; () banked
 11396  003550  51C5               	movf	??___lwtoft& (0+255),w,b
 11397  003552  0100               	movlb	0	; () banked
 11398  003554  6FC6               	movwf	(??___lwtoft+1)& (0+255),b
 11399  003556  0E00               	movlw	0
 11400  003558  0100               	movlb	0	; () banked
 11401  00355A  0100               	movlb	0	; () banked
 11402  00355C  6FBE               	movwf	___ftpack@sign& (0+255),b
 11403  00355E  0100               	movlb	0	; () banked
 11404  003560  51C6               	movf	(??___lwtoft+1)& (0+255),w,b
 11405  003562  EC6C  F011         	call	___ftpack	;wreg free
 11406  003566  C0BA  F0C2         	movff	?___ftpack,?___lwtoft
 11407  00356A  C0BB  F0C3         	movff	?___ftpack+1,?___lwtoft+1
 11408  00356E  C0BC  F0C4         	movff	?___ftpack+2,?___lwtoft+2
 11409  003572  0012               	return	
 11410  003574  FFFF               	dw	65535	; errata NOP
 11411  003576                     __end_of___lwtoft:
 11412                           	opt stack 0
 11413                           tblptru	equ	0xFF8
 11414                           tblptrh	equ	0xFF7
 11415                           tblptrl	equ	0xFF6
 11416                           tablat	equ	0xFF5
 11417                           prodh	equ	0xFF4
 11418                           prodl	equ	0xFF3
 11419                           intcon	equ	0xFF2
 11420                           intcon2	equ	0xFF1
 11421                           postinc0	equ	0xFEE
 11422                           wreg	equ	0xFE8
 11423                           indf1	equ	0xFE7
 11424                           postdec1	equ	0xFE5
 11425                           fsr1h	equ	0xFE2
 11426                           fsr1l	equ	0xFE1
 11427                           indf2	equ	0xFDF
 11428                           postinc2	equ	0xFDE
 11429                           postdec2	equ	0xFDD
 11430                           fsr2h	equ	0xFDA
 11431                           fsr2l	equ	0xFD9
 11432                           status	equ	0xFD8
 11433                           
 11434 ;; *************** function ___fttol *****************
 11435 ;; Defined at:
 11436 ;;		line 44 in file "E:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\fttol.c"
 11437 ;; Parameters:    Size  Location     Type
 11438 ;;  f1              3    0[BANK0 ] float 
 11439 ;; Auto vars:     Size  Location     Type
 11440 ;;  lval            4   10[BANK0 ] unsigned long 
 11441 ;;  exp1            1   14[BANK0 ] unsigned char 
 11442 ;;  sign1           1    9[BANK0 ] unsigned char 
 11443 ;; Return value:  Size  Location     Type
 11444 ;;                  4    0[BANK0 ] long 
 11445 ;; Registers used:
 11446 ;;		wreg, status,2, status,0
 11447 ;; Tracked objects:
 11448 ;;		On entry : 0/0
 11449 ;;		On exit  : 0/0
 11450 ;;		Unchanged: 0/0
 11451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11452 ;;      Params:         0       4       0       0       0       0       0
 11453 ;;      Locals:         0       6       0       0       0       0       0
 11454 ;;      Temps:          0       5       0       0       0       0       0
 11455 ;;      Totals:         0      15       0       0       0       0       0
 11456 ;;Total ram usage:       15 bytes
 11457 ;; Hardware stack levels used:    1
 11458 ;; Hardware stack levels required when called:    3
 11459 ;; This function calls:
 11460 ;;		Nothing
 11461 ;; This function is called by:
 11462 ;;		_check_UAlim
 11463 ;;		_check_UInfla
 11464 ;;		_arm_UAlim_1A
 11465 ;; This function uses a non-reentrant model
 11466 ;;
 11467                           
 11468                           	psect	text53
 11469  001D64                     __ptext53:
 11470                           	opt stack 0
 11471  001D64                     ___fttol:
 11472                           	opt stack 25
 11473                           
 11474                           ;incstack = 0
 11475  001D64  FFFF               	dw	65535
 11476  001D66  0100               	movlb	0	; () banked
 11477  001D68  C0BC  F0BE         	movff	___fttol@f1+2,??___fttol
 11478  001D6C  0100               	movlb	0	; () banked
 11479  001D6E  6BBF               	clrf	(??___fttol+1)& (0+255),b
 11480  001D70  6BC0               	clrf	(??___fttol+2)& (0+255),b
 11481  001D72  0100               	movlb	0	; () banked
 11482  001D74  0100               	movlb	0	; () banked
 11483  001D76  35BB               	rlcf	(___fttol@f1+1)& (0+255),w,b
 11484  001D78  0100               	movlb	0	; () banked
 11485  001D7A  37BE               	rlcf	??___fttol& (0+255),f,b
 11486  001D7C  E301               	bnc	u5381
 11487  001D7E  81BF               	bsf	(??___fttol+1)& (0+255),0,b
 11488  001D80                     u5381:
 11489  001D80  0100               	movlb	0	; () banked
 11490  001D82  51BE               	movf	??___fttol& (0+255),w,b
 11491  001D84  0100               	movlb	0	; () banked
 11492  001D86  0100               	movlb	0	; () banked
 11493  001D88  6FC8               	movwf	___fttol@exp1& (0+255),b
 11494  001D8A  0100               	movlb	0	; () banked
 11495  001D8C  67C8               	tstfsz	___fttol@exp1& (0+255),b
 11496  001D8E  D001               	goto	l6090
 11497  001D90  D066               	goto	u5430
 11498  001D92                     l6090:
 11499                           
 11500                           ; BSR set to: 0
 11501  001D92  0E17               	movlw	23
 11502  001D94  0100               	movlb	0	; () banked
 11503  001D96  6FBE               	movwf	??___fttol& (0+255),b
 11504  001D98  0100               	movlb	0	; () banked
 11505  001D9A  C0BA  F0BF         	movff	___fttol@f1,??___fttol+1
 11506  001D9E  0100               	movlb	0	; () banked
 11507  001DA0  C0BB  F0C0         	movff	___fttol@f1+1,??___fttol+2
 11508  001DA4  0100               	movlb	0	; () banked
 11509  001DA6  C0BC  F0C1         	movff	___fttol@f1+2,??___fttol+3
 11510  001DAA  0100               	movlb	0	; () banked
 11511  001DAC  29BE               	incf	??___fttol& (0+255),w,b
 11512  001DAE  0100               	movlb	0	; () banked
 11513  001DB0  6FC2               	movwf	(??___fttol+4)& (0+255),b
 11514  001DB2  D005               	goto	u5400
 11515  001DB4                     u5405:
 11516  001DB4  0100               	movlb	0	; () banked
 11517  001DB6  90D8               	bcf	status,0,c
 11518  001DB8  33C1               	rrcf	(??___fttol+3)& (0+255),f,b
 11519  001DBA  33C0               	rrcf	(??___fttol+2)& (0+255),f,b
 11520  001DBC  33BF               	rrcf	(??___fttol+1)& (0+255),f,b
 11521  001DBE                     u5400:
 11522  001DBE  0100               	movlb	0	; () banked
 11523  001DC0  2FC2               	decfsz	(??___fttol+4)& (0+255),f,b
 11524  001DC2  D7F8               	goto	u5405
 11525  001DC4  0100               	movlb	0	; () banked
 11526  001DC6  51BF               	movf	(??___fttol+1)& (0+255),w,b
 11527  001DC8  0100               	movlb	0	; () banked
 11528  001DCA  0100               	movlb	0	; () banked
 11529  001DCC  6FC3               	movwf	___fttol@sign1& (0+255),b
 11530                           
 11531                           ; BSR set to: 0
 11532  001DCE  0100               	movlb	0	; () banked
 11533  001DD0  0100               	movlb	0	; () banked
 11534  001DD2  8FBB               	bsf	(___fttol@f1+1)& (0+255),7,b
 11535                           
 11536                           ; BSR set to: 0
 11537  001DD4  0EFF               	movlw	255
 11538  001DD6  0100               	movlb	0	; () banked
 11539  001DD8  0100               	movlb	0	; () banked
 11540  001DDA  17BA               	andwf	___fttol@f1& (0+255),f,b
 11541  001DDC  0EFF               	movlw	255
 11542  001DDE  0100               	movlb	0	; () banked
 11543  001DE0  0100               	movlb	0	; () banked
 11544  001DE2  17BB               	andwf	(___fttol@f1+1)& (0+255),f,b
 11545  001DE4  0E00               	movlw	0
 11546  001DE6  0100               	movlb	0	; () banked
 11547  001DE8  0100               	movlb	0	; () banked
 11548  001DEA  17BC               	andwf	(___fttol@f1+2)& (0+255),f,b
 11549                           
 11550                           ; BSR set to: 0
 11551  001DEC  0100               	movlb	0	; () banked
 11552  001DEE  0100               	movlb	0	; () banked
 11553  001DF0  51BA               	movf	___fttol@f1& (0+255),w,b
 11554  001DF2  0100               	movlb	0	; () banked
 11555  001DF4  0100               	movlb	0	; () banked
 11556  001DF6  6FC4               	movwf	___fttol@lval& (0+255),b
 11557  001DF8  0100               	movlb	0	; () banked
 11558  001DFA  0100               	movlb	0	; () banked
 11559  001DFC  51BB               	movf	(___fttol@f1+1)& (0+255),w,b
 11560  001DFE  0100               	movlb	0	; () banked
 11561  001E00  6FC5               	movwf	(___fttol@lval+1)& (0+255),b
 11562  001E02  0100               	movlb	0	; () banked
 11563  001E04  51BC               	movf	(___fttol@f1+2)& (0+255),w,b
 11564  001E06  0100               	movlb	0	; () banked
 11565  001E08  6FC6               	movwf	(___fttol@lval+2)& (0+255),b
 11566  001E0A  0100               	movlb	0	; () banked
 11567  001E0C  6BC7               	clrf	(___fttol@lval+3)& (0+255),b
 11568                           
 11569                           ; BSR set to: 0
 11570  001E0E  0E8E               	movlw	142
 11571  001E10  0100               	movlb	0	; () banked
 11572  001E12  0100               	movlb	0	; () banked
 11573  001E14  5FC8               	subwf	___fttol@exp1& (0+255),f,b
 11574                           
 11575                           ; BSR set to: 0
 11576  001E16  0100               	movlb	0	; () banked
 11577  001E18  0100               	movlb	0	; () banked
 11578  001E1A  AFC8               	btfss	___fttol@exp1& (0+255),7,b
 11579  001E1C  D01B               	goto	l6112
 11580                           
 11581                           ; BSR set to: 0
 11582  001E1E  0100               	movlb	0	; () banked
 11583  001E20  0100               	movlb	0	; () banked
 11584  001E22  51C8               	movf	___fttol@exp1& (0+255),w,b
 11585  001E24  0A80               	xorlw	128
 11586  001E26  0100               	movlb	0	; () banked
 11587  001E28  6FBE               	movwf	??___fttol& (0+255),b
 11588  001E2A  0EF1               	movlw	241
 11589  001E2C  0A80               	xorlw	128
 11590  001E2E  0100               	movlb	0	; () banked
 11591  001E30  5DBE               	subwf	??___fttol& (0+255),w,b
 11592  001E32  A0D8               	btfss	status,0,c
 11593  001E34  D014               	goto	u5430
 11594  001E36                     l6108:
 11595                           
 11596                           ; BSR set to: 0
 11597  001E36  0100               	movlb	0	; () banked
 11598  001E38  90D8               	bcf	status,0,c
 11599  001E3A  0100               	movlb	0	; () banked
 11600  001E3C  33C7               	rrcf	(___fttol@lval+3)& (0+255),f,b
 11601  001E3E  0100               	movlb	0	; () banked
 11602  001E40  33C6               	rrcf	(___fttol@lval+2)& (0+255),f,b
 11603  001E42  0100               	movlb	0	; () banked
 11604  001E44  33C5               	rrcf	(___fttol@lval+1)& (0+255),f,b
 11605  001E46  0100               	movlb	0	; () banked
 11606  001E48  33C4               	rrcf	___fttol@lval& (0+255),f,b
 11607                           
 11608                           ; BSR set to: 0
 11609  001E4A  0100               	movlb	0	; () banked
 11610  001E4C  0100               	movlb	0	; () banked
 11611  001E4E  3FC8               	incfsz	___fttol@exp1& (0+255),f,b
 11612  001E50  D7F2               	goto	l6108
 11613  001E52  D024               	goto	l6122
 11614  001E54                     l6112:
 11615                           
 11616                           ; BSR set to: 0
 11617  001E54  0E17               	movlw	23
 11618  001E56  0100               	movlb	0	; () banked
 11619  001E58  0100               	movlb	0	; () banked
 11620  001E5A  65C8               	cpfsgt	___fttol@exp1& (0+255),b
 11621  001E5C  D01B               	goto	l6120
 11622  001E5E                     u5430:
 11623                           
 11624                           ; BSR set to: 0
 11625  001E5E  0E00               	movlw	0
 11626  001E60  0100               	movlb	0	; () banked
 11627  001E62  0100               	movlb	0	; () banked
 11628  001E64  6FBA               	movwf	?___fttol& (0+255),b
 11629  001E66  0E00               	movlw	0
 11630  001E68  0100               	movlb	0	; () banked
 11631  001E6A  6FBB               	movwf	(?___fttol+1)& (0+255),b
 11632  001E6C  0E00               	movlw	0
 11633  001E6E  0100               	movlb	0	; () banked
 11634  001E70  6FBC               	movwf	(?___fttol+2)& (0+255),b
 11635  001E72  0E00               	movlw	0
 11636  001E74  0100               	movlb	0	; () banked
 11637  001E76  6FBD               	movwf	(?___fttol+3)& (0+255),b
 11638  001E78  D02E               	goto	l1584
 11639  001E7A                     l6118:
 11640                           
 11641                           ; BSR set to: 0
 11642  001E7A  0100               	movlb	0	; () banked
 11643  001E7C  90D8               	bcf	status,0,c
 11644  001E7E  0100               	movlb	0	; () banked
 11645  001E80  37C4               	rlcf	___fttol@lval& (0+255),f,b
 11646  001E82  0100               	movlb	0	; () banked
 11647  001E84  37C5               	rlcf	(___fttol@lval+1)& (0+255),f,b
 11648  001E86  0100               	movlb	0	; () banked
 11649  001E88  37C6               	rlcf	(___fttol@lval+2)& (0+255),f,b
 11650  001E8A  0100               	movlb	0	; () banked
 11651  001E8C  37C7               	rlcf	(___fttol@lval+3)& (0+255),f,b
 11652  001E8E  0100               	movlb	0	; () banked
 11653  001E90  0100               	movlb	0	; () banked
 11654  001E92  07C8               	decf	___fttol@exp1& (0+255),f,b
 11655  001E94                     l6120:
 11656                           
 11657                           ; BSR set to: 0
 11658  001E94  0100               	movlb	0	; () banked
 11659  001E96  0100               	movlb	0	; () banked
 11660  001E98  67C8               	tstfsz	___fttol@exp1& (0+255),b
 11661  001E9A  D7EF               	goto	l6118
 11662  001E9C                     l6122:
 11663                           
 11664                           ; BSR set to: 0
 11665  001E9C  0100               	movlb	0	; () banked
 11666  001E9E  0100               	movlb	0	; () banked
 11667  001EA0  51C3               	movf	___fttol@sign1& (0+255),w,b
 11668  001EA2  B4D8               	btfsc	status,2,c
 11669  001EA4  D010               	goto	l6126
 11670                           
 11671                           ; BSR set to: 0
 11672  001EA6  0100               	movlb	0	; () banked
 11673  001EA8  0100               	movlb	0	; () banked
 11674  001EAA  1FC7               	comf	(___fttol@lval+3)& (0+255),f,b
 11675  001EAC  0100               	movlb	0	; () banked
 11676  001EAE  1FC6               	comf	(___fttol@lval+2)& (0+255),f,b
 11677  001EB0  0100               	movlb	0	; () banked
 11678  001EB2  1FC5               	comf	(___fttol@lval+1)& (0+255),f,b
 11679  001EB4  0100               	movlb	0	; () banked
 11680  001EB6  6DC4               	negf	___fttol@lval& (0+255),b
 11681  001EB8  0E00               	movlw	0
 11682  001EBA  0100               	movlb	0	; () banked
 11683  001EBC  23C5               	addwfc	(___fttol@lval+1)& (0+255),f,b
 11684  001EBE  0100               	movlb	0	; () banked
 11685  001EC0  23C6               	addwfc	(___fttol@lval+2)& (0+255),f,b
 11686  001EC2  0100               	movlb	0	; () banked
 11687  001EC4  23C7               	addwfc	(___fttol@lval+3)& (0+255),f,b
 11688  001EC6                     l6126:
 11689                           
 11690                           ; BSR set to: 0
 11691  001EC6  C0C4  F0BA         	movff	___fttol@lval,?___fttol
 11692  001ECA  C0C5  F0BB         	movff	___fttol@lval+1,?___fttol+1
 11693  001ECE  C0C6  F0BC         	movff	___fttol@lval+2,?___fttol+2
 11694  001ED2  C0C7  F0BD         	movff	___fttol@lval+3,?___fttol+3
 11695  001ED6                     l1584:
 11696                           
 11697                           ; BSR set to: 0
 11698  001ED6  0012               	return	
 11699  001ED8  FFFF               	dw	65535	; errata NOP
 11700  001EDA                     __end_of___fttol:
 11701                           	opt stack 0
 11702                           tblptru	equ	0xFF8
 11703                           tblptrh	equ	0xFF7
 11704                           tblptrl	equ	0xFF6
 11705                           tablat	equ	0xFF5
 11706                           prodh	equ	0xFF4
 11707                           prodl	equ	0xFF3
 11708                           intcon	equ	0xFF2
 11709                           intcon2	equ	0xFF1
 11710                           postinc0	equ	0xFEE
 11711                           wreg	equ	0xFE8
 11712                           indf1	equ	0xFE7
 11713                           postdec1	equ	0xFE5
 11714                           fsr1h	equ	0xFE2
 11715                           fsr1l	equ	0xFE1
 11716                           indf2	equ	0xFDF
 11717                           postinc2	equ	0xFDE
 11718                           postdec2	equ	0xFDD
 11719                           fsr2h	equ	0xFDA
 11720                           fsr2l	equ	0xFD9
 11721                           status	equ	0xFD8
 11722                           
 11723 ;; *************** function ___ftmul *****************
 11724 ;; Defined at:
 11725 ;;		line 51 in file "E:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\ftmul.c"
 11726 ;; Parameters:    Size  Location     Type
 11727 ;;  f1              3   13[BANK0 ] float 
 11728 ;;  f2              3   16[BANK0 ] float 
 11729 ;; Auto vars:     Size  Location     Type
 11730 ;;  f3_as_produc    3   23[BANK0 ] unsigned um
 11731 ;;  sign            1   27[BANK0 ] unsigned char 
 11732 ;;  cntr            1   26[BANK0 ] unsigned char 
 11733 ;;  exp             1   22[BANK0 ] unsigned char 
 11734 ;; Return value:  Size  Location     Type
 11735 ;;                  3   13[BANK0 ] float 
 11736 ;; Registers used:
 11737 ;;		wreg, status,2, status,0, cstack
 11738 ;; Tracked objects:
 11739 ;;		On entry : 0/0
 11740 ;;		On exit  : 0/0
 11741 ;;		Unchanged: 0/0
 11742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11743 ;;      Params:         0       6       0       0       0       0       0
 11744 ;;      Locals:         0       6       0       0       0       0       0
 11745 ;;      Temps:          0       3       0       0       0       0       0
 11746 ;;      Totals:         0      15       0       0       0       0       0
 11747 ;;Total ram usage:       15 bytes
 11748 ;; Hardware stack levels used:    1
 11749 ;; Hardware stack levels required when called:    4
 11750 ;; This function calls:
 11751 ;;		___ftpack
 11752 ;; This function is called by:
 11753 ;;		_check_UAlim
 11754 ;;		_check_UInfla
 11755 ;;		_arm_UAlim_1A
 11756 ;; This function uses a non-reentrant model
 11757 ;;
 11758                           
 11759                           	psect	text54
 11760  0016D0                     __ptext54:
 11761                           	opt stack 0
 11762  0016D0                     ___ftmul:
 11763                           	opt stack 24
 11764                           
 11765                           ; BSR set to: 0
 11766                           ;incstack = 0
 11767  0016D0  FFFF               	dw	65535
 11768  0016D2  0100               	movlb	0	; () banked
 11769  0016D4  C0C9  F0CD         	movff	___ftmul@f1+2,??___ftmul
 11770  0016D8  0100               	movlb	0	; () banked
 11771  0016DA  6BCE               	clrf	(??___ftmul+1)& (0+255),b
 11772  0016DC  6BCF               	clrf	(??___ftmul+2)& (0+255),b
 11773  0016DE  0100               	movlb	0	; () banked
 11774  0016E0  0100               	movlb	0	; () banked
 11775  0016E2  35C8               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 11776  0016E4  0100               	movlb	0	; () banked
 11777  0016E6  37CD               	rlcf	??___ftmul& (0+255),f,b
 11778  0016E8  E301               	bnc	u5321
 11779  0016EA  81CE               	bsf	(??___ftmul+1)& (0+255),0,b
 11780  0016EC                     u5321:
 11781  0016EC  0100               	movlb	0	; () banked
 11782  0016EE  51CD               	movf	??___ftmul& (0+255),w,b
 11783  0016F0  0100               	movlb	0	; () banked
 11784  0016F2  0100               	movlb	0	; () banked
 11785  0016F4  6FD0               	movwf	___ftmul@exp& (0+255),b
 11786  0016F6  0100               	movlb	0	; () banked
 11787  0016F8  67D0               	tstfsz	___ftmul@exp& (0+255),b
 11788  0016FA  D001               	goto	l6042
 11789  0016FC  D015               	goto	u5350
 11790  0016FE                     l6042:
 11791                           
 11792                           ; BSR set to: 0
 11793  0016FE  0100               	movlb	0	; () banked
 11794  001700  C0CC  F0CD         	movff	___ftmul@f2+2,??___ftmul
 11795  001704  0100               	movlb	0	; () banked
 11796  001706  6BCE               	clrf	(??___ftmul+1)& (0+255),b
 11797  001708  6BCF               	clrf	(??___ftmul+2)& (0+255),b
 11798  00170A  0100               	movlb	0	; () banked
 11799  00170C  0100               	movlb	0	; () banked
 11800  00170E  35CB               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 11801  001710  0100               	movlb	0	; () banked
 11802  001712  37CD               	rlcf	??___ftmul& (0+255),f,b
 11803  001714  E301               	bnc	u5341
 11804  001716  81CE               	bsf	(??___ftmul+1)& (0+255),0,b
 11805  001718                     u5341:
 11806  001718  0100               	movlb	0	; () banked
 11807  00171A  51CD               	movf	??___ftmul& (0+255),w,b
 11808  00171C  0100               	movlb	0	; () banked
 11809  00171E  0100               	movlb	0	; () banked
 11810  001720  6FD5               	movwf	___ftmul@sign& (0+255),b
 11811  001722  0100               	movlb	0	; () banked
 11812  001724  67D5               	tstfsz	___ftmul@sign& (0+255),b
 11813  001726  D00D               	goto	l6048
 11814  001728                     u5350:
 11815                           
 11816                           ; BSR set to: 0
 11817  001728  0E00               	movlw	0
 11818  00172A  0100               	movlb	0	; () banked
 11819  00172C  0100               	movlb	0	; () banked
 11820  00172E  6FC7               	movwf	?___ftmul& (0+255),b
 11821  001730  0E00               	movlw	0
 11822  001732  0100               	movlb	0	; () banked
 11823  001734  0100               	movlb	0	; () banked
 11824  001736  6FC8               	movwf	(?___ftmul+1)& (0+255),b
 11825  001738  0E00               	movlw	0
 11826  00173A  0100               	movlb	0	; () banked
 11827  00173C  0100               	movlb	0	; () banked
 11828  00173E  6FC9               	movwf	(?___ftmul+2)& (0+255),b
 11829  001740  D0A7               	goto	l1564
 11830  001742                     l6048:
 11831                           
 11832                           ; BSR set to: 0
 11833  001742  0100               	movlb	0	; () banked
 11834  001744  0100               	movlb	0	; () banked
 11835  001746  51D5               	movf	___ftmul@sign& (0+255),w,b
 11836  001748  0F7B               	addlw	123
 11837  00174A  0100               	movlb	0	; () banked
 11838  00174C  0100               	movlb	0	; () banked
 11839  00174E  27D0               	addwf	___ftmul@exp& (0+255),f,b
 11840                           
 11841                           ; BSR set to: 0
 11842  001750  C0C9  F0D5         	movff	___ftmul@f1+2,___ftmul@sign
 11843  001754  0100               	movlb	0	; () banked
 11844  001756  0100               	movlb	0	; () banked
 11845  001758  51CC               	movf	(___ftmul@f2+2)& (0+255),w,b
 11846  00175A  0100               	movlb	0	; () banked
 11847  00175C  0100               	movlb	0	; () banked
 11848  00175E  1BD5               	xorwf	___ftmul@sign& (0+255),f,b
 11849  001760  0E80               	movlw	128
 11850  001762  0100               	movlb	0	; () banked
 11851  001764  0100               	movlb	0	; () banked
 11852  001766  17D5               	andwf	___ftmul@sign& (0+255),f,b
 11853                           
 11854                           ; BSR set to: 0
 11855  001768  0100               	movlb	0	; () banked
 11856  00176A  0100               	movlb	0	; () banked
 11857  00176C  8FC8               	bsf	(___ftmul@f1+1)& (0+255),7,b
 11858                           
 11859                           ; BSR set to: 0
 11860  00176E  0100               	movlb	0	; () banked
 11861  001770  0100               	movlb	0	; () banked
 11862  001772  8FCB               	bsf	(___ftmul@f2+1)& (0+255),7,b
 11863                           
 11864                           ; BSR set to: 0
 11865  001774  0EFF               	movlw	255
 11866  001776  0100               	movlb	0	; () banked
 11867  001778  0100               	movlb	0	; () banked
 11868  00177A  17CA               	andwf	___ftmul@f2& (0+255),f,b
 11869  00177C  0EFF               	movlw	255
 11870  00177E  0100               	movlb	0	; () banked
 11871  001780  0100               	movlb	0	; () banked
 11872  001782  17CB               	andwf	(___ftmul@f2+1)& (0+255),f,b
 11873  001784  0E00               	movlw	0
 11874  001786  0100               	movlb	0	; () banked
 11875  001788  0100               	movlb	0	; () banked
 11876  00178A  17CC               	andwf	(___ftmul@f2+2)& (0+255),f,b
 11877                           
 11878                           ; BSR set to: 0
 11879  00178C  0E00               	movlw	0
 11880  00178E  0100               	movlb	0	; () banked
 11881  001790  0100               	movlb	0	; () banked
 11882  001792  6FD1               	movwf	___ftmul@f3_as_product& (0+255),b
 11883  001794  0E00               	movlw	0
 11884  001796  0100               	movlb	0	; () banked
 11885  001798  0100               	movlb	0	; () banked
 11886  00179A  6FD2               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 11887  00179C  0E00               	movlw	0
 11888  00179E  0100               	movlb	0	; () banked
 11889  0017A0  0100               	movlb	0	; () banked
 11890  0017A2  6FD3               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 11891                           
 11892                           ; BSR set to: 0
 11893  0017A4  0100               	movlb	0	; () banked
 11894  0017A6  6FCD               	movwf	??___ftmul& (0+255),b
 11895  0017A8  0E07               	movlw	7
 11896  0017AA  0100               	movlb	0	; () banked
 11897  0017AC  0100               	movlb	0	; () banked
 11898  0017AE  6FD4               	movwf	___ftmul@cntr& (0+255),b
 11899  0017B0  0100               	movlb	0	; () banked
 11900  0017B2  51CD               	movf	??___ftmul& (0+255),w,b
 11901  0017B4                     l6062:
 11902                           
 11903                           ; BSR set to: 0
 11904  0017B4  0100               	movlb	0	; () banked
 11905  0017B6  0100               	movlb	0	; () banked
 11906  0017B8  A1C7               	btfss	___ftmul@f1& (0+255),0,b
 11907  0017BA  D012               	goto	l6066
 11908                           
 11909                           ; BSR set to: 0
 11910  0017BC  0100               	movlb	0	; () banked
 11911  0017BE  0100               	movlb	0	; () banked
 11912  0017C0  51CA               	movf	___ftmul@f2& (0+255),w,b
 11913  0017C2  0100               	movlb	0	; () banked
 11914  0017C4  0100               	movlb	0	; () banked
 11915  0017C6  27D1               	addwf	___ftmul@f3_as_product& (0+255),f,b
 11916  0017C8  0100               	movlb	0	; () banked
 11917  0017CA  0100               	movlb	0	; () banked
 11918  0017CC  51CB               	movf	(___ftmul@f2+1)& (0+255),w,b
 11919  0017CE  0100               	movlb	0	; () banked
 11920  0017D0  0100               	movlb	0	; () banked
 11921  0017D2  23D2               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 11922  0017D4  0100               	movlb	0	; () banked
 11923  0017D6  0100               	movlb	0	; () banked
 11924  0017D8  51CC               	movf	(___ftmul@f2+2)& (0+255),w,b
 11925  0017DA  0100               	movlb	0	; () banked
 11926  0017DC  0100               	movlb	0	; () banked
 11927  0017DE  23D3               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 11928  0017E0                     l6066:
 11929                           
 11930                           ; BSR set to: 0
 11931  0017E0  0100               	movlb	0	; () banked
 11932  0017E2  90D8               	bcf	status,0,c
 11933  0017E4  0100               	movlb	0	; () banked
 11934  0017E6  33C9               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 11935  0017E8  0100               	movlb	0	; () banked
 11936  0017EA  33C8               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 11937  0017EC  0100               	movlb	0	; () banked
 11938  0017EE  33C7               	rrcf	___ftmul@f1& (0+255),f,b
 11939  0017F0  0100               	movlb	0	; () banked
 11940  0017F2  90D8               	bcf	status,0,c
 11941  0017F4  0100               	movlb	0	; () banked
 11942  0017F6  37CA               	rlcf	___ftmul@f2& (0+255),f,b
 11943  0017F8  0100               	movlb	0	; () banked
 11944  0017FA  37CB               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 11945  0017FC  0100               	movlb	0	; () banked
 11946  0017FE  37CC               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 11947                           
 11948                           ; BSR set to: 0
 11949  001800  0100               	movlb	0	; () banked
 11950  001802  0100               	movlb	0	; () banked
 11951  001804  2FD4               	decfsz	___ftmul@cntr& (0+255),f,b
 11952  001806  D7D6               	goto	l6062
 11953                           
 11954                           ; BSR set to: 0
 11955                           
 11956                           ; BSR set to: 0
 11957  001808  0100               	movlb	0	; () banked
 11958  00180A  6FCD               	movwf	??___ftmul& (0+255),b
 11959  00180C  0E09               	movlw	9
 11960  00180E  0100               	movlb	0	; () banked
 11961  001810  0100               	movlb	0	; () banked
 11962  001812  6FD4               	movwf	___ftmul@cntr& (0+255),b
 11963  001814  0100               	movlb	0	; () banked
 11964  001816  51CD               	movf	??___ftmul& (0+255),w,b
 11965  001818                     l6072:
 11966                           
 11967                           ; BSR set to: 0
 11968  001818  0100               	movlb	0	; () banked
 11969  00181A  0100               	movlb	0	; () banked
 11970  00181C  A1C7               	btfss	___ftmul@f1& (0+255),0,b
 11971  00181E  D012               	goto	l6076
 11972                           
 11973                           ; BSR set to: 0
 11974  001820  0100               	movlb	0	; () banked
 11975  001822  0100               	movlb	0	; () banked
 11976  001824  51CA               	movf	___ftmul@f2& (0+255),w,b
 11977  001826  0100               	movlb	0	; () banked
 11978  001828  0100               	movlb	0	; () banked
 11979  00182A  27D1               	addwf	___ftmul@f3_as_product& (0+255),f,b
 11980  00182C  0100               	movlb	0	; () banked
 11981  00182E  0100               	movlb	0	; () banked
 11982  001830  51CB               	movf	(___ftmul@f2+1)& (0+255),w,b
 11983  001832  0100               	movlb	0	; () banked
 11984  001834  0100               	movlb	0	; () banked
 11985  001836  23D2               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 11986  001838  0100               	movlb	0	; () banked
 11987  00183A  0100               	movlb	0	; () banked
 11988  00183C  51CC               	movf	(___ftmul@f2+2)& (0+255),w,b
 11989  00183E  0100               	movlb	0	; () banked
 11990  001840  0100               	movlb	0	; () banked
 11991  001842  23D3               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 11992  001844                     l6076:
 11993                           
 11994                           ; BSR set to: 0
 11995  001844  0100               	movlb	0	; () banked
 11996  001846  90D8               	bcf	status,0,c
 11997  001848  0100               	movlb	0	; () banked
 11998  00184A  33C9               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 11999  00184C  0100               	movlb	0	; () banked
 12000  00184E  33C8               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 12001  001850  0100               	movlb	0	; () banked
 12002  001852  33C7               	rrcf	___ftmul@f1& (0+255),f,b
 12003  001854  0100               	movlb	0	; () banked
 12004  001856  90D8               	bcf	status,0,c
 12005  001858  0100               	movlb	0	; () banked
 12006  00185A  33D3               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 12007  00185C  0100               	movlb	0	; () banked
 12008  00185E  33D2               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 12009  001860  0100               	movlb	0	; () banked
 12010  001862  33D1               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 12011                           
 12012                           ; BSR set to: 0
 12013  001864  0100               	movlb	0	; () banked
 12014  001866  0100               	movlb	0	; () banked
 12015  001868  2FD4               	decfsz	___ftmul@cntr& (0+255),f,b
 12016  00186A  D7D6               	goto	l6072
 12017                           
 12018                           ; BSR set to: 0
 12019                           
 12020                           ; BSR set to: 0
 12021  00186C  C0D1  F0BA         	movff	___ftmul@f3_as_product,___ftpack@arg
 12022  001870  C0D2  F0BB         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 12023  001874  C0D3  F0BC         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 12024  001878  C0D0  F0BD         	movff	___ftmul@exp,___ftpack@exp
 12025  00187C  C0D5  F0BE         	movff	___ftmul@sign,___ftpack@sign
 12026  001880  EC6C  F011         	call	___ftpack	;wreg free
 12027  001884  C0BA  F0C7         	movff	?___ftpack,?___ftmul
 12028  001888  C0BB  F0C8         	movff	?___ftpack+1,?___ftmul+1
 12029  00188C  C0BC  F0C9         	movff	?___ftpack+2,?___ftmul+2
 12030  001890                     l1564:
 12031  001890  0012               	return	
 12032  001892  FFFF               	dw	65535	; errata NOP
 12033  001894                     __end_of___ftmul:
 12034                           	opt stack 0
 12035                           tblptru	equ	0xFF8
 12036                           tblptrh	equ	0xFF7
 12037                           tblptrl	equ	0xFF6
 12038                           tablat	equ	0xFF5
 12039                           prodh	equ	0xFF4
 12040                           prodl	equ	0xFF3
 12041                           intcon	equ	0xFF2
 12042                           intcon2	equ	0xFF1
 12043                           postinc0	equ	0xFEE
 12044                           wreg	equ	0xFE8
 12045                           indf1	equ	0xFE7
 12046                           postdec1	equ	0xFE5
 12047                           fsr1h	equ	0xFE2
 12048                           fsr1l	equ	0xFE1
 12049                           indf2	equ	0xFDF
 12050                           postinc2	equ	0xFDE
 12051                           postdec2	equ	0xFDD
 12052                           fsr2h	equ	0xFDA
 12053                           fsr2l	equ	0xFD9
 12054                           status	equ	0xFD8
 12055                           
 12056 ;; *************** function ___ftpack *****************
 12057 ;; Defined at:
 12058 ;;		line 62 in file "E:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\float.c"
 12059 ;; Parameters:    Size  Location     Type
 12060 ;;  arg             3    0[BANK0 ] unsigned um
 12061 ;;  exp             1    3[BANK0 ] unsigned char 
 12062 ;;  sign            1    4[BANK0 ] unsigned char 
 12063 ;; Auto vars:     Size  Location     Type
 12064 ;;		None
 12065 ;; Return value:  Size  Location     Type
 12066 ;;                  3    0[BANK0 ] float 
 12067 ;; Registers used:
 12068 ;;		wreg, status,2, status,0
 12069 ;; Tracked objects:
 12070 ;;		On entry : 0/0
 12071 ;;		On exit  : 0/0
 12072 ;;		Unchanged: 0/0
 12073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12074 ;;      Params:         0       5       0       0       0       0       0
 12075 ;;      Locals:         0       0       0       0       0       0       0
 12076 ;;      Temps:          0       3       0       0       0       0       0
 12077 ;;      Totals:         0       8       0       0       0       0       0
 12078 ;;Total ram usage:        8 bytes
 12079 ;; Hardware stack levels used:    1
 12080 ;; Hardware stack levels required when called:    3
 12081 ;; This function calls:
 12082 ;;		Nothing
 12083 ;; This function is called by:
 12084 ;;		___ftmul
 12085 ;;		___lwtoft
 12086 ;; This function uses a non-reentrant model
 12087 ;;
 12088                           
 12089                           	psect	text55
 12090  0022D8                     __ptext55:
 12091                           	opt stack 0
 12092  0022D8                     ___ftpack:
 12093                           	opt stack 24
 12094                           
 12095                           ;incstack = 0
 12096  0022D8  FFFF               	dw	65535
 12097  0022DA  0100               	movlb	0	; () banked
 12098  0022DC  0100               	movlb	0	; () banked
 12099  0022DE  51BD               	movf	___ftpack@exp& (0+255),w,b
 12100  0022E0  B4D8               	btfsc	status,2,c
 12101  0022E2  D009               	goto	l5782
 12102                           
 12103                           ; BSR set to: 0
 12104  0022E4  0100               	movlb	0	; () banked
 12105  0022E6  0100               	movlb	0	; () banked
 12106  0022E8  51BA               	movf	___ftpack@arg& (0+255),w,b
 12107  0022EA  0100               	movlb	0	; () banked
 12108  0022EC  11BB               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 12109  0022EE  0100               	movlb	0	; () banked
 12110  0022F0  11BC               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 12111  0022F2  A4D8               	btfss	status,2,c
 12112  0022F4  D018               	goto	l5788
 12113  0022F6                     l5782:
 12114                           
 12115                           ; BSR set to: 0
 12116  0022F6  0E00               	movlw	0
 12117  0022F8  0100               	movlb	0	; () banked
 12118  0022FA  0100               	movlb	0	; () banked
 12119  0022FC  6FBA               	movwf	?___ftpack& (0+255),b
 12120  0022FE  0E00               	movlw	0
 12121  002300  0100               	movlb	0	; () banked
 12122  002302  0100               	movlb	0	; () banked
 12123  002304  6FBB               	movwf	(?___ftpack+1)& (0+255),b
 12124  002306  0E00               	movlw	0
 12125  002308  0100               	movlb	0	; () banked
 12126  00230A  0100               	movlb	0	; () banked
 12127  00230C  6FBC               	movwf	(?___ftpack+2)& (0+255),b
 12128  00230E  D081               	goto	l1480
 12129  002310                     l5786:
 12130                           
 12131                           ; BSR set to: 0
 12132  002310  0100               	movlb	0	; () banked
 12133  002312  0100               	movlb	0	; () banked
 12134  002314  2BBD               	incf	___ftpack@exp& (0+255),f,b
 12135  002316  0100               	movlb	0	; () banked
 12136  002318  90D8               	bcf	status,0,c
 12137  00231A  0100               	movlb	0	; () banked
 12138  00231C  33BC               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12139  00231E  0100               	movlb	0	; () banked
 12140  002320  33BB               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12141  002322  0100               	movlb	0	; () banked
 12142  002324  33BA               	rrcf	___ftpack@arg& (0+255),f,b
 12143  002326                     l5788:
 12144                           
 12145                           ; BSR set to: 0
 12146  002326  0E00               	movlw	0
 12147  002328  0100               	movlb	0	; () banked
 12148  00232A  0100               	movlb	0	; () banked
 12149  00232C  15BA               	andwf	___ftpack@arg& (0+255),w,b
 12150  00232E  0100               	movlb	0	; () banked
 12151  002330  6FBF               	movwf	??___ftpack& (0+255),b
 12152  002332  0E00               	movlw	0
 12153  002334  0100               	movlb	0	; () banked
 12154  002336  0100               	movlb	0	; () banked
 12155  002338  15BB               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12156  00233A  0100               	movlb	0	; () banked
 12157  00233C  6FC0               	movwf	(??___ftpack+1)& (0+255),b
 12158  00233E  0EFE               	movlw	254
 12159  002340  0100               	movlb	0	; () banked
 12160  002342  0100               	movlb	0	; () banked
 12161  002344  15BC               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12162  002346  0100               	movlb	0	; () banked
 12163  002348  6FC1               	movwf	(??___ftpack+2)& (0+255),b
 12164  00234A  0100               	movlb	0	; () banked
 12165  00234C  51BF               	movf	??___ftpack& (0+255),w,b
 12166  00234E  11C0               	iorwf	(??___ftpack+1)& (0+255),w,b
 12167  002350  11C1               	iorwf	(??___ftpack+2)& (0+255),w,b
 12168  002352  B4D8               	btfsc	status,2,c
 12169  002354  D018               	goto	l5794
 12170  002356  D7DC               	goto	l5786
 12171  002358                     l5790:
 12172                           
 12173                           ; BSR set to: 0
 12174  002358  0100               	movlb	0	; () banked
 12175  00235A  0100               	movlb	0	; () banked
 12176  00235C  2BBD               	incf	___ftpack@exp& (0+255),f,b
 12177                           
 12178                           ; BSR set to: 0
 12179  00235E  0E01               	movlw	1
 12180  002360  0100               	movlb	0	; () banked
 12181  002362  0100               	movlb	0	; () banked
 12182  002364  27BA               	addwf	___ftpack@arg& (0+255),f,b
 12183  002366  0E00               	movlw	0
 12184  002368  0100               	movlb	0	; () banked
 12185  00236A  0100               	movlb	0	; () banked
 12186  00236C  23BB               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 12187  00236E  0E00               	movlw	0
 12188  002370  0100               	movlb	0	; () banked
 12189  002372  0100               	movlb	0	; () banked
 12190  002374  23BC               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 12191  002376  0100               	movlb	0	; () banked
 12192  002378  90D8               	bcf	status,0,c
 12193  00237A  0100               	movlb	0	; () banked
 12194  00237C  33BC               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 12195  00237E  0100               	movlb	0	; () banked
 12196  002380  33BB               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 12197  002382  0100               	movlb	0	; () banked
 12198  002384  33BA               	rrcf	___ftpack@arg& (0+255),f,b
 12199  002386                     l5794:
 12200                           
 12201                           ; BSR set to: 0
 12202  002386  0E00               	movlw	0
 12203  002388  0100               	movlb	0	; () banked
 12204  00238A  0100               	movlb	0	; () banked
 12205  00238C  15BA               	andwf	___ftpack@arg& (0+255),w,b
 12206  00238E  0100               	movlb	0	; () banked
 12207  002390  6FBF               	movwf	??___ftpack& (0+255),b
 12208  002392  0E00               	movlw	0
 12209  002394  0100               	movlb	0	; () banked
 12210  002396  0100               	movlb	0	; () banked
 12211  002398  15BB               	andwf	(___ftpack@arg+1)& (0+255),w,b
 12212  00239A  0100               	movlb	0	; () banked
 12213  00239C  6FC0               	movwf	(??___ftpack+1)& (0+255),b
 12214  00239E  0EFF               	movlw	255
 12215  0023A0  0100               	movlb	0	; () banked
 12216  0023A2  0100               	movlb	0	; () banked
 12217  0023A4  15BC               	andwf	(___ftpack@arg+2)& (0+255),w,b
 12218  0023A6  0100               	movlb	0	; () banked
 12219  0023A8  6FC1               	movwf	(??___ftpack+2)& (0+255),b
 12220  0023AA  0100               	movlb	0	; () banked
 12221  0023AC  51BF               	movf	??___ftpack& (0+255),w,b
 12222  0023AE  11C0               	iorwf	(??___ftpack+1)& (0+255),w,b
 12223  0023B0  11C1               	iorwf	(??___ftpack+2)& (0+255),w,b
 12224  0023B2  B4D8               	btfsc	status,2,c
 12225  0023B4  D00C               	goto	l5798
 12226  0023B6  D7D0               	goto	l5790
 12227  0023B8                     l5796:
 12228                           
 12229                           ; BSR set to: 0
 12230  0023B8  0100               	movlb	0	; () banked
 12231  0023BA  0100               	movlb	0	; () banked
 12232  0023BC  07BD               	decf	___ftpack@exp& (0+255),f,b
 12233  0023BE  0100               	movlb	0	; () banked
 12234  0023C0  90D8               	bcf	status,0,c
 12235  0023C2  0100               	movlb	0	; () banked
 12236  0023C4  37BA               	rlcf	___ftpack@arg& (0+255),f,b
 12237  0023C6  0100               	movlb	0	; () banked
 12238  0023C8  37BB               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 12239  0023CA  0100               	movlb	0	; () banked
 12240  0023CC  37BC               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 12241  0023CE                     l5798:
 12242                           
 12243                           ; BSR set to: 0
 12244  0023CE  0100               	movlb	0	; () banked
 12245  0023D0  0100               	movlb	0	; () banked
 12246  0023D2  AFBB               	btfss	(___ftpack@arg+1)& (0+255),7,b
 12247  0023D4  D7F1               	goto	l5796
 12248                           
 12249                           ; BSR set to: 0
 12250  0023D6  0100               	movlb	0	; () banked
 12251  0023D8  0100               	movlb	0	; () banked
 12252  0023DA  B1BD               	btfsc	___ftpack@exp& (0+255),0,b
 12253  0023DC  D003               	goto	l5802
 12254                           
 12255                           ; BSR set to: 0
 12256  0023DE  0100               	movlb	0	; () banked
 12257  0023E0  0100               	movlb	0	; () banked
 12258  0023E2  9FBB               	bcf	(___ftpack@arg+1)& (0+255),7,b
 12259  0023E4                     l5802:
 12260                           
 12261                           ; BSR set to: 0
 12262  0023E4  0100               	movlb	0	; () banked
 12263  0023E6  90D8               	bcf	status,0,c
 12264  0023E8  33BD               	rrcf	___ftpack@exp& (0+255),f,b
 12265  0023EA  0100               	movlb	0	; () banked
 12266  0023EC  0100               	movlb	0	; () banked
 12267  0023EE  51BD               	movf	___ftpack@exp& (0+255),w,b
 12268  0023F0  0100               	movlb	0	; () banked
 12269  0023F2  0100               	movlb	0	; () banked
 12270  0023F4  13BC               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 12271                           
 12272                           ; BSR set to: 0
 12273  0023F6  0100               	movlb	0	; () banked
 12274  0023F8  0100               	movlb	0	; () banked
 12275  0023FA  51BE               	movf	___ftpack@sign& (0+255),w,b
 12276  0023FC  B4D8               	btfsc	status,2,c
 12277  0023FE  D003               	goto	l5808
 12278                           
 12279                           ; BSR set to: 0
 12280  002400  0100               	movlb	0	; () banked
 12281  002402  0100               	movlb	0	; () banked
 12282  002404  8FBC               	bsf	(___ftpack@arg+2)& (0+255),7,b
 12283  002406                     l5808:
 12284                           
 12285                           ; BSR set to: 0
 12286  002406  C0BA  F0BA         	movff	___ftpack@arg,?___ftpack
 12287  00240A  C0BB  F0BB         	movff	___ftpack@arg+1,?___ftpack+1
 12288  00240E  C0BC  F0BC         	movff	___ftpack@arg+2,?___ftpack+2
 12289  002412                     l1480:
 12290                           
 12291                           ; BSR set to: 0
 12292  002412  0012               	return	
 12293  002414  FFFF               	dw	65535	; errata NOP
 12294  002416                     __end_of___ftpack:
 12295                           	opt stack 0
 12296                           tblptru	equ	0xFF8
 12297                           tblptrh	equ	0xFF7
 12298                           tblptrl	equ	0xFF6
 12299                           tablat	equ	0xFF5
 12300                           prodh	equ	0xFF4
 12301                           prodl	equ	0xFF3
 12302                           intcon	equ	0xFF2
 12303                           intcon2	equ	0xFF1
 12304                           postinc0	equ	0xFEE
 12305                           wreg	equ	0xFE8
 12306                           indf1	equ	0xFE7
 12307                           postdec1	equ	0xFE5
 12308                           fsr1h	equ	0xFE2
 12309                           fsr1l	equ	0xFE1
 12310                           indf2	equ	0xFDF
 12311                           postinc2	equ	0xFDE
 12312                           postdec2	equ	0xFDD
 12313                           fsr2h	equ	0xFDA
 12314                           fsr2l	equ	0xFD9
 12315                           status	equ	0xFD8
 12316                           
 12317 ;; *************** function _Low_priority *****************
 12318 ;; Defined at:
 12319 ;;		line 51 in file "main.c"
 12320 ;; Parameters:    Size  Location     Type
 12321 ;;		None
 12322 ;; Auto vars:     Size  Location     Type
 12323 ;;		None
 12324 ;; Return value:  Size  Location     Type
 12325 ;;		None               void
 12326 ;; Registers used:
 12327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12328 ;; Tracked objects:
 12329 ;;		On entry : 0/0
 12330 ;;		On exit  : 0/0
 12331 ;;		Unchanged: 0/0
 12332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12333 ;;      Params:         0       0       0       0       0       0       0
 12334 ;;      Locals:         0       0       0       0       0       0       0
 12335 ;;      Temps:         17       0       0       0       0       0       0
 12336 ;;      Totals:        17       0       0       0       0       0       0
 12337 ;;Total ram usage:       17 bytes
 12338 ;; Hardware stack levels used:    1
 12339 ;; Hardware stack levels required when called:    2
 12340 ;; This function calls:
 12341 ;;		Nothing
 12342 ;; This function is called by:
 12343 ;;		Interrupt level 1
 12344 ;; This function uses a non-reentrant model
 12345 ;;
 12346                           
 12347                           	psect	intcodelo
 12348  000018                     __pintcodelo:
 12349                           	opt stack 0
 12350  000018                     _Low_priority:
 12351                           	opt stack 23
 12352                           
 12353                           ; BSR set to: 0
 12354                           ;incstack = 0
 12355  000018  FFFF               	dw	65535	; errata NOP
 12356  00001A  CFD8 F01D          	movff	status,??_Low_priority
 12357  00001E  CFE8 F01E          	movff	wreg,??_Low_priority+1
 12358  000022  CFE0 F01F          	movff	bsr,??_Low_priority+2
 12359  000026  CFFA F020          	movff	pclath,??_Low_priority+3
 12360  00002A  CFFB F021          	movff	pclatu,??_Low_priority+4
 12361  00002E  CFE9 F022          	movff	fsr0l,??_Low_priority+5
 12362  000032  CFEA F023          	movff	fsr0h,??_Low_priority+6
 12363  000036  CFE1 F024          	movff	fsr1l,??_Low_priority+7
 12364  00003A  CFE2 F025          	movff	fsr1h,??_Low_priority+8
 12365  00003E  CFD9 F026          	movff	fsr2l,??_Low_priority+9
 12366  000042  CFDA F027          	movff	fsr2h,??_Low_priority+10
 12367  000046  CFF3 F028          	movff	prodl,??_Low_priority+11
 12368  00004A  CFF4 F029          	movff	prodh,??_Low_priority+12
 12369  00004E  CFF6 F02A          	movff	tblptrl,??_Low_priority+13
 12370  000052  CFF7 F02B          	movff	tblptrh,??_Low_priority+14
 12371  000056  CFF8 F02C          	movff	tblptru,??_Low_priority+15
 12372  00005A  CFF5 F02D          	movff	tablat,??_Low_priority+16
 12373                           
 12374                           ;main.c: 53: if (RCIE && RCIF)
 12375  00005E  BA9D               	btfsc	3997,5,c	;volatile
 12376  000060  AA9E               	btfss	3998,5,c	;volatile
 12377  000062  D023               	goto	i1l86
 12378                           
 12379                           ;main.c: 54: {
 12380                           ;main.c: 55: Cf.Data[Cf.Index] = RCREG;
 12381  000064  0101               	movlb	1	; () banked
 12382  000066  0101               	movlb	1	; () banked
 12383  000068  5174               	movf	(_Cf+116)& (0+255),w,b	;volatile
 12384  00006A  0D01               	mullw	1
 12385  00006C  0101               	movlb	1	; () banked
 12386  00006E  0E00               	movlw	low _Cf	;volatile
 12387  000070  24F3               	addwf	prodl,w,c
 12388  000072  6ED9               	movwf	fsr2l,c
 12389  000074  0101               	movlb	1	; () banked
 12390  000076  0E01               	movlw	high _Cf	;volatile
 12391  000078  20F4               	addwfc	prodh,w,c
 12392  00007A  6EDA               	movwf	fsr2h,c
 12393  00007C  CFAE FFDF          	movff	4014,indf2	;volatile
 12394                           
 12395                           ;main.c: 56: TXREG = Cf.Data[Cf.Index];
 12396  000080  0101               	movlb	1	; () banked
 12397  000082  0101               	movlb	1	; () banked
 12398  000084  5174               	movf	(_Cf+116)& (0+255),w,b	;volatile
 12399  000086  0D01               	mullw	1
 12400  000088  0101               	movlb	1	; () banked
 12401  00008A  0E00               	movlw	low _Cf	;volatile
 12402  00008C  24F3               	addwf	prodl,w,c
 12403  00008E  6ED9               	movwf	fsr2l,c
 12404  000090  0101               	movlb	1	; () banked
 12405  000092  0E01               	movlw	high _Cf	;volatile
 12406  000094  20F4               	addwfc	prodh,w,c
 12407  000096  6EDA               	movwf	fsr2h,c
 12408  000098  50DF               	movf	indf2,w,c
 12409  00009A  6EAD               	movwf	4013,c	;volatile
 12410                           
 12411                           ; BSR set to: 1
 12412                           ;main.c: 58: Cf.Index ++;
 12413  00009C  0101               	movlb	1	; () banked
 12414  00009E  0101               	movlb	1	; () banked
 12415  0000A0  2B74               	incf	(_Cf+116)& (0+255),f,b	;volatile
 12416                           
 12417                           ; BSR set to: 1
 12418                           ;main.c: 60: Cf.Time1 = Cptms;
 12419  0000A2  C04F  F175         	movff	_Cptms,_Cf+117	;volatile
 12420  0000A6  C050  F176         	movff	_Cptms+1,_Cf+118	;volatile
 12421  0000AA                     i1l86:
 12422  0000AA  C02D  FFF5         	movff	??_Low_priority+16,tablat
 12423  0000AE  C02C  FFF8         	movff	??_Low_priority+15,tblptru
 12424  0000B2  C02B  FFF7         	movff	??_Low_priority+14,tblptrh
 12425  0000B6  C02A  FFF6         	movff	??_Low_priority+13,tblptrl
 12426  0000BA  C029  FFF4         	movff	??_Low_priority+12,prodh
 12427  0000BE  C028  FFF3         	movff	??_Low_priority+11,prodl
 12428  0000C2  C027  FFDA         	movff	??_Low_priority+10,fsr2h
 12429  0000C6  C026  FFD9         	movff	??_Low_priority+9,fsr2l
 12430  0000CA  C025  FFE2         	movff	??_Low_priority+8,fsr1h
 12431  0000CE  C024  FFE1         	movff	??_Low_priority+7,fsr1l
 12432  0000D2  C023  FFEA         	movff	??_Low_priority+6,fsr0h
 12433  0000D6  C022  FFE9         	movff	??_Low_priority+5,fsr0l
 12434  0000DA  C021  FFFB         	movff	??_Low_priority+4,pclatu
 12435  0000DE  C020  FFFA         	movff	??_Low_priority+3,pclath
 12436  0000E2  C01F  FFE0         	movff	??_Low_priority+2,bsr
 12437  0000E6  C01E  FFE8         	movff	??_Low_priority+1,wreg
 12438  0000EA  C01D  FFD8         	movff	??_Low_priority,status
 12439  0000EE  0010               	retfie	
 12440  0000F0  FFFF               	dw	65535	; errata NOP
 12441  0000F2                     __end_of_Low_priority:
 12442                           	opt stack 0
 12443                           pclatu	equ	0xFFB
 12444                           pclath	equ	0xFFA
 12445                           tblptru	equ	0xFF8
 12446                           tblptrh	equ	0xFF7
 12447                           tblptrl	equ	0xFF6
 12448                           tablat	equ	0xFF5
 12449                           prodh	equ	0xFF4
 12450                           prodl	equ	0xFF3
 12451                           intcon	equ	0xFF2
 12452                           intcon2	equ	0xFF1
 12453                           postinc0	equ	0xFEE
 12454                           fsr0h	equ	0xFEA
 12455                           fsr0l	equ	0xFE9
 12456                           wreg	equ	0xFE8
 12457                           indf1	equ	0xFE7
 12458                           postdec1	equ	0xFE5
 12459                           fsr1h	equ	0xFE2
 12460                           fsr1l	equ	0xFE1
 12461                           bsr	equ	0xFE0
 12462                           indf2	equ	0xFDF
 12463                           postinc2	equ	0xFDE
 12464                           postdec2	equ	0xFDD
 12465                           fsr2h	equ	0xFDA
 12466                           fsr2l	equ	0xFD9
 12467                           status	equ	0xFD8
 12468                           
 12469 ;; *************** function _High_priority *****************
 12470 ;; Defined at:
 12471 ;;		line 66 in file "main.c"
 12472 ;; Parameters:    Size  Location     Type
 12473 ;;		None
 12474 ;; Auto vars:     Size  Location     Type
 12475 ;;		None
 12476 ;; Return value:  Size  Location     Type
 12477 ;;		None               void
 12478 ;; Registers used:
 12479 ;;		wreg, status,2, status,0, prodl, cstack
 12480 ;; Tracked objects:
 12481 ;;		On entry : 0/0
 12482 ;;		On exit  : 0/0
 12483 ;;		Unchanged: 0/0
 12484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12485 ;;      Params:         0       0       0       0       0       0       0
 12486 ;;      Locals:         0       0       0       0       0       0       0
 12487 ;;      Temps:         19       0       0       0       0       0       0
 12488 ;;      Totals:        19       0       0       0       0       0       0
 12489 ;;Total ram usage:       19 bytes
 12490 ;; Hardware stack levels used:    1
 12491 ;; Hardware stack levels required when called:    1
 12492 ;; This function calls:
 12493 ;;		___awdiv
 12494 ;; This function is called by:
 12495 ;;		Interrupt level 2
 12496 ;; This function uses a non-reentrant model
 12497 ;;
 12498                           
 12499                           	psect	intcode
 12500  000008                     __pintcode:
 12501                           	opt stack 0
 12502  000008                     _High_priority:
 12503                           	opt stack 23
 12504                           
 12505                           ;incstack = 0
 12506  000008  FFFF               	dw	65535	; errata NOP
 12507  00000A  CFFA F00F          	movff	pclath,??_High_priority+5
 12508  00000E  CFFB F010          	movff	pclatu,??_High_priority+6
 12509  000012  EF6D  F00F         	goto	int_func
 12510                           pclatu	equ	0xFFB
 12511                           pclath	equ	0xFFA
 12512                           tblptru	equ	0xFF8
 12513                           tblptrh	equ	0xFF7
 12514                           tblptrl	equ	0xFF6
 12515                           tablat	equ	0xFF5
 12516                           prodh	equ	0xFF4
 12517                           prodl	equ	0xFF3
 12518                           intcon	equ	0xFF2
 12519                           intcon2	equ	0xFF1
 12520                           postinc0	equ	0xFEE
 12521                           fsr0h	equ	0xFEA
 12522                           fsr0l	equ	0xFE9
 12523                           wreg	equ	0xFE8
 12524                           indf1	equ	0xFE7
 12525                           postdec1	equ	0xFE5
 12526                           fsr1h	equ	0xFE2
 12527                           fsr1l	equ	0xFE1
 12528                           bsr	equ	0xFE0
 12529                           indf2	equ	0xFDF
 12530                           postinc2	equ	0xFDE
 12531                           postdec2	equ	0xFDD
 12532                           fsr2h	equ	0xFDA
 12533                           fsr2l	equ	0xFD9
 12534                           status	equ	0xFD8
 12535                           
 12536                           	psect	intcode_body
 12537  001EDA                     __pintcode_body:
 12538                           	opt stack 23
 12539  001EDA                     int_func:
 12540                           	opt stack 23
 12541  001EDA  FFFF               	dw	65535	; errata NOP
 12542  001EDC  CFE9 F011          	movff	fsr0l,??_High_priority+7
 12543  001EE0  CFEA F012          	movff	fsr0h,??_High_priority+8
 12544  001EE4  CFE1 F013          	movff	fsr1l,??_High_priority+9
 12545  001EE8  CFE2 F014          	movff	fsr1h,??_High_priority+10
 12546  001EEC  CFD9 F015          	movff	fsr2l,??_High_priority+11
 12547  001EF0  CFDA F016          	movff	fsr2h,??_High_priority+12
 12548  001EF4  CFF3 F017          	movff	prodl,??_High_priority+13
 12549  001EF8  CFF4 F018          	movff	prodh,??_High_priority+14
 12550  001EFC  CFF6 F019          	movff	tblptrl,??_High_priority+15
 12551  001F00  CFF7 F01A          	movff	tblptrh,??_High_priority+16
 12552  001F04  CFF8 F01B          	movff	tblptru,??_High_priority+17
 12553  001F08  CFF5 F01C          	movff	tablat,??_High_priority+18
 12554                           
 12555                           ;main.c: 68: if (TMR0IE && TMR0IF)
 12556  001F0C  BAF2               	btfsc	intcon,5,c	;volatile
 12557  001F0E  A4F2               	btfss	intcon,2,c	;volatile
 12558  001F10  D074               	goto	i2l102
 12559                           
 12560                           ;main.c: 69: {
 12561                           ;main.c: 70: TMR0IF = 0;
 12562  001F12  94F2               	bcf	intcon,2,c	;volatile
 12563                           
 12564                           ;main.c: 72: TMR0H = 0xF0;
 12565  001F14  0EF0               	movlw	240
 12566  001F16  6ED7               	movwf	4055,c	;volatile
 12567                           
 12568                           ;main.c: 73: TMR0L = 0x8C;
 12569  001F18  0E8C               	movlw	140
 12570  001F1A  6ED6               	movwf	4054,c	;volatile
 12571                           
 12572                           ;main.c: 75: Cptms ++;
 12573  001F1C  4A4F               	infsnz	_Cptms,f,c	;volatile
 12574  001F1E  2A50               	incf	_Cptms+1,f,c	;volatile
 12575                           
 12576                           ;main.c: 77: if (-- Decompte == 0)
 12577  001F20  2E51               	decfsz	_Decompte,f,c	;volatile
 12578  001F22  D004               	goto	i2l5442
 12579                           
 12580                           ;main.c: 78: {
 12581                           ;main.c: 79: Decompte = 50;
 12582  001F24  0E32               	movlw	50
 12583  001F26  6E51               	movwf	_Decompte,c	;volatile
 12584                           
 12585                           ;main.c: 80: Cpt1Sur20s ++;
 12586  001F28  4A4D               	infsnz	_Cpt1Sur20s,f,c	;volatile
 12587  001F2A  2A4E               	incf	_Cpt1Sur20s+1,f,c	;volatile
 12588  001F2C                     i2l5442:
 12589                           
 12590                           ;main.c: 81: }
 12591                           ;main.c: 83: if (Micro.State)
 12592  001F2C  5056               	movf	_Micro+4,w,c
 12593  001F2E  B4D8               	btfsc	status,2,c
 12594  001F30  D05C               	goto	i2l91
 12595                           
 12596                           ;main.c: 84: {
 12597                           ;main.c: 85: if (Feedback.Period == 0)
 12598  001F32  0100               	movlb	0	; () banked
 12599  001F34  0100               	movlb	0	; () banked
 12600  001F36  51A2               	movf	(_Feedback+1)& (0+255),w,b
 12601  001F38  11A1               	iorwf	_Feedback& (0+255),w,b
 12602  001F3A  A4D8               	btfss	status,2,c
 12603  001F3C  D010               	goto	i2l5452
 12604                           
 12605                           ; BSR set to: 0
 12606                           ;main.c: 86: {
 12607                           ;main.c: 87: Feedback.State = Micro.State;
 12608  001F3E  C056  F0A4         	movff	_Micro+4,_Feedback+3
 12609                           
 12610                           ; BSR set to: 0
 12611                           ;main.c: 88: Feedback.Period = 500;
 12612  001F42  0E01               	movlw	1
 12613  001F44  0100               	movlb	0	; () banked
 12614  001F46  0100               	movlb	0	; () banked
 12615  001F48  6FA2               	movwf	(_Feedback+1)& (0+255),b
 12616  001F4A  0EF4               	movlw	244
 12617  001F4C  0100               	movlb	0	; () banked
 12618  001F4E  6FA1               	movwf	_Feedback& (0+255),b
 12619                           
 12620                           ; BSR set to: 0
 12621                           ;main.c: 89: Feedback.Step = 0;
 12622  001F50  6E0A               	movwf	??_High_priority& (0+255),c
 12623  001F52  0E00               	movlw	0
 12624  001F54  0100               	movlb	0	; () banked
 12625  001F56  0100               	movlb	0	; () banked
 12626  001F58  6FA5               	movwf	(_Feedback+4)& (0+255),b
 12627  001F5A  500A               	movf	??_High_priority& (0+255),w,c
 12628                           
 12629                           ;main.c: 90: }
 12630  001F5C  D005               	goto	i2l5454
 12631  001F5E                     i2l5452:
 12632                           
 12633                           ; BSR set to: 0
 12634                           ;main.c: 91: else
 12635                           ;main.c: 92: {
 12636                           ;main.c: 93: Feedback.Period --;
 12637  001F5E  0100               	movlb	0	; () banked
 12638  001F60  0100               	movlb	0	; () banked
 12639  001F62  07A1               	decf	_Feedback& (0+255),f,b
 12640  001F64  A0D8               	btfss	status,0,c
 12641  001F66  07A2               	decf	(_Feedback+1)& (0+255),f,b
 12642  001F68                     i2l5454:
 12643                           
 12644                           ; BSR set to: 0
 12645                           ;main.c: 94: }
 12646                           ;main.c: 96: if ((0x01 << (unsigned char) (Feedback.Step / 2)) <= Feedback.State)
 12647  001F68  0100               	movlb	0	; () banked
 12648  001F6A  C0A5  F001         	movff	_Feedback+4,___awdiv@dividend
 12649  001F6E  6A02               	clrf	___awdiv@dividend+1,c
 12650  001F70  0E00               	movlw	0
 12651  001F72  6E04               	movwf	___awdiv@divisor+1,c
 12652  001F74  0E02               	movlw	2
 12653  001F76  6E03               	movwf	___awdiv@divisor,c
 12654  001F78  EC22  F016         	call	___awdiv	;wreg free
 12655  001F7C  0E01               	movlw	1
 12656  001F7E  6E0A               	movwf	??_High_priority& (0+255),c
 12657  001F80  6A0B               	clrf	(??_High_priority+1)& (0+255),c
 12658  001F82  2A01               	incf	?___awdiv,f,c
 12659  001F84  D003               	goto	i2u457_44
 12660  001F86                     i2u457_45:
 12661  001F86  90D8               	bcf	status,0,c
 12662  001F88  360A               	rlcf	??_High_priority,f,c
 12663  001F8A  360B               	rlcf	??_High_priority+1,f,c
 12664  001F8C                     i2u457_44:
 12665  001F8C  2E01               	decfsz	?___awdiv,f,c
 12666  001F8E  D7FB               	goto	i2u457_45
 12667  001F90  0100               	movlb	0	; () banked
 12668  001F92  0100               	movlb	0	; () banked
 12669  001F94  51A4               	movf	(_Feedback+3)& (0+255),w,b
 12670  001F96  6E0C               	movwf	(??_High_priority+2)& (0+255),c
 12671  001F98  6A0D               	clrf	(??_High_priority+3)& (0+255),c
 12672  001F9A  500D               	movf	??_High_priority+3,w,c
 12673  001F9C  0A80               	xorlw	128
 12674  001F9E  6E0E               	movwf	(??_High_priority+4)& (0+255),c
 12675  001FA0  500A               	movf	??_High_priority,w,c
 12676  001FA2  5C0C               	subwf	??_High_priority+2,w,c
 12677  001FA4  500B               	movf	??_High_priority+1,w,c
 12678  001FA6  0A80               	xorlw	128
 12679  001FA8  580E               	subwfb	(??_High_priority+4)& (0+255),w,c
 12680  001FAA  A0D8               	btfss	status,0,c
 12681  001FAC  D026               	goto	i2l102
 12682                           
 12683                           ; BSR set to: 0
 12684                           ;main.c: 97: {
 12685                           ;main.c: 98: if ((Feedback.Step & 0x01) == 0)
 12686  001FAE  0100               	movlb	0	; () banked
 12687  001FB0  0100               	movlb	0	; () banked
 12688  001FB2  B1A5               	btfsc	(_Feedback+4)& (0+255),0,b
 12689  001FB4  D00B               	goto	i2l95
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;main.c: 99: {
 12693                           ;main.c: 100: if ((Feedback.Step == 0) || (-- Feedback.Pulse == 0))
 12694  001FB6  0100               	movlb	0	; () banked
 12695  001FB8  0100               	movlb	0	; () banked
 12696  001FBA  51A5               	movf	(_Feedback+4)& (0+255),w,b
 12697  001FBC  B4D8               	btfsc	status,2,c
 12698  001FBE  D004               	goto	i2l98
 12699                           
 12700                           ; BSR set to: 0
 12701  001FC0  0100               	movlb	0	; () banked
 12702  001FC2  0100               	movlb	0	; () banked
 12703  001FC4  2FA3               	decfsz	(_Feedback+2)& (0+255),f,b
 12704  001FC6  D019               	goto	i2l102
 12705  001FC8                     i2l98:
 12706                           
 12707                           ; BSR set to: 0
 12708                           ;main.c: 101: {
 12709                           ;main.c: 102: PORTCbits.RC4 = 1;
 12710  001FC8  8882               	bsf	3970,4,c	;volatile
 12711  001FCA  D005               	goto	L84
 12712  001FCC                     i2l95:
 12713                           
 12714                           ; BSR set to: 0
 12715                           ;main.c: 107: else
 12716                           ;main.c: 108: {
 12717                           ;main.c: 109: if (-- Feedback.Pulse == 0)
 12718  001FCC  0100               	movlb	0	; () banked
 12719  001FCE  0100               	movlb	0	; () banked
 12720  001FD0  2FA3               	decfsz	(_Feedback+2)& (0+255),f,b
 12721  001FD2  D013               	goto	i2l102
 12722                           
 12723                           ; BSR set to: 0
 12724                           ;main.c: 110: {
 12725                           ;main.c: 111: PORTCbits.RC4 = 0;
 12726  001FD4  9882               	bcf	3970,4,c	;volatile
 12727  001FD6                     L84:
 12728                           
 12729                           ; BSR set to: 0
 12730                           ;main.c: 112: Feedback.Pulse = 50;
 12731  001FD6  6E0A               	movwf	??_High_priority& (0+255),c
 12732  001FD8  0E32               	movlw	50
 12733  001FDA  0100               	movlb	0	; () banked
 12734  001FDC  0100               	movlb	0	; () banked
 12735  001FDE  6FA3               	movwf	(_Feedback+2)& (0+255),b
 12736  001FE0  500A               	movf	??_High_priority& (0+255),w,c
 12737                           
 12738                           ; BSR set to: 0
 12739                           ;main.c: 113: Feedback.Step ++;
 12740  001FE2  0100               	movlb	0	; () banked
 12741  001FE4  0100               	movlb	0	; () banked
 12742  001FE6  2BA5               	incf	(_Feedback+4)& (0+255),f,b
 12743  001FE8  D008               	goto	i2l102
 12744  001FEA                     i2l91:
 12745                           
 12746                           ;main.c: 118: else
 12747                           ;main.c: 119: {
 12748                           ;main.c: 120: PORTCbits.RC4 = 0;
 12749  001FEA  9882               	bcf	3970,4,c	;volatile
 12750                           
 12751                           ;main.c: 121: Feedback.Period = 0;
 12752  001FEC  0E00               	movlw	0
 12753  001FEE  0100               	movlb	0	; () banked
 12754  001FF0  0100               	movlb	0	; () banked
 12755  001FF2  6FA2               	movwf	(_Feedback+1)& (0+255),b
 12756  001FF4  0E00               	movlw	0
 12757  001FF6  0100               	movlb	0	; () banked
 12758  001FF8  6FA1               	movwf	_Feedback& (0+255),b
 12759  001FFA                     i2l102:
 12760  001FFA  C01C  FFF5         	movff	??_High_priority+18,tablat
 12761  001FFE  C01B  FFF8         	movff	??_High_priority+17,tblptru
 12762  002002  C01A  FFF7         	movff	??_High_priority+16,tblptrh
 12763  002006  C019  FFF6         	movff	??_High_priority+15,tblptrl
 12764  00200A  C018  FFF4         	movff	??_High_priority+14,prodh
 12765  00200E  C017  FFF3         	movff	??_High_priority+13,prodl
 12766  002012  C016  FFDA         	movff	??_High_priority+12,fsr2h
 12767  002016  C015  FFD9         	movff	??_High_priority+11,fsr2l
 12768  00201A  C014  FFE2         	movff	??_High_priority+10,fsr1h
 12769  00201E  C013  FFE1         	movff	??_High_priority+9,fsr1l
 12770  002022  C012  FFEA         	movff	??_High_priority+8,fsr0h
 12771  002026  C011  FFE9         	movff	??_High_priority+7,fsr0l
 12772  00202A  C010  FFFB         	movff	??_High_priority+6,pclatu
 12773  00202E  C00F  FFFA         	movff	??_High_priority+5,pclath
 12774  002032  0011               	retfie		f
 12775  002034  FFFF               	dw	65535	; errata NOP
 12776  002036                     __end_of_High_priority:
 12777                           	opt stack 0
 12778                           pclatu	equ	0xFFB
 12779                           pclath	equ	0xFFA
 12780                           tblptru	equ	0xFF8
 12781                           tblptrh	equ	0xFF7
 12782                           tblptrl	equ	0xFF6
 12783                           tablat	equ	0xFF5
 12784                           prodh	equ	0xFF4
 12785                           prodl	equ	0xFF3
 12786                           intcon	equ	0xFF2
 12787                           intcon2	equ	0xFF1
 12788                           postinc0	equ	0xFEE
 12789                           fsr0h	equ	0xFEA
 12790                           fsr0l	equ	0xFE9
 12791                           wreg	equ	0xFE8
 12792                           indf1	equ	0xFE7
 12793                           postdec1	equ	0xFE5
 12794                           fsr1h	equ	0xFE2
 12795                           fsr1l	equ	0xFE1
 12796                           bsr	equ	0xFE0
 12797                           indf2	equ	0xFDF
 12798                           postinc2	equ	0xFDE
 12799                           postdec2	equ	0xFDD
 12800                           fsr2h	equ	0xFDA
 12801                           fsr2l	equ	0xFD9
 12802                           status	equ	0xFD8
 12803                           
 12804 ;; *************** function ___awdiv *****************
 12805 ;; Defined at:
 12806 ;;		line 8 in file "E:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awdiv.c"
 12807 ;; Parameters:    Size  Location     Type
 12808 ;;  dividend        2    0[COMRAM] int 
 12809 ;;  divisor         2    2[COMRAM] int 
 12810 ;; Auto vars:     Size  Location     Type
 12811 ;;  quotient        2    7[COMRAM] int 
 12812 ;;  sign            1    6[COMRAM] unsigned char 
 12813 ;;  counter         1    5[COMRAM] unsigned char 
 12814 ;; Return value:  Size  Location     Type
 12815 ;;                  2    0[COMRAM] int 
 12816 ;; Registers used:
 12817 ;;		wreg, status,2, status,0, prodl
 12818 ;; Tracked objects:
 12819 ;;		On entry : 0/0
 12820 ;;		On exit  : 0/0
 12821 ;;		Unchanged: 0/0
 12822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12823 ;;      Params:         4       0       0       0       0       0       0
 12824 ;;      Locals:         4       0       0       0       0       0       0
 12825 ;;      Temps:          1       0       0       0       0       0       0
 12826 ;;      Totals:         9       0       0       0       0       0       0
 12827 ;;Total ram usage:        9 bytes
 12828 ;; Hardware stack levels used:    1
 12829 ;; This function calls:
 12830 ;;		Nothing
 12831 ;; This function is called by:
 12832 ;;		_High_priority
 12833 ;; This function uses a non-reentrant model
 12834 ;;
 12835                           
 12836                           	psect	text58
 12837  002C44                     __ptext58:
 12838                           	opt stack 0
 12839  002C44                     ___awdiv:
 12840                           	opt stack 23
 12841                           
 12842                           ;incstack = 0
 12843  002C44  FFFF               	dw	65535
 12844  002C46  6E05               	movwf	??___awdiv& (0+255),c
 12845  002C48  0E00               	movlw	0
 12846  002C4A  6E07               	movwf	___awdiv@sign,c
 12847  002C4C  5005               	movf	??___awdiv& (0+255),w,c
 12848  002C4E  5004               	movf	___awdiv@divisor+1,w,c
 12849  002C50  0A80               	xorlw	128
 12850  002C52  6EF3               	movwf	prodl,c
 12851  002C54  0E80               	movlw	128
 12852  002C56  5CF3               	subwf	prodl,w,c
 12853  002C58  0E00               	movlw	0
 12854  002C5A  B4D8               	btfsc	status,2,c
 12855  002C5C  5C03               	subwf	___awdiv@divisor,w,c
 12856  002C5E  B0D8               	btfsc	status,0,c
 12857  002C60  D008               	goto	i2l5378
 12858  002C62  6C03               	negf	___awdiv@divisor,c
 12859  002C64  1E04               	comf	___awdiv@divisor+1,f,c
 12860  002C66  B0D8               	btfsc	status,0,c
 12861  002C68  2A04               	incf	___awdiv@divisor+1,f,c
 12862  002C6A  6E05               	movwf	??___awdiv& (0+255),c
 12863  002C6C  0E01               	movlw	1
 12864  002C6E  6E07               	movwf	___awdiv@sign,c
 12865  002C70  5005               	movf	??___awdiv& (0+255),w,c
 12866  002C72                     i2l5378:
 12867  002C72  5002               	movf	___awdiv@dividend+1,w,c
 12868  002C74  0A80               	xorlw	128
 12869  002C76  6EF3               	movwf	prodl,c
 12870  002C78  0E80               	movlw	128
 12871  002C7A  5CF3               	subwf	prodl,w,c
 12872  002C7C  0E00               	movlw	0
 12873  002C7E  B4D8               	btfsc	status,2,c
 12874  002C80  5C01               	subwf	___awdiv@dividend,w,c
 12875  002C82  B0D8               	btfsc	status,0,c
 12876  002C84  D006               	goto	i2l5384
 12877  002C86  6C01               	negf	___awdiv@dividend,c
 12878  002C88  1E02               	comf	___awdiv@dividend+1,f,c
 12879  002C8A  B0D8               	btfsc	status,0,c
 12880  002C8C  2A02               	incf	___awdiv@dividend+1,f,c
 12881  002C8E  0E01               	movlw	1
 12882  002C90  1A07               	xorwf	___awdiv@sign,f,c
 12883  002C92                     i2l5384:
 12884  002C92  0E00               	movlw	0
 12885  002C94  6E09               	movwf	___awdiv@quotient+1,c
 12886  002C96  0E00               	movlw	0
 12887  002C98  6E08               	movwf	___awdiv@quotient,c
 12888  002C9A  5004               	movf	___awdiv@divisor+1,w,c
 12889  002C9C  1003               	iorwf	___awdiv@divisor,w,c
 12890  002C9E  B4D8               	btfsc	status,2,c
 12891  002CA0  D01E               	goto	i2l5406
 12892  002CA2  6E05               	movwf	??___awdiv& (0+255),c
 12893  002CA4  0E01               	movlw	1
 12894  002CA6  6E06               	movwf	___awdiv@counter,c
 12895  002CA8  5005               	movf	??___awdiv& (0+255),w,c
 12896  002CAA  D004               	goto	i2l5392
 12897  002CAC                     i2l5390:
 12898  002CAC  90D8               	bcf	status,0,c
 12899  002CAE  3603               	rlcf	___awdiv@divisor,f,c
 12900  002CB0  3604               	rlcf	___awdiv@divisor+1,f,c
 12901  002CB2  2A06               	incf	___awdiv@counter,f,c
 12902  002CB4                     i2l5392:
 12903  002CB4  AE04               	btfss	___awdiv@divisor+1,7,c
 12904  002CB6  D7FA               	goto	i2l5390
 12905  002CB8                     i2l5394:
 12906  002CB8  90D8               	bcf	status,0,c
 12907  002CBA  3608               	rlcf	___awdiv@quotient,f,c
 12908  002CBC  3609               	rlcf	___awdiv@quotient+1,f,c
 12909  002CBE  5003               	movf	___awdiv@divisor,w,c
 12910  002CC0  5C01               	subwf	___awdiv@dividend,w,c
 12911  002CC2  5004               	movf	___awdiv@divisor+1,w,c
 12912  002CC4  5802               	subwfb	___awdiv@dividend+1,w,c
 12913  002CC6  A0D8               	btfss	status,0,c
 12914  002CC8  D005               	goto	i2l5402
 12915  002CCA  5003               	movf	___awdiv@divisor,w,c
 12916  002CCC  5E01               	subwf	___awdiv@dividend,f,c
 12917  002CCE  5004               	movf	___awdiv@divisor+1,w,c
 12918  002CD0  5A02               	subwfb	___awdiv@dividend+1,f,c
 12919  002CD2  8008               	bsf	___awdiv@quotient,0,c
 12920  002CD4                     i2l5402:
 12921  002CD4  90D8               	bcf	status,0,c
 12922  002CD6  3204               	rrcf	___awdiv@divisor+1,f,c
 12923  002CD8  3203               	rrcf	___awdiv@divisor,f,c
 12924  002CDA  2E06               	decfsz	___awdiv@counter,f,c
 12925  002CDC  D7ED               	goto	i2l5394
 12926  002CDE                     i2l5406:
 12927  002CDE  5007               	movf	___awdiv@sign,w,c
 12928  002CE0  B4D8               	btfsc	status,2,c
 12929  002CE2  D004               	goto	i2l5410
 12930  002CE4  6C08               	negf	___awdiv@quotient,c
 12931  002CE6  1E09               	comf	___awdiv@quotient+1,f,c
 12932  002CE8  B0D8               	btfsc	status,0,c
 12933  002CEA  2A09               	incf	___awdiv@quotient+1,f,c
 12934  002CEC                     i2l5410:
 12935  002CEC  C008  F001         	movff	___awdiv@quotient,?___awdiv
 12936  002CF0  C009  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12937  002CF4  0012               	return	
 12938  002CF6  FFFF               	dw	65535	; errata NOP
 12939  002CF8                     __end_of___awdiv:
 12940                           	opt stack 0
 12941                           pclatu	equ	0xFFB
 12942                           pclath	equ	0xFFA
 12943                           tblptru	equ	0xFF8
 12944                           tblptrh	equ	0xFF7
 12945                           tblptrl	equ	0xFF6
 12946                           tablat	equ	0xFF5
 12947                           prodh	equ	0xFF4
 12948                           prodl	equ	0xFF3
 12949                           intcon	equ	0xFF2
 12950                           intcon2	equ	0xFF1
 12951                           postinc0	equ	0xFEE
 12952                           fsr0h	equ	0xFEA
 12953                           fsr0l	equ	0xFE9
 12954                           wreg	equ	0xFE8
 12955                           indf1	equ	0xFE7
 12956                           postdec1	equ	0xFE5
 12957                           fsr1h	equ	0xFE2
 12958                           fsr1l	equ	0xFE1
 12959                           bsr	equ	0xFE0
 12960                           indf2	equ	0xFDF
 12961                           postinc2	equ	0xFDE
 12962                           postdec2	equ	0xFDD
 12963                           fsr2h	equ	0xFDA
 12964                           fsr2l	equ	0xFD9
 12965                           status	equ	0xFD8
 12966                           pclatu	equ	0xFFB
 12967                           pclath	equ	0xFFA
 12968                           tblptru	equ	0xFF8
 12969                           tblptrh	equ	0xFF7
 12970                           tblptrl	equ	0xFF6
 12971                           tablat	equ	0xFF5
 12972                           prodh	equ	0xFF4
 12973                           prodl	equ	0xFF3
 12974                           intcon	equ	0xFF2
 12975                           intcon2	equ	0xFF1
 12976                           postinc0	equ	0xFEE
 12977                           fsr0h	equ	0xFEA
 12978                           fsr0l	equ	0xFE9
 12979                           wreg	equ	0xFE8
 12980                           indf1	equ	0xFE7
 12981                           postdec1	equ	0xFE5
 12982                           fsr1h	equ	0xFE2
 12983                           fsr1l	equ	0xFE1
 12984                           bsr	equ	0xFE0
 12985                           indf2	equ	0xFDF
 12986                           postinc2	equ	0xFDE
 12987                           postdec2	equ	0xFDD
 12988                           fsr2h	equ	0xFDA
 12989                           fsr2l	equ	0xFD9
 12990                           status	equ	0xFD8
 12991                           
 12992                           	psect	rparam
 12993  0000                     pclatu	equ	0xFFB
 12994                           pclath	equ	0xFFA
 12995                           tblptru	equ	0xFF8
 12996                           tblptrh	equ	0xFF7
 12997                           tblptrl	equ	0xFF6
 12998                           tablat	equ	0xFF5
 12999                           prodh	equ	0xFF4
 13000                           prodl	equ	0xFF3
 13001                           intcon	equ	0xFF2
 13002                           intcon2	equ	0xFF1
 13003                           postinc0	equ	0xFEE
 13004                           fsr0h	equ	0xFEA
 13005                           fsr0l	equ	0xFE9
 13006                           wreg	equ	0xFE8
 13007                           indf1	equ	0xFE7
 13008                           postdec1	equ	0xFE5
 13009                           fsr1h	equ	0xFE2
 13010                           fsr1l	equ	0xFE1
 13011                           bsr	equ	0xFE0
 13012                           indf2	equ	0xFDF
 13013                           postinc2	equ	0xFDE
 13014                           postdec2	equ	0xFDD
 13015                           fsr2h	equ	0xFDA
 13016                           fsr2l	equ	0xFD9
 13017                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    20
    Data        5
    BSS         216
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     45      87
    BANK0           128     43     106
    BANK1           256      0     122
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    DecToStr@result	PTR unsigned char  size(2) Largest target is 5
		 -> PrintTest(BANK0[5]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 

    eeprom_write_array@pData	PTR unsigned char  size(2) Largest target is 122
		 -> Cf(BANK1[122]), 

    eeprom_read_array@pData	PTR unsigned char  size(2) Largest target is 122
		 -> Cf(BANK1[122]), 

    sp__DecToStr	PTR unsigned char  size(2) Largest target is 5
		 -> PrintTest(BANK0[5]), 

    ecran_print_num@tempStr	PTR unsigned char  size(2) Largest target is 5
		 -> PrintTest(BANK0[5]), 

    S58StructEcran$Digits	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran(BANK0[16]), 
		 -> PrintTest(BANK0[5]), 

    Ecran.Digits	PTR unsigned char  size(2) Largest target is 17
		 -> Version(CODE[5]), ErreurTir(CODE[5]), Blank(CODE[5]), Ecran.Digit(BANK0[4]), 
		 -> Ecran(BANK0[16]), PrintTest(BANK0[5]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Low_priority in COMRAM

    None.

Critical Paths under _High_priority in COMRAM

    _High_priority->___awdiv

Critical Paths under _main in BANK0

    _main->_test_process
    _test_process->_check_UAlim
    _test_process->_check_UInfla
    _check_UInfla->___ftmul
    _check_UAlim->___ftmul
    _micro_wait->_check_comutest
    _feu_process->_feu_tir
    _feu_tir->_delay_ms
    _feu_check_bp->_ecran_print_num
    _ecran_print_num->_DecToStr
    _DecToStr->___awmod
    _check_program_0->_ecran_refresh
    _check_idtest->_cf_rcv
    _cf_rcv->_cf_check
    _eeprom_write_array->_eeprom_write
    _check_bpon->_ecran_print_one_char
    _cf_check_and_display->_cf_check
    _eeprom_read_array->_eeprom_read
    _cf_check->_cf_checksum
    _cf_checkout->___wmul
    _armement_process->_arm_UAlim_1A
    _itoa->_utoa
    _utoa->___lwdiv
    _ecran_wait->_ecran_dot
    _check_comutest->_ecran_refresh
    _ecran_refresh->_ecran_print_one_char
    _ecran_print_one_char->_ecran_digit
    _arm_UAlim_1A->___ftmul
    _ana_read->_delay_ms
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft

Critical Paths under _Low_priority in BANK0

    None.

Critical Paths under _High_priority in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Low_priority in BANK1

    None.

Critical Paths under _High_priority in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Low_priority in BANK2

    None.

Critical Paths under _High_priority in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Low_priority in BANK3

    None.

Critical Paths under _High_priority in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Low_priority in BANK4

    None.

Critical Paths under _High_priority in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Low_priority in BANK5

    None.

Critical Paths under _High_priority in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   54461
                                             41 BANK0      2     2      0
                   _armement_process
                        _bouton_init
                     _bouton_refresh
               _cf_check_and_display
                         _check_bpon
                     _check_comutest
                       _check_idtest
                    _check_program_0
                      _ecran_refresh
                       _feu_check_bp
                        _feu_process
                          _hw_config
                       _micro_config
                         _micro_wait
                       _test_process
 ---------------------------------------------------------------------------------
 (1) _test_process                                         6     6      0   21863
                                             36 BANK0      5     5      0
                        _check_UAlim
                       _check_UInfla
                     _check_comutest
                        _ecran_blank
                    _ecran_print_num
                         _ecran_wait
                               _itoa
                     _register_write
 ---------------------------------------------------------------------------------
 (2) _check_UInfla                                         8     6      2    7959
                                             28 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
                           _ana_read
 ---------------------------------------------------------------------------------
 (2) _check_UAlim                                          8     6      2    7959
                                             28 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
                           _ana_read
 ---------------------------------------------------------------------------------
 (1) _micro_wait                                           6     6      0    2201
                                              7 BANK0      6     6      0
                     _check_comutest
                        _ecran_blank
               _ecran_print_one_char
                         _ecran_wait
 ---------------------------------------------------------------------------------
 (1) _micro_config                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hw_config                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _feu_process                                          2     2      0     907
                                              7 BANK0      2     2      0
                           _delay_ms
                      _feu_check_end
                   _feu_check_end_P0
                    _feu_check_pause
                            _feu_tir
 ---------------------------------------------------------------------------------
 (2) _feu_tir                                              1     1      0     534
                                              6 BANK0      1     1      0
                           _delay_ms
                     _register_write
 ---------------------------------------------------------------------------------
 (2) _register_write                                       3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _feu_check_pause                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _feu_check_end_P0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _feu_check_end                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _feu_check_bp                                         2     2      0    3309
                                             21 BANK0      2     2      0
                    _ecran_print_num
               _ecran_print_one_char
 ---------------------------------------------------------------------------------
 (2) _ecran_print_num                                      4     4      0    2292
                                             17 BANK0      4     4      0
                           _DecToStr
 ---------------------------------------------------------------------------------
 (3) _DecToStr                                            10     8      2    2100
                                              7 BANK0     10     8      2
                            ___awmod
                            ___lbdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              5     4      1     318
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     587
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _check_program_0                                      2     2      0    1116
                                              5 BANK0      2     2      0
                        _ecran_blank
                      _ecran_refresh
                         _ecran_wait
 ---------------------------------------------------------------------------------
 (1) _check_idtest                                         1     1      0    5048
                                             24 BANK0      1     1      0
                             _cf_rcv
               _ecran_print_one_char
                    _micro_config_rs
 ---------------------------------------------------------------------------------
 (2) _micro_config_rs                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cf_rcv                                               4     4      0    4031
                                             20 BANK0      4     4      0
                           _cf_check
               _ecran_print_one_char
                  _eeprom_read_array
                 _eeprom_write_array
 ---------------------------------------------------------------------------------
 (3) _eeprom_write_array                                   6     2      4     506
                                              2 BANK0      6     2      4
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (4) _eeprom_write                                         2     1      1     139
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _check_bpon                                           2     2      0    1017
                                              3 BANK0      2     2      0
               _ecran_print_one_char
 ---------------------------------------------------------------------------------
 (1) _cf_check_and_display                                 5     5      0    4604
                                             20 BANK0      5     5      0
                         _HexToAscii
                           _cf_check
               _ecran_print_one_char
                      _ecran_refresh
                  _eeprom_read_array
 ---------------------------------------------------------------------------------
 (3) _eeprom_read_array                                    6     2      4     629
                                              1 BANK0      6     2      4
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (4) _eeprom_read                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _cf_check                                             2     2      0    1709
                                             18 BANK0      2     2      0
                        _cf_checkout
                      _cf_checkrange
                        _cf_checksum
 ---------------------------------------------------------------------------------
 (4) _cf_checksum                                         18    18      0     328
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 (4) _cf_checkrange                                        3     3      0     198
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _cf_checkout                                          4     4      0    1146
                                              6 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     694
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _HexToAscii                                           2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _bouton_refresh                                       6     6      0     489
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _bouton_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _armement_process                                     4     4      0   11777
                                             36 BANK0      4     4      0
                       _arm_UAlim_1A
                     _check_comutest
                        _ecran_blank
                         _ecran_wait
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    2301
                                             17 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1606
                                              8 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     386
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     549
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _ecran_wait                                           1     1      0      31
                                              1 BANK0      1     1      0
                          _ecran_dot
                    _ecran_raz_digit
 ---------------------------------------------------------------------------------
 (2) _check_comutest                                       2     2      0    1079
                                              5 BANK0      2     2      0
                        _ecran_blank
                      _ecran_refresh
 ---------------------------------------------------------------------------------
 (3) _ecran_refresh                                        2     2      0    1048
                                              3 BANK0      2     2      0
                          _ecran_dot
               _ecran_print_one_char
 ---------------------------------------------------------------------------------
 (4) _ecran_print_one_char                                 2     1      1    1017
                                              1 BANK0      2     1      1
                        _ecran_digit
                    _ecran_raz_digit
 ---------------------------------------------------------------------------------
 (3) _ecran_raz_digit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ecran_digit                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ecran_dot                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ecran_blank                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _arm_UAlim_1A                                         8     6      2    8332
                                             28 BANK0      8     6      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
                           _ana_read
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _ana_read                                             6     4      2     444
                                              6 BANK0      6     4      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             6     4      2     373
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             5     2      3    2575
                                              8 BANK0      5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     602
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4301
                                             13 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2313
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Low_priority                                        17    17      0       0
                                             28 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _High_priority                                       19    19      0     428
                                              9 COMRAM    19    19      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              9     5      4     428
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _armement_process
     _arm_UAlim_1A
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
       ___lwtoft
         ___ftpack
       _ana_read
         _delay_ms
       _delay_ms
     _check_comutest
       _ecran_blank
       _ecran_refresh
         _ecran_dot
         _ecran_print_one_char
           _ecran_digit
           _ecran_raz_digit
     _ecran_blank
     _ecran_wait
       _ecran_dot
       _ecran_raz_digit
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _bouton_init
   _bouton_refresh
   _cf_check_and_display
     _HexToAscii
     _cf_check
       _cf_checkout
         ___wmul
       _cf_checkrange
       _cf_checksum
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
     _ecran_refresh
       _ecran_dot
       _ecran_print_one_char
         _ecran_digit
         _ecran_raz_digit
     _eeprom_read_array
       _eeprom_read
   _check_bpon
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
   _check_comutest
     _ecran_blank
     _ecran_refresh
       _ecran_dot
       _ecran_print_one_char
         _ecran_digit
         _ecran_raz_digit
   _check_idtest
     _cf_rcv
       _cf_check
         _cf_checkout
           ___wmul
         _cf_checkrange
         _cf_checksum
       _ecran_print_one_char
         _ecran_digit
         _ecran_raz_digit
       _eeprom_read_array
         _eeprom_read
       _eeprom_write_array
         _eeprom_write
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
     _micro_config_rs
   _check_program_0
     _ecran_blank
     _ecran_refresh
       _ecran_dot
       _ecran_print_one_char
         _ecran_digit
         _ecran_raz_digit
     _ecran_wait
       _ecran_dot
       _ecran_raz_digit
   _ecran_refresh
     _ecran_dot
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
   _feu_check_bp
     _ecran_print_num
       _DecToStr
         ___awmod
         ___lbdiv
         ___wmul
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
   _feu_process
     _delay_ms
     _feu_check_end
     _feu_check_end_P0
     _feu_check_pause
     _feu_tir
       _delay_ms
       _register_write
   _hw_config
   _micro_config
   _micro_wait
     _check_comutest
       _ecran_blank
       _ecran_refresh
         _ecran_dot
         _ecran_print_one_char
           _ecran_digit
           _ecran_raz_digit
     _ecran_blank
     _ecran_print_one_char
       _ecran_digit
       _ecran_raz_digit
     _ecran_wait
       _ecran_dot
       _ecran_raz_digit
   _test_process
     _check_UAlim
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
       ___lwtoft
         ___ftpack
       _ana_read
         _delay_ms
     _check_UInfla
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
       ___lwtoft
         ___ftpack
       _ana_read
         _delay_ms
     _check_comutest
       _ecran_blank
       _ecran_refresh
         _ecran_dot
         _ecran_print_one_char
           _ecran_digit
           _ecran_raz_digit
     _ecran_blank
     _ecran_print_num
       _DecToStr
         ___awmod
         ___lbdiv
         ___wmul
     _ecran_wait
       _ecran_dot
       _ecran_raz_digit
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _register_write

 _Low_priority (ROOT)

 _High_priority (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      7A       7       47.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2B      6A       5       82.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2D      57       1       68.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13B      15        0.0%
DATA                 0      0     13B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Tue Apr 16 02:29:12 2024

                                        __end_of_check_UInfla 297C  
                                         ?_eeprom_write_array 00BC  
                                              ??_feu_check_bp 00CF  
                                                          _RD 007D30  
                                                          _Cf 0100  
                                                          _WR 007D31  
                                                ___awdiv@sign 0007  
                                      ??_cf_check_and_display 00CE  
                                                 __CFG_BOR$ON 000000  
                                                          bsr 000FE0  
                                         ___wmul@multiplicand 00BC  
                                             ??_feu_check_end 00BA  
                                                __CFG_CP0$OFF 000000  
                                                __CFG_CP1$OFF 000000  
                                                __CFG_CP2$OFF 000000  
                                                __CFG_CP3$OFF 000000  
                                        __end_of_check_idtest 371A  
                                                         l250 2A76  
                                                         l260 35DA  
                                                         l340 373A  
                                                         l261 35DE  
                                                         l262 35E2  
                                                         l264 3604  
                                                         l280 2DA6  
                                                         l417 2472  
                                                         l258 35D6  
                                                         l426 24FA  
                                                         l611 0B16  
                                                         l445 1D5E  
                                                         l461 1A50  
                                                         l622 0C30  
                                                         l448 1D60  
                                                         l544 3716  
                                                         l624 0CB8  
                                                         l553 32F2  
                                                         l617 0BA2  
                                                         l618 0BE0  
                                                         l548 32BE  
                                                         l564 062A  
                                                         l823 2194  
                                                         l592 0936  
                                                         l568 06E0  
                                                         l841 22D4  
                                                         l930 34C2  
                                                         l826 21AC  
                                                         l931 34C4  
                                                         l828 21C0  
                                                         l829 21EA  
                                                         l598 09C6  
                                                         l928 34AE  
                                                         l980 3148  
                                                         _GIE 007F97  
                                                __CFG_CPB$OFF 000000  
                                                __CFG_CPD$OFF 000000  
                                                         _Arm 009A  
                                                         _Feu 0080  
                                              _check_comutest 334A  
                                                __CFG_BORV$45 000000  
                                                ___awmod@sign 00C0  
                                                         prod 000FF3  
                                                         wreg 000FE8  
                                                __CFG_LVP$OFF 000000  
                                        ??_eeprom_write_array 00C0  
                                                __CFG_WDT$OFF 000000  
                                                        l1040 1A58  
                                                        l1120 37A4  
                                                        l1113 3784  
                                                        l1106 37F0  
                                                        l1131 158E  
                                                        l1044 1B08  
                                                        l1141 164E  
                                                        l1046 1B2C  
                                                        l1054 1BE6  
                                                        l1134 15F0  
                                                        l1047 1B44  
                                                        l1135 15C0  
                                                        l1151 16CC  
                                                        l1144 166A  
                                                        l1129 1548  
                                                        l1146 1686  
                                                        l1139 1602  
                                                        l1155 1000  
                                                        l1148 16A2  
                                                        l1180 1204  
                                                        l1182 121E  
                                                        l1175 1188  
                                                        l1167 112E  
                                                        l1184 1246  
                                                        l1168 115E  
                                                        l1186 12C4  
                                                        l1606 2602  
                                                        l1480 2412  
                                                        l1706 2E4C  
                                                        l1564 1890  
                                                        l1716 2FF8  
                                                        l1584 1ED6  
                                                        l6120 1E94  
                                                        l6112 1E54  
                                                        l6042 16FE  
                                                        l6122 1E9C  
                                                        l6210 36A6  
                                                        l6108 1E36  
                                                        l6132 254A  
                                                        l7012 15E8  
                                                        l6300 2892  
                                                        l6062 17B4  
                                                        l6126 1EC6  
                                                        l6118 1E7A  
                                                        l6142 25B0  
                                                        l6072 1818  
                                                        l6048 1742  
                                                        l5600 29B4  
                                                        l6066 17E0  
                                                        l6090 1D92  
                                                        l5610 29C8  
                                                        l5602 29B8  
                                                        l6226 191C  
                                                        l7026 1646  
                                                        l6076 1844  
                                                        l5612 29CC  
                                                        l5604 29BC  
                                                        l5620 29DA  
                                                        l6260 1A30  
                                                        l6228 1920  
                                                        l7036 16BC  
                                                        l7060 30CE  
                                                        l5614 29D0  
                                                        l5606 29C0  
                                                        l6166 3356  
                                                        l6318 2EC0  
                                                        l6246 19A2  
                                                        l6262 1A46  
                                                        l6238 1958  
                                                        l6510 3710  
                                                        l7062 30D4  
                                                        l7070 30EA  
                                                        l7054 30C0  
                                                        l5616 29D4  
                                                        l5608 29C4  
                                                        l5704 0FCA  
                                                        l7064 30DA  
                                                        l7056 30C4  
                                                        l5802 23E4  
                                                        l5570 2988  
                                                        l6178 3384  
                                                        l6194 2C02  
                                                        l6362 377E  
                                                        l6354 37EE  
                                                        l6610 2216  
                                                        l7066 30E0  
                                                        l5580 2990  
                                                        l5636 35E6  
                                                        l5900 2FA8  
                                                        l5708 0FF0  
                                                        l6540 1CB6  
                                                        l5820 26A0  
                                                        l6700 0800  
                                                        l5582 2994  
                                                        l5902 2FB0  
                                                        l5734 24D0  
                                                        l5718 244A  
                                                        l6542 1CE6  
                                                        l5830 26F6  
                                                        l6198 2C2C  
                                                        l6382 37A2  
                                                        l6630 22AA  
                                                        l5808 2406  
                                                        l5592 29A4  
                                                        l5584 2998  
                                                        l5568 2984  
                                                        l6560 12F8  
                                                        l5744 2524  
                                                        l5728 24C6  
                                                        l5832 26FE  
                                                        l5840 2746  
                                                        l5824 26C6  
                                                        l6376 379E  
                                                        l6368 3782  
                                                        l5594 29A8  
                                                        l5586 299C  
                                                        l5578 298C  
                                                        l5906 2FE4  
                                                        l6562 1306  
                                                        l5746 2534  
                                                        l6538 1CB2  
                                                        l6546 1D48  
                                                        l6490 3318  
                                                        l6626 2298  
                                                        l6618 224C  
                                                        l6722 08CA  
                                                        l5596 29AC  
                                                        l5588 29A0  
                                                        l6556 12DC  
                                                        l5764 2F4A  
                                                        l5756 2F0C  
                                                        l5844 275E  
                                                        l5836 2732  
                                                        l5828 26E4  
                                                        l5852 3036  
                                                        l5932 20C4  
                                                        l5924 205C  
                                                        l6716 0886  
                                                        l6708 082E  
                                                        l6644 0638  
                                                        l5790 2358  
                                                        l5782 22F6  
                                                        l5598 29B0  
                                                        l6558 12EA  
                                                        l6566 1314  
                                                        l5694 0FA8  
                                                        l5678 0CFA  
                                                        l6638 22C0  
                                                        l6814 0B74  
                                                        l6734 0922  
                                                        l5776 3580  
                                                        l5880 2DEA  
                                                        l6576 13D8  
                                                        l6584 1496  
                                                        l6568 1332  
                                                        l6488 3314  
                                                        l5864 3072  
                                                        l5856 3042  
                                                        l5928 2088  
                                                        l6920 110A  
                                                        l6912 1096  
                                                        l6808 0B60  
                                                        l6752 0994  
                                                        l6728 08DE  
                                                        l6680 072C  
                                                        l5794 2386  
                                                        l5786 2310  
                                                        l5890 2E38  
                                                        l5882 2DF2  
                                                        l6578 13E4  
                                                        l6586 14E8  
                                                        l6498 3340  
                                                        l5858 304A  
                                                        l5938 20E6  
                                                        l6906 105E  
                                                        l6818 0B82  
                                                        l6746 0980  
                                                        l5796 23B8  
                                                        l5788 2326  
                                                        l6844 1A66  
                                                        l5964 33B2  
                                                        l5972 33DA  
                                                        l5868 3080  
                                                        l6932 1156  
                                                        l6828 0BEE  
                                                        l6756 09A6  
                                                        l6692 07A6  
                                                        l6676 070A  
                                                        l6668 06F2  
                                                        l5798 23CE  
                                                        l5878 2DD8  
                                                        l6790 0ABE  
                                                        l6782 0AA4  
                                                        l6774 0A4A  
                                                        l6766 0A0C  
                                                        l6686 077E  
                                                        l6838 0C44  
                                                        l5976 3404  
                                                        l5984 342A  
                                                        l5898 2F96  
                                                        l6884 1BC8  
                                                        l5996 3642  
                                                        l6972 126E  
                                                        l6948 11C4  
                                                        l6892 1012  
                                                        l6796 0B02  
                                                        l6958 123E  
                                                        l6976 127C  
                                                        l6986 151A  
                                                        _CFGS 007D36  
                                                  _Cpt1Sur20s 004D  
                                               __CFG_DEBUG$ON 000000  
                                                        _IPEN 007E87  
                                                        u5400 1DBE  
                                                        u5321 16EC  
                                                        u5170 2D5A  
                                                        _PEIE 007F96  
                                                        u5341 1718  
                                                        u5405 1DB4  
                                                        u5350 1728  
                                                        u5430 1E5E  
                                                        u5177 2D50  
                                                        u4705 0EA4  
                                                        u5530 338C  
                                                        u4715 0F2C  
                                                        _RCIE 007CED  
                                                        _RCIF 007CF5  
                                                        u5381 1D80  
                                                        u4725 0F94  
                                                        u5470 25A6  
                                                        u4670 0DC6  
                                                        u5536 338E  
                                                        u5490 2636  
                                                        u4690 0E52  
                                                        u4675 0DBA  
                                                        u5660 2EAA  
                                                        u5477 259A  
                                                        u4685 0E18  
                                                        i1l86 00AA  
                                                        u5910 138E  
                                                        _RCIP 007CFD  
                                                        u4695 0E46  
                                                        u5920 13BC  
                                                        u5912 1390  
                                                        u5497 2628  
                                                        u5922 13BE  
                                                        i2l91 1FEA  
                                                        u5667 2E9E  
                                                        u5845 34EA  
                                                        i2l95 1FCC  
                                                        u5855 34FC  
                                                        u5847 34F0  
                                                        u5865 350E  
                                                        u5857 3502  
                                                        i2l98 1FC8  
                                                        u5890 135A  
                                                        u5875 3520  
                                                        u5867 3514  
                                                        u5877 3526  
                                                        u5975 148A  
                                                        u5976 1494  
                                                        u5896 135C  
                                                        u5985 14C4  
                                                        u5986 14C8  
                                                __CFG_WDTPS$1 000000  
                                                        _WREN 007D32  
                                              ??_eeprom_write 00BB  
                                                __CFG_PWRT$ON 000000  
                                                ?_bouton_init 0001  
                                     eeprom_write_array@pData 00BC  
                                                        _Test 002E  
                                                        _main 308A  
                                                ___ftpack@arg 00BA  
                                                        _itoa 2E58  
                                                ___ftpack@exp 00BD  
                                                        fsr0h 000FEA  
                                                        fsr1h 000FE2  
                                                        fsr0l 000FE9  
                                                        fsr2h 000FDA  
                                                        indf1 000FE7  
                                                        fsr1l 000FE1  
                                                        indf2 000FDF  
                                                        fsr2l 000FD9  
                                                        _utoa 2540  
                                                        pclat 000FFA  
                                                        prodh 000FF4  
                                                        prodl 000FF3  
                                               feu_tir@Output 00C0  
                                                        start 0112  
                                        __size_of_cf_checkout 012A  
                                        __size_of_cf_checksum 0340  
                                            ?_ecran_raz_digit 0001  
                                                ___ftmul@cntr 00D4  
                                                ___ftmul@sign 00D5  
                                           ??_feu_check_pause 00BA  
                                                ___fttol@exp1 00C8  
                                                ___fttol@lval 00C4  
                                     __size_of_bouton_refresh 0234  
                                               __CFG_OSCS$OFF 000000  
                                           ??_micro_config_rs 00BA  
                                      __end_of_check_comutest 339E  
                                            ?_ecran_print_num 0001  
                                             __end_of_Version 0615  
                                    eeprom_write_array@NbData 00BF  
                                                       ?_main 0001  
                                                       ?_itoa 00CB  
                                             __end_of___awdiv 2CF8  
                                             __end_of___lbdiv 308A  
                                                       _EEADR 000FA9  
                                             __end_of___awmod 276A  
                                                       _EEPGD 007D37  
                                                       ?_utoa 00C2  
                                             __end_of___ftmul 1894  
                                                       _T0CON 000FD5  
                                             ___awdiv@divisor 0003  
                                             __end_of___fttol 1EDA  
                                             __end_of___lwdiv 2E58  
                                                       i2l102 1FFA  
                                             __end_of___lwmod 3004  
                                             ___awdiv@counter 0006  
                                                       _RCREG 000FAE  
                                                       _RCSTA 000FAB  
                                                  _HexToAscii 368A  
                                                       _TMR0H 000FD7  
                                                       _TMR0L 000FD6  
                                                       _SPBRG 000FAF  
                                                       _PORTA 000F80  
                                                       _PORTB 000F81  
                                                       _PORTC 000F82  
                                                       _PORTD 000F83  
                                                       _PORTE 000F84  
                                        __size_of_check_UAlim 00FA  
                                        __end_of_arm_UAlim_1A 287A  
                                                       _TXREG 000FAD  
                                                       _TXSTA 000FAC  
                                                       _Blank 0606  
                                                       _Ecran 00AA  
                                                       _Armed 0601  
                                               __CFG_WRT0$OFF 000000  
                                               __CFG_WRT1$OFF 000000  
                                               __CFG_WRT2$OFF 000000  
                                               __CFG_WRT3$OFF 000000  
                                                       _Cptms 004F  
                                                       _Micro 0052  
                                          eeprom_read_array@i 00C0  
                                              __CFG_EBTR0$OFF 000000  
                                              __CFG_EBTR1$OFF 000000  
                                              __CFG_EBTR2$OFF 000000  
                                              __CFG_EBTR3$OFF 000000  
                                               __CFG_STVR$OFF 000000  
                                             __end_of_feu_tir 368A  
                                               __CFG_WRTB$OFF 000000  
                                               __CFG_WRTC$OFF 000000  
                                               __CFG_WRTD$OFF 000000  
                                              __CFG_EBTRB$OFF 000000  
                                             _check_program_0 32F6  
                                               ___ftpack@sign 00BE  
                                                       tablat 000FF5  
                                            __end_of_DecToStr 2190  
                                                       utoa@c 00CA  
                                                       utoa@v 00C8  
                                                       status 000FD8  
                                             ___lbdiv@divisor 00BA  
                                             ___lbdiv@counter 00BD  
                                           ?_feu_check_end_P0 0001  
                                     eeprom_read_array@NbData 00BE  
                                             __initialization 3440  
                                          ??_feu_check_end_P0 00BA  
                                                __end_of_main 3106  
                                                __end_of_itoa 2EE8  
                                                __end_of_utoa 2658  
                                              DecToStr@result 00C1  
                                         eeprom_write@Address 00BA  
                                        __size_of_ecran_blank 0066  
                                        __size_of_ecran_digit 00FE  
                                              __CFG_OSC$HSPLL 000000  
                                             ?_check_comutest 0001  
                                                      ??_main 00E3  
                                               ___fttol@sign1 00C3  
                                                      ??_itoa 00D1  
                                                      ??_utoa 00C8  
                                               __activetblptr 000002  
                               __size_of_ecran_print_one_char 0048  
                                                      _ADCON0 000FC2  
                                                      _ADCON1 000FC1  
                                                      _ADRESH 000FC4  
                                                      _ADRESL 000FC3  
                                                      _EEDATA 000FA8  
                                                      _EECON2 000FA7  
                                            ___awdiv@dividend 0001  
                                            __end_of___ftpack 2416  
                                        __end_of_feu_check_bp 16D0  
                                              _register_write 348E  
                                                      i2l5410 2CEC  
                                                      i2l5402 2CD4  
                                                      i2l5406 2CDE  
                                                      i2l5442 1F2C  
                                                      i2l5452 1F5E  
                                                      i2l5390 2CAC  
                                                      i2l5454 1F68  
                                                      i2l5392 2CB4  
                                                      i2l5384 2C92  
                                                      i2l5394 2CB8  
                                                      i2l5378 2C72  
                                            __end_of___lwtoft 3576  
                                            __end_of_cf_check 364C  
                                                      _TMR0IE 007F95  
                                                      _TMR0IF 007F92  
                                                      _TMR0IP 007F8A  
                                       __size_of_check_UInfla 0102  
                                            __end_of_ana_read 316E  
                                             bouton_refresh@i 00BF  
                                            test_process@temp 00E1  
                                            __end_of_delay_ms 35C0  
                                                      _Bouton 008E  
                                            _armement_process 1A54  
                                               ?_micro_config 0001  
                                        __size_of_eeprom_read 001A  
                                        __size_of_feu_process 02CC  
                                                      ___wmul 316E  
                                                   ??___awdiv 0005  
                                                   ??___lbdiv 00BB  
                                                      _cf_rcv 1894  
                                                   ??___awmod 00BE  
                                       __size_of_check_idtest 002C  
                                                   ??___ftmul 00CD  
                                                   ??___fttol 00BE  
                                                   ??___lwdiv 00BE  
                                                   ??___lwmod 00BE  
                                                      clear_0 3446  
                                                      clear_1 3452  
                                                      clear_2 345E  
                                            ___awdiv@quotient 0008  
                                             ___awmod@divisor 00BC  
                                        __end_of_eeprom_write 3746  
                                             ___awmod@counter 00BF  
                                                   ??_feu_tir 00C0  
                                     __end_of_check_program_0 334A  
                                       ___ftmul@f3_as_product 00D1  
                                                 ?_HexToAscii 0001  
                                                      itoa@cp 00D1  
                                                __mediumconst 0000  
                                       __end_of_ecran_refresh 2DAA  
                                                      tblptrh 000FF7  
                                                      tblptrl 000FF6  
                                                      tblptru 000FF8  
                                                _check_UInfla 287A  
                                      __end_of_register_write 34DC  
                                      __size_of_cf_checkrange 008E  
                                           cf_checksum@calcul 00C8  
                                            ___lbdiv@dividend 00BC  
                                                  __accesstop 0080  
                                     __end_of__initialization 3484  
                                         eeprom_write_array@i 00C1  
                                    eeprom_read_array@Address 00BD  
                                                _check_idtest 36EE  
                                        __size_of_bouton_init 004E  
                                              ??_micro_config 00BA  
                                               __end_of_Blank 060B  
                                                  ___ftmul@f1 00C7  
                                                  ___ftmul@f2 00CA  
                                               __end_of_Armed 0606  
                                                  ___fttol@f1 00BA  
                                              __pcstackCOMRAM 0001  
                                                __pidataBANK0 3816  
                                cf_check_and_display@configOk 00D2  
                                              _bouton_refresh 12C8  
                                             DecToStr@power10 00CA  
                                       __size_of_arm_UAlim_1A 0110  
                                            ___lbdiv@quotient 00BE  
                                                  ___lwtoft@c 00C2  
                                          __size_of_ecran_dot 0014  
                                                   ?_DecToStr 00C1  
                                           __end_of_ErreurTir 0610  
                                               ?_Low_priority 0001  
                                             ?_register_write 0001  
                                                  __pbssBANK0 0080  
                                                  __pbssBANK1 0100  
                                                  _check_bpon 329A  
                                             _feu_check_pause 37DC  
                                          delay_ms@TimeToWait 00BA  
                                                  __pnvCOMRAM 0052  
                                       __end_of_High_priority 2036  
                                          __size_of_hw_config 0060  
                                             _micro_config_rs 37A8  
                                          check_program_0@ret 00C0  
                                                _arm_UAlim_1A 276A  
                                         __size_of_HexToAscii 0034  
                                      __end_of_bouton_refresh 14FC  
                                                  _ecran_wait 3746  
                                            __CFG_CCP2MUX$OFF 000000  
                                                     ?___wmul 00BA  
                                               _cf_checkrange 2EE8  
                                                     ?_cf_rcv 0001  
                                                   ?___ftpack 00BA  
                                             _micro_wait$2387 00C5  
                               __size_of_cf_check_and_display 017A  
                                                  ??_DecToStr 00C3  
                                                   ?___lwtoft 00C2  
                                                   ?_cf_check 0001  
                                       __end_of_feu_check_end 37A8  
                                            ?_check_program_0 0001  
                                              ??_Low_priority 001D  
                                                   ?_ana_read 00C0  
                                           _eeprom_read_array 339E  
                                       __size_of_feu_check_bp 01D4  
                                                   ?_delay_ms 00BA  
                                          cf_checkrange@valid 00BB  
                                          ?_eeprom_read_array 00BB  
                                 __size_of_eeprom_write_array 0050  
                                               ??_cf_checkout 00C0  
                                               ??_cf_checksum 00BA  
                                         ??_eeprom_read_array 00BF  
                                    cf_check_and_display@temp 00D0  
                                           __end_of_ecran_dot 3808  
                                                  cf_rcv@temp 00D0  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                              ?_cf_checkrange 0001  
                                             ?_bouton_refresh 0001  
                                       __size_of_eeprom_write 002C  
                                            ??_check_comutest 00BF  
                                                     _Version 0610  
                                                     ___awdiv 2C44  
                                                     ___lbdiv 3004  
                                                     ___awmod 2658  
                                             __size_of___wmul 0066  
                                                     ___ftmul 16D0  
                                                     ___fttol 1D64  
                                             __size_of_cf_rcv 01C0  
                                                     ___lwdiv 2DAA  
                                                     ___lwmod 2F76  
                                                __psmallconst 0600  
                                                _feu_check_bp 14FC  
                                               ??_check_UAlim 00D8  
                                                     __pcinit 3440  
                                                  ??___ftpack 00BF  
                                      ecran_print_num@tempStr 00CD  
                                                     __ramtop 0600  
                                    __size_of_ecran_raz_digit 000E  
                                                  _micro_wait 2190  
                                                     __ptext0 308A  
                                                     __ptext1 0616  
                                                     __ptext2 287A  
                                                     __ptext3 2A7A  
                                                     __ptext4 2190  
                                                     __ptext5 36BE  
                                                     __ptext6 323A  
                                                     __ptext7 0FFC  
                                                     __ptext8 364C  
                                                     __ptext9 348E  
                                                     _feu_tir 364C  
                                                  ??___lwtoft 00C5  
                                                  ??_cf_check 00CC  
                                   __end_of_eeprom_read_array 33F0  
                                   __size_of_feu_check_end_P0 0020  
                                                     cf_rcv@i 00D1  
                                           __end_of_hw_config 329A  
                                                  ??_ana_read 00C2  
                                            ___awmod@dividend 00BA  
                                        __end_of_micro_config 36EE  
                                    __end_of_armement_process 1BEA  
                                     __end_of_feu_check_pause 37F4  
                                                  ??_delay_ms 00BC  
                                    __size_of_ecran_print_num 00D0  
                                                     main@cpt 00E4  
                                              __pintcode_body 1EDA  
                                     __end_of_micro_config_rs 37C2  
                                        end_of_initialization 3484  
                                         HexToAscii@character 00BA  
                                                 ?_check_bpon 0001  
                                                     itoa@buf 00CB  
                                                     itoa@val 00CD  
                                               __Lmediumconst 0000  
                                                _eeprom_write 371A  
                                                     int_func 1EDA  
                                __end_of_ecran_print_one_char 3608  
                                         __end_of_cf_checkout 2540  
                                         __end_of_cf_checksum 0FFC  
                                               ??_ecran_blank 00BA  
                                               ??_ecran_digit 00BA  
                                                 ?_ecran_wait 0001  
                                                     postdec1 000FE5  
                                                     postdec2 000FDD  
                                                     postinc0 000FEE  
                                                     postinc2 000FDE  
                                                cf_checkout@i 00C3  
                                                cf_checksum@i 00C7  
                                                     utoa@buf 00C2  
                                                     utoa@val 00C4  
                                                   _PORTAbits 000F80  
                                                   _PORTBbits 000F81  
                                                   _PORTCbits 000F82  
                                                   _PORTEbits 000F84  
                                                ??_HexToAscii 00BA  
                                                   _TRISAbits 000F92  
                                                   _TRISBbits 000F93  
                                                   _TRISCbits 000F94  
                                                   _TRISDbits 000F95  
                                                   _TRISEbits 000F96  
                                         __end_of_check_UAlim 2B74  
                                               ?_test_process 0001  
                                          bouton_refresh@temp 00BE  
                                               ??_eeprom_read 00BA  
                                               ??_feu_process 00C1  
                                             ??_cf_checkrange 00BA  
                                        __end_of_Low_priority 00F2  
                                          __end_of_HexToAscii 36BE  
                                                 ___ftmul@exp 00D0  
                                        DecToStr@compareValue 00C7  
                                              __end_of___wmul 31D4  
                                              __end_of_cf_rcv 1A54  
                                                 ?_micro_wait 0001  
                                         __size_of_check_bpon 005C  
                                         __end_of_ecran_blank 323A  
                                         __end_of_ecran_digit 2A7A  
                                  __size_of_eeprom_read_array 0052  
                                            ??_register_write 00BA  
                                         start_initialization 3440  
                                           __size_of_DecToStr 015A  
                                              ??_test_process 00DE  
                                            ?_feu_check_pause 0001  
                                           ??_ecran_raz_digit 00BA  
                                                   _ErreurTir 060B  
                                               DecToStr@value 00C9  
                                      eeprom_read_array@pData 00BB  
                                         __size_of_ecran_wait 0022  
                                            ?_micro_config_rs 0001  
                                               ??_bouton_init 00BA  
                                             ecran_digit@Char 00BA  
                                                 _cf_checkout 2416  
                                                 _cf_checksum 0CBC  
                                           ??_ecran_print_num 00CB  
                                             test_process@ret 00E0  
                                      __size_of_ecran_refresh 00B2  
                                                    ??___wmul 00BE  
                                                    ??_cf_rcv 00CE  
                                         __end_of_eeprom_read 37DC  
                                                   _PrintTest 00E5  
                                                 __pdataBANK0 00E5  
                                         __end_of_feu_process 12C8  
                                            cf_checkout@valid 00C1  
                                       __size_of_micro_config 0030  
                                                 _check_UAlim 2A7A  
                                            _feu_check_end_P0 3768  
                                          micro_wait@tempTime 00C3  
                                            cf_checksum@valid 00C6  
                                           __size_of___ftpack 013E  
                                                 __pbssCOMRAM 002E  
                                           __size_of___lwtoft 004C  
                                               __pcstackBANK0 00BA  
                                           __size_of_cf_check 0044  
                                                ana_read@temp 00C4  
                                           __size_of_ana_read 0068  
                                        _ecran_print_one_char 35C0  
                                        register_write@Output 00BB  
                                           __size_of_delay_ms 004A  
                                            eeprom_write@Data 00BB  
                                __end_of_cf_check_and_display 1D64  
                                            ??_bouton_refresh 00BA  
                                         __size_of_micro_wait 0148  
                                   ecran_print_one_char@Digit 00BC  
                                            ___lwdiv@dividend 00BA  
                                                _micro_config 36BE  
                                         __end_of_bouton_init 352A  
                                                   _ecran_dot 37F4  
                                                   __pintcode 0008  
                                                 _ecran_blank 31D4  
                                                 _ecran_digit 297C  
                                                    ?___awdiv 0001  
                                                    ?___lbdiv 00BA  
                                                    ?___awmod 00BA  
                                                    ?___ftmul 00C7  
                                                    ?___fttol 00BA  
                                                    ?___lwdiv 00BA  
                                                    ?___lwmod 00BA  
                                                 __pintcodelo 0018  
                                                    ?_feu_tir 0001  
                                                 __smallconst 0600  
                                            arm_UAlim_1A@temp 00DC  
                                      __size_of_High_priority 202E  
                                  __end_of_eeprom_write_array 3440  
                                           ?_armement_process 0001  
                                       ?_ecran_print_one_char 00BB  
                                               _ecran_refresh 2CF8  
                                            ___lwdiv@quotient 00C0  
                                                   _hw_config 323A  
                                          ??_armement_process 00DE  
                                    __size_of_check_program_0 0054  
                                                ??_check_bpon 00BD  
                                       __size_of_Low_priority 00DA  
                                              ___wmul@product 00BE  
                                                 _eeprom_read 37C2  
                                                 _feu_process 0FFC  
                                      __size_of_feu_check_end 0020  
                                                    i2u457_44 1F8C  
                                                    i2u457_45 1F86  
                                        __end_of_test_process 0CBC  
                                                  ?_ecran_dot 0001  
                                                ??_ecran_wait 00BB  
                                                  _ADCON0bits 000FC2  
                                           ___wmul@multiplier 00BA  
                                                    _DecToStr 2036  
                                          __end_of_check_bpon 32F6  
                                   eeprom_write_array@Address 00BE  
                                            check_UInfla@temp 00DC  
                                                    _Feedback 00A1  
                                                    _Decompte 0051  
                                              ?_ecran_refresh 0001  
                                                _Low_priority 0018  
                                               ?_check_UInfla 00D6  
                                                  ?_hw_config 0001  
                                                delay_ms@temp 00BE  
                                                   copy_data0 3478  
                                          __end_of_ecran_wait 3768  
                                                 _bouton_init 34DC  
                                               ?_check_idtest 0001  
                                               _High_priority 0008  
                                                    _Register 00A6  
                                                    __Hrparam 0000  
                                                    __Lrparam 0000  
                                             register_write@i 00BC  
                                            __size_of___awdiv 00B4  
                                             _ecran_raz_digit 3808  
                                            __size_of___lbdiv 0086  
                                            __size_of___awmod 0112  
                                            __size_of___ftmul 01C4  
                                            __size_of___fttol 0176  
                                                 ana_read@ANx 00C3  
                                            __size_of___lwdiv 00AE  
                                            __size_of___lwmod 008E  
                                                    ___ftpack 22D8  
                                                ??_micro_wait 00C1  
                                        _cf_check_and_display 1BEA  
                                                    ___lwtoft 352A  
                                                    _cf_check 3608  
                                                ecran_dot@Dot 00BA  
                                            __size_of_feu_tir 003E  
                                               _feu_check_end 3788  
                                                    _ana_read 3106  
                                     __size_of_check_comutest 0054  
                                      ??_ecran_print_one_char 00BC  
                                              ??_check_UInfla 00D8  
                                                    _delay_ms 3576  
                                             _ecran_print_num 2B74  
                                             ___lwdiv@divisor 00BC  
                                             ___lwdiv@counter 00BF  
                                                    __ptext10 37DC  
                                                    __ptext11 3768  
                                                    __ptext20 37A8  
                                                    __ptext12 3788  
                                                    __ptext21 1894  
                                                    __ptext13 14FC  
                                                    __ptext30 2EE8  
                                                    __ptext22 33F0  
                                                    __ptext14 2B74  
                                                    __ptext31 2416  
                                                    __ptext23 371A  
                                                    __ptext15 2036  
                                                    __ptext40 2DAA  
                                                    __ptext32 316E  
                                                    __ptext24 329A  
                                                    __ptext16 3004  
                                                    __ptext41 3746  
                                                    __ptext33 368A  
                                                    __ptext25 1BEA  
                                                    __ptext17 2658  
                                                    __ptext50 3106  
                                                    __ptext42 334A  
                                                    __ptext34 12C8  
                                                    __ptext26 339E  
                                                    __ptext18 32F6  
                                                    __ptext51 3576  
                                                    __ptext43 2CF8  
                                                    __ptext35 34DC  
                                                    __ptext27 37C2  
                                                    __ptext19 36EE  
                                                    __ptext52 352A  
                                                    __ptext44 35C0  
                                                    __ptext36 1A54  
                                                    __ptext28 3608  
                                                    __ptext53 1D64  
                                                    __ptext45 3808  
                                                    __ptext37 2E58  
                                                    __ptext29 0CBC  
                                                    __ptext54 16D0  
                                                    __ptext46 297C  
                                                    __ptext38 2540  
                                                    __ptext55 22D8  
                                                    __ptext47 37F4  
                                                    __ptext39 2F76  
                                                    __ptext48 31D4  
                                                    __ptext49 276A  
                                                    __ptext58 2C44  
                                             check_UAlim@temp 00DC  
                               ecran_print_one_char@Character 00BB  
                                        armement_process@temp 00E0  
                                                ?_cf_checkout 0001  
                                              ??_check_idtest 00D2  
                                                ?_cf_checksum 0001  
                                         _bouton_refresh$2134 00BC  
                                               __size_of_main 007C  
                                               __size_of_itoa 0090  
                                              ?_High_priority 0001  
                                               __size_of_utoa 0118  
                                    __end_of_feu_check_end_P0 3788  
                                          __end_of_micro_wait 22D8  
                                               ?_arm_UAlim_1A 00D6  
                                           ??_check_program_0 00BF  
                                                 ??_ecran_dot 00BA  
                                       __end_of_cf_checkrange 2F76  
                                                ?_check_UAlim 00D6  
                                       ?_cf_check_and_display 0001  
                                              ?_feu_check_end 0001  
                                             ??_ecran_refresh 00BD  
                                                  _INTCONbits 000FF2  
                                              cf_checkrange@i 00BC  
                                                    itoa@base 00CF  
                                                 ??_hw_config 00BA  
                                                    intlevel1 381C  
                                                    intlevel2 381C  
                                         cf_checkout@last_out 00C2  
                                            ___lwmod@dividend 00BA  
                                    __size_of_feu_check_pause 0018  
                                       __size_of_test_process 06A6  
                                              ??_arm_UAlim_1A 00D8  
                                               cf_check@valid 00CD  
                                     __end_of_ecran_raz_digit 3816  
                                    __size_of_micro_config_rs 001A  
                                                ?_ecran_blank 0001  
                                                ?_ecran_digit 0001  
                                         check_comutest@State 00C0  
                                               ?_feu_check_bp 0001  
                                     __end_of_ecran_print_num 2C44  
                                                    utoa@base 00C6  
                                             ___lwmod@divisor 00BC  
                                          ecran_print_num@Num 00CC  
                                             HexToAscii@Value 00BB  
                                             ___lwmod@counter 00BF  
                                                _test_process 0616  
                                             ??_High_priority 000A  
                                     __size_of_register_write 004E  
                                               ?_eeprom_write 00BA  
                                                ?_eeprom_read 0001  
                                          eeprom_read@Address 00BA  
                                          _eeprom_write_array 33F0  
                                                ?_feu_process 0001  
                                   __size_of_armement_process 0196  
